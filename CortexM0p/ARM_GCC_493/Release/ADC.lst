ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccogxpIC.s 			page 1


   1              		.cpu cortex-m0plus
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 4
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"ADC.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.ADC_IsChannelSigned,"ax",%progbits
  18              		.align	1
  19              		.code	16
  20              		.thumb_func
  21              		.type	ADC_IsChannelSigned, %function
  22              	ADC_IsChannelSigned:
  23              	.LFB12:
  24              		.file 1 "Generated_Source\\PSoC4\\ADC.c"
   1:Generated_Source\PSoC4/ADC.c **** /***************************************************************************//**
   2:Generated_Source\PSoC4/ADC.c **** * \file     ADC.c
   3:Generated_Source\PSoC4/ADC.c **** * \version  1.20
   4:Generated_Source\PSoC4/ADC.c **** *
   5:Generated_Source\PSoC4/ADC.c **** * \brief
   6:Generated_Source\PSoC4/ADC.c **** * Provides the source code to the API for the ADC Component.
   7:Generated_Source\PSoC4/ADC.c **** *
   8:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
   9:Generated_Source\PSoC4/ADC.c **** * \copyright
  10:Generated_Source\PSoC4/ADC.c **** * (c) 2015-2016, Cypress Semiconductor Corporation. All rights reserved.
  11:Generated_Source\PSoC4/ADC.c **** * This software, including source code, documentation and related
  12:Generated_Source\PSoC4/ADC.c **** * materials ("Software"), is owned by Cypress Semiconductor
  13:Generated_Source\PSoC4/ADC.c **** * Corporation ("Cypress") and is protected by and subject to worldwide
  14:Generated_Source\PSoC4/ADC.c **** * patent protection (United States and foreign), United States copyright
  15:Generated_Source\PSoC4/ADC.c **** * laws and international treaty provisions. Therefore, you may use this
  16:Generated_Source\PSoC4/ADC.c **** * Software only as provided in the license agreement accompanying the
  17:Generated_Source\PSoC4/ADC.c **** * software package from which you obtained this Software ("EULA").
  18:Generated_Source\PSoC4/ADC.c **** * If no EULA applies, Cypress hereby grants you a personal, nonexclusive,
  19:Generated_Source\PSoC4/ADC.c **** * non-transferable license to copy, modify, and compile the
  20:Generated_Source\PSoC4/ADC.c **** * Software source code solely for use in connection with Cypress's
  21:Generated_Source\PSoC4/ADC.c **** * integrated circuit products. Any reproduction, modification, translation,
  22:Generated_Source\PSoC4/ADC.c **** * compilation, or representation of this Software except as specified
  23:Generated_Source\PSoC4/ADC.c **** * above is prohibited without the express written permission of Cypress.
  24:Generated_Source\PSoC4/ADC.c **** * Disclaimer: THIS SOFTWARE IS PROVIDED AS-IS, WITH NO
  25:Generated_Source\PSoC4/ADC.c **** * WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING,
  26:Generated_Source\PSoC4/ADC.c **** * BUT NOT LIMITED TO, NONINFRINGEMENT, IMPLIED
  27:Generated_Source\PSoC4/ADC.c **** * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A
  28:Generated_Source\PSoC4/ADC.c **** * PARTICULAR PURPOSE. Cypress reserves the right to make
  29:Generated_Source\PSoC4/ADC.c **** * changes to the Software without notice. Cypress does not assume any
  30:Generated_Source\PSoC4/ADC.c **** * liability arising out of the application or use of the Software or any
  31:Generated_Source\PSoC4/ADC.c **** * product or circuit described in the Software. Cypress does not
  32:Generated_Source\PSoC4/ADC.c **** * authorize its products for use in any products where a malfunction or
  33:Generated_Source\PSoC4/ADC.c **** * failure of the Cypress product may reasonably be expected to result in
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccogxpIC.s 			page 2


  34:Generated_Source\PSoC4/ADC.c **** * significant property damage, injury or death ("High Risk Product"). By
  35:Generated_Source\PSoC4/ADC.c **** * including Cypress's product in a High Risk Product, the manufacturer
  36:Generated_Source\PSoC4/ADC.c **** * of such system or application assumes all risk of such use and in doing
  37:Generated_Source\PSoC4/ADC.c **** * so agrees to indemnify Cypress against all liability.
  38:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
  39:Generated_Source\PSoC4/ADC.c **** #include "ADC.h"
  40:Generated_Source\PSoC4/ADC.c **** 
  41:Generated_Source\PSoC4/ADC.c **** #include <stdlib.h>
  42:Generated_Source\PSoC4/ADC.c **** 
  43:Generated_Source\PSoC4/ADC.c **** static int32 ADC_IsChannelSigned(uint32 chan);
  44:Generated_Source\PSoC4/ADC.c **** #if(ADC_ANY_CONFIG_USES_FILTER	!= 0u)
  45:Generated_Source\PSoC4/ADC.c **** static void ADC_SetupComparatorTrim(void);
  46:Generated_Source\PSoC4/ADC.c **** static void ADC_UndoComparatorTrimSetup(void);
  47:Generated_Source\PSoC4/ADC.c **** static uint32 ADC_RaiseOpampTrimToCrossing(uint32 startTrim);
  48:Generated_Source\PSoC4/ADC.c **** static uint32 ADC_LowerOpampTrimToCrossing(uint32 startTrim);
  49:Generated_Source\PSoC4/ADC.c **** static uint32 ADC_RaiseAgndTrimToCrossing(uint32 startTrim);
  50:Generated_Source\PSoC4/ADC.c **** static uint32 ADC_LowerAgndTrimToCrossing(uint32 startTrim);
  51:Generated_Source\PSoC4/ADC.c **** static uint32 ADC_SetOpampAndAgndTrim(uint32 opampTrim, uint32 agndTrim);
  52:Generated_Source\PSoC4/ADC.c **** static uint32 ADC_SetOpampTrim(uint32 opampTrim);
  53:Generated_Source\PSoC4/ADC.c **** static uint32 ADC_SetAgndTrim(uint32 agndTrim);
  54:Generated_Source\PSoC4/ADC.c **** static uint32 ADC_IncOpampTrim(uint32 trim);
  55:Generated_Source\PSoC4/ADC.c **** static uint32 ADC_DecOpampTrim(uint32 trim);
  56:Generated_Source\PSoC4/ADC.c **** static uint32 ADC_IncAgndTrim(uint32 trim);
  57:Generated_Source\PSoC4/ADC.c **** static uint32 ADC_DecAgndTrim(uint32 trim);
  58:Generated_Source\PSoC4/ADC.c **** #define OFFSET_SAMPLES (30)
  59:Generated_Source\PSoC4/ADC.c **** #endif
  60:Generated_Source\PSoC4/ADC.c **** 
  61:Generated_Source\PSoC4/ADC.c **** uint8 ADC_initVar = 0u; 
  62:Generated_Source\PSoC4/ADC.c **** 
  63:Generated_Source\PSoC4/ADC.c **** uint8 ADC_selected = 0u; /* 0 if no configuration selected. 1 otherwise. */
  64:Generated_Source\PSoC4/ADC.c **** volatile int16 ADC_offset[ADC_TOTAL_CHANNELS_NUM]; 
  65:Generated_Source\PSoC4/ADC.c **** volatile int32 ADC_countsPer10Volt[ADC_TOTAL_CHANNELS_NUM]; 
  66:Generated_Source\PSoC4/ADC.c **** 
  67:Generated_Source\PSoC4/ADC.c **** static uint32 ADC_currentConfig = 0u; /* Currently active configuration */
  68:Generated_Source\PSoC4/ADC.c **** 
  69:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
  70:Generated_Source\PSoC4/ADC.c **** * Local data allocation
  71:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
  72:Generated_Source\PSoC4/ADC.c **** /* Channels configuration generated by customiser */
  73:Generated_Source\PSoC4/ADC.c **** static const uint32 CYCODE ADC_channelsConfig[] = { 0x00000100UL, 0x00001100UL,  };
  74:Generated_Source\PSoC4/ADC.c **** 
  75:Generated_Source\PSoC4/ADC.c **** /* Filter init */
  76:Generated_Source\PSoC4/ADC.c **** #if(ADC_ANY_CONFIG_USES_FILTER	!= 0u)
  77:Generated_Source\PSoC4/ADC.c ****     #if (0u != ADC_CFG0_FILTER_PRESENT)
  78:Generated_Source\PSoC4/ADC.c ****         #define ADC_CFG0_UABH_A_FILTER_INITPAIRSSIZE ((ADC_CFG0_FILTERTYPE_USED == ADC_FILTERTOPOLO
  79:Generated_Source\PSoC4/ADC.c ****                                                              ? 18u \
  80:Generated_Source\PSoC4/ADC.c ****                                                              : 18u)
  81:Generated_Source\PSoC4/ADC.c ****         static CyUAB_reg_pair ADC_CFG0_UABH_A_FILTER_initPairs[ADC_CFG0_UABH_A_FILTER_INITPAIRSSIZE
  82:Generated_Source\PSoC4/ADC.c ****         {
  83:Generated_Source\PSoC4/ADC.c ****         	/*OA_CTRL default always first element in initPairs*/
  84:Generated_Source\PSoC4/ADC.c ****             /* Topology-invariant registers */
  85:Generated_Source\PSoC4/ADC.c ****              {ADC_UABH_A_OA_CTRL_PTR        , ((uint32)ADC_UABH_A_DEFAULT_OA_CTRL)}
  86:Generated_Source\PSoC4/ADC.c ****             ,{ADC_UABH_A_SW_STATIC_PTR      , ((uint32)ADC_UABH_A_DEFAULT_SW_STATIC)}
  87:Generated_Source\PSoC4/ADC.c ****             ,{ADC_UABH_A_SW_MODBIT_SRC_PTR      , ((uint32)ADC_UABH_A_INVAR_SW_MODBIT_SRC)}
  88:Generated_Source\PSoC4/ADC.c ****             ,{ADC_UABH_A_SRAM_CTRL_PTR      , ((uint32)ADC_UABH_A_INVAR_SRAM_CTRL)} 
  89:Generated_Source\PSoC4/ADC.c ****             ,{ADC_UABH_A_STARTUP_DELAY_PTR  , ((uint32)ADC_CFG0_UABH_A_STARTUP_DELAY)}
  90:Generated_Source\PSoC4/ADC.c ****             ,{ADC_UABH_A_SW_BOOST_CTRL_PTR  , ((uint32)ADC_UABH_A_DEFAULT_SW_BOOST_CTRL)}
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccogxpIC.s 			page 3


  91:Generated_Source\PSoC4/ADC.c ****             ,{ADC_UABH_A_SW_OTHER_PTR  , ((uint32)ADC_UABH_A_DEFAULT_SW_OTHER)}
  92:Generated_Source\PSoC4/ADC.c ****             
  93:Generated_Source\PSoC4/ADC.c ****             #if (ADC_CFG0_FILTERTYPE_USED == ADC_FILTERTOPOLOGY_LOW_Q)
  94:Generated_Source\PSoC4/ADC.c ****                 /* Filter-invariant registers */
  95:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_A_SW_CA_IN0_PTR      , ((uint32)ADC_UABH_A_LOWQSTAT_SW_CA_IN0)}
  96:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_A_SW_CA_TOP_PTR      , ((uint32)ADC_UABH_A_LOWQSTAT_SW_CA_TOP)}
  97:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_A_SW_CC_IN0_PTR      , ((uint32)ADC_UABH_A_LOWQSTAT_SW_CC_IN0)}
  98:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_A_SW_CC_IN1_PTR      , ((uint32)ADC_UABH_A_LOWQSTAT_SW_CC_IN1)}
  99:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_A_SW_CF_BOT_PTR      , ((uint32)ADC_UABH_A_LOWQSTAT_SW_CF_BOT)}
 100:Generated_Source\PSoC4/ADC.c **** 
 101:Generated_Source\PSoC4/ADC.c ****                 /* Parameter-based registers */
 102:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_A_CAP_CTRL_PTR       , ((uint32)ADC_CFG0_UABH_A_LOWQDYN_CAP_CTRL)}
 103:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_A_SW_CB_IN0_PTR      , ((uint32)ADC_CFG0_UABH_A_LOWQDYN_SW_CB_IN0)}
 104:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_A_SW_CB_IN1_PTR      , ((uint32)ADC_CFG0_UABH_A_LOWQDYN_SW_CB_IN1)}
 105:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_A_SW_CB_TOP_PTR      , ((uint32)ADC_CFG0_UABH_A_LOWQDYN_SW_CB_TOP)}
 106:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_A_SW_CC_TOP_PTR      , ((uint32)ADC_CFG0_UABH_A_LOWQDYN_SW_CC_TOP)}
 107:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_A_CAP_ABCF_VAL_PTR   , ((uint32)ADC_CFG0_UABH_A_LOWQDYN_CAP_ABCF_VAL)}
 108:Generated_Source\PSoC4/ADC.c ****             #elif (ADC_CFG0_FILTERTYPE_USED == ADC_FILTERTOPOLOGY_HIGH_Q)
 109:Generated_Source\PSoC4/ADC.c ****                 /* Filter-invariant registers */
 110:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_A_SW_CA_IN0_PTR      , ((uint32)ADC_UABH_A_HIGHQSTAT_SW_CA_IN0)}
 111:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_A_SW_CA_TOP_PTR      , ((uint32)ADC_UABH_A_HIGHQSTAT_SW_CA_TOP)}
 112:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_A_SW_CB_IN0_PTR      , ((uint32)ADC_UABH_A_HIGHQSTAT_SW_CB_IN0)}
 113:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_A_SW_CB_IN1_PTR      , ((uint32)ADC_UABH_A_HIGHQSTAT_SW_CB_IN1)}
 114:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_A_SW_CC_IN0_PTR      , ((uint32)ADC_UABH_A_HIGHQSTAT_SW_CC_IN0)}
 115:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_A_SW_CC_IN1_PTR      , ((uint32)ADC_UABH_A_HIGHQSTAT_SW_CC_IN1)}
 116:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_A_SW_CC_TOP_PTR      , ((uint32)ADC_UABH_A_HIGHQSTAT_SW_CC_TOP)}
 117:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_A_SW_CF_BOT_PTR      , ((uint32)ADC_UABH_A_HIGHQSTAT_SW_CF_BOT)}
 118:Generated_Source\PSoC4/ADC.c **** 
 119:Generated_Source\PSoC4/ADC.c ****                 /* Parameter-based registers */
 120:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_A_CAP_CTRL_PTR       , ((uint32)ADC_CFG0_UABH_A_HIGHQDYN_CAP_CTRL)}
 121:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_A_SW_CB_TOP_PTR      , ((uint32)ADC_CFG0_UABH_A_HIGHQDYN_SW_CB_TOP)}
 122:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_A_CAP_ABCF_VAL_PTR   , ((uint32)ADC_CFG0_UABH_A_HIGHQDYN_CAP_ABCF_VAL)}
 123:Generated_Source\PSoC4/ADC.c ****             #endif /* (ADC_CFG0_FILTERTYPE_USED == ADC_FILTERTOPOLOGY_LOW_Q) */
 124:Generated_Source\PSoC4/ADC.c ****         };
 125:Generated_Source\PSoC4/ADC.c **** 
 126:Generated_Source\PSoC4/ADC.c ****         #define ADC_CFG0_UABH_B_FILTER_INITPAIRSSIZE ((ADC_CFG0_FILTERTYPE_USED == ADC_FILTERTOPOLO
 127:Generated_Source\PSoC4/ADC.c ****                                                              ? 19u \
 128:Generated_Source\PSoC4/ADC.c ****                                                              : 19u)
 129:Generated_Source\PSoC4/ADC.c ****         static CyUAB_reg_pair ADC_CFG0_UABH_B_FILTER_initPairs[ADC_CFG0_UABH_B_FILTER_INITPAIRSSIZE
 130:Generated_Source\PSoC4/ADC.c ****         {
 131:Generated_Source\PSoC4/ADC.c ****             /*OA_CTRL default always first element in initPairs*/
 132:Generated_Source\PSoC4/ADC.c ****             /* Topology-invariant registers */
 133:Generated_Source\PSoC4/ADC.c ****              {ADC_UABH_B_OA_CTRL_PTR        , ((uint32)ADC_UABH_B_DEFAULT_OA_CTRL)}
 134:Generated_Source\PSoC4/ADC.c ****             ,{ADC_UABH_B_SW_STATIC_PTR      , ((uint32)ADC_UABH_B_DEFAULT_SW_STATIC)}
 135:Generated_Source\PSoC4/ADC.c ****             ,{ADC_UABH_B_SW_MODBIT_SRC_PTR  , ((uint32)ADC_UABH_B_INVAR_SW_MODBIT_SRC)}
 136:Generated_Source\PSoC4/ADC.c ****             ,{ADC_UABH_B_SRAM_CTRL_PTR      , ((uint32)ADC_UABH_B_INVAR_SRAM_CTRL)} 
 137:Generated_Source\PSoC4/ADC.c ****             ,{ADC_UABH_B_STARTUP_DELAY_PTR  , ((uint32)ADC_CFG0_UABH_B_STARTUP_DELAY)}
 138:Generated_Source\PSoC4/ADC.c ****             ,{ADC_UABH_B_SW_BOOST_CTRL_PTR  , ((uint32)ADC_UABH_B_DEFAULT_SW_BOOST_CTRL)}
 139:Generated_Source\PSoC4/ADC.c ****             ,{ADC_UABH_B_SW_OTHER_PTR  , ((uint32)ADC_UABH_B_DEFAULT_SW_OTHER)}
 140:Generated_Source\PSoC4/ADC.c ****             
 141:Generated_Source\PSoC4/ADC.c ****             #if (ADC_CFG0_FILTERTYPE_USED == ADC_FILTERTOPOLOGY_LOW_Q)
 142:Generated_Source\PSoC4/ADC.c ****                     	/* Filter-invariant registers */
 143:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_B_SW_CA_IN0_PTR      , ((uint32)ADC_UABH_B_LOWQSTAT_SW_CA_IN0)}
 144:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_B_SW_CA_IN1_PTR      , ((uint32)ADC_UABH_B_LOWQSTAT_SW_CA_IN1)}
 145:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_B_SW_CA_TOP_PTR      , ((uint32)ADC_UABH_B_LOWQSTAT_SW_CA_TOP)}
 146:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_B_SW_CB_IN0_PTR      , ((uint32)ADC_UABH_B_LOWQSTAT_SW_CB_IN0)}
 147:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_B_SW_CB_IN1_PTR      , ((uint32)ADC_UABH_B_LOWQSTAT_SW_CB_IN1)}
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccogxpIC.s 			page 4


 148:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_B_SW_CB_TOP_PTR      , ((uint32)ADC_UABH_B_LOWQSTAT_SW_CB_TOP)}
 149:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_B_SW_CC_IN0_PTR      , ((uint32)ADC_UABH_B_LOWQSTAT_SW_CC_IN0)}
 150:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_B_SW_CC_IN1_PTR      , ((uint32)ADC_UABH_B_LOWQSTAT_SW_CC_IN1)}
 151:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_B_SW_CF_BOT_PTR      , ((uint32)ADC_UABH_B_LOWQSTAT_SW_CF_BOT)}
 152:Generated_Source\PSoC4/ADC.c ****                 
 153:Generated_Source\PSoC4/ADC.c ****                 /* Parameter-based registers */
 154:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_B_CAP_CTRL_PTR       , ((uint32)ADC_CFG0_UABH_B_LOWQDYN_CAP_CTRL)}
 155:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_B_SW_CC_TOP_PTR      , ((uint32)ADC_CFG0_UABH_B_LOWQDYN_SW_CC_TOP)}
 156:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_B_CAP_ABCF_VAL_PTR   , ((uint32)ADC_CFG0_UABH_B_LOWQDYN_CAP_ABCF_VAL)}
 157:Generated_Source\PSoC4/ADC.c ****             #elif (ADC_CFG0_FILTERTYPE_USED == ADC_FILTERTOPOLOGY_HIGH_Q)
 158:Generated_Source\PSoC4/ADC.c ****             	/* Filter-invariant registers */
 159:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_B_SW_CA_IN0_PTR      , ((uint32)ADC_UABH_B_HIGHQSTAT_SW_CA_IN0)}
 160:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_B_SW_CA_IN1_PTR      , ((uint32)ADC_UABH_B_HIGHQSTAT_SW_CA_IN1)}
 161:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_B_SW_CA_TOP_PTR      , ((uint32)ADC_UABH_B_HIGHQSTAT_SW_CA_TOP)}
 162:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_B_SW_CB_IN0_PTR      , ((uint32)ADC_UABH_B_HIGHQSTAT_SW_CB_IN0)}
 163:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_B_SW_CB_IN1_PTR      , ((uint32)ADC_UABH_B_HIGHQSTAT_SW_CB_IN1)}
 164:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_B_SW_CC_IN0_PTR      , ((uint32)ADC_UABH_B_HIGHQSTAT_SW_CC_IN0)}
 165:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_B_SW_CC_IN1_PTR      , ((uint32)ADC_UABH_B_HIGHQSTAT_SW_CC_IN1)}
 166:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_B_SW_CF_BOT_PTR      , ((uint32)ADC_UABH_B_HIGHQSTAT_SW_CF_BOT)}
 167:Generated_Source\PSoC4/ADC.c ****                 
 168:Generated_Source\PSoC4/ADC.c ****                 /* Parameter-based registers */
 169:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_B_CAP_CTRL_PTR       , ((uint32)ADC_CFG0_UABH_B_HIGHQDYN_CAP_CTRL)}
 170:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_B_SW_CB_TOP_PTR      , ((uint32)ADC_CFG0_UABH_B_HIGHQDYN_SW_CB_TOP)}
 171:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_B_SW_CC_TOP_PTR      , ((uint32)ADC_CFG0_UABH_B_HIGHQDYN_SW_CC_TOP)}
 172:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_B_CAP_ABCF_VAL_PTR   , ((uint32)ADC_CFG0_UABH_B_HIGHQDYN_CAP_ABCF_VAL)}
 173:Generated_Source\PSoC4/ADC.c ****             #endif /* #if (ADC_CFG0_FILTERTYPE_USED == ADC_FILTERTOPOLOGY_LOW_Q) */
 174:Generated_Source\PSoC4/ADC.c ****         };
 175:Generated_Source\PSoC4/ADC.c **** 
 176:Generated_Source\PSoC4/ADC.c ****         static CyUAB_config ADC_CFG0_UABH_A_FILTER_config = {
 177:Generated_Source\PSoC4/ADC.c ****             ADC_UABH_A_waveConfig,
 178:Generated_Source\PSoC4/ADC.c ****             ADC_CFG0_UABH_A_FILTER_initPairs,
 179:Generated_Source\PSoC4/ADC.c ****             CyUAB_SHARED_SW_CFG(ADC_UABH_A_PARAM_REF_TIED,ADC_UABH_A_PARAM_AGND_TIED,
 180:Generated_Source\PSoC4/ADC.c ****                 ADC_UABH_A_PARAM_SW_CC,ADC_UABH_A_PARAM_SW_BB,ADC_UABH_A_PARAM_SW_AA),
 181:Generated_Source\PSoC4/ADC.c ****             ADC_UABH_A_NUM_STEPS,
 182:Generated_Source\PSoC4/ADC.c ****             (uint8)(ADC_UABH_A_ELEMENT_COUNT(ADC_CFG0_UABH_A_FILTER_initPairs))
 183:Generated_Source\PSoC4/ADC.c ****         };
 184:Generated_Source\PSoC4/ADC.c **** 
 185:Generated_Source\PSoC4/ADC.c ****         static CyUAB_config ADC_CFG0_UABH_B_FILTER_config = {
 186:Generated_Source\PSoC4/ADC.c ****         ADC_UABH_B_waveConfig,
 187:Generated_Source\PSoC4/ADC.c ****         ADC_CFG0_UABH_B_FILTER_initPairs,
 188:Generated_Source\PSoC4/ADC.c ****         CyUAB_SHARED_SW_CFG(ADC_UABH_B_PARAM_REF_TIED,ADC_UABH_B_PARAM_AGND_TIED,
 189:Generated_Source\PSoC4/ADC.c ****             ADC_UABH_B_PARAM_SW_CC,ADC_UABH_B_PARAM_SW_BB,ADC_UABH_B_PARAM_SW_AA),
 190:Generated_Source\PSoC4/ADC.c ****         ADC_UABH_B_NUM_STEPS,
 191:Generated_Source\PSoC4/ADC.c ****         (uint8)(ADC_UABH_B_ELEMENT_COUNT(ADC_CFG0_UABH_B_FILTER_initPairs))
 192:Generated_Source\PSoC4/ADC.c ****     };
 193:Generated_Source\PSoC4/ADC.c ****     #endif /* (0u != ADC_CFG0_FILTER_PRESENT) */
 194:Generated_Source\PSoC4/ADC.c ****     #if (0u != ADC_CFG1_FILTER_PRESENT)
 195:Generated_Source\PSoC4/ADC.c ****         #define ADC_CFG1_UABH_A_FILTER_INITPAIRSSIZE ((ADC_CFG1_FILTERTYPE_USED == ADC_FILTERTOPOLO
 196:Generated_Source\PSoC4/ADC.c ****                                                              ? 18u \
 197:Generated_Source\PSoC4/ADC.c ****                                                              : 18u)
 198:Generated_Source\PSoC4/ADC.c ****         static CyUAB_reg_pair ADC_CFG1_UABH_A_FILTER_initPairs[ADC_CFG1_UABH_A_FILTER_INITPAIRSSIZE
 199:Generated_Source\PSoC4/ADC.c ****         {
 200:Generated_Source\PSoC4/ADC.c ****         	/*OA_CTRL default always first element in initPairs*/
 201:Generated_Source\PSoC4/ADC.c ****             /* Topology-invariant registers */
 202:Generated_Source\PSoC4/ADC.c ****              {ADC_UABH_A_OA_CTRL_PTR        , ((uint32)ADC_UABH_A_DEFAULT_OA_CTRL)}
 203:Generated_Source\PSoC4/ADC.c ****             ,{ADC_UABH_A_SW_STATIC_PTR      , ((uint32)ADC_UABH_A_DEFAULT_SW_STATIC)}
 204:Generated_Source\PSoC4/ADC.c ****             ,{ADC_UABH_A_SW_MODBIT_SRC_PTR      , ((uint32)ADC_UABH_A_INVAR_SW_MODBIT_SRC)}
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccogxpIC.s 			page 5


 205:Generated_Source\PSoC4/ADC.c ****             ,{ADC_UABH_A_SRAM_CTRL_PTR      , ((uint32)ADC_UABH_A_INVAR_SRAM_CTRL)} 
 206:Generated_Source\PSoC4/ADC.c ****             ,{ADC_UABH_A_STARTUP_DELAY_PTR  , ((uint32)ADC_CFG1_UABH_A_STARTUP_DELAY)}
 207:Generated_Source\PSoC4/ADC.c ****             ,{ADC_UABH_A_SW_BOOST_CTRL_PTR  , ((uint32)ADC_UABH_A_DEFAULT_SW_BOOST_CTRL)}
 208:Generated_Source\PSoC4/ADC.c ****             ,{ADC_UABH_A_SW_OTHER_PTR  , ((uint32)ADC_UABH_A_DEFAULT_SW_OTHER)}
 209:Generated_Source\PSoC4/ADC.c ****             
 210:Generated_Source\PSoC4/ADC.c ****             #if (ADC_CFG1_FILTERTYPE_USED == ADC_FILTERTOPOLOGY_LOW_Q)
 211:Generated_Source\PSoC4/ADC.c ****                 /* Filter-invariant registers */
 212:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_A_SW_CA_IN0_PTR      , ((uint32)ADC_UABH_A_LOWQSTAT_SW_CA_IN0)}
 213:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_A_SW_CA_TOP_PTR      , ((uint32)ADC_UABH_A_LOWQSTAT_SW_CA_TOP)}
 214:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_A_SW_CC_IN0_PTR      , ((uint32)ADC_UABH_A_LOWQSTAT_SW_CC_IN0)}
 215:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_A_SW_CC_IN1_PTR      , ((uint32)ADC_UABH_A_LOWQSTAT_SW_CC_IN1)}
 216:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_A_SW_CF_BOT_PTR      , ((uint32)ADC_UABH_A_LOWQSTAT_SW_CF_BOT)}
 217:Generated_Source\PSoC4/ADC.c **** 
 218:Generated_Source\PSoC4/ADC.c ****                 /* Parameter-based registers */
 219:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_A_CAP_CTRL_PTR       , ((uint32)ADC_CFG1_UABH_A_LOWQDYN_CAP_CTRL)}
 220:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_A_SW_CB_IN0_PTR      , ((uint32)ADC_CFG1_UABH_A_LOWQDYN_SW_CB_IN0)}
 221:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_A_SW_CB_IN1_PTR      , ((uint32)ADC_CFG1_UABH_A_LOWQDYN_SW_CB_IN1)}
 222:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_A_SW_CB_TOP_PTR      , ((uint32)ADC_CFG1_UABH_A_LOWQDYN_SW_CB_TOP)}
 223:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_A_SW_CC_TOP_PTR      , ((uint32)ADC_CFG1_UABH_A_LOWQDYN_SW_CC_TOP)}
 224:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_A_CAP_ABCF_VAL_PTR   , ((uint32)ADC_CFG1_UABH_A_LOWQDYN_CAP_ABCF_VAL)}
 225:Generated_Source\PSoC4/ADC.c ****             #elif (ADC_CFG1_FILTERTYPE_USED == ADC_FILTERTOPOLOGY_HIGH_Q)
 226:Generated_Source\PSoC4/ADC.c ****                 /* Filter-invariant registers */
 227:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_A_SW_CA_IN0_PTR      , ((uint32)ADC_UABH_A_HIGHQSTAT_SW_CA_IN0)}
 228:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_A_SW_CA_TOP_PTR      , ((uint32)ADC_UABH_A_HIGHQSTAT_SW_CA_TOP)}
 229:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_A_SW_CB_IN0_PTR      , ((uint32)ADC_UABH_A_HIGHQSTAT_SW_CB_IN0)}
 230:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_A_SW_CB_IN1_PTR      , ((uint32)ADC_UABH_A_HIGHQSTAT_SW_CB_IN1)}
 231:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_A_SW_CC_IN0_PTR      , ((uint32)ADC_UABH_A_HIGHQSTAT_SW_CC_IN0)}
 232:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_A_SW_CC_IN1_PTR      , ((uint32)ADC_UABH_A_HIGHQSTAT_SW_CC_IN1)}
 233:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_A_SW_CC_TOP_PTR      , ((uint32)ADC_UABH_A_HIGHQSTAT_SW_CC_TOP)}
 234:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_A_SW_CF_BOT_PTR      , ((uint32)ADC_UABH_A_HIGHQSTAT_SW_CF_BOT)}
 235:Generated_Source\PSoC4/ADC.c **** 
 236:Generated_Source\PSoC4/ADC.c ****                 /* Parameter-based registers */
 237:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_A_CAP_CTRL_PTR       , ((uint32)ADC_CFG1_UABH_A_HIGHQDYN_CAP_CTRL)}
 238:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_A_SW_CB_TOP_PTR      , ((uint32)ADC_CFG1_UABH_A_HIGHQDYN_SW_CB_TOP)}
 239:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_A_CAP_ABCF_VAL_PTR   , ((uint32)ADC_CFG1_UABH_A_HIGHQDYN_CAP_ABCF_VAL)}
 240:Generated_Source\PSoC4/ADC.c ****             #endif /* (ADC_CFG1_FILTERTYPE_USED == ADC_FILTERTOPOLOGY_LOW_Q) */
 241:Generated_Source\PSoC4/ADC.c ****         };
 242:Generated_Source\PSoC4/ADC.c **** 
 243:Generated_Source\PSoC4/ADC.c ****         #define ADC_CFG1_UABH_B_FILTER_INITPAIRSSIZE ((ADC_CFG1_FILTERTYPE_USED == ADC_FILTERTOPOLO
 244:Generated_Source\PSoC4/ADC.c ****                                                              ? 19u \
 245:Generated_Source\PSoC4/ADC.c ****                                                              : 19u)
 246:Generated_Source\PSoC4/ADC.c ****         static CyUAB_reg_pair ADC_CFG1_UABH_B_FILTER_initPairs[ADC_CFG1_UABH_B_FILTER_INITPAIRSSIZE
 247:Generated_Source\PSoC4/ADC.c ****         {
 248:Generated_Source\PSoC4/ADC.c ****             /*OA_CTRL default always first element in initPairs*/
 249:Generated_Source\PSoC4/ADC.c ****             /* Topology-invariant registers */
 250:Generated_Source\PSoC4/ADC.c ****              {ADC_UABH_B_OA_CTRL_PTR        , ((uint32)ADC_UABH_B_DEFAULT_OA_CTRL)}
 251:Generated_Source\PSoC4/ADC.c ****             ,{ADC_UABH_B_SW_STATIC_PTR      , ((uint32)ADC_UABH_B_DEFAULT_SW_STATIC)}
 252:Generated_Source\PSoC4/ADC.c ****             ,{ADC_UABH_B_SW_MODBIT_SRC_PTR  , ((uint32)ADC_UABH_B_INVAR_SW_MODBIT_SRC)}
 253:Generated_Source\PSoC4/ADC.c ****             ,{ADC_UABH_B_SRAM_CTRL_PTR      , ((uint32)ADC_UABH_B_INVAR_SRAM_CTRL)} 
 254:Generated_Source\PSoC4/ADC.c ****             ,{ADC_UABH_B_STARTUP_DELAY_PTR  , ((uint32)ADC_CFG1_UABH_B_STARTUP_DELAY)}
 255:Generated_Source\PSoC4/ADC.c ****             ,{ADC_UABH_B_SW_BOOST_CTRL_PTR  , ((uint32)ADC_UABH_B_DEFAULT_SW_BOOST_CTRL)}
 256:Generated_Source\PSoC4/ADC.c ****             ,{ADC_UABH_B_SW_OTHER_PTR  , ((uint32)ADC_UABH_B_DEFAULT_SW_OTHER)}
 257:Generated_Source\PSoC4/ADC.c ****             
 258:Generated_Source\PSoC4/ADC.c ****             #if (ADC_CFG1_FILTERTYPE_USED == ADC_FILTERTOPOLOGY_LOW_Q)
 259:Generated_Source\PSoC4/ADC.c ****                     	/* Filter-invariant registers */
 260:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_B_SW_CA_IN0_PTR      , ((uint32)ADC_UABH_B_LOWQSTAT_SW_CA_IN0)}
 261:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_B_SW_CA_IN1_PTR      , ((uint32)ADC_UABH_B_LOWQSTAT_SW_CA_IN1)}
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccogxpIC.s 			page 6


 262:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_B_SW_CA_TOP_PTR      , ((uint32)ADC_UABH_B_LOWQSTAT_SW_CA_TOP)}
 263:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_B_SW_CB_IN0_PTR      , ((uint32)ADC_UABH_B_LOWQSTAT_SW_CB_IN0)}
 264:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_B_SW_CB_IN1_PTR      , ((uint32)ADC_UABH_B_LOWQSTAT_SW_CB_IN1)}
 265:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_B_SW_CB_TOP_PTR      , ((uint32)ADC_UABH_B_LOWQSTAT_SW_CB_TOP)}
 266:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_B_SW_CC_IN0_PTR      , ((uint32)ADC_UABH_B_LOWQSTAT_SW_CC_IN0)}
 267:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_B_SW_CC_IN1_PTR      , ((uint32)ADC_UABH_B_LOWQSTAT_SW_CC_IN1)}
 268:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_B_SW_CF_BOT_PTR      , ((uint32)ADC_UABH_B_LOWQSTAT_SW_CF_BOT)}
 269:Generated_Source\PSoC4/ADC.c ****                 
 270:Generated_Source\PSoC4/ADC.c ****                 /* Parameter-based registers */
 271:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_B_CAP_CTRL_PTR       , ((uint32)ADC_CFG1_UABH_B_LOWQDYN_CAP_CTRL)}
 272:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_B_SW_CC_TOP_PTR      , ((uint32)ADC_CFG1_UABH_B_LOWQDYN_SW_CC_TOP)}
 273:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_B_CAP_ABCF_VAL_PTR   , ((uint32)ADC_CFG1_UABH_B_LOWQDYN_CAP_ABCF_VAL)}
 274:Generated_Source\PSoC4/ADC.c ****             #elif (ADC_CFG1_FILTERTYPE_USED == ADC_FILTERTOPOLOGY_HIGH_Q)
 275:Generated_Source\PSoC4/ADC.c ****             	/* Filter-invariant registers */
 276:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_B_SW_CA_IN0_PTR      , ((uint32)ADC_UABH_B_HIGHQSTAT_SW_CA_IN0)}
 277:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_B_SW_CA_IN1_PTR      , ((uint32)ADC_UABH_B_HIGHQSTAT_SW_CA_IN1)}
 278:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_B_SW_CA_TOP_PTR      , ((uint32)ADC_UABH_B_HIGHQSTAT_SW_CA_TOP)}
 279:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_B_SW_CB_IN0_PTR      , ((uint32)ADC_UABH_B_HIGHQSTAT_SW_CB_IN0)}
 280:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_B_SW_CB_IN1_PTR      , ((uint32)ADC_UABH_B_HIGHQSTAT_SW_CB_IN1)}
 281:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_B_SW_CC_IN0_PTR      , ((uint32)ADC_UABH_B_HIGHQSTAT_SW_CC_IN0)}
 282:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_B_SW_CC_IN1_PTR      , ((uint32)ADC_UABH_B_HIGHQSTAT_SW_CC_IN1)}
 283:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_B_SW_CF_BOT_PTR      , ((uint32)ADC_UABH_B_HIGHQSTAT_SW_CF_BOT)}
 284:Generated_Source\PSoC4/ADC.c ****                 
 285:Generated_Source\PSoC4/ADC.c ****                 /* Parameter-based registers */
 286:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_B_CAP_CTRL_PTR       , ((uint32)ADC_CFG1_UABH_B_HIGHQDYN_CAP_CTRL)}
 287:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_B_SW_CB_TOP_PTR      , ((uint32)ADC_CFG1_UABH_B_HIGHQDYN_SW_CB_TOP)}
 288:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_B_SW_CC_TOP_PTR      , ((uint32)ADC_CFG1_UABH_B_HIGHQDYN_SW_CC_TOP)}
 289:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_B_CAP_ABCF_VAL_PTR   , ((uint32)ADC_CFG1_UABH_B_HIGHQDYN_CAP_ABCF_VAL)}
 290:Generated_Source\PSoC4/ADC.c ****             #endif /* #if (ADC_CFG1_FILTERTYPE_USED == ADC_FILTERTOPOLOGY_LOW_Q) */
 291:Generated_Source\PSoC4/ADC.c ****         };
 292:Generated_Source\PSoC4/ADC.c **** 
 293:Generated_Source\PSoC4/ADC.c ****         static CyUAB_config ADC_CFG1_UABH_A_FILTER_config = {
 294:Generated_Source\PSoC4/ADC.c ****             ADC_UABH_A_waveConfig,
 295:Generated_Source\PSoC4/ADC.c ****             ADC_CFG1_UABH_A_FILTER_initPairs,
 296:Generated_Source\PSoC4/ADC.c ****             CyUAB_SHARED_SW_CFG(ADC_UABH_A_PARAM_REF_TIED,ADC_UABH_A_PARAM_AGND_TIED,
 297:Generated_Source\PSoC4/ADC.c ****                 ADC_UABH_A_PARAM_SW_CC,ADC_UABH_A_PARAM_SW_BB,ADC_UABH_A_PARAM_SW_AA),
 298:Generated_Source\PSoC4/ADC.c ****             ADC_UABH_A_NUM_STEPS,
 299:Generated_Source\PSoC4/ADC.c ****             (uint8)(ADC_UABH_A_ELEMENT_COUNT(ADC_CFG1_UABH_A_FILTER_initPairs))
 300:Generated_Source\PSoC4/ADC.c ****         };
 301:Generated_Source\PSoC4/ADC.c **** 
 302:Generated_Source\PSoC4/ADC.c ****         static CyUAB_config ADC_CFG1_UABH_B_FILTER_config = {
 303:Generated_Source\PSoC4/ADC.c ****         ADC_UABH_B_waveConfig,
 304:Generated_Source\PSoC4/ADC.c ****         ADC_CFG1_UABH_B_FILTER_initPairs,
 305:Generated_Source\PSoC4/ADC.c ****         CyUAB_SHARED_SW_CFG(ADC_UABH_B_PARAM_REF_TIED,ADC_UABH_B_PARAM_AGND_TIED,
 306:Generated_Source\PSoC4/ADC.c ****             ADC_UABH_B_PARAM_SW_CC,ADC_UABH_B_PARAM_SW_BB,ADC_UABH_B_PARAM_SW_AA),
 307:Generated_Source\PSoC4/ADC.c ****         ADC_UABH_B_NUM_STEPS,
 308:Generated_Source\PSoC4/ADC.c ****         (uint8)(ADC_UABH_B_ELEMENT_COUNT(ADC_CFG1_UABH_B_FILTER_initPairs))
 309:Generated_Source\PSoC4/ADC.c ****     };
 310:Generated_Source\PSoC4/ADC.c ****     #endif /* (0u != ADC_CFG1_FILTER_PRESENT) */
 311:Generated_Source\PSoC4/ADC.c ****     #if (0u != ADC_CFG2_FILTER_PRESENT)
 312:Generated_Source\PSoC4/ADC.c ****         #define ADC_CFG2_UABH_A_FILTER_INITPAIRSSIZE ((ADC_CFG2_FILTERTYPE_USED == ADC_FILTERTOPOLO
 313:Generated_Source\PSoC4/ADC.c ****                                                              ? 18u \
 314:Generated_Source\PSoC4/ADC.c ****                                                              : 18u)
 315:Generated_Source\PSoC4/ADC.c ****         static CyUAB_reg_pair ADC_CFG2_UABH_A_FILTER_initPairs[ADC_CFG2_UABH_A_FILTER_INITPAIRSSIZE
 316:Generated_Source\PSoC4/ADC.c ****         {
 317:Generated_Source\PSoC4/ADC.c ****         	/*OA_CTRL default always first element in initPairs*/
 318:Generated_Source\PSoC4/ADC.c ****             /* Topology-invariant registers */
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccogxpIC.s 			page 7


 319:Generated_Source\PSoC4/ADC.c ****              {ADC_UABH_A_OA_CTRL_PTR        , ((uint32)ADC_UABH_A_DEFAULT_OA_CTRL)}
 320:Generated_Source\PSoC4/ADC.c ****             ,{ADC_UABH_A_SW_STATIC_PTR      , ((uint32)ADC_UABH_A_DEFAULT_SW_STATIC)}
 321:Generated_Source\PSoC4/ADC.c ****             ,{ADC_UABH_A_SW_MODBIT_SRC_PTR      , ((uint32)ADC_UABH_A_INVAR_SW_MODBIT_SRC)}
 322:Generated_Source\PSoC4/ADC.c ****             ,{ADC_UABH_A_SRAM_CTRL_PTR      , ((uint32)ADC_UABH_A_INVAR_SRAM_CTRL)} 
 323:Generated_Source\PSoC4/ADC.c ****             ,{ADC_UABH_A_STARTUP_DELAY_PTR  , ((uint32)ADC_CFG2_UABH_A_STARTUP_DELAY)}
 324:Generated_Source\PSoC4/ADC.c ****             ,{ADC_UABH_A_SW_BOOST_CTRL_PTR  , ((uint32)ADC_UABH_A_DEFAULT_SW_BOOST_CTRL)}
 325:Generated_Source\PSoC4/ADC.c ****             ,{ADC_UABH_A_SW_OTHER_PTR  , ((uint32)ADC_UABH_A_DEFAULT_SW_OTHER)}
 326:Generated_Source\PSoC4/ADC.c ****             
 327:Generated_Source\PSoC4/ADC.c ****             #if (ADC_CFG2_FILTERTYPE_USED == ADC_FILTERTOPOLOGY_LOW_Q)
 328:Generated_Source\PSoC4/ADC.c ****                 /* Filter-invariant registers */
 329:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_A_SW_CA_IN0_PTR      , ((uint32)ADC_UABH_A_LOWQSTAT_SW_CA_IN0)}
 330:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_A_SW_CA_TOP_PTR      , ((uint32)ADC_UABH_A_LOWQSTAT_SW_CA_TOP)}
 331:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_A_SW_CC_IN0_PTR      , ((uint32)ADC_UABH_A_LOWQSTAT_SW_CC_IN0)}
 332:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_A_SW_CC_IN1_PTR      , ((uint32)ADC_UABH_A_LOWQSTAT_SW_CC_IN1)}
 333:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_A_SW_CF_BOT_PTR      , ((uint32)ADC_UABH_A_LOWQSTAT_SW_CF_BOT)}
 334:Generated_Source\PSoC4/ADC.c **** 
 335:Generated_Source\PSoC4/ADC.c ****                 /* Parameter-based registers */
 336:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_A_CAP_CTRL_PTR       , ((uint32)ADC_CFG2_UABH_A_LOWQDYN_CAP_CTRL)}
 337:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_A_SW_CB_IN0_PTR      , ((uint32)ADC_CFG2_UABH_A_LOWQDYN_SW_CB_IN0)}
 338:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_A_SW_CB_IN1_PTR      , ((uint32)ADC_CFG2_UABH_A_LOWQDYN_SW_CB_IN1)}
 339:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_A_SW_CB_TOP_PTR      , ((uint32)ADC_CFG2_UABH_A_LOWQDYN_SW_CB_TOP)}
 340:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_A_SW_CC_TOP_PTR      , ((uint32)ADC_CFG2_UABH_A_LOWQDYN_SW_CC_TOP)}
 341:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_A_CAP_ABCF_VAL_PTR   , ((uint32)ADC_CFG2_UABH_A_LOWQDYN_CAP_ABCF_VAL)}
 342:Generated_Source\PSoC4/ADC.c ****             #elif (ADC_CFG2_FILTERTYPE_USED == ADC_FILTERTOPOLOGY_HIGH_Q)
 343:Generated_Source\PSoC4/ADC.c ****                 /* Filter-invariant registers */
 344:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_A_SW_CA_IN0_PTR      , ((uint32)ADC_UABH_A_HIGHQSTAT_SW_CA_IN0)}
 345:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_A_SW_CA_TOP_PTR      , ((uint32)ADC_UABH_A_HIGHQSTAT_SW_CA_TOP)}
 346:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_A_SW_CB_IN0_PTR      , ((uint32)ADC_UABH_A_HIGHQSTAT_SW_CB_IN0)}
 347:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_A_SW_CB_IN1_PTR      , ((uint32)ADC_UABH_A_HIGHQSTAT_SW_CB_IN1)}
 348:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_A_SW_CC_IN0_PTR      , ((uint32)ADC_UABH_A_HIGHQSTAT_SW_CC_IN0)}
 349:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_A_SW_CC_IN1_PTR      , ((uint32)ADC_UABH_A_HIGHQSTAT_SW_CC_IN1)}
 350:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_A_SW_CC_TOP_PTR      , ((uint32)ADC_UABH_A_HIGHQSTAT_SW_CC_TOP)}
 351:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_A_SW_CF_BOT_PTR      , ((uint32)ADC_UABH_A_HIGHQSTAT_SW_CF_BOT)}
 352:Generated_Source\PSoC4/ADC.c **** 
 353:Generated_Source\PSoC4/ADC.c ****                 /* Parameter-based registers */
 354:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_A_CAP_CTRL_PTR       , ((uint32)ADC_CFG2_UABH_A_HIGHQDYN_CAP_CTRL)}
 355:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_A_SW_CB_TOP_PTR      , ((uint32)ADC_CFG2_UABH_A_HIGHQDYN_SW_CB_TOP)}
 356:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_A_CAP_ABCF_VAL_PTR   , ((uint32)ADC_CFG2_UABH_A_HIGHQDYN_CAP_ABCF_VAL)}
 357:Generated_Source\PSoC4/ADC.c ****             #endif /* (ADC_CFG2_FILTERTYPE_USED == ADC_FILTERTOPOLOGY_LOW_Q) */
 358:Generated_Source\PSoC4/ADC.c ****         };
 359:Generated_Source\PSoC4/ADC.c **** 
 360:Generated_Source\PSoC4/ADC.c ****         #define ADC_CFG2_UABH_B_FILTER_INITPAIRSSIZE ((ADC_CFG2_FILTERTYPE_USED == ADC_FILTERTOPOLO
 361:Generated_Source\PSoC4/ADC.c ****                                                              ? 19u \
 362:Generated_Source\PSoC4/ADC.c ****                                                              : 19u)
 363:Generated_Source\PSoC4/ADC.c ****         static CyUAB_reg_pair ADC_CFG2_UABH_B_FILTER_initPairs[ADC_CFG2_UABH_B_FILTER_INITPAIRSSIZE
 364:Generated_Source\PSoC4/ADC.c ****         {
 365:Generated_Source\PSoC4/ADC.c ****             /*OA_CTRL default always first element in initPairs*/
 366:Generated_Source\PSoC4/ADC.c ****             /* Topology-invariant registers */
 367:Generated_Source\PSoC4/ADC.c ****              {ADC_UABH_B_OA_CTRL_PTR        , ((uint32)ADC_UABH_B_DEFAULT_OA_CTRL)}
 368:Generated_Source\PSoC4/ADC.c ****             ,{ADC_UABH_B_SW_STATIC_PTR      , ((uint32)ADC_UABH_B_DEFAULT_SW_STATIC)}
 369:Generated_Source\PSoC4/ADC.c ****             ,{ADC_UABH_B_SW_MODBIT_SRC_PTR  , ((uint32)ADC_UABH_B_INVAR_SW_MODBIT_SRC)}
 370:Generated_Source\PSoC4/ADC.c ****             ,{ADC_UABH_B_SRAM_CTRL_PTR      , ((uint32)ADC_UABH_B_INVAR_SRAM_CTRL)} 
 371:Generated_Source\PSoC4/ADC.c ****             ,{ADC_UABH_B_STARTUP_DELAY_PTR  , ((uint32)ADC_CFG2_UABH_B_STARTUP_DELAY)}
 372:Generated_Source\PSoC4/ADC.c ****             ,{ADC_UABH_B_SW_BOOST_CTRL_PTR  , ((uint32)ADC_UABH_B_DEFAULT_SW_BOOST_CTRL)}
 373:Generated_Source\PSoC4/ADC.c ****             ,{ADC_UABH_B_SW_OTHER_PTR  , ((uint32)ADC_UABH_B_DEFAULT_SW_OTHER)}
 374:Generated_Source\PSoC4/ADC.c ****             
 375:Generated_Source\PSoC4/ADC.c ****             #if (ADC_CFG2_FILTERTYPE_USED == ADC_FILTERTOPOLOGY_LOW_Q)
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccogxpIC.s 			page 8


 376:Generated_Source\PSoC4/ADC.c ****                     	/* Filter-invariant registers */
 377:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_B_SW_CA_IN0_PTR      , ((uint32)ADC_UABH_B_LOWQSTAT_SW_CA_IN0)}
 378:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_B_SW_CA_IN1_PTR      , ((uint32)ADC_UABH_B_LOWQSTAT_SW_CA_IN1)}
 379:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_B_SW_CA_TOP_PTR      , ((uint32)ADC_UABH_B_LOWQSTAT_SW_CA_TOP)}
 380:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_B_SW_CB_IN0_PTR      , ((uint32)ADC_UABH_B_LOWQSTAT_SW_CB_IN0)}
 381:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_B_SW_CB_IN1_PTR      , ((uint32)ADC_UABH_B_LOWQSTAT_SW_CB_IN1)}
 382:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_B_SW_CB_TOP_PTR      , ((uint32)ADC_UABH_B_LOWQSTAT_SW_CB_TOP)}
 383:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_B_SW_CC_IN0_PTR      , ((uint32)ADC_UABH_B_LOWQSTAT_SW_CC_IN0)}
 384:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_B_SW_CC_IN1_PTR      , ((uint32)ADC_UABH_B_LOWQSTAT_SW_CC_IN1)}
 385:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_B_SW_CF_BOT_PTR      , ((uint32)ADC_UABH_B_LOWQSTAT_SW_CF_BOT)}
 386:Generated_Source\PSoC4/ADC.c ****                 
 387:Generated_Source\PSoC4/ADC.c ****                 /* Parameter-based registers */
 388:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_B_CAP_CTRL_PTR       , ((uint32)ADC_CFG2_UABH_B_LOWQDYN_CAP_CTRL)}
 389:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_B_SW_CC_TOP_PTR      , ((uint32)ADC_CFG2_UABH_B_LOWQDYN_SW_CC_TOP)}
 390:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_B_CAP_ABCF_VAL_PTR   , ((uint32)ADC_CFG2_UABH_B_LOWQDYN_CAP_ABCF_VAL)}
 391:Generated_Source\PSoC4/ADC.c ****             #elif (ADC_CFG2_FILTERTYPE_USED == ADC_FILTERTOPOLOGY_HIGH_Q)
 392:Generated_Source\PSoC4/ADC.c ****             	/* Filter-invariant registers */
 393:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_B_SW_CA_IN0_PTR      , ((uint32)ADC_UABH_B_HIGHQSTAT_SW_CA_IN0)}
 394:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_B_SW_CA_IN1_PTR      , ((uint32)ADC_UABH_B_HIGHQSTAT_SW_CA_IN1)}
 395:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_B_SW_CA_TOP_PTR      , ((uint32)ADC_UABH_B_HIGHQSTAT_SW_CA_TOP)}
 396:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_B_SW_CB_IN0_PTR      , ((uint32)ADC_UABH_B_HIGHQSTAT_SW_CB_IN0)}
 397:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_B_SW_CB_IN1_PTR      , ((uint32)ADC_UABH_B_HIGHQSTAT_SW_CB_IN1)}
 398:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_B_SW_CC_IN0_PTR      , ((uint32)ADC_UABH_B_HIGHQSTAT_SW_CC_IN0)}
 399:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_B_SW_CC_IN1_PTR      , ((uint32)ADC_UABH_B_HIGHQSTAT_SW_CC_IN1)}
 400:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_B_SW_CF_BOT_PTR      , ((uint32)ADC_UABH_B_HIGHQSTAT_SW_CF_BOT)}
 401:Generated_Source\PSoC4/ADC.c ****                 
 402:Generated_Source\PSoC4/ADC.c ****                 /* Parameter-based registers */
 403:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_B_CAP_CTRL_PTR       , ((uint32)ADC_CFG2_UABH_B_HIGHQDYN_CAP_CTRL)}
 404:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_B_SW_CB_TOP_PTR      , ((uint32)ADC_CFG2_UABH_B_HIGHQDYN_SW_CB_TOP)}
 405:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_B_SW_CC_TOP_PTR      , ((uint32)ADC_CFG2_UABH_B_HIGHQDYN_SW_CC_TOP)}
 406:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_B_CAP_ABCF_VAL_PTR   , ((uint32)ADC_CFG2_UABH_B_HIGHQDYN_CAP_ABCF_VAL)}
 407:Generated_Source\PSoC4/ADC.c ****             #endif /* #if (ADC_CFG2_FILTERTYPE_USED == ADC_FILTERTOPOLOGY_LOW_Q) */
 408:Generated_Source\PSoC4/ADC.c ****         };
 409:Generated_Source\PSoC4/ADC.c **** 
 410:Generated_Source\PSoC4/ADC.c ****         static CyUAB_config ADC_CFG2_UABH_A_FILTER_config = {
 411:Generated_Source\PSoC4/ADC.c ****             ADC_UABH_A_waveConfig,
 412:Generated_Source\PSoC4/ADC.c ****             ADC_CFG2_UABH_A_FILTER_initPairs,
 413:Generated_Source\PSoC4/ADC.c ****             CyUAB_SHARED_SW_CFG(ADC_UABH_A_PARAM_REF_TIED,ADC_UABH_A_PARAM_AGND_TIED,
 414:Generated_Source\PSoC4/ADC.c ****                 ADC_UABH_A_PARAM_SW_CC,ADC_UABH_A_PARAM_SW_BB,ADC_UABH_A_PARAM_SW_AA),
 415:Generated_Source\PSoC4/ADC.c ****             ADC_UABH_A_NUM_STEPS,
 416:Generated_Source\PSoC4/ADC.c ****             (uint8)(ADC_UABH_A_ELEMENT_COUNT(ADC_CFG2_UABH_A_FILTER_initPairs))
 417:Generated_Source\PSoC4/ADC.c ****         };
 418:Generated_Source\PSoC4/ADC.c **** 
 419:Generated_Source\PSoC4/ADC.c ****         static CyUAB_config ADC_CFG2_UABH_B_FILTER_config = {
 420:Generated_Source\PSoC4/ADC.c ****         ADC_UABH_B_waveConfig,
 421:Generated_Source\PSoC4/ADC.c ****         ADC_CFG2_UABH_B_FILTER_initPairs,
 422:Generated_Source\PSoC4/ADC.c ****         CyUAB_SHARED_SW_CFG(ADC_UABH_B_PARAM_REF_TIED,ADC_UABH_B_PARAM_AGND_TIED,
 423:Generated_Source\PSoC4/ADC.c ****             ADC_UABH_B_PARAM_SW_CC,ADC_UABH_B_PARAM_SW_BB,ADC_UABH_B_PARAM_SW_AA),
 424:Generated_Source\PSoC4/ADC.c ****         ADC_UABH_B_NUM_STEPS,
 425:Generated_Source\PSoC4/ADC.c ****         (uint8)(ADC_UABH_B_ELEMENT_COUNT(ADC_CFG2_UABH_B_FILTER_initPairs))
 426:Generated_Source\PSoC4/ADC.c ****     };
 427:Generated_Source\PSoC4/ADC.c ****     #endif /* (0u != ADC_CFG2_FILTER_PRESENT) */
 428:Generated_Source\PSoC4/ADC.c ****     #if (0u != ADC_CFG3_FILTER_PRESENT)
 429:Generated_Source\PSoC4/ADC.c ****         #define ADC_CFG3_UABH_A_FILTER_INITPAIRSSIZE ((ADC_CFG3_FILTERTYPE_USED == ADC_FILTERTOPOLO
 430:Generated_Source\PSoC4/ADC.c ****                                                              ? 18u \
 431:Generated_Source\PSoC4/ADC.c ****                                                              : 18u)
 432:Generated_Source\PSoC4/ADC.c ****         static CyUAB_reg_pair ADC_CFG3_UABH_A_FILTER_initPairs[ADC_CFG3_UABH_A_FILTER_INITPAIRSSIZE
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccogxpIC.s 			page 9


 433:Generated_Source\PSoC4/ADC.c ****         {
 434:Generated_Source\PSoC4/ADC.c ****         	/*OA_CTRL default always first element in initPairs*/
 435:Generated_Source\PSoC4/ADC.c ****             /* Topology-invariant registers */
 436:Generated_Source\PSoC4/ADC.c ****              {ADC_UABH_A_OA_CTRL_PTR        , ((uint32)ADC_UABH_A_DEFAULT_OA_CTRL)}
 437:Generated_Source\PSoC4/ADC.c ****             ,{ADC_UABH_A_SW_STATIC_PTR      , ((uint32)ADC_UABH_A_DEFAULT_SW_STATIC)}
 438:Generated_Source\PSoC4/ADC.c ****             ,{ADC_UABH_A_SW_MODBIT_SRC_PTR      , ((uint32)ADC_UABH_A_INVAR_SW_MODBIT_SRC)}
 439:Generated_Source\PSoC4/ADC.c ****             ,{ADC_UABH_A_SRAM_CTRL_PTR      , ((uint32)ADC_UABH_A_INVAR_SRAM_CTRL)} 
 440:Generated_Source\PSoC4/ADC.c ****             ,{ADC_UABH_A_STARTUP_DELAY_PTR  , ((uint32)ADC_CFG3_UABH_A_STARTUP_DELAY)}
 441:Generated_Source\PSoC4/ADC.c ****             ,{ADC_UABH_A_SW_BOOST_CTRL_PTR  , ((uint32)ADC_UABH_A_DEFAULT_SW_BOOST_CTRL)}
 442:Generated_Source\PSoC4/ADC.c ****             ,{ADC_UABH_A_SW_OTHER_PTR  , ((uint32)ADC_UABH_A_DEFAULT_SW_OTHER)}
 443:Generated_Source\PSoC4/ADC.c ****             
 444:Generated_Source\PSoC4/ADC.c ****             #if (ADC_CFG3_FILTERTYPE_USED == ADC_FILTERTOPOLOGY_LOW_Q)
 445:Generated_Source\PSoC4/ADC.c ****                 /* Filter-invariant registers */
 446:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_A_SW_CA_IN0_PTR      , ((uint32)ADC_UABH_A_LOWQSTAT_SW_CA_IN0)}
 447:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_A_SW_CA_TOP_PTR      , ((uint32)ADC_UABH_A_LOWQSTAT_SW_CA_TOP)}
 448:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_A_SW_CC_IN0_PTR      , ((uint32)ADC_UABH_A_LOWQSTAT_SW_CC_IN0)}
 449:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_A_SW_CC_IN1_PTR      , ((uint32)ADC_UABH_A_LOWQSTAT_SW_CC_IN1)}
 450:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_A_SW_CF_BOT_PTR      , ((uint32)ADC_UABH_A_LOWQSTAT_SW_CF_BOT)}
 451:Generated_Source\PSoC4/ADC.c **** 
 452:Generated_Source\PSoC4/ADC.c ****                 /* Parameter-based registers */
 453:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_A_CAP_CTRL_PTR       , ((uint32)ADC_CFG3_UABH_A_LOWQDYN_CAP_CTRL)}
 454:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_A_SW_CB_IN0_PTR      , ((uint32)ADC_CFG3_UABH_A_LOWQDYN_SW_CB_IN0)}
 455:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_A_SW_CB_IN1_PTR      , ((uint32)ADC_CFG3_UABH_A_LOWQDYN_SW_CB_IN1)}
 456:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_A_SW_CB_TOP_PTR      , ((uint32)ADC_CFG3_UABH_A_LOWQDYN_SW_CB_TOP)}
 457:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_A_SW_CC_TOP_PTR      , ((uint32)ADC_CFG3_UABH_A_LOWQDYN_SW_CC_TOP)}
 458:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_A_CAP_ABCF_VAL_PTR   , ((uint32)ADC_CFG3_UABH_A_LOWQDYN_CAP_ABCF_VAL)}
 459:Generated_Source\PSoC4/ADC.c ****             #elif (ADC_CFG3_FILTERTYPE_USED == ADC_FILTERTOPOLOGY_HIGH_Q)
 460:Generated_Source\PSoC4/ADC.c ****                 /* Filter-invariant registers */
 461:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_A_SW_CA_IN0_PTR      , ((uint32)ADC_UABH_A_HIGHQSTAT_SW_CA_IN0)}
 462:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_A_SW_CA_TOP_PTR      , ((uint32)ADC_UABH_A_HIGHQSTAT_SW_CA_TOP)}
 463:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_A_SW_CB_IN0_PTR      , ((uint32)ADC_UABH_A_HIGHQSTAT_SW_CB_IN0)}
 464:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_A_SW_CB_IN1_PTR      , ((uint32)ADC_UABH_A_HIGHQSTAT_SW_CB_IN1)}
 465:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_A_SW_CC_IN0_PTR      , ((uint32)ADC_UABH_A_HIGHQSTAT_SW_CC_IN0)}
 466:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_A_SW_CC_IN1_PTR      , ((uint32)ADC_UABH_A_HIGHQSTAT_SW_CC_IN1)}
 467:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_A_SW_CC_TOP_PTR      , ((uint32)ADC_UABH_A_HIGHQSTAT_SW_CC_TOP)}
 468:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_A_SW_CF_BOT_PTR      , ((uint32)ADC_UABH_A_HIGHQSTAT_SW_CF_BOT)}
 469:Generated_Source\PSoC4/ADC.c **** 
 470:Generated_Source\PSoC4/ADC.c ****                 /* Parameter-based registers */
 471:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_A_CAP_CTRL_PTR       , ((uint32)ADC_CFG3_UABH_A_HIGHQDYN_CAP_CTRL)}
 472:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_A_SW_CB_TOP_PTR      , ((uint32)ADC_CFG3_UABH_A_HIGHQDYN_SW_CB_TOP)}
 473:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_A_CAP_ABCF_VAL_PTR   , ((uint32)ADC_CFG3_UABH_A_HIGHQDYN_CAP_ABCF_VAL)}
 474:Generated_Source\PSoC4/ADC.c ****             #endif /* (ADC_CFG3_FILTERTYPE_USED == ADC_FILTERTOPOLOGY_LOW_Q) */
 475:Generated_Source\PSoC4/ADC.c ****         };
 476:Generated_Source\PSoC4/ADC.c **** 
 477:Generated_Source\PSoC4/ADC.c ****         #define ADC_CFG3_UABH_B_FILTER_INITPAIRSSIZE ((ADC_CFG3_FILTERTYPE_USED == ADC_FILTERTOPOLO
 478:Generated_Source\PSoC4/ADC.c ****                                                              ? 19u \
 479:Generated_Source\PSoC4/ADC.c ****                                                              : 19u)
 480:Generated_Source\PSoC4/ADC.c ****         static CyUAB_reg_pair ADC_CFG3_UABH_B_FILTER_initPairs[ADC_CFG3_UABH_B_FILTER_INITPAIRSSIZE
 481:Generated_Source\PSoC4/ADC.c ****         {
 482:Generated_Source\PSoC4/ADC.c ****             /*OA_CTRL default always first element in initPairs*/
 483:Generated_Source\PSoC4/ADC.c ****             /* Topology-invariant registers */
 484:Generated_Source\PSoC4/ADC.c ****              {ADC_UABH_B_OA_CTRL_PTR        , ((uint32)ADC_UABH_B_DEFAULT_OA_CTRL)}
 485:Generated_Source\PSoC4/ADC.c ****             ,{ADC_UABH_B_SW_STATIC_PTR      , ((uint32)ADC_UABH_B_DEFAULT_SW_STATIC)}
 486:Generated_Source\PSoC4/ADC.c ****             ,{ADC_UABH_B_SW_MODBIT_SRC_PTR  , ((uint32)ADC_UABH_B_INVAR_SW_MODBIT_SRC)}
 487:Generated_Source\PSoC4/ADC.c ****             ,{ADC_UABH_B_SRAM_CTRL_PTR      , ((uint32)ADC_UABH_B_INVAR_SRAM_CTRL)} 
 488:Generated_Source\PSoC4/ADC.c ****             ,{ADC_UABH_B_STARTUP_DELAY_PTR  , ((uint32)ADC_CFG3_UABH_B_STARTUP_DELAY)}
 489:Generated_Source\PSoC4/ADC.c ****             ,{ADC_UABH_B_SW_BOOST_CTRL_PTR  , ((uint32)ADC_UABH_B_DEFAULT_SW_BOOST_CTRL)}
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccogxpIC.s 			page 10


 490:Generated_Source\PSoC4/ADC.c ****             ,{ADC_UABH_B_SW_OTHER_PTR  , ((uint32)ADC_UABH_B_DEFAULT_SW_OTHER)}
 491:Generated_Source\PSoC4/ADC.c ****             
 492:Generated_Source\PSoC4/ADC.c ****             #if (ADC_CFG3_FILTERTYPE_USED == ADC_FILTERTOPOLOGY_LOW_Q)
 493:Generated_Source\PSoC4/ADC.c ****                     	/* Filter-invariant registers */
 494:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_B_SW_CA_IN0_PTR      , ((uint32)ADC_UABH_B_LOWQSTAT_SW_CA_IN0)}
 495:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_B_SW_CA_IN1_PTR      , ((uint32)ADC_UABH_B_LOWQSTAT_SW_CA_IN1)}
 496:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_B_SW_CA_TOP_PTR      , ((uint32)ADC_UABH_B_LOWQSTAT_SW_CA_TOP)}
 497:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_B_SW_CB_IN0_PTR      , ((uint32)ADC_UABH_B_LOWQSTAT_SW_CB_IN0)}
 498:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_B_SW_CB_IN1_PTR      , ((uint32)ADC_UABH_B_LOWQSTAT_SW_CB_IN1)}
 499:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_B_SW_CB_TOP_PTR      , ((uint32)ADC_UABH_B_LOWQSTAT_SW_CB_TOP)}
 500:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_B_SW_CC_IN0_PTR      , ((uint32)ADC_UABH_B_LOWQSTAT_SW_CC_IN0)}
 501:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_B_SW_CC_IN1_PTR      , ((uint32)ADC_UABH_B_LOWQSTAT_SW_CC_IN1)}
 502:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_B_SW_CF_BOT_PTR      , ((uint32)ADC_UABH_B_LOWQSTAT_SW_CF_BOT)}
 503:Generated_Source\PSoC4/ADC.c ****                 
 504:Generated_Source\PSoC4/ADC.c ****                 /* Parameter-based registers */
 505:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_B_CAP_CTRL_PTR       , ((uint32)ADC_CFG3_UABH_B_LOWQDYN_CAP_CTRL)}
 506:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_B_SW_CC_TOP_PTR      , ((uint32)ADC_CFG3_UABH_B_LOWQDYN_SW_CC_TOP)}
 507:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_B_CAP_ABCF_VAL_PTR   , ((uint32)ADC_CFG3_UABH_B_LOWQDYN_CAP_ABCF_VAL)}
 508:Generated_Source\PSoC4/ADC.c ****             #elif (ADC_CFG3_FILTERTYPE_USED == ADC_FILTERTOPOLOGY_HIGH_Q)
 509:Generated_Source\PSoC4/ADC.c ****             	/* Filter-invariant registers */
 510:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_B_SW_CA_IN0_PTR      , ((uint32)ADC_UABH_B_HIGHQSTAT_SW_CA_IN0)}
 511:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_B_SW_CA_IN1_PTR      , ((uint32)ADC_UABH_B_HIGHQSTAT_SW_CA_IN1)}
 512:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_B_SW_CA_TOP_PTR      , ((uint32)ADC_UABH_B_HIGHQSTAT_SW_CA_TOP)}
 513:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_B_SW_CB_IN0_PTR      , ((uint32)ADC_UABH_B_HIGHQSTAT_SW_CB_IN0)}
 514:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_B_SW_CB_IN1_PTR      , ((uint32)ADC_UABH_B_HIGHQSTAT_SW_CB_IN1)}
 515:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_B_SW_CC_IN0_PTR      , ((uint32)ADC_UABH_B_HIGHQSTAT_SW_CC_IN0)}
 516:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_B_SW_CC_IN1_PTR      , ((uint32)ADC_UABH_B_HIGHQSTAT_SW_CC_IN1)}
 517:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_B_SW_CF_BOT_PTR      , ((uint32)ADC_UABH_B_HIGHQSTAT_SW_CF_BOT)}
 518:Generated_Source\PSoC4/ADC.c ****                 
 519:Generated_Source\PSoC4/ADC.c ****                 /* Parameter-based registers */
 520:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_B_CAP_CTRL_PTR       , ((uint32)ADC_CFG3_UABH_B_HIGHQDYN_CAP_CTRL)}
 521:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_B_SW_CB_TOP_PTR      , ((uint32)ADC_CFG3_UABH_B_HIGHQDYN_SW_CB_TOP)}
 522:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_B_SW_CC_TOP_PTR      , ((uint32)ADC_CFG3_UABH_B_HIGHQDYN_SW_CC_TOP)}
 523:Generated_Source\PSoC4/ADC.c ****                 ,{ADC_UABH_B_CAP_ABCF_VAL_PTR   , ((uint32)ADC_CFG3_UABH_B_HIGHQDYN_CAP_ABCF_VAL)}
 524:Generated_Source\PSoC4/ADC.c ****             #endif /* #if (ADC_CFG3_FILTERTYPE_USED == ADC_FILTERTOPOLOGY_LOW_Q) */
 525:Generated_Source\PSoC4/ADC.c ****         };
 526:Generated_Source\PSoC4/ADC.c **** 
 527:Generated_Source\PSoC4/ADC.c ****         static CyUAB_config ADC_CFG3_UABH_A_FILTER_config = {
 528:Generated_Source\PSoC4/ADC.c ****             ADC_UABH_A_waveConfig,
 529:Generated_Source\PSoC4/ADC.c ****             ADC_CFG3_UABH_A_FILTER_initPairs,
 530:Generated_Source\PSoC4/ADC.c ****             CyUAB_SHARED_SW_CFG(ADC_UABH_A_PARAM_REF_TIED,ADC_UABH_A_PARAM_AGND_TIED,
 531:Generated_Source\PSoC4/ADC.c ****                 ADC_UABH_A_PARAM_SW_CC,ADC_UABH_A_PARAM_SW_BB,ADC_UABH_A_PARAM_SW_AA),
 532:Generated_Source\PSoC4/ADC.c ****             ADC_UABH_A_NUM_STEPS,
 533:Generated_Source\PSoC4/ADC.c ****             (uint8)(ADC_UABH_A_ELEMENT_COUNT(ADC_CFG3_UABH_A_FILTER_initPairs))
 534:Generated_Source\PSoC4/ADC.c ****         };
 535:Generated_Source\PSoC4/ADC.c **** 
 536:Generated_Source\PSoC4/ADC.c ****         static CyUAB_config ADC_CFG3_UABH_B_FILTER_config = {
 537:Generated_Source\PSoC4/ADC.c ****         ADC_UABH_B_waveConfig,
 538:Generated_Source\PSoC4/ADC.c ****         ADC_CFG3_UABH_B_FILTER_initPairs,
 539:Generated_Source\PSoC4/ADC.c ****         CyUAB_SHARED_SW_CFG(ADC_UABH_B_PARAM_REF_TIED,ADC_UABH_B_PARAM_AGND_TIED,
 540:Generated_Source\PSoC4/ADC.c ****             ADC_UABH_B_PARAM_SW_CC,ADC_UABH_B_PARAM_SW_BB,ADC_UABH_B_PARAM_SW_AA),
 541:Generated_Source\PSoC4/ADC.c ****         ADC_UABH_B_NUM_STEPS,
 542:Generated_Source\PSoC4/ADC.c ****         (uint8)(ADC_UABH_B_ELEMENT_COUNT(ADC_CFG3_UABH_B_FILTER_initPairs))
 543:Generated_Source\PSoC4/ADC.c ****     };
 544:Generated_Source\PSoC4/ADC.c ****     #endif /* (0u != ADC_CFG3_FILTER_PRESENT) */
 545:Generated_Source\PSoC4/ADC.c ****     
 546:Generated_Source\PSoC4/ADC.c ****     
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccogxpIC.s 			page 11


 547:Generated_Source\PSoC4/ADC.c **** #endif /* (ADC_ANY_CONFIG_USES_FILTER	!= 0u)	*/
 548:Generated_Source\PSoC4/ADC.c **** 
 549:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 550:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_Start
 551:Generated_Source\PSoC4/ADC.c **** ****************************************************************************//**
 552:Generated_Source\PSoC4/ADC.c **** *
 553:Generated_Source\PSoC4/ADC.c **** * \brief Performs all required initialization for this component and enables the 
 554:Generated_Source\PSoC4/ADC.c **** *  power. The power will be set to the appropriate power based on the clock 
 555:Generated_Source\PSoC4/ADC.c **** *  frequency.
 556:Generated_Source\PSoC4/ADC.c **** * 
 557:Generated_Source\PSoC4/ADC.c **** * \param None
 558:Generated_Source\PSoC4/ADC.c **** * 
 559:Generated_Source\PSoC4/ADC.c **** * \return None
 560:Generated_Source\PSoC4/ADC.c **** * 
 561:Generated_Source\PSoC4/ADC.c **** * \sideeffect None
 562:Generated_Source\PSoC4/ADC.c **** *
 563:Generated_Source\PSoC4/ADC.c **** * \globalvars
 564:Generated_Source\PSoC4/ADC.c **** *  \ref ADC_initVar (RW)
 565:Generated_Source\PSoC4/ADC.c **** *
 566:Generated_Source\PSoC4/ADC.c **** * <b>Code Snippet</b>
 567:Generated_Source\PSoC4/ADC.c **** *  \snippet main.c snippet_ADC_Start
 568:Generated_Source\PSoC4/ADC.c **** *
 569:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 570:Generated_Source\PSoC4/ADC.c **** void ADC_Start(void)
 571:Generated_Source\PSoC4/ADC.c **** {
 572:Generated_Source\PSoC4/ADC.c ****     if (ADC_INIT_VAR_INIT_FLAG != (ADC_INIT_VAR_INIT_FLAG & ADC_initVar))
 573:Generated_Source\PSoC4/ADC.c ****     {
 574:Generated_Source\PSoC4/ADC.c ****         ADC_Init();
 575:Generated_Source\PSoC4/ADC.c ****         ADC_initVar |= ADC_INIT_VAR_INIT_FLAG;
 576:Generated_Source\PSoC4/ADC.c ****     }
 577:Generated_Source\PSoC4/ADC.c ****     
 578:Generated_Source\PSoC4/ADC.c ****     ADC_Enable();
 579:Generated_Source\PSoC4/ADC.c ****     
 580:Generated_Source\PSoC4/ADC.c ****     return;
 581:Generated_Source\PSoC4/ADC.c **** }
 582:Generated_Source\PSoC4/ADC.c **** 
 583:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 584:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_StartEx
 585:Generated_Source\PSoC4/ADC.c **** ****************************************************************************//**
 586:Generated_Source\PSoC4/ADC.c **** *
 587:Generated_Source\PSoC4/ADC.c **** * \brief This function starts the ADC and sets the Interrupt 
 588:Generated_Source\PSoC4/ADC.c **** * Service Routine to the provided address using the 
 589:Generated_Source\PSoC4/ADC.c **** * ADC_IRQ_StartEx() function. Refer to the Interrupt component 
 590:Generated_Source\PSoC4/ADC.c **** * datasheet for more information on the ADC_IRQ_StartEx() function.
 591:Generated_Source\PSoC4/ADC.c **** * 
 592:Generated_Source\PSoC4/ADC.c **** * \param address This is the address of a user defined function for the ISR.
 593:Generated_Source\PSoC4/ADC.c **** * 
 594:Generated_Source\PSoC4/ADC.c **** * \return None
 595:Generated_Source\PSoC4/ADC.c **** * 
 596:Generated_Source\PSoC4/ADC.c **** * \sideeffect None
 597:Generated_Source\PSoC4/ADC.c **** *
 598:Generated_Source\PSoC4/ADC.c **** * <b>Code Snippet</b>
 599:Generated_Source\PSoC4/ADC.c **** *  \snippet main.c snippet_ADC_StartEx
 600:Generated_Source\PSoC4/ADC.c **** *
 601:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 602:Generated_Source\PSoC4/ADC.c **** void ADC_StartEx(cyisraddress address)
 603:Generated_Source\PSoC4/ADC.c **** {
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccogxpIC.s 			page 12


 604:Generated_Source\PSoC4/ADC.c ****     ADC_Start();
 605:Generated_Source\PSoC4/ADC.c ****     ADC_IRQ_StartEx(address);
 606:Generated_Source\PSoC4/ADC.c ****     return;
 607:Generated_Source\PSoC4/ADC.c **** }
 608:Generated_Source\PSoC4/ADC.c **** 
 609:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 610:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_Stop
 611:Generated_Source\PSoC4/ADC.c **** ****************************************************************************//**
 612:Generated_Source\PSoC4/ADC.c **** *
 613:Generated_Source\PSoC4/ADC.c **** * \brief This function stops ADC conversions and puts the ADC into its lowest 
 614:Generated_Source\PSoC4/ADC.c **** * power mode.
 615:Generated_Source\PSoC4/ADC.c **** * 
 616:Generated_Source\PSoC4/ADC.c **** * \param None
 617:Generated_Source\PSoC4/ADC.c **** * 
 618:Generated_Source\PSoC4/ADC.c **** * \return None
 619:Generated_Source\PSoC4/ADC.c **** * 
 620:Generated_Source\PSoC4/ADC.c **** * \sideeffect
 621:Generated_Source\PSoC4/ADC.c **** * Do not use the ADC_Stop() API to halt conversions. Instead use the 
 622:Generated_Source\PSoC4/ADC.c **** * ADC_StopConvert() API. If you use the ADC_Stop() API 
 623:Generated_Source\PSoC4/ADC.c **** * to halt conversions then later use the ADC_Start() and 
 624:Generated_Source\PSoC4/ADC.c **** * ADC_StartConvert() APIs to resume conversions, the first channel 
 625:Generated_Source\PSoC4/ADC.c **** * of the scan may be corrupt. The ADC_StopConvert() API will enable 
 626:Generated_Source\PSoC4/ADC.c **** * the ADC to complete the current scan of channels. After the 
 627:Generated_Source\PSoC4/ADC.c **** * channel scan is complete, the ADC will stop all conversions, which 
 628:Generated_Source\PSoC4/ADC.c **** * can be detected by the use of an ISR or the ADC_IsEndConversion() 
 629:Generated_Source\PSoC4/ADC.c **** * flag.
 630:Generated_Source\PSoC4/ADC.c **** *
 631:Generated_Source\PSoC4/ADC.c **** * <b>Code Snippet</b>
 632:Generated_Source\PSoC4/ADC.c **** *  \snippet main.c snippet_ADC_Stop
 633:Generated_Source\PSoC4/ADC.c **** *
 634:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 635:Generated_Source\PSoC4/ADC.c **** void ADC_Stop(void)
 636:Generated_Source\PSoC4/ADC.c **** {	
 637:Generated_Source\PSoC4/ADC.c ****     #if(0u != ADC_ANY_CONFIG_USES_FILTER)	
 638:Generated_Source\PSoC4/ADC.c ****     	if((ADC_allConfigs[ADC_currentConfig].miscConfig 
 639:Generated_Source\PSoC4/ADC.c ****     	   & ADC_MISC_CONFIG_FILTER_PRESENT_MSK) 
 640:Generated_Source\PSoC4/ADC.c ****     	   == ADC_MISC_CONFIG_FILTER_PRESENT_MSK)
 641:Generated_Source\PSoC4/ADC.c ****     	{
 642:Generated_Source\PSoC4/ADC.c ****     		ADC_UABH_A_Stop();
 643:Generated_Source\PSoC4/ADC.c ****     		ADC_UABH_B_Stop();
 644:Generated_Source\PSoC4/ADC.c ****             ADC_FILTERAGND2SAR_BUFFER_Stop();
 645:Generated_Source\PSoC4/ADC.c ****     	}
 646:Generated_Source\PSoC4/ADC.c ****     #endif /* ADC_ANY_CONFIG_USES_FILTER != 0u */
 647:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_CTRL_REG &= (uint32)~ADC_SAR_CTRL_ENABLED_MSK;
 648:Generated_Source\PSoC4/ADC.c ****     return;
 649:Generated_Source\PSoC4/ADC.c **** }
 650:Generated_Source\PSoC4/ADC.c **** 
 651:Generated_Source\PSoC4/ADC.c **** /* ****************************************************************************
 652:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_InitConfig
 653:Generated_Source\PSoC4/ADC.c **** ****************************************************************************//*
 654:Generated_Source\PSoC4/ADC.c **** *
 655:Generated_Source\PSoC4/ADC.c **** * \brief Configures all of the registers for a given configuration for scanning.
 656:Generated_Source\PSoC4/ADC.c **** *
 657:Generated_Source\PSoC4/ADC.c **** * \param scan Number of scan defined in the ADC.
 658:Generated_Source\PSoC4/ADC.c **** *
 659:Generated_Source\PSoC4/ADC.c **** * \return None
 660:Generated_Source\PSoC4/ADC.c **** *
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccogxpIC.s 			page 13


 661:Generated_Source\PSoC4/ADC.c **** * \sideeffect None
 662:Generated_Source\PSoC4/ADC.c **** *
 663:Generated_Source\PSoC4/ADC.c **** * <b>Code Snippet</b>
 664:Generated_Source\PSoC4/ADC.c **** *  \snippet main.c snippet_ADC_InitConfig
 665:Generated_Source\PSoC4/ADC.c **** *
 666:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 667:Generated_Source\PSoC4/ADC.c **** void ADC_InitConfig(const ADC_CONFIG_STRUCT *config)
 668:Generated_Source\PSoC4/ADC.c **** {
 669:Generated_Source\PSoC4/ADC.c **** 	uint32 chNum;
 670:Generated_Source\PSoC4/ADC.c ****     uint32 tmpRegVal;
 671:Generated_Source\PSoC4/ADC.c **** 	
 672:Generated_Source\PSoC4/ADC.c ****     #if(0u != ADC_ANY_CONFIG_USES_FILTER)	        
 673:Generated_Source\PSoC4/ADC.c ****     	if((config->miscConfig & ADC_MISC_CONFIG_FILTER_PRESENT_MSK) 
 674:Generated_Source\PSoC4/ADC.c ****     	    == ADC_MISC_CONFIG_FILTER_PRESENT_MSK)
 675:Generated_Source\PSoC4/ADC.c ****     	{
 676:Generated_Source\PSoC4/ADC.c ****             ADC_intUabClock_SetFractionalDividerRegister(config->filterClkDivider, 0u);
 677:Generated_Source\PSoC4/ADC.c ****             
 678:Generated_Source\PSoC4/ADC.c ****     	}
 679:Generated_Source\PSoC4/ADC.c ****     #endif /* ADC_ANY_CONFIG_USES_FILTER != 0u */
 680:Generated_Source\PSoC4/ADC.c ****     #if (ADC_CLOCK_INTERNAL)
 681:Generated_Source\PSoC4/ADC.c ****         ADC_intSarClock_SetFractionalDividerRegister(config->clkDivider, 0u);
 682:Generated_Source\PSoC4/ADC.c ****         
 683:Generated_Source\PSoC4/ADC.c ****     #endif /* ADC_CLOCK_INTERNAL */
 684:Generated_Source\PSoC4/ADC.c ****     /* Init SAR and MUX registers */
 685:Generated_Source\PSoC4/ADC.c **** 	ADC_SAR_CTRL_REG = config->ctrl
 686:Generated_Source\PSoC4/ADC.c ****    
 687:Generated_Source\PSoC4/ADC.c **** 	/* Enable the SAR internal pump when global pump is enabled */
 688:Generated_Source\PSoC4/ADC.c ****     | (((ADC_PUMP_CTRL_REG & ADC_PUMP_CTRL_ENABLED) != 0u) 
 689:Generated_Source\PSoC4/ADC.c ****     ? ADC_SAR_CTRL_BOOSTPUMP_EN_MSK : 0u);
 690:Generated_Source\PSoC4/ADC.c **** 	
 691:Generated_Source\PSoC4/ADC.c **** 	ADC_SAR_SAMPLE_CTRL_REG = config->sampleCtrl;
 692:Generated_Source\PSoC4/ADC.c **** 	ADC_SAR_RANGE_THRES_REG = config->rangeThres;	
 693:Generated_Source\PSoC4/ADC.c **** 	ADC_SAR_RANGE_COND_REG = config->rangeCond;
 694:Generated_Source\PSoC4/ADC.c **** 	ADC_SAR_SAMPLE_TIME01_REG = config->sampleTime01;
 695:Generated_Source\PSoC4/ADC.c **** 	ADC_SAR_SAMPLE_TIME23_REG = config->sampleTime23;
 696:Generated_Source\PSoC4/ADC.c ****     
 697:Generated_Source\PSoC4/ADC.c **** 	/* Connect Vminus to VSSA when even one channel is single-ended or multiple channels configured */
 698:Generated_Source\PSoC4/ADC.c **** 	if(1u == ADC_MUX_SWITCH0_INIT)
 699:Generated_Source\PSoC4/ADC.c **** 	{
 700:Generated_Source\PSoC4/ADC.c **** 		ADC_MUX_SWITCH0_REG |= ADC_MUX_FW_VSSA_VMINUS;
 701:Generated_Source\PSoC4/ADC.c **** 		/* Set MUX_HW_CTRL_VSSA in MUX_SWITCH_HW_CTRL when multiple channels enabled */
 702:Generated_Source\PSoC4/ADC.c **** 		if(1ul < config->numChannels)
 703:Generated_Source\PSoC4/ADC.c **** 		{
 704:Generated_Source\PSoC4/ADC.c **** 			ADC_MUX_SWITCH_HW_CTRL_REG |= ADC_MUX_FW_VSSA_VMINUS;
 705:Generated_Source\PSoC4/ADC.c **** 		}
 706:Generated_Source\PSoC4/ADC.c **** 	}
 707:Generated_Source\PSoC4/ADC.c ****     
 708:Generated_Source\PSoC4/ADC.c **** 	/* Clear and set interrupt masks */
 709:Generated_Source\PSoC4/ADC.c **** 	ADC_SAR_SATURATE_INTR_MASK_REG = 0u;
 710:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_INTR_MASK_REG = 0u;	
 711:Generated_Source\PSoC4/ADC.c **** 	ADC_SAR_SATURATE_INTR_MASK_REG = config->satIntMask;
 712:Generated_Source\PSoC4/ADC.c **** 	ADC_SAR_RANGE_INTR_MASK_REG = config->rangeIntMask;
 713:Generated_Source\PSoC4/ADC.c **** 	ADC_SAR_INTR_MASK_REG = ADC_EOS_MASK;
 714:Generated_Source\PSoC4/ADC.c ****     
 715:Generated_Source\PSoC4/ADC.c **** 	/* Double the non-overlap delay and latch enable time when using */
 716:Generated_Source\PSoC4/ADC.c ****     /* internal reference without bypass cap */
 717:Generated_Source\PSoC4/ADC.c ****     tmpRegVal = ADC_SAR_DFT_CTRL_REG;
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccogxpIC.s 			page 14


 718:Generated_Source\PSoC4/ADC.c **** 	if(((config->ctrl & ADC__SAR_CTRL_VREF_BYP_AND_SEL_MSK) 
 719:Generated_Source\PSoC4/ADC.c **** 	    == ADC__INTERNAL1024) 
 720:Generated_Source\PSoC4/ADC.c **** 	    || ((config->ctrl & ADC__SAR_CTRL_VREF_BYP_AND_SEL_MSK) 
 721:Generated_Source\PSoC4/ADC.c **** 	    == ADC__INTERNALVREF))
 722:Generated_Source\PSoC4/ADC.c **** 	{
 723:Generated_Source\PSoC4/ADC.c ****         tmpRegVal &= ~ADC_SAR_DFT_CTRL_DCEN_MSK;
 724:Generated_Source\PSoC4/ADC.c **** 		tmpRegVal |= ADC_SAR_DFT_CTRL_DLY_INC_MSK;
 725:Generated_Source\PSoC4/ADC.c **** 	}
 726:Generated_Source\PSoC4/ADC.c **** 	else
 727:Generated_Source\PSoC4/ADC.c **** 	{
 728:Generated_Source\PSoC4/ADC.c **** 		tmpRegVal |= ADC_SAR_DFT_CTRL_DCEN_MSK;
 729:Generated_Source\PSoC4/ADC.c ****         tmpRegVal &= (uint32)~ADC_SAR_DFT_CTRL_DLY_INC_MSK;
 730:Generated_Source\PSoC4/ADC.c **** 	}	
 731:Generated_Source\PSoC4/ADC.c **** 	ADC_SAR_DFT_CTRL_REG = tmpRegVal;
 732:Generated_Source\PSoC4/ADC.c **** 	
 733:Generated_Source\PSoC4/ADC.c **** 	for(chNum = 0u; chNum < config->numChannels; chNum++)
 734:Generated_Source\PSoC4/ADC.c ****     {
 735:Generated_Source\PSoC4/ADC.c **** 		tmpRegVal = (ADC_channelsConfig[config->channelBase + chNum] 
 736:Generated_Source\PSoC4/ADC.c **** 		& ADC_CHANNEL_CONFIG_MASK);
 737:Generated_Source\PSoC4/ADC.c ****         
 738:Generated_Source\PSoC4/ADC.c ****         #if(ADC_TOTAL_CHANNELS_NUM > 1)
 739:Generated_Source\PSoC4/ADC.c ****             tmpRegVal |= ADC_InputsPlacement[config->channelBase + chNum];
 740:Generated_Source\PSoC4/ADC.c ****             /*Non-paired differential channels set NEG_ADDR_EN and clear DIFFERENTIAL_EN */
 741:Generated_Source\PSoC4/ADC.c ****             if(0u != (ADC_InputsPlacement[config->channelBase + chNum] & ADC_CHANNEL_CONFIG_NEG_ADD
 742:Generated_Source\PSoC4/ADC.c ****             {
 743:Generated_Source\PSoC4/ADC.c ****                 tmpRegVal &= ~ADC_SAR_CHAN_CONFIG_DIFFERENTIAL_EN_MSK;
 744:Generated_Source\PSoC4/ADC.c ****             }
 745:Generated_Source\PSoC4/ADC.c ****         #endif
 746:Generated_Source\PSoC4/ADC.c ****         
 747:Generated_Source\PSoC4/ADC.c **** 		CY_SET_REG32((reg32 *)(ADC_SAR_CHAN_CONFIG_IND + (uint32)(chNum << 2)), tmpRegVal);
 748:Generated_Source\PSoC4/ADC.c **** 	}
 749:Generated_Source\PSoC4/ADC.c **** 	
 750:Generated_Source\PSoC4/ADC.c ****     return;
 751:Generated_Source\PSoC4/ADC.c **** }
 752:Generated_Source\PSoC4/ADC.c **** 
 753:Generated_Source\PSoC4/ADC.c **** /* ****************************************************************************
 754:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SelectConfig
 755:Generated_Source\PSoC4/ADC.c **** ****************************************************************************//* 
 756:Generated_Source\PSoC4/ADC.c **** *
 757:Generated_Source\PSoC4/ADC.c **** * \brief Selects the predefined configuration for scanning. Disables
 758:Generated_Source\PSoC4/ADC.c **** * and re-enables the SAR and filter (if filter used).
 759:Generated_Source\PSoC4/ADC.c **** * 
 760:Generated_Source\PSoC4/ADC.c **** * \param config Number of configuration  in the ADC.
 761:Generated_Source\PSoC4/ADC.c **** * 
 762:Generated_Source\PSoC4/ADC.c **** * \param restart Determines if the ADC should be  restarted after 
 763:Generated_Source\PSoC4/ADC.c **** * selecting the configuration.
 764:Generated_Source\PSoC4/ADC.c **** **
 765:Generated_Source\PSoC4/ADC.c **** * <b>Code Snippet</b>
 766:Generated_Source\PSoC4/ADC.c **** *  \snippet main.c snippet_ADC_SelectConfig
 767:Generated_Source\PSoC4/ADC.c **** *
 768:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 769:Generated_Source\PSoC4/ADC.c **** void ADC_SelectConfig(uint32 config, uint32 restart)
 770:Generated_Source\PSoC4/ADC.c **** {
 771:Generated_Source\PSoC4/ADC.c ****     /* Check whether the configuration number is valid or not */
 772:Generated_Source\PSoC4/ADC.c ****     if(ADC_TOTAL_CONFIGS > config)
 773:Generated_Source\PSoC4/ADC.c ****     {        
 774:Generated_Source\PSoC4/ADC.c ****         /* Stop the ADC before changing configurations */
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccogxpIC.s 			page 15


 775:Generated_Source\PSoC4/ADC.c **** 	    ADC_Stop();
 776:Generated_Source\PSoC4/ADC.c ****         ADC_selected = 1u;
 777:Generated_Source\PSoC4/ADC.c ****         
 778:Generated_Source\PSoC4/ADC.c ****     	if(0u == ADC_initVar)
 779:Generated_Source\PSoC4/ADC.c ****     	{
 780:Generated_Source\PSoC4/ADC.c ****             ADC_Init();
 781:Generated_Source\PSoC4/ADC.c ****             ADC_initVar |= ADC_INIT_VAR_INIT_FLAG;
 782:Generated_Source\PSoC4/ADC.c ****     	}
 783:Generated_Source\PSoC4/ADC.c ****         #if (ADC_VREF_ROUTED)
 784:Generated_Source\PSoC4/ADC.c ****             ADC_vrefAMux_DisconnectAll();
 785:Generated_Source\PSoC4/ADC.c ****         #endif
 786:Generated_Source\PSoC4/ADC.c ****     	ADC_InitConfig(&ADC_allConfigs[config]);
 787:Generated_Source\PSoC4/ADC.c ****         #if (ADC_VREF_ROUTED)
 788:Generated_Source\PSoC4/ADC.c ****             ADC_vrefAMux_Select((uint8)config);
 789:Generated_Source\PSoC4/ADC.c ****         #endif
 790:Generated_Source\PSoC4/ADC.c ****         #if(0u != ADC_ANY_CONFIG_USES_FILTER)
 791:Generated_Source\PSoC4/ADC.c ****             ADC_filterVinMux_Select((uint8)config);
 792:Generated_Source\PSoC4/ADC.c ****             ADC_filterInit(config);
 793:Generated_Source\PSoC4/ADC.c ****         #endif
 794:Generated_Source\PSoC4/ADC.c ****     	ADC_SAR_CHAN_EN_REG = ADC_allConfigs[config].chanEn;
 795:Generated_Source\PSoC4/ADC.c ****     	ADC_SAR_RANGE_INTR_MASK_REG = ADC_allConfigs[config].rangeIntMask;
 796:Generated_Source\PSoC4/ADC.c ****     	ADC_SAR_SATURATE_INTR_MASK_REG = ADC_allConfigs[config].satIntMask;
 797:Generated_Source\PSoC4/ADC.c ****     	ADC_currentConfig = config;
 798:Generated_Source\PSoC4/ADC.c ****         
 799:Generated_Source\PSoC4/ADC.c ****         if(1u == restart)
 800:Generated_Source\PSoC4/ADC.c ****         {
 801:Generated_Source\PSoC4/ADC.c ****             /* Restart the ADC */    
 802:Generated_Source\PSoC4/ADC.c ****             ADC_Start();
 803:Generated_Source\PSoC4/ADC.c ****             
 804:Generated_Source\PSoC4/ADC.c ****             /* Restart the scan */
 805:Generated_Source\PSoC4/ADC.c ****             ADC_StartConvert();
 806:Generated_Source\PSoC4/ADC.c ****         }
 807:Generated_Source\PSoC4/ADC.c ****     }
 808:Generated_Source\PSoC4/ADC.c ****     return;
 809:Generated_Source\PSoC4/ADC.c **** }
 810:Generated_Source\PSoC4/ADC.c **** 
 811:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 812:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_StartConvert
 813:Generated_Source\PSoC4/ADC.c **** ****************************************************************************//**
 814:Generated_Source\PSoC4/ADC.c **** *
 815:Generated_Source\PSoC4/ADC.c **** * \brief In continuous mode, this API starts the conversion process and it runs 
 816:Generated_Source\PSoC4/ADC.c **** * continuously. 
 817:Generated_Source\PSoC4/ADC.c **** 
 818:Generated_Source\PSoC4/ADC.c **** * In Single Shot mode, the function triggers a single scan and 
 819:Generated_Source\PSoC4/ADC.c **** * every scan requires a call of this function. The mode is set with the 
 820:Generated_Source\PSoC4/ADC.c **** * Sample Mode parameter in the customizer. The customizer setting can be 
 821:Generated_Source\PSoC4/ADC.c **** * overridden at run time with the ADC_SetConvertMode() function.
 822:Generated_Source\PSoC4/ADC.c **** * 
 823:Generated_Source\PSoC4/ADC.c **** * \param None
 824:Generated_Source\PSoC4/ADC.c **** * 
 825:Generated_Source\PSoC4/ADC.c **** * \return None
 826:Generated_Source\PSoC4/ADC.c **** * 
 827:Generated_Source\PSoC4/ADC.c **** * \sideeffect None
 828:Generated_Source\PSoC4/ADC.c **** *
 829:Generated_Source\PSoC4/ADC.c **** * <b>Code Snippet</b>
 830:Generated_Source\PSoC4/ADC.c **** *  \snippet main.c snippet_ADC_StartConvert
 831:Generated_Source\PSoC4/ADC.c **** *
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccogxpIC.s 			page 16


 832:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 833:Generated_Source\PSoC4/ADC.c **** void ADC_StartConvert(void)
 834:Generated_Source\PSoC4/ADC.c **** {
 835:Generated_Source\PSoC4/ADC.c ****     /* CDT 243358 */
 836:Generated_Source\PSoC4/ADC.c ****     #if(0u != ADC_ANY_CONFIG_USES_FILTER)
 837:Generated_Source\PSoC4/ADC.c ****         ADC_Stop();
 838:Generated_Source\PSoC4/ADC.c ****         ADC_Start();
 839:Generated_Source\PSoC4/ADC.c ****     #endif
 840:Generated_Source\PSoC4/ADC.c ****     
 841:Generated_Source\PSoC4/ADC.c **** 	/* Freerunning mode */
 842:Generated_Source\PSoC4/ADC.c **** 	if((ADC_SAR_SAMPLE_CTRL_REG 
 843:Generated_Source\PSoC4/ADC.c **** 		& ADC_SAR_SAMPLE_CTRL_DSI_TRIGGER_LEVEL_MSK) 
 844:Generated_Source\PSoC4/ADC.c **** 		== ADC_SAR_SAMPLE_CTRL_DSI_TRIGGER_LEVEL_MSK)
 845:Generated_Source\PSoC4/ADC.c ****     {
 846:Generated_Source\PSoC4/ADC.c **** 		ADC_SAR_SAMPLE_CTRL_REG |= ADC_SAR_SAMPLE_CTRL_CONTINUOUS_MSK ;
 847:Generated_Source\PSoC4/ADC.c **** 	}
 848:Generated_Source\PSoC4/ADC.c **** 	else /* Firmware trigger */
 849:Generated_Source\PSoC4/ADC.c **** 	{
 850:Generated_Source\PSoC4/ADC.c **** 		ADC_SAR_START_CTRL_REG = ADC_SAR_START_CTRL_FW_TRIGGER_MSK;
 851:Generated_Source\PSoC4/ADC.c **** 	}
 852:Generated_Source\PSoC4/ADC.c ****     
 853:Generated_Source\PSoC4/ADC.c ****     return;
 854:Generated_Source\PSoC4/ADC.c **** }
 855:Generated_Source\PSoC4/ADC.c **** 
 856:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 857:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_StopConvert
 858:Generated_Source\PSoC4/ADC.c **** ****************************************************************************//**
 859:Generated_Source\PSoC4/ADC.c **** *
 860:Generated_Source\PSoC4/ADC.c **** * \brief Forces the ADC to stop conversions. If a conversion is 
 861:Generated_Source\PSoC4/ADC.c **** * currently executing, that conversion will complete, but no further conversions 
 862:Generated_Source\PSoC4/ADC.c **** * will occur.
 863:Generated_Source\PSoC4/ADC.c **** * 
 864:Generated_Source\PSoC4/ADC.c **** * \param None
 865:Generated_Source\PSoC4/ADC.c **** *
 866:Generated_Source\PSoC4/ADC.c **** * \return None
 867:Generated_Source\PSoC4/ADC.c **** *
 868:Generated_Source\PSoC4/ADC.c **** * \sideeffect None
 869:Generated_Source\PSoC4/ADC.c **** *
 870:Generated_Source\PSoC4/ADC.c **** * <b>Code Snippet</b>
 871:Generated_Source\PSoC4/ADC.c **** *  \snippet main.c snippet_ADC_StopConvert
 872:Generated_Source\PSoC4/ADC.c **** *
 873:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 874:Generated_Source\PSoC4/ADC.c **** void ADC_StopConvert(void)
 875:Generated_Source\PSoC4/ADC.c **** {
 876:Generated_Source\PSoC4/ADC.c ****     if((ADC_SAR_SAMPLE_CTRL_REG  
 877:Generated_Source\PSoC4/ADC.c **** 		& ADC_SAR_SAMPLE_CTRL_DSI_TRIGGER_LEVEL_MSK) 
 878:Generated_Source\PSoC4/ADC.c **** 		== ADC_SAR_SAMPLE_CTRL_DSI_TRIGGER_LEVEL_MSK)
 879:Generated_Source\PSoC4/ADC.c **** 	{
 880:Generated_Source\PSoC4/ADC.c ****         ADC_SAR_SAMPLE_CTRL_REG &= ~ADC_SAR_SAMPLE_CTRL_CONTINUOUS_MSK;
 881:Generated_Source\PSoC4/ADC.c ****         
 882:Generated_Source\PSoC4/ADC.c ****         if((ADC_allConfigs[ADC_currentConfig].miscConfig 
 883:Generated_Source\PSoC4/ADC.c ****             & ADC_MISC_CONFIG_FILTER_PRESENT_MSK) 
 884:Generated_Source\PSoC4/ADC.c ****     	    == ADC_MISC_CONFIG_FILTER_PRESENT_MSK)
 885:Generated_Source\PSoC4/ADC.c ****         {
 886:Generated_Source\PSoC4/ADC.c ****             /* Re-synchronize the Filter if a filter is present */
 887:Generated_Source\PSoC4/ADC.c ****             ADC_Stop();
 888:Generated_Source\PSoC4/ADC.c ****             ADC_Start();
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccogxpIC.s 			page 17


 889:Generated_Source\PSoC4/ADC.c ****         }
 890:Generated_Source\PSoC4/ADC.c **** 	}
 891:Generated_Source\PSoC4/ADC.c ****     
 892:Generated_Source\PSoC4/ADC.c ****     return;
 893:Generated_Source\PSoC4/ADC.c **** }
 894:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 895:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetConvertMode
 896:Generated_Source\PSoC4/ADC.c **** ****************************************************************************//**
 897:Generated_Source\PSoC4/ADC.c **** *
 898:Generated_Source\PSoC4/ADC.c **** * \brief Sets the conversion mode to either Single-Shot or continuous. This 
 899:Generated_Source\PSoC4/ADC.c **** * function overrides the settings applied in the customizer. Changing 
 900:Generated_Source\PSoC4/ADC.c **** * configurations will restore the values set in the customizer.
 901:Generated_Source\PSoC4/ADC.c **** *
 902:Generated_Source\PSoC4/ADC.c **** * \param mode Sets the conversion mode. See table below for details.
 903:Generated_Source\PSoC4/ADC.c **** * | Options                          | Description                             |
 904:Generated_Source\PSoC4/ADC.c **** * | :------------------------------- | :-------------------------------------- |
 905:Generated_Source\PSoC4/ADC.c **** * | ADC_SINGLE_SHOT     | Calling the ADC_StartConvert() function after setting mode this will trig
 906:Generated_Source\PSoC4/ADC.c **** * | ADC_CONTINUOUS      | Calling the ADC_StartConvert() function after setting this mode trigger c
 907:Generated_Source\PSoC4/ADC.c **** *
 908:Generated_Source\PSoC4/ADC.c **** * \return None
 909:Generated_Source\PSoC4/ADC.c **** * 
 910:Generated_Source\PSoC4/ADC.c **** * \sideeffect None
 911:Generated_Source\PSoC4/ADC.c **** *
 912:Generated_Source\PSoC4/ADC.c **** * <b>Code Snippet</b>
 913:Generated_Source\PSoC4/ADC.c **** *  \snippet main.c snippet_ADC_SetConvertMode
 914:Generated_Source\PSoC4/ADC.c **** *
 915:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 916:Generated_Source\PSoC4/ADC.c **** void ADC_SetConvertMode(uint32 mode)
 917:Generated_Source\PSoC4/ADC.c **** {
 918:Generated_Source\PSoC4/ADC.c ****     if(ADC_CONTINUOUS == mode)
 919:Generated_Source\PSoC4/ADC.c ****     {
 920:Generated_Source\PSoC4/ADC.c ****         ADC_SAR_SAMPLE_CTRL_REG |= ADC_SAR_SAMPLE_CTRL_DSI_TRIGGER_LEVEL_MSK;       
 921:Generated_Source\PSoC4/ADC.c ****     }
 922:Generated_Source\PSoC4/ADC.c ****     else
 923:Generated_Source\PSoC4/ADC.c ****     {
 924:Generated_Source\PSoC4/ADC.c ****         ADC_SAR_SAMPLE_CTRL_REG &= ~ADC_SAR_SAMPLE_CTRL_DSI_TRIGGER_LEVEL_MSK;       
 925:Generated_Source\PSoC4/ADC.c ****     }
 926:Generated_Source\PSoC4/ADC.c **** }
 927:Generated_Source\PSoC4/ADC.c **** /* ****************************************************************************
 928:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_IRQ_Enable
 929:Generated_Source\PSoC4/ADC.c **** ****************************************************************************//*
 930:Generated_Source\PSoC4/ADC.c **** *
 931:Generated_Source\PSoC4/ADC.c **** * \brief Enables interrupts to occur at the end of a conversion. Global 
 932:Generated_Source\PSoC4/ADC.c **** * interrupts must also be enabled for the ADC interrupts to occur.
 933:Generated_Source\PSoC4/ADC.c **** *
 934:Generated_Source\PSoC4/ADC.c **** * \param None
 935:Generated_Source\PSoC4/ADC.c **** *
 936:Generated_Source\PSoC4/ADC.c **** * \return None
 937:Generated_Source\PSoC4/ADC.c **** *
 938:Generated_Source\PSoC4/ADC.c **** * \sideeffect None
 939:Generated_Source\PSoC4/ADC.c **** *
 940:Generated_Source\PSoC4/ADC.c **** * <b>Code Snippet</b>
 941:Generated_Source\PSoC4/ADC.c **** *  \snippet main.c snippet_ADC_IRQ_Enable
 942:Generated_Source\PSoC4/ADC.c **** *
 943:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 944:Generated_Source\PSoC4/ADC.c **** 
 945:Generated_Source\PSoC4/ADC.c **** 
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccogxpIC.s 			page 18


 946:Generated_Source\PSoC4/ADC.c **** /* ****************************************************************************
 947:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_IRQ_Disable
 948:Generated_Source\PSoC4/ADC.c **** ****************************************************************************//* 
 949:Generated_Source\PSoC4/ADC.c **** *
 950:Generated_Source\PSoC4/ADC.c **** * \brief Disables end of conversion interrupts. 
 951:Generated_Source\PSoC4/ADC.c **** *
 952:Generated_Source\PSoC4/ADC.c **** * \param None
 953:Generated_Source\PSoC4/ADC.c **** * 
 954:Generated_Source\PSoC4/ADC.c **** * \return None
 955:Generated_Source\PSoC4/ADC.c **** * 
 956:Generated_Source\PSoC4/ADC.c **** * \sideeffect None
 957:Generated_Source\PSoC4/ADC.c **** *
 958:Generated_Source\PSoC4/ADC.c **** * <b>Code Snippet</b>
 959:Generated_Source\PSoC4/ADC.c **** *  \snippet main.c snippet_ADC_IRQ_Disable
 960:Generated_Source\PSoC4/ADC.c **** *
 961:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 962:Generated_Source\PSoC4/ADC.c **** 
 963:Generated_Source\PSoC4/ADC.c **** 
 964:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 965:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetEosMask
 966:Generated_Source\PSoC4/ADC.c **** ****************************************************************************//**
 967:Generated_Source\PSoC4/ADC.c **** *
 968:Generated_Source\PSoC4/ADC.c **** * \brief Sets of clears the End of Scan (EOS) interrupt mask. 
 969:Generated_Source\PSoC4/ADC.c **** *
 970:Generated_Source\PSoC4/ADC.c **** * \param mask 1 to set the mask, 0 to clear the mask.
 971:Generated_Source\PSoC4/ADC.c **** *
 972:Generated_Source\PSoC4/ADC.c **** * \return None
 973:Generated_Source\PSoC4/ADC.c **** * 
 974:Generated_Source\PSoC4/ADC.c **** * \sideeffect All other bits in the INTR register are cleared by this function.
 975:Generated_Source\PSoC4/ADC.c **** *
 976:Generated_Source\PSoC4/ADC.c **** * <b>Code Snippet</b>
 977:Generated_Source\PSoC4/ADC.c **** *  \snippet main.c snippet_ADC_SetEosMask
 978:Generated_Source\PSoC4/ADC.c **** *
 979:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 980:Generated_Source\PSoC4/ADC.c **** void ADC_SetEosMask(uint32 mask)
 981:Generated_Source\PSoC4/ADC.c **** {
 982:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_INTR_MASK_REG = mask & ADC_EOS_MASK;
 983:Generated_Source\PSoC4/ADC.c ****     
 984:Generated_Source\PSoC4/ADC.c ****     return;
 985:Generated_Source\PSoC4/ADC.c **** }
 986:Generated_Source\PSoC4/ADC.c **** 
 987:Generated_Source\PSoC4/ADC.c **** /* ****************************************************************************
 988:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetChanMask
 989:Generated_Source\PSoC4/ADC.c **** ****************************************************************************//*
 990:Generated_Source\PSoC4/ADC.c **** *
 991:Generated_Source\PSoC4/ADC.c **** * \brief Sets enable/disable mask for all channels in current configuration.
 992:Generated_Source\PSoC4/ADC.c **** *
 993:Generated_Source\PSoC4/ADC.c **** *
 994:Generated_Source\PSoC4/ADC.c **** * \param enableMask
 995:Generated_Source\PSoC4/ADC.c **** *  Channel enable/disable mask.
 996:Generated_Source\PSoC4/ADC.c **** *
 997:Generated_Source\PSoC4/ADC.c **** * \sideeffect
 998:Generated_Source\PSoC4/ADC.c **** *  None.
 999:Generated_Source\PSoC4/ADC.c **** *
1000:Generated_Source\PSoC4/ADC.c **** * <b>Code Snippet</b>
1001:Generated_Source\PSoC4/ADC.c **** *  \snippet main.c snippet_ADC_SetChanMask
1002:Generated_Source\PSoC4/ADC.c **** *
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccogxpIC.s 			page 19


1003:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
1004:Generated_Source\PSoC4/ADC.c **** void ADC_SetChanMask(uint32 enableMask)
1005:Generated_Source\PSoC4/ADC.c **** {
1006:Generated_Source\PSoC4/ADC.c ****     uint32 chanCount = ADC_allConfigs[ADC_currentConfig].numChannels;
1007:Generated_Source\PSoC4/ADC.c ****     enableMask &= (uint32)((uint32)(1ul << chanCount) - 1ul);
1008:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_CHAN_EN_REG = enableMask;
1009:Generated_Source\PSoC4/ADC.c ****     return;
1010:Generated_Source\PSoC4/ADC.c **** }
1011:Generated_Source\PSoC4/ADC.c **** 
1012:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
1013:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_IsEndConversion
1014:Generated_Source\PSoC4/ADC.c **** ****************************************************************************//**
1015:Generated_Source\PSoC4/ADC.c **** *
1016:Generated_Source\PSoC4/ADC.c **** * \brief Immediately returns the status of the conversion or does not return 
1017:Generated_Source\PSoC4/ADC.c **** * (blocking) until the conversion completes, depending on the retMode parameter.
1018:Generated_Source\PSoC4/ADC.c **** *
1019:Generated_Source\PSoC4/ADC.c **** * \param retMode Check conversion return mode. See the following table for 
1020:Generated_Source\PSoC4/ADC.c **** * options.
1021:Generated_Source\PSoC4/ADC.c **** * | Options                              | Description                             |
1022:Generated_Source\PSoC4/ADC.c **** * | :-------------------------------     | :-------------------------------------- |
1023:Generated_Source\PSoC4/ADC.c **** * | ADC_RETURN_STATUS       | Immediately returns the conversion status for sequential channels. If
1024:Generated_Source\PSoC4/ADC.c **** * | ADC_WAIT_FOR_RESULT     | Does not return a result until the ADC conversion of all sequential c
1025:Generated_Source\PSoC4/ADC.c **** * | ADC_RETURN_STATUS_INJ   | Immediately returns the conversion status for the injection channel. 
1026:Generated_Source\PSoC4/ADC.c **** * | ADC_WAIT_FOR_RESULT_INJ | Does not return a result until the ADC completes injection channel co
1027:Generated_Source\PSoC4/ADC.c **** * 
1028:Generated_Source\PSoC4/ADC.c **** * \return uint8: If a nonzero value is returned, the last conversion is complete. 
1029:Generated_Source\PSoC4/ADC.c **** * If the returned value is zero, the ADC is still calculating the last result.
1030:Generated_Source\PSoC4/ADC.c **** *
1031:Generated_Source\PSoC4/ADC.c **** * \sideeffect This function reads the end of conversion status, and clears it afterward.
1032:Generated_Source\PSoC4/ADC.c **** * 
1033:Generated_Source\PSoC4/ADC.c **** * <b>Code Snippet</b>
1034:Generated_Source\PSoC4/ADC.c **** *  \snippet main.c snippet_ADC_IsEndConversion
1035:Generated_Source\PSoC4/ADC.c **** *
1036:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
1037:Generated_Source\PSoC4/ADC.c **** uint32 ADC_IsEndConversion(uint32 retMode)
1038:Generated_Source\PSoC4/ADC.c **** {
1039:Generated_Source\PSoC4/ADC.c ****     uint32 endOfConversion = 0u;
1040:Generated_Source\PSoC4/ADC.c ****     uint32 wdt = 0x3FFFFFFuL; /* Watchdog timer for blocking while loop */
1041:Generated_Source\PSoC4/ADC.c ****     if((ADC_RETURN_STATUS == retMode) || (ADC_WAIT_FOR_RESULT == retMode))
1042:Generated_Source\PSoC4/ADC.c ****     {
1043:Generated_Source\PSoC4/ADC.c ****         do
1044:Generated_Source\PSoC4/ADC.c ****         {
1045:Generated_Source\PSoC4/ADC.c ****             endOfConversion = ADC_SAR_INTR_REG & ADC_EOS_MASK;
1046:Generated_Source\PSoC4/ADC.c ****             wdt--;
1047:Generated_Source\PSoC4/ADC.c ****         }while(((0u == endOfConversion) 
1048:Generated_Source\PSoC4/ADC.c ****             && (((uint32) retMode & ADC_WAIT_FOR_RESULT) != 0u))
1049:Generated_Source\PSoC4/ADC.c ****             && (0uL != wdt));
1050:Generated_Source\PSoC4/ADC.c **** 
1051:Generated_Source\PSoC4/ADC.c ****         if(0u != endOfConversion)
1052:Generated_Source\PSoC4/ADC.c ****         {
1053:Generated_Source\PSoC4/ADC.c ****             /* Clear EOS bit */
1054:Generated_Source\PSoC4/ADC.c ****             ADC_SAR_INTR_REG = ADC_EOS_MASK;
1055:Generated_Source\PSoC4/ADC.c ****         }
1056:Generated_Source\PSoC4/ADC.c ****     }
1057:Generated_Source\PSoC4/ADC.c ****     
1058:Generated_Source\PSoC4/ADC.c ****     return endOfConversion;
1059:Generated_Source\PSoC4/ADC.c **** }
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccogxpIC.s 			page 20


1060:Generated_Source\PSoC4/ADC.c ****  
1061:Generated_Source\PSoC4/ADC.c **** /* ****************************************************************************
1062:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_IsChannelSigned(uint32 chan)
1063:Generated_Source\PSoC4/ADC.c **** ****************************************************************************//*
1064:Generated_Source\PSoC4/ADC.c **** *
1065:Generated_Source\PSoC4/ADC.c **** * Determines if the provided channel is in signed format. 
1066:Generated_Source\PSoC4/ADC.c **** *
1067:Generated_Source\PSoC4/ADC.c **** * \param chan The ADC channel to check. 
1068:Generated_Source\PSoC4/ADC.c **** *
1069:Generated_Source\PSoC4/ADC.c **** * \return None
1070:Generated_Source\PSoC4/ADC.c **** * 
1071:Generated_Source\PSoC4/ADC.c **** * \sideeffect None
1072:Generated_Source\PSoC4/ADC.c **** *
1073:Generated_Source\PSoC4/ADC.c **** *
1074:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
1075:Generated_Source\PSoC4/ADC.c **** static int32 ADC_IsChannelSigned(uint32 chan)
1076:Generated_Source\PSoC4/ADC.c **** {
  25              		.loc 1 1076 0
  26              		.cfi_startproc
  27              	.LVL0:
1077:Generated_Source\PSoC4/ADC.c ****     int32 isSigned = 0;
1078:Generated_Source\PSoC4/ADC.c ****     uint32 chanConfig;
1079:Generated_Source\PSoC4/ADC.c ****     
1080:Generated_Source\PSoC4/ADC.c ****     chanConfig = CY_GET_REG32((reg32 *)(ADC_SAR_CHAN_CONFIG_IND + (uint32)(chan << 2u)));
  28              		.loc 1 1080 0
  29 0000 0A4B     		ldr	r3, .L6
  30 0002 8000     		lsl	r0, r0, #2
  31              	.LVL1:
  32 0004 C018     		add	r0, r0, r3
  33 0006 3823     		mov	r3, #56
  34 0008 0949     		ldr	r1, .L6+4
1076:Generated_Source\PSoC4/ADC.c ****     int32 isSigned = 0;
  35              		.loc 1 1076 0
  36 000a 10B5     		push	{r4, lr}
  37              		.cfi_def_cfa_offset 8
  38              		.cfi_offset 4, -8
  39              		.cfi_offset 14, -4
  40              	.LBB4:
  41              	.LBB5:
1081:Generated_Source\PSoC4/ADC.c ****     /* If differential mode */
1082:Generated_Source\PSoC4/ADC.c ****     if(0u != (chanConfig & ADC_CHANNEL_CONFIG_DIFF_ALL_MSK))
1083:Generated_Source\PSoC4/ADC.c ****     {
1084:Generated_Source\PSoC4/ADC.c ****         /*If signed differential */
1085:Generated_Source\PSoC4/ADC.c ****         if((ADC_allConfigs[ADC_currentConfig].sampleCtrl 
  42              		.loc 1 1085 0
  43 000c 0968     		ldr	r1, [r1]
  44              	.LBE5:
  45              	.LBE4:
1080:Generated_Source\PSoC4/ADC.c ****     /* If differential mode */
  46              		.loc 1 1080 0
  47 000e 0468     		ldr	r4, [r0]
  48              	.LVL2:
  49              	.LBB9:
  50              	.LBB6:
  51              		.loc 1 1085 0
  52 0010 4B43     		mul	r3, r1
  53 0012 084A     		ldr	r2, .L6+8
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccogxpIC.s 			page 21


  54              	.LBE6:
  55              	.LBE9:
1082:Generated_Source\PSoC4/ADC.c ****     {
  56              		.loc 1 1082 0
  57 0014 0848     		ldr	r0, .L6+12
  58              	.LBB10:
  59              	.LBB7:
  60              		.loc 1 1085 0
  61 0016 D318     		add	r3, r2, r3
  62              	.LBE7:
  63              	.LBE10:
1082:Generated_Source\PSoC4/ADC.c ****     {
  64              		.loc 1 1082 0
  65 0018 0442     		tst	r4, r0
  66 001a 02D0     		beq	.L2
  67              	.LVL3:
  68              	.LBB11:
  69              	.LBB8:
  70              		.loc 1 1085 0
  71 001c D868     		ldr	r0, [r3, #12]
  72 001e 0007     		lsl	r0, r0, #28
  73 0020 01E0     		b	.L4
  74              	.LVL4:
  75              	.L2:
  76              	.LBE8:
  77              	.LBE11:
1086:Generated_Source\PSoC4/ADC.c ****             & ADC_SAR_SAMPLE_CTRL_DIFFERENTIAL_SIGNED_MSK) != 0u)
1087:Generated_Source\PSoC4/ADC.c ****         {
1088:Generated_Source\PSoC4/ADC.c ****             isSigned = 1;
1089:Generated_Source\PSoC4/ADC.c ****         }
1090:Generated_Source\PSoC4/ADC.c ****     }
1091:Generated_Source\PSoC4/ADC.c ****     else
1092:Generated_Source\PSoC4/ADC.c ****     {
1093:Generated_Source\PSoC4/ADC.c ****         if((ADC_allConfigs[ADC_currentConfig].sampleCtrl
  78              		.loc 1 1093 0
  79 0022 D868     		ldr	r0, [r3, #12]
  80 0024 4007     		lsl	r0, r0, #29
  81              	.L4:
  82 0026 C00F     		lsr	r0, r0, #31
  83              	.LVL5:
1094:Generated_Source\PSoC4/ADC.c ****             & ADC_SAR_SAMPLE_CTRL_SINGLE_ENDED_SIGNED_MSK) != 0u)
1095:Generated_Source\PSoC4/ADC.c ****         {
1096:Generated_Source\PSoC4/ADC.c ****             isSigned = 1;
1097:Generated_Source\PSoC4/ADC.c ****         }
1098:Generated_Source\PSoC4/ADC.c ****     }
1099:Generated_Source\PSoC4/ADC.c ****     return isSigned;
1100:Generated_Source\PSoC4/ADC.c **** }
  84              		.loc 1 1100 0
  85              		@ sp needed
  86              	.LVL6:
  87 0028 10BD     		pop	{r4, pc}
  88              	.L7:
  89 002a C046     		.align	2
  90              	.L6:
  91 002c 80003A40 		.word	1077543040
  92 0030 00000000 		.word	.LANCHOR0
  93 0034 00000000 		.word	ADC_allConfigs
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccogxpIC.s 			page 22


  94 0038 00010001 		.word	16777472
  95              		.cfi_endproc
  96              	.LFE12:
  97              		.size	ADC_IsChannelSigned, .-ADC_IsChannelSigned
  98              		.section	.text.ADC_Stop,"ax",%progbits
  99              		.align	1
 100              		.global	ADC_Stop
 101              		.code	16
 102              		.thumb_func
 103              		.type	ADC_Stop, %function
 104              	ADC_Stop:
 105              	.LFB3:
 636:Generated_Source\PSoC4/ADC.c ****     #if(0u != ADC_ANY_CONFIG_USES_FILTER)	
 106              		.loc 1 636 0
 107              		.cfi_startproc
 647:Generated_Source\PSoC4/ADC.c ****     return;
 108              		.loc 1 647 0
 109 0000 024A     		ldr	r2, .L9
 649:Generated_Source\PSoC4/ADC.c **** 
 110              		.loc 1 649 0
 111              		@ sp needed
 647:Generated_Source\PSoC4/ADC.c ****     return;
 112              		.loc 1 647 0
 113 0002 1368     		ldr	r3, [r2]
 114 0004 5B00     		lsl	r3, r3, #1
 115 0006 5B08     		lsr	r3, r3, #1
 116 0008 1360     		str	r3, [r2]
 649:Generated_Source\PSoC4/ADC.c **** 
 117              		.loc 1 649 0
 118 000a 7047     		bx	lr
 119              	.L10:
 120              		.align	2
 121              	.L9:
 122 000c 00003A40 		.word	1077542912
 123              		.cfi_endproc
 124              	.LFE3:
 125              		.size	ADC_Stop, .-ADC_Stop
 126              		.section	.text.ADC_InitConfig,"ax",%progbits
 127              		.align	1
 128              		.global	ADC_InitConfig
 129              		.code	16
 130              		.thumb_func
 131              		.type	ADC_InitConfig, %function
 132              	ADC_InitConfig:
 133              	.LFB4:
 668:Generated_Source\PSoC4/ADC.c **** 	uint32 chNum;
 134              		.loc 1 668 0
 135              		.cfi_startproc
 136              	.LVL7:
 137 0000 38B5     		push	{r3, r4, r5, lr}
 138              		.cfi_def_cfa_offset 16
 139              		.cfi_offset 3, -16
 140              		.cfi_offset 4, -12
 141              		.cfi_offset 5, -8
 142              		.cfi_offset 14, -4
 668:Generated_Source\PSoC4/ADC.c **** 	uint32 chNum;
 143              		.loc 1 668 0
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccogxpIC.s 			page 23


 144 0002 041C     		mov	r4, r0
 681:Generated_Source\PSoC4/ADC.c ****         
 145              		.loc 1 681 0
 146 0004 0021     		mov	r1, #0
 147 0006 808E     		ldrh	r0, [r0, #52]
 148              	.LVL8:
 149 0008 FFF7FEFF 		bl	ADC_intSarClock_SetFractionalDividerRegister
 150              	.LVL9:
 709:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_INTR_MASK_REG = 0u;	
 151              		.loc 1 709 0
 152 000c 0021     		mov	r1, #0
 688:Generated_Source\PSoC4/ADC.c ****     ? ADC_SAR_CTRL_BOOSTPUMP_EN_MSK : 0u);
 153              		.loc 1 688 0
 154 000e 254B     		ldr	r3, .L23
 155 0010 A268     		ldr	r2, [r4, #8]
 156 0012 1B68     		ldr	r3, [r3]
 157 0014 DB0F     		lsr	r3, r3, #31
 158 0016 1B05     		lsl	r3, r3, #20
 159 0018 1343     		orr	r3, r2
 685:Generated_Source\PSoC4/ADC.c ****    
 160              		.loc 1 685 0
 161 001a 234A     		ldr	r2, .L23+4
 162 001c 1360     		str	r3, [r2]
 691:Generated_Source\PSoC4/ADC.c **** 	ADC_SAR_RANGE_THRES_REG = config->rangeThres;	
 163              		.loc 1 691 0
 164 001e E268     		ldr	r2, [r4, #12]
 165 0020 224B     		ldr	r3, .L23+8
 166 0022 1A60     		str	r2, [r3]
 692:Generated_Source\PSoC4/ADC.c **** 	ADC_SAR_RANGE_COND_REG = config->rangeCond;
 167              		.loc 1 692 0
 168 0024 A269     		ldr	r2, [r4, #24]
 169 0026 224B     		ldr	r3, .L23+12
 170 0028 1A60     		str	r2, [r3]
 693:Generated_Source\PSoC4/ADC.c **** 	ADC_SAR_SAMPLE_TIME01_REG = config->sampleTime01;
 171              		.loc 1 693 0
 172 002a E269     		ldr	r2, [r4, #28]
 173 002c 214B     		ldr	r3, .L23+16
 174 002e 1A60     		str	r2, [r3]
 694:Generated_Source\PSoC4/ADC.c **** 	ADC_SAR_SAMPLE_TIME23_REG = config->sampleTime23;
 175              		.loc 1 694 0
 176 0030 2269     		ldr	r2, [r4, #16]
 177 0032 214B     		ldr	r3, .L23+20
 178 0034 1A60     		str	r2, [r3]
 695:Generated_Source\PSoC4/ADC.c ****     
 179              		.loc 1 695 0
 180 0036 6269     		ldr	r2, [r4, #20]
 181 0038 204B     		ldr	r3, .L23+24
 182 003a 1A60     		str	r2, [r3]
 709:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_INTR_MASK_REG = 0u;	
 183              		.loc 1 709 0
 184 003c 204A     		ldr	r2, .L23+28
 710:Generated_Source\PSoC4/ADC.c **** 	ADC_SAR_SATURATE_INTR_MASK_REG = config->satIntMask;
 185              		.loc 1 710 0
 186 003e 214B     		ldr	r3, .L23+32
 709:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_INTR_MASK_REG = 0u;	
 187              		.loc 1 709 0
 188 0040 1160     		str	r1, [r2]
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccogxpIC.s 			page 24


 710:Generated_Source\PSoC4/ADC.c **** 	ADC_SAR_SATURATE_INTR_MASK_REG = config->satIntMask;
 189              		.loc 1 710 0
 190 0042 1960     		str	r1, [r3]
 711:Generated_Source\PSoC4/ADC.c **** 	ADC_SAR_RANGE_INTR_MASK_REG = config->rangeIntMask;
 191              		.loc 1 711 0
 192 0044 A16A     		ldr	r1, [r4, #40]
 193 0046 1160     		str	r1, [r2]
 713:Generated_Source\PSoC4/ADC.c ****     
 194              		.loc 1 713 0
 195 0048 0121     		mov	r1, #1
 712:Generated_Source\PSoC4/ADC.c **** 	ADC_SAR_INTR_MASK_REG = ADC_EOS_MASK;
 196              		.loc 1 712 0
 197 004a 626A     		ldr	r2, [r4, #36]
 198 004c 1A60     		str	r2, [r3]
 713:Generated_Source\PSoC4/ADC.c ****     
 199              		.loc 1 713 0
 200 004e 1E4B     		ldr	r3, .L23+36
 201 0050 1960     		str	r1, [r3]
 717:Generated_Source\PSoC4/ADC.c **** 	if(((config->ctrl & ADC__SAR_CTRL_VREF_BYP_AND_SEL_MSK) 
 202              		.loc 1 717 0
 203 0052 1E4B     		ldr	r3, .L23+40
 720:Generated_Source\PSoC4/ADC.c **** 	    == ADC__INTERNALVREF))
 204              		.loc 1 720 0
 205 0054 A568     		ldr	r5, [r4, #8]
 717:Generated_Source\PSoC4/ADC.c **** 	if(((config->ctrl & ADC__SAR_CTRL_VREF_BYP_AND_SEL_MSK) 
 206              		.loc 1 717 0
 207 0056 1A68     		ldr	r2, [r3]
 208              	.LVL10:
 209 0058 181C     		mov	r0, r3
 720:Generated_Source\PSoC4/ADC.c **** 	    == ADC__INTERNALVREF))
 210              		.loc 1 720 0
 211 005a B023     		mov	r3, #176
 212 005c 1D42     		tst	r5, r3
 213 005e 03D1     		bne	.L13
 723:Generated_Source\PSoC4/ADC.c **** 		tmpRegVal |= ADC_SAR_DFT_CTRL_DLY_INC_MSK;
 214              		.loc 1 723 0
 215 0060 1B4B     		ldr	r3, .L23+44
 216 0062 1340     		and	r3, r2
 217              	.LVL11:
 724:Generated_Source\PSoC4/ADC.c **** 	}
 218              		.loc 1 724 0
 219 0064 0B43     		orr	r3, r1
 220              	.LVL12:
 221 0066 03E0     		b	.L14
 222              	.LVL13:
 223              	.L13:
 729:Generated_Source\PSoC4/ADC.c **** 	}	
 224              		.loc 1 729 0
 225 0068 8023     		mov	r3, #128
 226 006a 8A43     		bic	r2, r1
 227              	.LVL14:
 228 006c 9B05     		lsl	r3, r3, #22
 229 006e 1343     		orr	r3, r2
 230              	.LVL15:
 231              	.L14:
 733:Generated_Source\PSoC4/ADC.c ****     {
 232              		.loc 1 733 0
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccogxpIC.s 			page 25


 233 0070 0021     		mov	r1, #0
 731:Generated_Source\PSoC4/ADC.c **** 	
 234              		.loc 1 731 0
 235 0072 0360     		str	r3, [r0]
 236              	.LVL16:
 237              	.L15:
 733:Generated_Source\PSoC4/ADC.c ****     {
 238              		.loc 1 733 0 discriminator 1
 239 0074 6368     		ldr	r3, [r4, #4]
 240              	.LVL17:
 241 0076 9942     		cmp	r1, r3
 242 0078 13D2     		bcs	.L22
 735:Generated_Source\PSoC4/ADC.c **** 		& ADC_CHANNEL_CONFIG_MASK);
 243              		.loc 1 735 0
 244 007a 2368     		ldr	r3, [r4]
 245 007c CA18     		add	r2, r1, r3
 246 007e 154B     		ldr	r3, .L23+48
 247 0080 9200     		lsl	r2, r2, #2
 248 0082 D058     		ldr	r0, [r2, r3]
 249 0084 144B     		ldr	r3, .L23+52
 250 0086 0340     		and	r3, r0
 251              	.LVL18:
 739:Generated_Source\PSoC4/ADC.c ****             /*Non-paired differential channels set NEG_ADDR_EN and clear DIFFERENTIAL_EN */
 252              		.loc 1 739 0
 253 0088 1448     		ldr	r0, .L23+56
 254 008a 1258     		ldr	r2, [r2, r0]
 255 008c 1343     		orr	r3, r2
 256              	.LVL19:
 741:Generated_Source\PSoC4/ADC.c ****             {
 257              		.loc 1 741 0
 258 008e D201     		lsl	r2, r2, #7
 259 0090 01D5     		bpl	.L16
 743:Generated_Source\PSoC4/ADC.c ****             }
 260              		.loc 1 743 0
 261 0092 134A     		ldr	r2, .L23+60
 262 0094 1340     		and	r3, r2
 263              	.LVL20:
 264              	.L16:
 747:Generated_Source\PSoC4/ADC.c **** 	}
 265              		.loc 1 747 0 discriminator 2
 266 0096 1348     		ldr	r0, .L23+64
 267 0098 8A00     		lsl	r2, r1, #2
 268 009a 1218     		add	r2, r2, r0
 269 009c 1360     		str	r3, [r2]
 733:Generated_Source\PSoC4/ADC.c ****     {
 270              		.loc 1 733 0 discriminator 2
 271 009e 0131     		add	r1, r1, #1
 272              	.LVL21:
 273 00a0 E8E7     		b	.L15
 274              	.LVL22:
 275              	.L22:
 751:Generated_Source\PSoC4/ADC.c **** 
 276              		.loc 1 751 0
 277              		@ sp needed
 278              	.LVL23:
 279 00a2 38BD     		pop	{r3, r4, r5, pc}
 280              	.L24:
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccogxpIC.s 			page 26


 281              		.align	2
 282              	.L23:
 283 00a4 80033A40 		.word	1077543808
 284 00a8 00003A40 		.word	1077542912
 285 00ac 04003A40 		.word	1077542916
 286 00b0 18003A40 		.word	1077542936
 287 00b4 1C003A40 		.word	1077542940
 288 00b8 10003A40 		.word	1077542928
 289 00bc 14003A40 		.word	1077542932
 290 00c0 28023A40 		.word	1077543464
 291 00c4 38023A40 		.word	1077543480
 292 00c8 18023A40 		.word	1077543448
 293 00cc 30003A40 		.word	1077542960
 294 00d0 FFFFFFDF 		.word	-536870913
 295 00d4 00000000 		.word	.LANCHOR1
 296 00d8 00370080 		.word	-2147469568
 297 00dc 00000000 		.word	ADC_InputsPlacement
 298 00e0 FFFEFFFF 		.word	-257
 299 00e4 80003A40 		.word	1077543040
 300              		.cfi_endproc
 301              	.LFE4:
 302              		.size	ADC_InitConfig, .-ADC_InitConfig
 303              		.section	.text.ADC_StartConvert,"ax",%progbits
 304              		.align	1
 305              		.global	ADC_StartConvert
 306              		.code	16
 307              		.thumb_func
 308              		.type	ADC_StartConvert, %function
 309              	ADC_StartConvert:
 310              	.LFB6:
 834:Generated_Source\PSoC4/ADC.c ****     /* CDT 243358 */
 311              		.loc 1 834 0
 312              		.cfi_startproc
 842:Generated_Source\PSoC4/ADC.c **** 		& ADC_SAR_SAMPLE_CTRL_DSI_TRIGGER_LEVEL_MSK) 
 313              		.loc 1 842 0
 314 0000 064B     		ldr	r3, .L29
 315 0002 1A68     		ldr	r2, [r3]
 316 0004 5203     		lsl	r2, r2, #13
 317 0006 04D5     		bpl	.L26
 318              	.LBB14:
 846:Generated_Source\PSoC4/ADC.c **** 	}
 319              		.loc 1 846 0
 320 0008 8021     		mov	r1, #128
 321 000a 1A68     		ldr	r2, [r3]
 322 000c 4902     		lsl	r1, r1, #9
 323 000e 0A43     		orr	r2, r1
 324 0010 01E0     		b	.L28
 325              	.L26:
 326              	.LBE14:
 850:Generated_Source\PSoC4/ADC.c **** 	}
 327              		.loc 1 850 0
 328 0012 0122     		mov	r2, #1
 329 0014 024B     		ldr	r3, .L29+4
 330              	.L28:
 331 0016 1A60     		str	r2, [r3]
 854:Generated_Source\PSoC4/ADC.c **** 
 332              		.loc 1 854 0
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccogxpIC.s 			page 27


 333              		@ sp needed
 334 0018 7047     		bx	lr
 335              	.L30:
 336 001a C046     		.align	2
 337              	.L29:
 338 001c 04003A40 		.word	1077542916
 339 0020 24003A40 		.word	1077542948
 340              		.cfi_endproc
 341              	.LFE6:
 342              		.size	ADC_StartConvert, .-ADC_StartConvert
 343              		.section	.text.ADC_SetConvertMode,"ax",%progbits
 344              		.align	1
 345              		.global	ADC_SetConvertMode
 346              		.code	16
 347              		.thumb_func
 348              		.type	ADC_SetConvertMode, %function
 349              	ADC_SetConvertMode:
 350              	.LFB8:
 917:Generated_Source\PSoC4/ADC.c ****     if(ADC_CONTINUOUS == mode)
 351              		.loc 1 917 0
 352              		.cfi_startproc
 353              	.LVL24:
 354 0000 064B     		ldr	r3, .L35
 918:Generated_Source\PSoC4/ADC.c ****     {
 355              		.loc 1 918 0
 356 0002 0128     		cmp	r0, #1
 357 0004 04D1     		bne	.L32
 920:Generated_Source\PSoC4/ADC.c ****     }
 358              		.loc 1 920 0
 359 0006 8021     		mov	r1, #128
 360 0008 1A68     		ldr	r2, [r3]
 361 000a C902     		lsl	r1, r1, #11
 362 000c 0A43     		orr	r2, r1
 363 000e 02E0     		b	.L34
 364              	.L32:
 924:Generated_Source\PSoC4/ADC.c ****     }
 365              		.loc 1 924 0
 366 0010 1968     		ldr	r1, [r3]
 367 0012 034A     		ldr	r2, .L35+4
 368 0014 0A40     		and	r2, r1
 369              	.L34:
 370 0016 1A60     		str	r2, [r3]
 926:Generated_Source\PSoC4/ADC.c **** /* ****************************************************************************
 371              		.loc 1 926 0
 372              		@ sp needed
 373 0018 7047     		bx	lr
 374              	.L36:
 375 001a C046     		.align	2
 376              	.L35:
 377 001c 04003A40 		.word	1077542916
 378 0020 FFFFFBFF 		.word	-262145
 379              		.cfi_endproc
 380              	.LFE8:
 381              		.size	ADC_SetConvertMode, .-ADC_SetConvertMode
 382              		.section	.text.ADC_SetEosMask,"ax",%progbits
 383              		.align	1
 384              		.global	ADC_SetEosMask
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccogxpIC.s 			page 28


 385              		.code	16
 386              		.thumb_func
 387              		.type	ADC_SetEosMask, %function
 388              	ADC_SetEosMask:
 389              	.LFB9:
 981:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_INTR_MASK_REG = mask & ADC_EOS_MASK;
 390              		.loc 1 981 0
 391              		.cfi_startproc
 392              	.LVL25:
 982:Generated_Source\PSoC4/ADC.c ****     
 393              		.loc 1 982 0
 394 0000 0123     		mov	r3, #1
 395 0002 1840     		and	r0, r3
 396              	.LVL26:
 397 0004 014B     		ldr	r3, .L38
 985:Generated_Source\PSoC4/ADC.c **** 
 398              		.loc 1 985 0
 399              		@ sp needed
 982:Generated_Source\PSoC4/ADC.c ****     
 400              		.loc 1 982 0
 401 0006 1860     		str	r0, [r3]
 985:Generated_Source\PSoC4/ADC.c **** 
 402              		.loc 1 985 0
 403 0008 7047     		bx	lr
 404              	.L39:
 405 000a C046     		.align	2
 406              	.L38:
 407 000c 18023A40 		.word	1077543448
 408              		.cfi_endproc
 409              	.LFE9:
 410              		.size	ADC_SetEosMask, .-ADC_SetEosMask
 411              		.section	.text.ADC_SetChanMask,"ax",%progbits
 412              		.align	1
 413              		.global	ADC_SetChanMask
 414              		.code	16
 415              		.thumb_func
 416              		.type	ADC_SetChanMask, %function
 417              	ADC_SetChanMask:
 418              	.LFB10:
1005:Generated_Source\PSoC4/ADC.c ****     uint32 chanCount = ADC_allConfigs[ADC_currentConfig].numChannels;
 419              		.loc 1 1005 0
 420              		.cfi_startproc
 421              	.LVL27:
1006:Generated_Source\PSoC4/ADC.c ****     enableMask &= (uint32)((uint32)(1ul << chanCount) - 1ul);
 422              		.loc 1 1006 0
 423 0000 064B     		ldr	r3, .L41
1010:Generated_Source\PSoC4/ADC.c **** 
 424              		.loc 1 1010 0
 425              		@ sp needed
1006:Generated_Source\PSoC4/ADC.c ****     enableMask &= (uint32)((uint32)(1ul << chanCount) - 1ul);
 426              		.loc 1 1006 0
 427 0002 1A68     		ldr	r2, [r3]
 428 0004 3823     		mov	r3, #56
 429 0006 5343     		mul	r3, r2
 430 0008 054A     		ldr	r2, .L41+4
 431 000a D318     		add	r3, r2, r3
1007:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_CHAN_EN_REG = enableMask;
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccogxpIC.s 			page 29


 432              		.loc 1 1007 0
 433 000c 5A68     		ldr	r2, [r3, #4]
 434 000e 0123     		mov	r3, #1
 435 0010 9340     		lsl	r3, r3, r2
 436 0012 013B     		sub	r3, r3, #1
 437 0014 1840     		and	r0, r3
 438              	.LVL28:
1008:Generated_Source\PSoC4/ADC.c ****     return;
 439              		.loc 1 1008 0
 440 0016 034B     		ldr	r3, .L41+8
 441 0018 1860     		str	r0, [r3]
 442              	.LVL29:
1010:Generated_Source\PSoC4/ADC.c **** 
 443              		.loc 1 1010 0
 444 001a 7047     		bx	lr
 445              	.L42:
 446              		.align	2
 447              	.L41:
 448 001c 00000000 		.word	.LANCHOR0
 449 0020 00000000 		.word	ADC_allConfigs
 450 0024 20003A40 		.word	1077542944
 451              		.cfi_endproc
 452              	.LFE10:
 453              		.size	ADC_SetChanMask, .-ADC_SetChanMask
 454              		.section	.text.ADC_IsEndConversion,"ax",%progbits
 455              		.align	1
 456              		.global	ADC_IsEndConversion
 457              		.code	16
 458              		.thumb_func
 459              		.type	ADC_IsEndConversion, %function
 460              	ADC_IsEndConversion:
 461              	.LFB11:
1038:Generated_Source\PSoC4/ADC.c ****     uint32 endOfConversion = 0u;
 462              		.loc 1 1038 0
 463              		.cfi_startproc
 464              	.LVL30:
1041:Generated_Source\PSoC4/ADC.c ****     {
 465              		.loc 1 1041 0
 466 0000 431E     		sub	r3, r0, #1
1038:Generated_Source\PSoC4/ADC.c ****     uint32 endOfConversion = 0u;
 467              		.loc 1 1038 0
 468 0002 30B5     		push	{r4, r5, lr}
 469              		.cfi_def_cfa_offset 12
 470              		.cfi_offset 4, -12
 471              		.cfi_offset 5, -8
 472              		.cfi_offset 14, -4
1038:Generated_Source\PSoC4/ADC.c ****     uint32 endOfConversion = 0u;
 473              		.loc 1 1038 0
 474 0004 051C     		mov	r5, r0
1039:Generated_Source\PSoC4/ADC.c ****     uint32 wdt = 0x3FFFFFFuL; /* Watchdog timer for blocking while loop */
 475              		.loc 1 1039 0
 476 0006 0020     		mov	r0, #0
 477              	.LVL31:
1041:Generated_Source\PSoC4/ADC.c ****     {
 478              		.loc 1 1041 0
 479 0008 012B     		cmp	r3, #1
 480 000a 0ED8     		bhi	.L49
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccogxpIC.s 			page 30


 481 000c 0749     		ldr	r1, .L52
 482              	.LVL32:
 483              	.L46:
1045:Generated_Source\PSoC4/ADC.c ****             wdt--;
 484              		.loc 1 1045 0 discriminator 1
 485 000e 0122     		mov	r2, #1
 486 0010 074C     		ldr	r4, .L52+4
 487 0012 2368     		ldr	r3, [r4]
 488 0014 1340     		and	r3, r2
 489 0016 181E     		sub	r0, r3, #0
 490              	.LVL33:
1049:Generated_Source\PSoC4/ADC.c **** 
 491              		.loc 1 1049 0 discriminator 1
 492 0018 05D1     		bne	.L45
1048:Generated_Source\PSoC4/ADC.c ****             && (0uL != wdt));
 493              		.loc 1 1048 0
 494 001a AB07     		lsl	r3, r5, #30
 495 001c 05D5     		bpl	.L49
 496 001e 0139     		sub	r1, r1, #1
 497              	.LVL34:
1049:Generated_Source\PSoC4/ADC.c **** 
 498              		.loc 1 1049 0
 499 0020 0029     		cmp	r1, #0
 500 0022 F4D1     		bne	.L46
 501 0024 01E0     		b	.L49
 502              	.LVL35:
 503              	.L45:
1054:Generated_Source\PSoC4/ADC.c ****         }
 504              		.loc 1 1054 0
 505 0026 101C     		mov	r0, r2
 506              	.LVL36:
 507 0028 2260     		str	r2, [r4]
 508              	.LVL37:
 509              	.L49:
1059:Generated_Source\PSoC4/ADC.c ****  
 510              		.loc 1 1059 0
 511              		@ sp needed
 512              	.LVL38:
 513 002a 30BD     		pop	{r4, r5, pc}
 514              	.L53:
 515              		.align	2
 516              	.L52:
 517 002c FFFFFF03 		.word	67108863
 518 0030 10023A40 		.word	1077543440
 519              		.cfi_endproc
 520              	.LFE11:
 521              		.size	ADC_IsEndConversion, .-ADC_IsEndConversion
 522              		.section	.text.ADC_GetResult16,"ax",%progbits
 523              		.align	1
 524              		.global	ADC_GetResult16
 525              		.code	16
 526              		.thumb_func
 527              		.type	ADC_GetResult16, %function
 528              	ADC_GetResult16:
 529              	.LFB13:
1101:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
1102:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_GetResult16
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccogxpIC.s 			page 31


1103:Generated_Source\PSoC4/ADC.c **** ****************************************************************************//**
1104:Generated_Source\PSoC4/ADC.c **** *
1105:Generated_Source\PSoC4/ADC.c **** * \brief Gets the data available in the channel result data register
1106:Generated_Source\PSoC4/ADC.c **** *
1107:Generated_Source\PSoC4/ADC.c **** * \param chan The ADC channel to read the result from. The first 
1108:Generated_Source\PSoC4/ADC.c **** * channel is 0 and the injection channel if enabled is the number of valid 
1109:Generated_Source\PSoC4/ADC.c **** * channels.
1110:Generated_Source\PSoC4/ADC.c **** *
1111:Generated_Source\PSoC4/ADC.c **** * \return Returns converted data as a signed 16-bit integer.
1112:Generated_Source\PSoC4/ADC.c **** * 
1113:Generated_Source\PSoC4/ADC.c **** * \sideeffect None
1114:Generated_Source\PSoC4/ADC.c **** * 
1115:Generated_Source\PSoC4/ADC.c **** * <b>Code Snippet</b>
1116:Generated_Source\PSoC4/ADC.c **** *  \snippet main.c snippet_ADC_GetResult16
1117:Generated_Source\PSoC4/ADC.c **** *
1118:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
1119:Generated_Source\PSoC4/ADC.c **** int16 ADC_GetResult16(uint32 chan)
1120:Generated_Source\PSoC4/ADC.c **** {
 530              		.loc 1 1120 0
 531              		.cfi_startproc
 532              	.LVL39:
1121:Generated_Source\PSoC4/ADC.c ****     uint32 adcResult;
1122:Generated_Source\PSoC4/ADC.c ****     
1123:Generated_Source\PSoC4/ADC.c ****     /* Halt CPU in debug mode if channel is out of valid range */
1124:Generated_Source\PSoC4/ADC.c ****     CYASSERT(chan < ADC_allConfigs[ADC_currentConfig].numChannels);
1125:Generated_Source\PSoC4/ADC.c **** 
1126:Generated_Source\PSoC4/ADC.c ****     if(ADC_allConfigs[ADC_currentConfig].numChannels > chan)
 533              		.loc 1 1126 0
 534 0000 084B     		ldr	r3, .L57
 535 0002 1A68     		ldr	r2, [r3]
 536 0004 3823     		mov	r3, #56
 537 0006 5343     		mul	r3, r2
 538 0008 074A     		ldr	r2, .L57+4
 539 000a D318     		add	r3, r2, r3
 540 000c 5A68     		ldr	r2, [r3, #4]
1127:Generated_Source\PSoC4/ADC.c ****     {   
1128:Generated_Source\PSoC4/ADC.c ****         adcResult = CY_GET_REG32((reg32 *)(ADC_SAR_CHAN_RESULT_IND + (uint32)(chan << 2u))) &
1129:Generated_Source\PSoC4/ADC.c ****             ADC_RESULT_MASK; 
1130:Generated_Source\PSoC4/ADC.c ****     }
1131:Generated_Source\PSoC4/ADC.c ****     else
1132:Generated_Source\PSoC4/ADC.c ****     {
1133:Generated_Source\PSoC4/ADC.c **** 		adcResult = 0u;
 541              		.loc 1 1133 0
 542 000e 0023     		mov	r3, #0
1126:Generated_Source\PSoC4/ADC.c ****     {   
 543              		.loc 1 1126 0
 544 0010 8242     		cmp	r2, r0
 545 0012 04D9     		bls	.L55
1128:Generated_Source\PSoC4/ADC.c ****             ADC_RESULT_MASK; 
 546              		.loc 1 1128 0
 547 0014 054B     		ldr	r3, .L57+8
 548 0016 8000     		lsl	r0, r0, #2
 549              	.LVL40:
 550 0018 C018     		add	r0, r0, r3
 551 001a 0368     		ldr	r3, [r0]
 552 001c 9BB2     		uxth	r3, r3
 553              	.LVL41:
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccogxpIC.s 			page 32


 554              	.L55:
1134:Generated_Source\PSoC4/ADC.c ****     }
1135:Generated_Source\PSoC4/ADC.c ****     
1136:Generated_Source\PSoC4/ADC.c ****     return (int16) adcResult;
 555              		.loc 1 1136 0
 556 001e 18B2     		sxth	r0, r3
1137:Generated_Source\PSoC4/ADC.c **** }
 557              		.loc 1 1137 0
 558              		@ sp needed
 559 0020 7047     		bx	lr
 560              	.L58:
 561 0022 C046     		.align	2
 562              	.L57:
 563 0024 00000000 		.word	.LANCHOR0
 564 0028 00000000 		.word	ADC_allConfigs
 565 002c 80013A40 		.word	1077543296
 566              		.cfi_endproc
 567              	.LFE13:
 568              		.size	ADC_GetResult16, .-ADC_GetResult16
 569              		.section	.text.ADC_GetResult32,"ax",%progbits
 570              		.align	1
 571              		.global	ADC_GetResult32
 572              		.code	16
 573              		.thumb_func
 574              		.type	ADC_GetResult32, %function
 575              	ADC_GetResult32:
 576              	.LFB14:
1138:Generated_Source\PSoC4/ADC.c **** 
1139:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
1140:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_GetResult32
1141:Generated_Source\PSoC4/ADC.c **** ****************************************************************************//**
1142:Generated_Source\PSoC4/ADC.c **** *
1143:Generated_Source\PSoC4/ADC.c **** * \brief Gets the data available in the channel result data register. 
1144:Generated_Source\PSoC4/ADC.c **** *
1145:Generated_Source\PSoC4/ADC.c **** * \param chan The ADC channel to read the result from. The first 
1146:Generated_Source\PSoC4/ADC.c **** * channel is 0 and the injection channel if enabled is the number of valid 
1147:Generated_Source\PSoC4/ADC.c **** * channels.
1148:Generated_Source\PSoC4/ADC.c **** *
1149:Generated_Source\PSoC4/ADC.c **** * \return Returns converted data as a signed 32-bit integer.
1150:Generated_Source\PSoC4/ADC.c **** * 
1151:Generated_Source\PSoC4/ADC.c **** * \sideeffect None
1152:Generated_Source\PSoC4/ADC.c **** *
1153:Generated_Source\PSoC4/ADC.c **** * <b>Code Snippet</b>
1154:Generated_Source\PSoC4/ADC.c **** *  \snippet main.c snippet_ADC_GetResult32
1155:Generated_Source\PSoC4/ADC.c **** *
1156:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
1157:Generated_Source\PSoC4/ADC.c **** int32 ADC_GetResult32(uint32 chan)
1158:Generated_Source\PSoC4/ADC.c **** {
 577              		.loc 1 1158 0
 578              		.cfi_startproc
 579              	.LVL42:
1159:Generated_Source\PSoC4/ADC.c ****     uint32 adcResult;
1160:Generated_Source\PSoC4/ADC.c ****     int16 adcResult16;
1161:Generated_Source\PSoC4/ADC.c ****     int32 finalResult;
1162:Generated_Source\PSoC4/ADC.c ****     
1163:Generated_Source\PSoC4/ADC.c ****     /* Halt CPU in debug mode if channel is out of valid range */
1164:Generated_Source\PSoC4/ADC.c ****     CYASSERT(chan < ADC_allConfigs[ADC_currentConfig].numChannels);
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccogxpIC.s 			page 33


1165:Generated_Source\PSoC4/ADC.c **** 
1166:Generated_Source\PSoC4/ADC.c ****     if(ADC_allConfigs[ADC_currentConfig].numChannels > chan)
 580              		.loc 1 1166 0
 581 0000 0B4B     		ldr	r3, .L64
1158:Generated_Source\PSoC4/ADC.c ****     uint32 adcResult;
 582              		.loc 1 1158 0
 583 0002 10B5     		push	{r4, lr}
 584              		.cfi_def_cfa_offset 8
 585              		.cfi_offset 4, -8
 586              		.cfi_offset 14, -4
 587              		.loc 1 1166 0
 588 0004 1A68     		ldr	r2, [r3]
 589 0006 3823     		mov	r3, #56
 590 0008 5343     		mul	r3, r2
 591 000a 0A4A     		ldr	r2, .L64+4
1167:Generated_Source\PSoC4/ADC.c ****     {
1168:Generated_Source\PSoC4/ADC.c ****         adcResult = CY_GET_REG32((reg32 *)(ADC_SAR_CHAN_RESULT_IND + (uint32)(chan << 2u))) &
1169:Generated_Source\PSoC4/ADC.c ****             ADC_RESULT_MASK;
1170:Generated_Source\PSoC4/ADC.c ****     }
1171:Generated_Source\PSoC4/ADC.c ****     else
1172:Generated_Source\PSoC4/ADC.c ****     {
1173:Generated_Source\PSoC4/ADC.c ****         adcResult = 0u;
 592              		.loc 1 1173 0
 593 000c 0024     		mov	r4, #0
1166:Generated_Source\PSoC4/ADC.c ****     {
 594              		.loc 1 1166 0
 595 000e D318     		add	r3, r2, r3
 596 0010 5B68     		ldr	r3, [r3, #4]
 597 0012 8342     		cmp	r3, r0
 598 0014 04D9     		bls	.L60
1168:Generated_Source\PSoC4/ADC.c ****             ADC_RESULT_MASK;
 599              		.loc 1 1168 0
 600 0016 084A     		ldr	r2, .L64+8
 601 0018 8300     		lsl	r3, r0, #2
 602 001a 9B18     		add	r3, r3, r2
 603 001c 1C68     		ldr	r4, [r3]
 604 001e A4B2     		uxth	r4, r4
 605              	.LVL43:
 606              	.L60:
1174:Generated_Source\PSoC4/ADC.c ****     }
1175:Generated_Source\PSoC4/ADC.c ****     /* Sign extend if channel is signed format */
1176:Generated_Source\PSoC4/ADC.c ****     if(ADC_IsChannelSigned(chan) == 1)
 607              		.loc 1 1176 0
 608 0020 FFF7FEFF 		bl	ADC_IsChannelSigned
 609              	.LVL44:
 610 0024 031C     		mov	r3, r0
1177:Generated_Source\PSoC4/ADC.c ****     {
1178:Generated_Source\PSoC4/ADC.c ****         adcResult16 = (int16) adcResult;
1179:Generated_Source\PSoC4/ADC.c ****         finalResult = (int32) adcResult16;
1180:Generated_Source\PSoC4/ADC.c ****     }
1181:Generated_Source\PSoC4/ADC.c ****     else
1182:Generated_Source\PSoC4/ADC.c ****     {
1183:Generated_Source\PSoC4/ADC.c ****         finalResult = (int32) adcResult;
 611              		.loc 1 1183 0
 612 0026 201C     		mov	r0, r4
1176:Generated_Source\PSoC4/ADC.c ****     {
 613              		.loc 1 1176 0
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccogxpIC.s 			page 34


 614 0028 012B     		cmp	r3, #1
 615 002a 00D1     		bne	.L62
 616              	.LVL45:
1179:Generated_Source\PSoC4/ADC.c ****     }
 617              		.loc 1 1179 0
 618 002c 20B2     		sxth	r0, r4
 619              	.LVL46:
 620              	.L62:
1184:Generated_Source\PSoC4/ADC.c ****     }
1185:Generated_Source\PSoC4/ADC.c ****     return finalResult;
1186:Generated_Source\PSoC4/ADC.c **** }
 621              		.loc 1 1186 0
 622              		@ sp needed
 623 002e 10BD     		pop	{r4, pc}
 624              	.L65:
 625              		.align	2
 626              	.L64:
 627 0030 00000000 		.word	.LANCHOR0
 628 0034 00000000 		.word	ADC_allConfigs
 629 0038 80013A40 		.word	1077543296
 630              		.cfi_endproc
 631              	.LFE14:
 632              		.size	ADC_GetResult32, .-ADC_GetResult32
 633              		.section	.text.ADC_SetLowLimit,"ax",%progbits
 634              		.align	1
 635              		.global	ADC_SetLowLimit
 636              		.code	16
 637              		.thumb_func
 638              		.type	ADC_SetLowLimit, %function
 639              	ADC_SetLowLimit:
 640              	.LFB15:
1187:Generated_Source\PSoC4/ADC.c **** 
1188:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
1189:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetLowLimit
1190:Generated_Source\PSoC4/ADC.c **** ****************************************************************************//**
1191:Generated_Source\PSoC4/ADC.c **** *
1192:Generated_Source\PSoC4/ADC.c **** * \brief Sets the low limit parameter for a limit condition.
1193:Generated_Source\PSoC4/ADC.c **** *
1194:Generated_Source\PSoC4/ADC.c **** * \param lowLimit The low limit for a limit condition.
1195:Generated_Source\PSoC4/ADC.c **** *
1196:Generated_Source\PSoC4/ADC.c **** * \return None
1197:Generated_Source\PSoC4/ADC.c **** * 
1198:Generated_Source\PSoC4/ADC.c **** * \sideeffect None
1199:Generated_Source\PSoC4/ADC.c **** *
1200:Generated_Source\PSoC4/ADC.c **** * <b>Code Snippet</b>
1201:Generated_Source\PSoC4/ADC.c **** *  \snippet main.c snippet_ADC_SetLowLimit
1202:Generated_Source\PSoC4/ADC.c **** *
1203:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
1204:Generated_Source\PSoC4/ADC.c **** void ADC_SetLowLimit(uint32 lowLimit)
1205:Generated_Source\PSoC4/ADC.c **** {   
 641              		.loc 1 1205 0
 642              		.cfi_startproc
 643              	.LVL47:
1206:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_THRES_REG &= ~(uint32)(ADC_SAR_RANGE_THRES_RANGE_LOW_MSK);
 644              		.loc 1 1206 0
 645 0000 044A     		ldr	r2, .L67
1207:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_THRES_REG |= lowLimit & ADC_SAR_RANGE_THRES_RANGE_LOW_MSK;
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccogxpIC.s 			page 35


 646              		.loc 1 1207 0
 647 0002 80B2     		uxth	r0, r0
 648              	.LVL48:
1206:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_THRES_REG &= ~(uint32)(ADC_SAR_RANGE_THRES_RANGE_LOW_MSK);
 649              		.loc 1 1206 0
 650 0004 1368     		ldr	r3, [r2]
1208:Generated_Source\PSoC4/ADC.c ****     return;
1209:Generated_Source\PSoC4/ADC.c **** }
 651              		.loc 1 1209 0
 652              		@ sp needed
1206:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_THRES_REG |= lowLimit & ADC_SAR_RANGE_THRES_RANGE_LOW_MSK;
 653              		.loc 1 1206 0
 654 0006 1B0C     		lsr	r3, r3, #16
 655 0008 1B04     		lsl	r3, r3, #16
 656 000a 1360     		str	r3, [r2]
1207:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_THRES_REG |= lowLimit & ADC_SAR_RANGE_THRES_RANGE_LOW_MSK;
 657              		.loc 1 1207 0
 658 000c 1368     		ldr	r3, [r2]
 659 000e 1843     		orr	r0, r3
 660 0010 1060     		str	r0, [r2]
 661              		.loc 1 1209 0
 662 0012 7047     		bx	lr
 663              	.L68:
 664              		.align	2
 665              	.L67:
 666 0014 18003A40 		.word	1077542936
 667              		.cfi_endproc
 668              	.LFE15:
 669              		.size	ADC_SetLowLimit, .-ADC_SetLowLimit
 670              		.section	.text.ADC_SetHighLimit,"ax",%progbits
 671              		.align	1
 672              		.global	ADC_SetHighLimit
 673              		.code	16
 674              		.thumb_func
 675              		.type	ADC_SetHighLimit, %function
 676              	ADC_SetHighLimit:
 677              	.LFB16:
1210:Generated_Source\PSoC4/ADC.c **** 
1211:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
1212:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetHighLimit
1213:Generated_Source\PSoC4/ADC.c **** ****************************************************************************//**
1214:Generated_Source\PSoC4/ADC.c **** *
1215:Generated_Source\PSoC4/ADC.c **** * \brief Sets the high limit parameter for a limit condition.
1216:Generated_Source\PSoC4/ADC.c **** *
1217:Generated_Source\PSoC4/ADC.c **** * \param highLimit The high limit for a limit condition.
1218:Generated_Source\PSoC4/ADC.c **** *
1219:Generated_Source\PSoC4/ADC.c **** * \return None
1220:Generated_Source\PSoC4/ADC.c **** * 
1221:Generated_Source\PSoC4/ADC.c **** * \sideeffect None
1222:Generated_Source\PSoC4/ADC.c **** * 
1223:Generated_Source\PSoC4/ADC.c **** * <b>Code Snippet</b>
1224:Generated_Source\PSoC4/ADC.c **** *  \snippet main.c snippet_ADC_SetHighLimit
1225:Generated_Source\PSoC4/ADC.c **** *
1226:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
1227:Generated_Source\PSoC4/ADC.c **** void ADC_SetHighLimit(uint32 highLimit)
1228:Generated_Source\PSoC4/ADC.c **** {   
 678              		.loc 1 1228 0
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccogxpIC.s 			page 36


 679              		.cfi_startproc
 680              	.LVL49:
1229:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_THRES_REG &= ~(uint32)(ADC_SAR_RANGE_THRES_RANGE_HIGH_MSK);
 681              		.loc 1 1229 0
 682 0000 044B     		ldr	r3, .L70
1230:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_THRES_REG |= (uint32)(highLimit << ADC_SAR_RANGE_THRES_RANGE_HIGH_SHFT);
 683              		.loc 1 1230 0
 684 0002 0004     		lsl	r0, r0, #16
 685              	.LVL50:
1229:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_THRES_REG &= ~(uint32)(ADC_SAR_RANGE_THRES_RANGE_HIGH_MSK);
 686              		.loc 1 1229 0
 687 0004 1A68     		ldr	r2, [r3]
1231:Generated_Source\PSoC4/ADC.c ****     return;
1232:Generated_Source\PSoC4/ADC.c **** }
 688              		.loc 1 1232 0
 689              		@ sp needed
1229:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_THRES_REG |= (uint32)(highLimit << ADC_SAR_RANGE_THRES_RANGE_HIGH_SHFT);
 690              		.loc 1 1229 0
 691 0006 92B2     		uxth	r2, r2
 692 0008 1A60     		str	r2, [r3]
1230:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_THRES_REG |= (uint32)(highLimit << ADC_SAR_RANGE_THRES_RANGE_HIGH_SHFT);
 693              		.loc 1 1230 0
 694 000a 1A68     		ldr	r2, [r3]
 695 000c 1043     		orr	r0, r2
 696 000e 1860     		str	r0, [r3]
 697              		.loc 1 1232 0
 698 0010 7047     		bx	lr
 699              	.L71:
 700 0012 C046     		.align	2
 701              	.L70:
 702 0014 18003A40 		.word	1077542936
 703              		.cfi_endproc
 704              	.LFE16:
 705              		.size	ADC_SetHighLimit, .-ADC_SetHighLimit
 706              		.section	.text.ADC_SetLimitMask,"ax",%progbits
 707              		.align	1
 708              		.global	ADC_SetLimitMask
 709              		.code	16
 710              		.thumb_func
 711              		.type	ADC_SetLimitMask, %function
 712              	ADC_SetLimitMask:
 713              	.LFB17:
1233:Generated_Source\PSoC4/ADC.c **** 
1234:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
1235:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetLimitMask
1236:Generated_Source\PSoC4/ADC.c **** ****************************************************************************//**
1237:Generated_Source\PSoC4/ADC.c **** *
1238:Generated_Source\PSoC4/ADC.c **** * \brief Sets the channel limit condition mask.
1239:Generated_Source\PSoC4/ADC.c **** *
1240:Generated_Source\PSoC4/ADC.c **** *
1241:Generated_Source\PSoC4/ADC.c **** * \param limitMask Sets which channels that may cause a limit condition interrupt. 
1242:Generated_Source\PSoC4/ADC.c **** * Setting bits for channels that do not exist will have no effect. For example, 
1243:Generated_Source\PSoC4/ADC.c **** * if only 6  channels were enabled, setting a mask of 0x0103 would only enable 
1244:Generated_Source\PSoC4/ADC.c **** * the last two channels (0 and 1).
1245:Generated_Source\PSoC4/ADC.c **** *
1246:Generated_Source\PSoC4/ADC.c **** * \return None
1247:Generated_Source\PSoC4/ADC.c **** * 
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccogxpIC.s 			page 37


1248:Generated_Source\PSoC4/ADC.c **** * \sideeffect None
1249:Generated_Source\PSoC4/ADC.c **** *
1250:Generated_Source\PSoC4/ADC.c **** * <b>Code Snippet</b>
1251:Generated_Source\PSoC4/ADC.c **** *  \snippet main.c snippet_ADC_SetLimitMask
1252:Generated_Source\PSoC4/ADC.c **** *
1253:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
1254:Generated_Source\PSoC4/ADC.c **** void ADC_SetLimitMask(uint32 limitMask)
1255:Generated_Source\PSoC4/ADC.c **** {   
 714              		.loc 1 1255 0
 715              		.cfi_startproc
 716              	.LVL51:
1256:Generated_Source\PSoC4/ADC.c ****     uint32 chanCount = ADC_allConfigs[ADC_currentConfig].numChannels;
 717              		.loc 1 1256 0
 718 0000 064B     		ldr	r3, .L73
1257:Generated_Source\PSoC4/ADC.c ****     limitMask &= (uint32)((uint32)(1ul << chanCount) - 1ul);
1258:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_INTR_MASK_REG = limitMask;
1259:Generated_Source\PSoC4/ADC.c ****     return;
1260:Generated_Source\PSoC4/ADC.c **** }
 719              		.loc 1 1260 0
 720              		@ sp needed
1256:Generated_Source\PSoC4/ADC.c ****     uint32 chanCount = ADC_allConfigs[ADC_currentConfig].numChannels;
 721              		.loc 1 1256 0
 722 0002 1A68     		ldr	r2, [r3]
 723 0004 3823     		mov	r3, #56
 724 0006 5343     		mul	r3, r2
 725 0008 054A     		ldr	r2, .L73+4
 726 000a D318     		add	r3, r2, r3
1257:Generated_Source\PSoC4/ADC.c ****     limitMask &= (uint32)((uint32)(1ul << chanCount) - 1ul);
 727              		.loc 1 1257 0
 728 000c 5A68     		ldr	r2, [r3, #4]
 729 000e 0123     		mov	r3, #1
 730 0010 9340     		lsl	r3, r3, r2
 731 0012 013B     		sub	r3, r3, #1
 732 0014 1840     		and	r0, r3
 733              	.LVL52:
1258:Generated_Source\PSoC4/ADC.c ****     return;
 734              		.loc 1 1258 0
 735 0016 034B     		ldr	r3, .L73+8
 736 0018 1860     		str	r0, [r3]
 737              	.LVL53:
 738              		.loc 1 1260 0
 739 001a 7047     		bx	lr
 740              	.L74:
 741              		.align	2
 742              	.L73:
 743 001c 00000000 		.word	.LANCHOR0
 744 0020 00000000 		.word	ADC_allConfigs
 745 0024 38023A40 		.word	1077543480
 746              		.cfi_endproc
 747              	.LFE17:
 748              		.size	ADC_SetLimitMask, .-ADC_SetLimitMask
 749              		.section	.text.ADC_SetSatMask,"ax",%progbits
 750              		.align	1
 751              		.global	ADC_SetSatMask
 752              		.code	16
 753              		.thumb_func
 754              		.type	ADC_SetSatMask, %function
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccogxpIC.s 			page 38


 755              	ADC_SetSatMask:
 756              	.LFB18:
1261:Generated_Source\PSoC4/ADC.c **** 
1262:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
1263:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetSatMask
1264:Generated_Source\PSoC4/ADC.c **** ****************************************************************************//**
1265:Generated_Source\PSoC4/ADC.c **** *
1266:Generated_Source\PSoC4/ADC.c **** * \brief Sets the channel saturation event mask.
1267:Generated_Source\PSoC4/ADC.c **** *
1268:Generated_Source\PSoC4/ADC.c **** * \param satMask Sets which channels that may cause a saturation event interrupt. 
1269:Generated_Source\PSoC4/ADC.c **** * Setting bits for channels that do not exist will have no effect. For example, 
1270:Generated_Source\PSoC4/ADC.c **** * if only 8 channels were enabled, setting a mask of 0x01C0 would only enable two 
1271:Generated_Source\PSoC4/ADC.c **** * channels (6 and 7).
1272:Generated_Source\PSoC4/ADC.c **** *
1273:Generated_Source\PSoC4/ADC.c **** * \return None
1274:Generated_Source\PSoC4/ADC.c **** * 
1275:Generated_Source\PSoC4/ADC.c **** * \sideeffect None
1276:Generated_Source\PSoC4/ADC.c **** *
1277:Generated_Source\PSoC4/ADC.c **** * <b>Code Snippet</b>
1278:Generated_Source\PSoC4/ADC.c **** *  \snippet main.c snippet_ADC_SetSatMask
1279:Generated_Source\PSoC4/ADC.c **** *
1280:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
1281:Generated_Source\PSoC4/ADC.c **** void ADC_SetSatMask(uint32 satMask)
1282:Generated_Source\PSoC4/ADC.c **** {   
 757              		.loc 1 1282 0
 758              		.cfi_startproc
 759              	.LVL54:
1283:Generated_Source\PSoC4/ADC.c ****     uint32 chanCount = ADC_allConfigs[ADC_currentConfig].numChannels;
 760              		.loc 1 1283 0
 761 0000 064B     		ldr	r3, .L76
1284:Generated_Source\PSoC4/ADC.c ****     satMask &= (uint32)((uint32)(1ul << chanCount) - 1ul);
1285:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_SATURATE_INTR_MASK_REG = satMask;    
1286:Generated_Source\PSoC4/ADC.c ****     return;
1287:Generated_Source\PSoC4/ADC.c **** }
 762              		.loc 1 1287 0
 763              		@ sp needed
1283:Generated_Source\PSoC4/ADC.c ****     uint32 chanCount = ADC_allConfigs[ADC_currentConfig].numChannels;
 764              		.loc 1 1283 0
 765 0002 1A68     		ldr	r2, [r3]
 766 0004 3823     		mov	r3, #56
 767 0006 5343     		mul	r3, r2
 768 0008 054A     		ldr	r2, .L76+4
 769 000a D318     		add	r3, r2, r3
1284:Generated_Source\PSoC4/ADC.c ****     satMask &= (uint32)((uint32)(1ul << chanCount) - 1ul);
 770              		.loc 1 1284 0
 771 000c 5A68     		ldr	r2, [r3, #4]
 772 000e 0123     		mov	r3, #1
 773 0010 9340     		lsl	r3, r3, r2
 774 0012 013B     		sub	r3, r3, #1
 775 0014 1840     		and	r0, r3
 776              	.LVL55:
1285:Generated_Source\PSoC4/ADC.c ****     return;
 777              		.loc 1 1285 0
 778 0016 034B     		ldr	r3, .L76+8
 779 0018 1860     		str	r0, [r3]
 780              	.LVL56:
 781              		.loc 1 1287 0
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccogxpIC.s 			page 39


 782 001a 7047     		bx	lr
 783              	.L77:
 784              		.align	2
 785              	.L76:
 786 001c 00000000 		.word	.LANCHOR0
 787 0020 00000000 		.word	ADC_allConfigs
 788 0024 28023A40 		.word	1077543464
 789              		.cfi_endproc
 790              	.LFE18:
 791              		.size	ADC_SetSatMask, .-ADC_SetSatMask
 792              		.section	.text.ADC_SetOffset,"ax",%progbits
 793              		.align	1
 794              		.global	ADC_SetOffset
 795              		.code	16
 796              		.thumb_func
 797              		.type	ADC_SetOffset, %function
 798              	ADC_SetOffset:
 799              	.LFB19:
1288:Generated_Source\PSoC4/ADC.c **** 
1289:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
1290:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetOffset
1291:Generated_Source\PSoC4/ADC.c **** ****************************************************************************//**
1292:Generated_Source\PSoC4/ADC.c **** *
1293:Generated_Source\PSoC4/ADC.c **** * \brief Sets the ADC offset that is used by the functions ADC_CountsTo_uVolts, 
1294:Generated_Source\PSoC4/ADC.c **** * ADC_CountsTo_mVolts, and ADC_CountsTo_Volts.
1295:Generated_Source\PSoC4/ADC.c **** * 
1296:Generated_Source\PSoC4/ADC.c **** * Offset is applied to counts before unit scaling and gain.  All CountsTo_[mV, uV, V]olts()
1297:Generated_Source\PSoC4/ADC.c **** * functions use the following equation:
1298:Generated_Source\PSoC4/ADC.c **** *     V = (Counts/AvgDivider - Offset)*TEN_VOLT/Gain
1299:Generated_Source\PSoC4/ADC.c **** * See CountsTo_Volts() for more about this formula.
1300:Generated_Source\PSoC4/ADC.c **** * 
1301:Generated_Source\PSoC4/ADC.c **** * To set channel 0's offset based on known V_offset_mV, use:
1302:Generated_Source\PSoC4/ADC.c **** *     ADC_SetOffset(0uL, -1 * V_offset_mV * (1uL << (Resolution - 1)) / V_ref_mV);
1303:Generated_Source\PSoC4/ADC.c **** *
1304:Generated_Source\PSoC4/ADC.c **** * \param chan ADC channel number. 
1305:Generated_Source\PSoC4/ADC.c **** * 
1306:Generated_Source\PSoC4/ADC.c **** * \param offset This value is a measured value when the inputs are shorted or 
1307:Generated_Source\PSoC4/ADC.c **** * connected to the same input voltage.
1308:Generated_Source\PSoC4/ADC.c **** *
1309:Generated_Source\PSoC4/ADC.c **** * \return None
1310:Generated_Source\PSoC4/ADC.c **** * 
1311:Generated_Source\PSoC4/ADC.c **** * \sideeffect None
1312:Generated_Source\PSoC4/ADC.c **** *
1313:Generated_Source\PSoC4/ADC.c **** * <b>Code Snippet</b>
1314:Generated_Source\PSoC4/ADC.c **** *  \snippet main.c snippet_ADC_SetOffset
1315:Generated_Source\PSoC4/ADC.c **** *
1316:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
1317:Generated_Source\PSoC4/ADC.c **** void ADC_SetOffset(uint32 chan, int16 offset)
1318:Generated_Source\PSoC4/ADC.c **** {   
 800              		.loc 1 1318 0
 801              		.cfi_startproc
 802              	.LVL57:
1319:Generated_Source\PSoC4/ADC.c ****     /* Halt CPU in debug mode if channel is out of valid range */
1320:Generated_Source\PSoC4/ADC.c ****     CYASSERT(chan < ADC_allConfigs[ADC_currentConfig].numChannels);
1321:Generated_Source\PSoC4/ADC.c **** 
1322:Generated_Source\PSoC4/ADC.c ****     ADC_offset[ADC_allConfigs[ADC_currentConfig].channelBase + chan] = offset;
 803              		.loc 1 1322 0
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccogxpIC.s 			page 40


 804 0000 054B     		ldr	r3, .L79
1323:Generated_Source\PSoC4/ADC.c ****     return;
1324:Generated_Source\PSoC4/ADC.c **** }
 805              		.loc 1 1324 0
 806              		@ sp needed
1322:Generated_Source\PSoC4/ADC.c ****     return;
 807              		.loc 1 1322 0
 808 0002 1A68     		ldr	r2, [r3]
 809 0004 3823     		mov	r3, #56
 810 0006 5343     		mul	r3, r2
 811 0008 044A     		ldr	r2, .L79+4
 812 000a 9B58     		ldr	r3, [r3, r2]
 813 000c C018     		add	r0, r0, r3
 814              	.LVL58:
 815 000e 044B     		ldr	r3, .L79+8
 816 0010 4000     		lsl	r0, r0, #1
 817 0012 C152     		strh	r1, [r0, r3]
 818              		.loc 1 1324 0
 819 0014 7047     		bx	lr
 820              	.L80:
 821 0016 C046     		.align	2
 822              	.L79:
 823 0018 00000000 		.word	.LANCHOR0
 824 001c 00000000 		.word	ADC_allConfigs
 825 0020 00000000 		.word	ADC_offset
 826              		.cfi_endproc
 827              	.LFE19:
 828              		.size	ADC_SetOffset, .-ADC_SetOffset
 829              		.section	.text.ADC_SetGain,"ax",%progbits
 830              		.align	1
 831              		.global	ADC_SetGain
 832              		.code	16
 833              		.thumb_func
 834              		.type	ADC_SetGain, %function
 835              	ADC_SetGain:
 836              	.LFB20:
1325:Generated_Source\PSoC4/ADC.c **** 
1326:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
1327:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetGain
1328:Generated_Source\PSoC4/ADC.c **** ****************************************************************************//**
1329:Generated_Source\PSoC4/ADC.c **** *
1330:Generated_Source\PSoC4/ADC.c **** * \brief Sets the ADC gain in counts per 10 volt for the voltage 
1331:Generated_Source\PSoC4/ADC.c **** * conversion functions. This value is set by default by the reference and 
1332:Generated_Source\PSoC4/ADC.c **** * input range settings. Gain is applied after offset and unit scaling.  All 
1333:Generated_Source\PSoC4/ADC.c **** * CountsTo_[mV, uV, V]olts() functions use the following equation:
1334:Generated_Source\PSoC4/ADC.c **** *     V = (Counts/AvgDivider - Offset)*TEN_VOLT/Gain
1335:Generated_Source\PSoC4/ADC.c **** * See CountsTo_Volts() for more about this formula.
1336:Generated_Source\PSoC4/ADC.c **** * 
1337:Generated_Source\PSoC4/ADC.c **** * To set channel 0's gain based on known V_ref_mV, use:
1338:Generated_Source\PSoC4/ADC.c **** *     ADC_SetGain(0uL, 10000 * (1uL << (Resolution - 1)) / V_ref_mV);
1339:Generated_Source\PSoC4/ADC.c **** *  
1340:Generated_Source\PSoC4/ADC.c **** * \param chan ADC channel number.
1341:Generated_Source\PSoC4/ADC.c **** * 
1342:Generated_Source\PSoC4/ADC.c **** * \param adcGain ADC gain in counts per 10 volt.
1343:Generated_Source\PSoC4/ADC.c **** *
1344:Generated_Source\PSoC4/ADC.c **** * \return None
1345:Generated_Source\PSoC4/ADC.c **** * 
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccogxpIC.s 			page 41


1346:Generated_Source\PSoC4/ADC.c **** * \sideeffect None
1347:Generated_Source\PSoC4/ADC.c **** *
1348:Generated_Source\PSoC4/ADC.c **** * <b>Code Snippet</b>
1349:Generated_Source\PSoC4/ADC.c **** *  \snippet main.c snippet_ADC_SetGain
1350:Generated_Source\PSoC4/ADC.c **** *
1351:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
1352:Generated_Source\PSoC4/ADC.c **** void ADC_SetGain(uint32 chan, int32 adcGain)
1353:Generated_Source\PSoC4/ADC.c **** {   
 837              		.loc 1 1353 0
 838              		.cfi_startproc
 839              	.LVL59:
1354:Generated_Source\PSoC4/ADC.c ****     /* Halt CPU in debug mode if channel is out of valid range */
1355:Generated_Source\PSoC4/ADC.c ****     CYASSERT(chan < ADC_allConfigs[ADC_currentConfig].numChannels);
1356:Generated_Source\PSoC4/ADC.c **** 
1357:Generated_Source\PSoC4/ADC.c ****     ADC_countsPer10Volt[ADC_allConfigs[ADC_currentConfig].channelBase + chan]
 840              		.loc 1 1357 0
 841 0000 054B     		ldr	r3, .L82
1358:Generated_Source\PSoC4/ADC.c **** 	= adcGain;
1359:Generated_Source\PSoC4/ADC.c ****     return;
1360:Generated_Source\PSoC4/ADC.c **** }
 842              		.loc 1 1360 0
 843              		@ sp needed
1357:Generated_Source\PSoC4/ADC.c **** 	= adcGain;
 844              		.loc 1 1357 0
 845 0002 1A68     		ldr	r2, [r3]
 846 0004 3823     		mov	r3, #56
 847 0006 5343     		mul	r3, r2
 848 0008 044A     		ldr	r2, .L82+4
 849 000a 9B58     		ldr	r3, [r3, r2]
 850 000c C018     		add	r0, r0, r3
 851              	.LVL60:
1358:Generated_Source\PSoC4/ADC.c **** 	= adcGain;
 852              		.loc 1 1358 0
 853 000e 044B     		ldr	r3, .L82+8
 854 0010 8000     		lsl	r0, r0, #2
 855 0012 C150     		str	r1, [r0, r3]
 856              		.loc 1 1360 0
 857 0014 7047     		bx	lr
 858              	.L83:
 859 0016 C046     		.align	2
 860              	.L82:
 861 0018 00000000 		.word	.LANCHOR0
 862 001c 00000000 		.word	ADC_allConfigs
 863 0020 00000000 		.word	ADC_countsPer10Volt
 864              		.cfi_endproc
 865              	.LFE20:
 866              		.size	ADC_SetGain, .-ADC_SetGain
 867              		.global	__aeabi_uidiv
 868              		.global	__aeabi_idiv
 869              		.section	.text.ADC_RawCounts2Counts,"ax",%progbits
 870              		.align	1
 871              		.global	ADC_RawCounts2Counts
 872              		.code	16
 873              		.thumb_func
 874              		.type	ADC_RawCounts2Counts, %function
 875              	ADC_RawCounts2Counts:
 876              	.LFB21:
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccogxpIC.s 			page 42


1361:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
1362:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_RawCounts2Counts
1363:Generated_Source\PSoC4/ADC.c **** ****************************************************************************//**
1364:Generated_Source\PSoC4/ADC.c **** *
1365:Generated_Source\PSoC4/ADC.c **** * \brief Converts the output of the SAR to an idealized count value.
1366:Generated_Source\PSoC4/ADC.c **** *
1367:Generated_Source\PSoC4/ADC.c **** * Divides by averaging amount, if needed, and subtracts offset.
1368:Generated_Source\PSoC4/ADC.c **** *
1369:Generated_Source\PSoC4/ADC.c **** * \param chan ADC channel number.   
1370:Generated_Source\PSoC4/ADC.c **** *
1371:Generated_Source\PSoC4/ADC.c **** * \param adcCounts Result from the ADC conversion.
1372:Generated_Source\PSoC4/ADC.c **** *
1373:Generated_Source\PSoC4/ADC.c **** * \return Averaged and offset counts.
1374:Generated_Source\PSoC4/ADC.c **** * 
1375:Generated_Source\PSoC4/ADC.c **** * \sideeffect None
1376:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
1377:Generated_Source\PSoC4/ADC.c **** int16 ADC_RawCounts2Counts(uint32 chan, int16 adcCounts)
1378:Generated_Source\PSoC4/ADC.c **** {
 877              		.loc 1 1378 0
 878              		.cfi_startproc
 879              	.LVL61:
1379:Generated_Source\PSoC4/ADC.c ****     uint32 temp;
1380:Generated_Source\PSoC4/ADC.c **** 	uint32 averageAdcSamplesDiv;
1381:Generated_Source\PSoC4/ADC.c **** 	uint32 rawChannel;
1382:Generated_Source\PSoC4/ADC.c **** 	rawChannel = ADC_allConfigs[ADC_currentConfig].channelBase + chan;
 880              		.loc 1 1382 0
 881 0000 3822     		mov	r2, #56
 882 0002 184B     		ldr	r3, .L93
1378:Generated_Source\PSoC4/ADC.c ****     uint32 temp;
 883              		.loc 1 1378 0
 884 0004 70B5     		push	{r4, r5, r6, lr}
 885              		.cfi_def_cfa_offset 16
 886              		.cfi_offset 4, -16
 887              		.cfi_offset 5, -12
 888              		.cfi_offset 6, -8
 889              		.cfi_offset 14, -4
 890              		.loc 1 1382 0
 891 0006 1B68     		ldr	r3, [r3]
1378:Generated_Source\PSoC4/ADC.c ****     uint32 temp;
 892              		.loc 1 1378 0
 893 0008 0C1C     		mov	r4, r1
 894              		.loc 1 1382 0
 895 000a 5343     		mul	r3, r2
 896 000c 1649     		ldr	r1, .L93+4
 897              	.LVL62:
 898 000e 5A58     		ldr	r2, [r3, r1]
1383:Generated_Source\PSoC4/ADC.c **** 	
1384:Generated_Source\PSoC4/ADC.c ****     /* Halt CPU in debug mode if channel is out of valid range */
1385:Generated_Source\PSoC4/ADC.c ****     CYASSERT(chan < ADC_allConfigs[ADC_currentConfig].numChannels);
1386:Generated_Source\PSoC4/ADC.c **** 
1387:Generated_Source\PSoC4/ADC.c ****     /* Divide the adcCount when accumulate averaging mode selected */
1388:Generated_Source\PSoC4/ADC.c ****     /* If Average mode != fixed */
1389:Generated_Source\PSoC4/ADC.c **** 	if((ADC_allConfigs[ADC_currentConfig].sampleCtrl 
 899              		.loc 1 1389 0
 900 0010 CB18     		add	r3, r1, r3
 901 0012 DB68     		ldr	r3, [r3, #12]
1382:Generated_Source\PSoC4/ADC.c **** 	
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccogxpIC.s 			page 43


 902              		.loc 1 1382 0
 903 0014 8518     		add	r5, r0, r2
 904              	.LVL63:
 905              		.loc 1 1389 0
 906 0016 1A06     		lsl	r2, r3, #24
 907 0018 1DD4     		bmi	.L85
1390:Generated_Source\PSoC4/ADC.c **** 		& ADC_SAR_SAMPLE_CTRL_AVG_SHIFT_MSK) 
1391:Generated_Source\PSoC4/ADC.c **** 		!= ADC_SAR_SAMPLE_CTRL_AVG_SHIFT_MSK)
1392:Generated_Source\PSoC4/ADC.c **** 	{
1393:Generated_Source\PSoC4/ADC.c ****         /* If Channel uses averaging */
1394:Generated_Source\PSoC4/ADC.c ****         if((ADC_channelsConfig[rawChannel] & ADC_SAR_CHAN_CONFIG_AVG_EN_MSK) != 0u)
 908              		.loc 1 1394 0
 909 001a 144A     		ldr	r2, .L93+8
 910 001c A900     		lsl	r1, r5, #2
 911 001e 8A58     		ldr	r2, [r1, r2]
 912 0020 5205     		lsl	r2, r2, #21
 913 0022 18D5     		bpl	.L85
 914              	.LVL64:
1395:Generated_Source\PSoC4/ADC.c ****         {
1396:Generated_Source\PSoC4/ADC.c ****             /* Divide by 2^(AVG_CNT + 1) */
1397:Generated_Source\PSoC4/ADC.c **** 			averageAdcSamplesDiv = ((ADC_allConfigs[ADC_currentConfig].sampleCtrl 
1398:Generated_Source\PSoC4/ADC.c **** 				& ADC_SAR_SAMPLE_CTRL_AVG_CNT_MSK) 
1399:Generated_Source\PSoC4/ADC.c **** 				>> ADC_SAR_SAMPLE_CTRL_AVG_CNT_SHFT);
1400:Generated_Source\PSoC4/ADC.c ****             averageAdcSamplesDiv = (1uL << (averageAdcSamplesDiv + 1uL));
 915              		.loc 1 1400 0
 916 0024 0122     		mov	r2, #1
1398:Generated_Source\PSoC4/ADC.c **** 				>> ADC_SAR_SAMPLE_CTRL_AVG_CNT_SHFT);
 917              		.loc 1 1398 0
 918 0026 5E06     		lsl	r6, r3, #25
1397:Generated_Source\PSoC4/ADC.c **** 				& ADC_SAR_SAMPLE_CTRL_AVG_CNT_MSK) 
 919              		.loc 1 1397 0
 920 0028 760F     		lsr	r6, r6, #29
 921              		.loc 1 1400 0
 922 002a 0136     		add	r6, r6, #1
 923 002c B240     		lsl	r2, r2, r6
 924 002e 161C     		mov	r6, r2
 925              	.LVL65:
1401:Generated_Source\PSoC4/ADC.c ****                         /* When it's "Sequential, Sum", divider limit is 16 */
1402:Generated_Source\PSoC4/ADC.c ****             /* If Mode is ACCUNDUMP */
1403:Generated_Source\PSoC4/ADC.c ****             if((ADC_allConfigs[ADC_currentConfig].sampleCtrl 
 926              		.loc 1 1403 0
 927 0030 DB05     		lsl	r3, r3, #23
 928 0032 02D4     		bmi	.L86
 929 0034 102A     		cmp	r2, #16
 930 0036 00D9     		bls	.L86
 931 0038 1026     		mov	r6, #16
 932              	.L86:
 933              	.LVL66:
1404:Generated_Source\PSoC4/ADC.c ****     			& ADC_SAR_SAMPLE_CTRL_AVG_MODE_MSK) 
1405:Generated_Source\PSoC4/ADC.c ****     			!= ADC_SAR_SAMPLE_CTRL_AVG_MODE_MSK)
1406:Generated_Source\PSoC4/ADC.c ****     		{
1407:Generated_Source\PSoC4/ADC.c ****                 if (averageAdcSamplesDiv > 16uL)
1408:Generated_Source\PSoC4/ADC.c ****                 {
1409:Generated_Source\PSoC4/ADC.c ****                     averageAdcSamplesDiv = 16uL;
1410:Generated_Source\PSoC4/ADC.c ****                 }
1411:Generated_Source\PSoC4/ADC.c ****             }
1412:Generated_Source\PSoC4/ADC.c ****             /* If unsigned format, prevent sign extension */
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccogxpIC.s 			page 44


1413:Generated_Source\PSoC4/ADC.c ****             if(0 == ADC_IsChannelSigned(chan))
 934              		.loc 1 1413 0
 935 003a FFF7FEFF 		bl	ADC_IsChannelSigned
 936              	.LVL67:
 937 003e 0028     		cmp	r0, #0
 938 0040 04D1     		bne	.L88
1414:Generated_Source\PSoC4/ADC.c ****             {
1415:Generated_Source\PSoC4/ADC.c **** 				temp = ((uint16) adcCounts / averageAdcSamplesDiv);
 939              		.loc 1 1415 0
 940 0042 A0B2     		uxth	r0, r4
 941 0044 311C     		mov	r1, r6
 942 0046 FFF7FEFF 		bl	__aeabi_uidiv
 943              	.LVL68:
 944 004a 03E0     		b	.L92
 945              	.LVL69:
 946              	.L88:
1416:Generated_Source\PSoC4/ADC.c ****                 adcCounts = (int16) temp;
1417:Generated_Source\PSoC4/ADC.c ****             }
1418:Generated_Source\PSoC4/ADC.c ****             else
1419:Generated_Source\PSoC4/ADC.c ****             {
1420:Generated_Source\PSoC4/ADC.c ****                 adcCounts /= (int16) averageAdcSamplesDiv;
 947              		.loc 1 1420 0
 948 004c 201C     		mov	r0, r4
 949 004e 311C     		mov	r1, r6
 950 0050 FFF7FEFF 		bl	__aeabi_idiv
 951              	.LVL70:
 952              	.L92:
 953 0054 04B2     		sxth	r4, r0
 954              	.LVL71:
 955              	.L85:
1421:Generated_Source\PSoC4/ADC.c ****             }
1422:Generated_Source\PSoC4/ADC.c ****         }
1423:Generated_Source\PSoC4/ADC.c ****     }
1424:Generated_Source\PSoC4/ADC.c ****     /* Subtract ADC offset */
1425:Generated_Source\PSoC4/ADC.c ****     adcCounts -= ADC_offset[rawChannel];
 956              		.loc 1 1425 0
 957 0056 064B     		ldr	r3, .L93+12
 958 0058 6D00     		lsl	r5, r5, #1
 959              	.LVL72:
 960 005a E85A     		ldrh	r0, [r5, r3]
1426:Generated_Source\PSoC4/ADC.c ****     return adcCounts;
1427:Generated_Source\PSoC4/ADC.c **** }
 961              		.loc 1 1427 0
 962              		@ sp needed
1425:Generated_Source\PSoC4/ADC.c ****     return adcCounts;
 963              		.loc 1 1425 0
 964 005c 201A     		sub	r0, r4, r0
 965              	.LVL73:
1426:Generated_Source\PSoC4/ADC.c ****     return adcCounts;
 966              		.loc 1 1426 0
 967 005e 00B2     		sxth	r0, r0
 968              		.loc 1 1427 0
 969 0060 70BD     		pop	{r4, r5, r6, pc}
 970              	.L94:
 971 0062 C046     		.align	2
 972              	.L93:
 973 0064 00000000 		.word	.LANCHOR0
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccogxpIC.s 			page 45


 974 0068 00000000 		.word	ADC_allConfigs
 975 006c 00000000 		.word	.LANCHOR1
 976 0070 00000000 		.word	ADC_offset
 977              		.cfi_endproc
 978              	.LFE21:
 979              		.size	ADC_RawCounts2Counts, .-ADC_RawCounts2Counts
 980              		.global	__aeabi_i2f
 981              		.global	__aeabi_fmul
 982              		.global	__aeabi_fdiv
 983              		.section	.text.ADC_CountsTo_Volts,"ax",%progbits
 984              		.align	1
 985              		.global	ADC_CountsTo_Volts
 986              		.code	16
 987              		.thumb_func
 988              		.type	ADC_CountsTo_Volts, %function
 989              	ADC_CountsTo_Volts:
 990              	.LFB22:
1428:Generated_Source\PSoC4/ADC.c **** 
1429:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
1430:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_CountsTo_Volts
1431:Generated_Source\PSoC4/ADC.c **** ****************************************************************************//**
1432:Generated_Source\PSoC4/ADC.c **** *
1433:Generated_Source\PSoC4/ADC.c **** * \brief Converts the ADC output to Volts as a float32. For example, if the ADC 
1434:Generated_Source\PSoC4/ADC.c **** * measured 0.534 volts, the return value would be 0.534.
1435:Generated_Source\PSoC4/ADC.c **** * The calculation of voltage depends on the contents of ADC_offset[],
1436:Generated_Source\PSoC4/ADC.c **** * ADC_countsPer10Volt[], and other parameters.  The equation used is:
1437:Generated_Source\PSoC4/ADC.c **** * 
1438:Generated_Source\PSoC4/ADC.c **** *     V = (Counts/AvgDivider - Offset)*TEN_VOLT/Gain
1439:Generated_Source\PSoC4/ADC.c **** * -Counts = Raw Counts from SAR register
1440:Generated_Source\PSoC4/ADC.c **** * -AvgDivider = divider based on averaging mode
1441:Generated_Source\PSoC4/ADC.c **** *     -Sequential, Sum: AvgDivider = number averaged
1442:Generated_Source\PSoC4/ADC.c **** *         Note: The divider should be a maximum of 16. If using more averages, 
1443:Generated_Source\PSoC4/ADC.c **** *         pre-scale Counts by (number averaged / 16)
1444:Generated_Source\PSoC4/ADC.c **** *     -Interleaved, Sum: AvgDivider = number averaged
1445:Generated_Source\PSoC4/ADC.c **** *     -Sequential, Fixed: AvgDivider = 1
1446:Generated_Source\PSoC4/ADC.c **** * -Offset = ADC_offset[]
1447:Generated_Source\PSoC4/ADC.c **** * -TEN_VOLT = 10V constant and unit scalar.
1448:Generated_Source\PSoC4/ADC.c **** * -Gain = ADC_countsPer10Volt[]
1449:Generated_Source\PSoC4/ADC.c **** * 
1450:Generated_Source\PSoC4/ADC.c **** * When the Vref is based on Vdda, the value used for Vdda is set for the project
1451:Generated_Source\PSoC4/ADC.c **** * in the System tab of the DWR.
1452:Generated_Source\PSoC4/ADC.c **** *
1453:Generated_Source\PSoC4/ADC.c **** * \param chan ADC channel number.   
1454:Generated_Source\PSoC4/ADC.c **** *
1455:Generated_Source\PSoC4/ADC.c **** * \param adcCounts Result from the ADC conversion.
1456:Generated_Source\PSoC4/ADC.c **** *
1457:Generated_Source\PSoC4/ADC.c **** * \return Result in Volts.
1458:Generated_Source\PSoC4/ADC.c **** * 
1459:Generated_Source\PSoC4/ADC.c **** * \sideeffect None
1460:Generated_Source\PSoC4/ADC.c **** *
1461:Generated_Source\PSoC4/ADC.c **** * <b>Code Snippet</b>
1462:Generated_Source\PSoC4/ADC.c **** *  \snippet main.c snippet_ADC_CountsTo_Volts
1463:Generated_Source\PSoC4/ADC.c **** *
1464:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
1465:Generated_Source\PSoC4/ADC.c **** float32 ADC_CountsTo_Volts(uint32 chan, int16 adcCounts)
1466:Generated_Source\PSoC4/ADC.c **** {   
 991              		.loc 1 1466 0
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccogxpIC.s 			page 46


 992              		.cfi_startproc
 993              	.LVL74:
1467:Generated_Source\PSoC4/ADC.c ****     float32 result_Volts = 0.0f;
1468:Generated_Source\PSoC4/ADC.c **** 	uint32 rawChannel;
1469:Generated_Source\PSoC4/ADC.c **** 	rawChannel = ADC_allConfigs[ADC_currentConfig].channelBase + chan;
 994              		.loc 1 1469 0
 995 0000 3822     		mov	r2, #56
1466:Generated_Source\PSoC4/ADC.c ****     float32 result_Volts = 0.0f;
 996              		.loc 1 1466 0
 997 0002 38B5     		push	{r3, r4, r5, lr}
 998              		.cfi_def_cfa_offset 16
 999              		.cfi_offset 3, -16
 1000              		.cfi_offset 4, -12
 1001              		.cfi_offset 5, -8
 1002              		.cfi_offset 14, -4
 1003              		.loc 1 1469 0
 1004 0004 0F4B     		ldr	r3, .L98
 1005 0006 104D     		ldr	r5, .L98+4
 1006 0008 1B68     		ldr	r3, [r3]
 1007 000a 5343     		mul	r3, r2
 1008 000c 5C59     		ldr	r4, [r3, r5]
 1009              	.LVL75:
1470:Generated_Source\PSoC4/ADC.c **** 	
1471:Generated_Source\PSoC4/ADC.c **** 	if((ADC_allConfigs[ADC_currentConfig].sampleCtrl 
 1010              		.loc 1 1471 0
 1011 000e EB18     		add	r3, r5, r3
1472:Generated_Source\PSoC4/ADC.c **** 		& ADC_SAR_SAMPLE_CTRL_LEFT_ALIGN_MSK) 
 1012              		.loc 1 1472 0
 1013 0010 DB68     		ldr	r3, [r3, #12]
1471:Generated_Source\PSoC4/ADC.c **** 		& ADC_SAR_SAMPLE_CTRL_LEFT_ALIGN_MSK) 
 1014              		.loc 1 1471 0
 1015 0012 9B07     		lsl	r3, r3, #30
 1016 0014 14D4     		bmi	.L97
 1017 0016 051C     		mov	r5, r0
1473:Generated_Source\PSoC4/ADC.c **** 		!= ADC_SAR_SAMPLE_CTRL_LEFT_ALIGN_MSK)
1474:Generated_Source\PSoC4/ADC.c **** 	{
1475:Generated_Source\PSoC4/ADC.c ****         adcCounts = ADC_RawCounts2Counts(chan, adcCounts);
 1018              		.loc 1 1475 0
 1019 0018 FFF7FEFF 		bl	ADC_RawCounts2Counts
 1020              	.LVL76:
1469:Generated_Source\PSoC4/ADC.c **** 	
 1021              		.loc 1 1469 0
 1022 001c 2C19     		add	r4, r5, r4
 1023              	.LVL77:
1476:Generated_Source\PSoC4/ADC.c **** 
1477:Generated_Source\PSoC4/ADC.c ****         result_Volts = ((float32)adcCounts * ADC_10V_COUNTS) 
1478:Generated_Source\PSoC4/ADC.c **** 			/ (float32)ADC_countsPer10Volt[rawChannel];
 1024              		.loc 1 1478 0
 1025 001e 0B4B     		ldr	r3, .L98+8
 1026 0020 A400     		lsl	r4, r4, #2
 1027              	.LVL78:
 1028 0022 E558     		ldr	r5, [r4, r3]
 1029              	.LVL79:
1477:Generated_Source\PSoC4/ADC.c **** 			/ (float32)ADC_countsPer10Volt[rawChannel];
 1030              		.loc 1 1477 0
 1031 0024 FFF7FEFF 		bl	__aeabi_i2f
 1032              	.LVL80:
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccogxpIC.s 			page 47


 1033 0028 0949     		ldr	r1, .L98+12
 1034 002a FFF7FEFF 		bl	__aeabi_fmul
 1035              	.LVL81:
 1036 002e 041C     		add	r4, r0, #0
 1037              		.loc 1 1478 0
 1038 0030 281C     		mov	r0, r5
 1039 0032 FFF7FEFF 		bl	__aeabi_i2f
 1040              	.LVL82:
 1041 0036 011C     		add	r1, r0, #0
1477:Generated_Source\PSoC4/ADC.c **** 			/ (float32)ADC_countsPer10Volt[rawChannel];
 1042              		.loc 1 1477 0
 1043 0038 201C     		add	r0, r4, #0
 1044 003a FFF7FEFF 		bl	__aeabi_fdiv
 1045              	.LVL83:
 1046 003e 00E0     		b	.L96
 1047              	.LVL84:
 1048              	.L97:
1467:Generated_Source\PSoC4/ADC.c **** 	uint32 rawChannel;
 1049              		.loc 1 1467 0
 1050 0040 0020     		mov	r0, #0
 1051              	.LVL85:
 1052              	.L96:
1479:Generated_Source\PSoC4/ADC.c **** 	}
1480:Generated_Source\PSoC4/ADC.c **** 	return result_Volts;
1481:Generated_Source\PSoC4/ADC.c **** }
 1053              		.loc 1 1481 0
 1054              		@ sp needed
 1055 0042 38BD     		pop	{r3, r4, r5, pc}
 1056              	.L99:
 1057              		.align	2
 1058              	.L98:
 1059 0044 00000000 		.word	.LANCHOR0
 1060 0048 00000000 		.word	ADC_allConfigs
 1061 004c 00000000 		.word	ADC_countsPer10Volt
 1062 0050 00002041 		.word	1092616192
 1063              		.cfi_endproc
 1064              	.LFE22:
 1065              		.size	ADC_CountsTo_Volts, .-ADC_CountsTo_Volts
 1066              		.section	.text.ADC_CountsTo_mVolts,"ax",%progbits
 1067              		.align	1
 1068              		.global	ADC_CountsTo_mVolts
 1069              		.code	16
 1070              		.thumb_func
 1071              		.type	ADC_CountsTo_mVolts, %function
 1072              	ADC_CountsTo_mVolts:
 1073              	.LFB23:
1482:Generated_Source\PSoC4/ADC.c **** 
1483:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
1484:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_CountsTo_mVolts
1485:Generated_Source\PSoC4/ADC.c **** ****************************************************************************//**
1486:Generated_Source\PSoC4/ADC.c **** *
1487:Generated_Source\PSoC4/ADC.c **** * \brief Converts the ADC output to millivolts as an int16. For example, if the ADC 
1488:Generated_Source\PSoC4/ADC.c **** * measured 0.534 volts, the return value would be 534.
1489:Generated_Source\PSoC4/ADC.c **** * The calculation of voltage depends on the contents of ADC_offset[],
1490:Generated_Source\PSoC4/ADC.c **** * ADC_countsPer10Volt[], and other parameters.  The equation used is:
1491:Generated_Source\PSoC4/ADC.c **** * 
1492:Generated_Source\PSoC4/ADC.c **** *     V = (Counts/AvgDivider - Offset)*TEN_VOLT/Gain
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccogxpIC.s 			page 48


1493:Generated_Source\PSoC4/ADC.c **** * -Counts = Raw Counts from SAR register
1494:Generated_Source\PSoC4/ADC.c **** * -AvgDivider = divider based on averaging mode
1495:Generated_Source\PSoC4/ADC.c **** *     -Sequential, Sum: AvgDivider = number averaged
1496:Generated_Source\PSoC4/ADC.c **** *         Note: The divider should be a maximum of 16. If using more averages, 
1497:Generated_Source\PSoC4/ADC.c **** *         pre-scale Counts by (number averaged / 16)
1498:Generated_Source\PSoC4/ADC.c **** *     -Interleaved, Sum: AvgDivider = number averaged
1499:Generated_Source\PSoC4/ADC.c **** *     -Sequential, Fixed: AvgDivider = 1
1500:Generated_Source\PSoC4/ADC.c **** * -Offset = ADC_offset[]
1501:Generated_Source\PSoC4/ADC.c **** * -TEN_VOLT = 10V constant and unit scalar.
1502:Generated_Source\PSoC4/ADC.c **** * -Gain = ADC_countsPer10Volt[]
1503:Generated_Source\PSoC4/ADC.c **** * 
1504:Generated_Source\PSoC4/ADC.c **** * When the Vref is based on Vdda, the value used for Vdda is set for the project
1505:Generated_Source\PSoC4/ADC.c **** * in the System tab of the DWR.
1506:Generated_Source\PSoC4/ADC.c **** *
1507:Generated_Source\PSoC4/ADC.c **** * \param chan ADC channel number. 
1508:Generated_Source\PSoC4/ADC.c **** *
1509:Generated_Source\PSoC4/ADC.c **** * \param adcCounts Result from the ADC conversion.
1510:Generated_Source\PSoC4/ADC.c **** * 
1511:Generated_Source\PSoC4/ADC.c **** * \return Result in mV.
1512:Generated_Source\PSoC4/ADC.c **** * 
1513:Generated_Source\PSoC4/ADC.c **** * \sideeffect None.
1514:Generated_Source\PSoC4/ADC.c **** *
1515:Generated_Source\PSoC4/ADC.c **** * <b>Code Snippet</b>
1516:Generated_Source\PSoC4/ADC.c **** *  \snippet main.c snippet_ADC_CountsTo_mVolts
1517:Generated_Source\PSoC4/ADC.c **** *
1518:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
1519:Generated_Source\PSoC4/ADC.c **** int16 ADC_CountsTo_mVolts(uint32 chan, int16 adcCounts)
1520:Generated_Source\PSoC4/ADC.c **** {   
 1074              		.loc 1 1520 0
 1075              		.cfi_startproc
 1076              	.LVL86:
1521:Generated_Source\PSoC4/ADC.c ****     int16 result_mVolts = 0;
1522:Generated_Source\PSoC4/ADC.c **** 	uint32 rawChannel;
1523:Generated_Source\PSoC4/ADC.c ****     
1524:Generated_Source\PSoC4/ADC.c **** 	rawChannel = ADC_allConfigs[ADC_currentConfig].channelBase + chan;
 1077              		.loc 1 1524 0
 1078 0000 3822     		mov	r2, #56
 1079 0002 114B     		ldr	r3, .L105
1520:Generated_Source\PSoC4/ADC.c ****     int16 result_mVolts = 0;
 1080              		.loc 1 1520 0
 1081 0004 70B5     		push	{r4, r5, r6, lr}
 1082              		.cfi_def_cfa_offset 16
 1083              		.cfi_offset 4, -16
 1084              		.cfi_offset 5, -12
 1085              		.cfi_offset 6, -8
 1086              		.cfi_offset 14, -4
 1087              		.loc 1 1524 0
 1088 0006 1B68     		ldr	r3, [r3]
 1089 0008 104C     		ldr	r4, .L105+4
 1090 000a 5343     		mul	r3, r2
 1091 000c 1E59     		ldr	r6, [r3, r4]
 1092              	.LVL87:
1525:Generated_Source\PSoC4/ADC.c **** 	
1526:Generated_Source\PSoC4/ADC.c **** 	if((ADC_allConfigs[ADC_currentConfig].sampleCtrl 
 1093              		.loc 1 1526 0
 1094 000e E318     		add	r3, r4, r3
1527:Generated_Source\PSoC4/ADC.c **** 		& ADC_SAR_SAMPLE_CTRL_LEFT_ALIGN_MSK) 
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccogxpIC.s 			page 49


 1095              		.loc 1 1527 0
 1096 0010 DA68     		ldr	r2, [r3, #12]
1521:Generated_Source\PSoC4/ADC.c **** 	uint32 rawChannel;
 1097              		.loc 1 1521 0
 1098 0012 0023     		mov	r3, #0
1526:Generated_Source\PSoC4/ADC.c **** 		& ADC_SAR_SAMPLE_CTRL_LEFT_ALIGN_MSK) 
 1099              		.loc 1 1526 0
 1100 0014 9207     		lsl	r2, r2, #30
 1101 0016 15D4     		bmi	.L101
1524:Generated_Source\PSoC4/ADC.c **** 	
 1102              		.loc 1 1524 0
 1103 0018 8619     		add	r6, r0, r6
 1104              	.LVL88:
1528:Generated_Source\PSoC4/ADC.c **** 		!= ADC_SAR_SAMPLE_CTRL_LEFT_ALIGN_MSK)
1529:Generated_Source\PSoC4/ADC.c **** 	{
1530:Generated_Source\PSoC4/ADC.c ****         adcCounts = ADC_RawCounts2Counts(chan, adcCounts);
 1105              		.loc 1 1530 0
 1106 001a FFF7FEFF 		bl	ADC_RawCounts2Counts
 1107              	.LVL89:
 1108 001e 0C4D     		ldr	r5, .L105+8
 1109 0020 B100     		lsl	r1, r6, #2
1531:Generated_Source\PSoC4/ADC.c **** 
1532:Generated_Source\PSoC4/ADC.c **** 	    result_mVolts = (int16)((((int32)adcCounts * ADC_10MV_COUNTS) + ( (adcCounts > 0) ? 
 1110              		.loc 1 1532 0
 1111 0022 0C4C     		ldr	r4, .L105+12
1533:Generated_Source\PSoC4/ADC.c **** 	             (ADC_countsPer10Volt[rawChannel] / 2) 
 1112              		.loc 1 1533 0
 1113 0024 6A58     		ldr	r2, [r5, r1]
1532:Generated_Source\PSoC4/ADC.c **** 	             (ADC_countsPer10Volt[rawChannel] / 2) 
 1114              		.loc 1 1532 0
 1115 0026 4443     		mul	r4, r0
1534:Generated_Source\PSoC4/ADC.c **** 				: (-(ADC_countsPer10Volt[rawChannel] / 2)) )) 
 1116              		.loc 1 1534 0
 1117 0028 D30F     		lsr	r3, r2, #31
 1118 002a 0028     		cmp	r0, #0
 1119 002c 02DD     		ble	.L102
 1120              		.loc 1 1534 0 is_stmt 0 discriminator 1
 1121 002e 9B18     		add	r3, r3, r2
 1122 0030 5B10     		asr	r3, r3, #1
 1123 0032 02E0     		b	.L103
 1124              	.L102:
 1125              		.loc 1 1534 0 discriminator 2
 1126 0034 9A18     		add	r2, r3, r2
 1127 0036 5210     		asr	r2, r2, #1
 1128 0038 5342     		neg	r3, r2
 1129              	.L103:
1532:Generated_Source\PSoC4/ADC.c **** 	             (ADC_countsPer10Volt[rawChannel] / 2) 
 1130              		.loc 1 1532 0 is_stmt 1
 1131 003a E018     		add	r0, r4, r3
 1132              	.LVL90:
1535:Generated_Source\PSoC4/ADC.c **** 	             / ADC_countsPer10Volt[rawChannel]);
 1133              		.loc 1 1535 0
 1134 003c 6958     		ldr	r1, [r5, r1]
 1135 003e FFF7FEFF 		bl	__aeabi_idiv
 1136              	.LVL91:
1532:Generated_Source\PSoC4/ADC.c **** 	             (ADC_countsPer10Volt[rawChannel] / 2) 
 1137              		.loc 1 1532 0
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccogxpIC.s 			page 50


 1138 0042 83B2     		uxth	r3, r0
 1139              	.LVL92:
 1140              	.L101:
1536:Generated_Source\PSoC4/ADC.c **** 	}
1537:Generated_Source\PSoC4/ADC.c ****     return result_mVolts;
 1141              		.loc 1 1537 0
 1142 0044 18B2     		sxth	r0, r3
1538:Generated_Source\PSoC4/ADC.c **** }
 1143              		.loc 1 1538 0
 1144              		@ sp needed
 1145 0046 70BD     		pop	{r4, r5, r6, pc}
 1146              	.L106:
 1147              		.align	2
 1148              	.L105:
 1149 0048 00000000 		.word	.LANCHOR0
 1150 004c 00000000 		.word	ADC_allConfigs
 1151 0050 00000000 		.word	ADC_countsPer10Volt
 1152 0054 10270000 		.word	10000
 1153              		.cfi_endproc
 1154              	.LFE23:
 1155              		.size	ADC_CountsTo_mVolts, .-ADC_CountsTo_mVolts
 1156              		.global	__aeabi_lmul
 1157              		.global	__aeabi_ldivmod
 1158              		.section	.text.ADC_CountsTo_uVolts,"ax",%progbits
 1159              		.align	1
 1160              		.global	ADC_CountsTo_uVolts
 1161              		.code	16
 1162              		.thumb_func
 1163              		.type	ADC_CountsTo_uVolts, %function
 1164              	ADC_CountsTo_uVolts:
 1165              	.LFB24:
1539:Generated_Source\PSoC4/ADC.c **** 
1540:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
1541:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_CountsTo_uVolts
1542:Generated_Source\PSoC4/ADC.c **** ****************************************************************************//**
1543:Generated_Source\PSoC4/ADC.c **** *
1544:Generated_Source\PSoC4/ADC.c **** * \brief Converts the ADC output to microvolts as an int32. For example, if the ADC 
1545:Generated_Source\PSoC4/ADC.c **** * measured 0.534 volts, the return value would be 534000.
1546:Generated_Source\PSoC4/ADC.c **** * The calculation of voltage depends on the contents of ADC_offset[],
1547:Generated_Source\PSoC4/ADC.c **** * ADC_countsPer10Volt[], and other parameters.  The equation used is:
1548:Generated_Source\PSoC4/ADC.c **** * 
1549:Generated_Source\PSoC4/ADC.c **** *     V = (Counts/AvgDivider - Offset)*TEN_VOLT/Gain
1550:Generated_Source\PSoC4/ADC.c **** * -Counts = Raw Counts from SAR register
1551:Generated_Source\PSoC4/ADC.c **** * -AvgDivider = divider based on averaging mode
1552:Generated_Source\PSoC4/ADC.c **** *     -Sequential, Sum: AvgDivider = number averaged
1553:Generated_Source\PSoC4/ADC.c **** *         Note: The divider should be a maximum of 16. If using more averages, 
1554:Generated_Source\PSoC4/ADC.c **** *         pre-scale Counts by (number averaged / 16)
1555:Generated_Source\PSoC4/ADC.c **** *     -Interleaved, Sum: AvgDivider = number averaged
1556:Generated_Source\PSoC4/ADC.c **** *     -Sequential, Fixed: AvgDivider = 1
1557:Generated_Source\PSoC4/ADC.c **** * -Offset = ADC_offset[]
1558:Generated_Source\PSoC4/ADC.c **** * -TEN_VOLT = 10V constant and unit scalar.
1559:Generated_Source\PSoC4/ADC.c **** * -Gain = ADC_countsPer10Volt[]
1560:Generated_Source\PSoC4/ADC.c **** * 
1561:Generated_Source\PSoC4/ADC.c **** * When the Vref is based on Vdda, the value used for Vdda is set for the project
1562:Generated_Source\PSoC4/ADC.c **** * in the System tab of the DWR.
1563:Generated_Source\PSoC4/ADC.c **** *
1564:Generated_Source\PSoC4/ADC.c **** * \param chan ADC channel number.   
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccogxpIC.s 			page 51


1565:Generated_Source\PSoC4/ADC.c **** *
1566:Generated_Source\PSoC4/ADC.c **** * \param adcCounts Result from the ADC conversion.
1567:Generated_Source\PSoC4/ADC.c **** *
1568:Generated_Source\PSoC4/ADC.c **** * \return Result in microvolts.
1569:Generated_Source\PSoC4/ADC.c **** * 
1570:Generated_Source\PSoC4/ADC.c **** * \sideeffect None
1571:Generated_Source\PSoC4/ADC.c **** *
1572:Generated_Source\PSoC4/ADC.c **** * <b>Code Snippet</b>
1573:Generated_Source\PSoC4/ADC.c **** *  \snippet main.c snippet_ADC_CountsTo_uVolts
1574:Generated_Source\PSoC4/ADC.c **** *
1575:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
1576:Generated_Source\PSoC4/ADC.c **** int32 ADC_CountsTo_uVolts(uint32 chan, int16 adcCounts)
1577:Generated_Source\PSoC4/ADC.c **** {   
 1166              		.loc 1 1577 0
 1167              		.cfi_startproc
 1168              	.LVL93:
1578:Generated_Source\PSoC4/ADC.c ****     int64 result_uVolts = 0;
1579:Generated_Source\PSoC4/ADC.c **** 	uint32 rawChannel;
1580:Generated_Source\PSoC4/ADC.c **** 	rawChannel = ADC_allConfigs[ADC_currentConfig].channelBase + chan;
 1169              		.loc 1 1580 0
 1170 0000 3822     		mov	r2, #56
1577:Generated_Source\PSoC4/ADC.c ****     int64 result_uVolts = 0;
 1171              		.loc 1 1577 0
 1172 0002 38B5     		push	{r3, r4, r5, lr}
 1173              		.cfi_def_cfa_offset 16
 1174              		.cfi_offset 3, -16
 1175              		.cfi_offset 4, -12
 1176              		.cfi_offset 5, -8
 1177              		.cfi_offset 14, -4
 1178              		.loc 1 1580 0
 1179 0004 0D4B     		ldr	r3, .L110
1577:Generated_Source\PSoC4/ADC.c ****     int64 result_uVolts = 0;
 1180              		.loc 1 1577 0
 1181 0006 051C     		mov	r5, r0
 1182              		.loc 1 1580 0
 1183 0008 1B68     		ldr	r3, [r3]
 1184 000a 0D48     		ldr	r0, .L110+4
 1185              	.LVL94:
 1186 000c 5343     		mul	r3, r2
 1187 000e 1C58     		ldr	r4, [r3, r0]
 1188              	.LVL95:
1581:Generated_Source\PSoC4/ADC.c **** 
1582:Generated_Source\PSoC4/ADC.c **** 	if((ADC_allConfigs[ADC_currentConfig].sampleCtrl 
 1189              		.loc 1 1582 0
 1190 0010 C318     		add	r3, r0, r3
1583:Generated_Source\PSoC4/ADC.c **** 		& ADC_SAR_SAMPLE_CTRL_LEFT_ALIGN_MSK) 
 1191              		.loc 1 1583 0
 1192 0012 DB68     		ldr	r3, [r3, #12]
1578:Generated_Source\PSoC4/ADC.c **** 	uint32 rawChannel;
 1193              		.loc 1 1578 0
 1194 0014 0020     		mov	r0, #0
1582:Generated_Source\PSoC4/ADC.c **** 		& ADC_SAR_SAMPLE_CTRL_LEFT_ALIGN_MSK) 
 1195              		.loc 1 1582 0
 1196 0016 9B07     		lsl	r3, r3, #30
 1197 0018 0FD4     		bmi	.L108
1584:Generated_Source\PSoC4/ADC.c **** 		!= ADC_SAR_SAMPLE_CTRL_LEFT_ALIGN_MSK)
1585:Generated_Source\PSoC4/ADC.c **** 	{
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccogxpIC.s 			page 52


1586:Generated_Source\PSoC4/ADC.c ****         adcCounts = ADC_RawCounts2Counts(chan, adcCounts);
 1198              		.loc 1 1586 0
 1199 001a 281C     		mov	r0, r5
 1200 001c FFF7FEFF 		bl	ADC_RawCounts2Counts
 1201              	.LVL96:
1580:Generated_Source\PSoC4/ADC.c **** 
 1202              		.loc 1 1580 0
 1203 0020 2C19     		add	r4, r5, r4
 1204              	.LVL97:
1587:Generated_Source\PSoC4/ADC.c **** 
1588:Generated_Source\PSoC4/ADC.c ****         result_uVolts = ((int64)adcCounts * ADC_10UV_COUNTS) 
1589:Generated_Source\PSoC4/ADC.c **** 			/ ADC_countsPer10Volt[rawChannel];
 1205              		.loc 1 1589 0
 1206 0022 084B     		ldr	r3, .L110+8
 1207 0024 A400     		lsl	r4, r4, #2
 1208              	.LVL98:
 1209 0026 E458     		ldr	r4, [r4, r3]
1588:Generated_Source\PSoC4/ADC.c **** 			/ ADC_countsPer10Volt[rawChannel];
 1210              		.loc 1 1588 0
 1211 0028 074A     		ldr	r2, .L110+12
 1212 002a 0023     		mov	r3, #0
 1213 002c C117     		asr	r1, r0, #31
 1214 002e FFF7FEFF 		bl	__aeabi_lmul
 1215              	.LVL99:
 1216              		.loc 1 1589 0
 1217 0032 E317     		asr	r3, r4, #31
1588:Generated_Source\PSoC4/ADC.c **** 			/ ADC_countsPer10Volt[rawChannel];
 1218              		.loc 1 1588 0
 1219 0034 221C     		mov	r2, r4
 1220 0036 FFF7FEFF 		bl	__aeabi_ldivmod
 1221              	.LVL100:
 1222              	.L108:
1590:Generated_Source\PSoC4/ADC.c **** 	}
1591:Generated_Source\PSoC4/ADC.c **** 	return ( (int32)result_uVolts );
1592:Generated_Source\PSoC4/ADC.c **** }
 1223              		.loc 1 1592 0
 1224              		@ sp needed
 1225              	.LVL101:
 1226 003a 38BD     		pop	{r3, r4, r5, pc}
 1227              	.L111:
 1228              		.align	2
 1229              	.L110:
 1230 003c 00000000 		.word	.LANCHOR0
 1231 0040 00000000 		.word	ADC_allConfigs
 1232 0044 00000000 		.word	ADC_countsPer10Volt
 1233 0048 80969800 		.word	10000000
 1234              		.cfi_endproc
 1235              	.LFE24:
 1236              		.size	ADC_CountsTo_uVolts, .-ADC_CountsTo_uVolts
 1237              		.section	.text.ADC_Init,"ax",%progbits
 1238              		.align	1
 1239              		.global	ADC_Init
 1240              		.code	16
 1241              		.thumb_func
 1242              		.type	ADC_Init, %function
 1243              	ADC_Init:
 1244              	.LFB25:
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccogxpIC.s 			page 53


1593:Generated_Source\PSoC4/ADC.c **** 
1594:Generated_Source\PSoC4/ADC.c **** #if(0u != ADC_ANY_CONFIG_USES_FILTER)
1595:Generated_Source\PSoC4/ADC.c ****     
1596:Generated_Source\PSoC4/ADC.c ****     /* ****************************************************************************
1597:Generated_Source\PSoC4/ADC.c ****     * Function Name: ADC_TrimFilterVos
1598:Generated_Source\PSoC4/ADC.c ****     ****************************************************************************//*
1599:Generated_Source\PSoC4/ADC.c ****     *
1600:Generated_Source\PSoC4/ADC.c ****     * \brief Runs an algorithm to reduce voltage offset using the UAB's opamp trim.
1601:Generated_Source\PSoC4/ADC.c ****     *
1602:Generated_Source\PSoC4/ADC.c ****     * \param None
1603:Generated_Source\PSoC4/ADC.c ****     * 
1604:Generated_Source\PSoC4/ADC.c ****     * \return None
1605:Generated_Source\PSoC4/ADC.c ****     *
1606:Generated_Source\PSoC4/ADC.c ****     * \sideeffect None
1607:Generated_Source\PSoC4/ADC.c ****     *
1608:Generated_Source\PSoC4/ADC.c ****     * <b>Code Snippet</b>
1609:Generated_Source\PSoC4/ADC.c ****     *  \snippet main.c snippet_ADC_TrimFilterVos
1610:Generated_Source\PSoC4/ADC.c ****     *
1611:Generated_Source\PSoC4/ADC.c ****     *******************************************************************************/
1612:Generated_Source\PSoC4/ADC.c ****     void ADC_TrimFilterVos(void)
1613:Generated_Source\PSoC4/ADC.c ****     {
1614:Generated_Source\PSoC4/ADC.c ****         uint32 opampTrim = 0uL;
1615:Generated_Source\PSoC4/ADC.c ****         uint32 agndTrim = 0uL;
1616:Generated_Source\PSoC4/ADC.c ****         uint32 compStatus = 0uL;
1617:Generated_Source\PSoC4/ADC.c ****         
1618:Generated_Source\PSoC4/ADC.c ****         ADC_SetupComparatorTrim();
1619:Generated_Source\PSoC4/ADC.c ****         
1620:Generated_Source\PSoC4/ADC.c ****         /* Sweep from center to crossing */
1621:Generated_Source\PSoC4/ADC.c ****         compStatus = ADC_SetOpampAndAgndTrim(ADC_OPAMP_TRIM_POS_BASE, ADC_AGND_TRIM_POS_BASE);
1622:Generated_Source\PSoC4/ADC.c ****         if (0uL == compStatus)
1623:Generated_Source\PSoC4/ADC.c ****         {
1624:Generated_Source\PSoC4/ADC.c ****             opampTrim = ADC_RaiseOpampTrimToCrossing(ADC_OPAMP_TRIM_POS_BASE);
1625:Generated_Source\PSoC4/ADC.c ****             agndTrim = ADC_RaiseAgndTrimToCrossing(ADC_AGND_TRIM_POS_BASE);
1626:Generated_Source\PSoC4/ADC.c ****             if ((agndTrim == (ADC_AGND_TRIM_POS_LIMIT - 1uL))
1627:Generated_Source\PSoC4/ADC.c ****                 && (opampTrim != (ADC_OPAMP_TRIM_POS_LIMIT - 1uL)))
1628:Generated_Source\PSoC4/ADC.c ****             {
1629:Generated_Source\PSoC4/ADC.c ****                 opampTrim = ADC_IncOpampTrim(opampTrim);
1630:Generated_Source\PSoC4/ADC.c ****                 (void) ADC_SetOpampAndAgndTrim(opampTrim, ADC_AGND_TRIM_POS_BASE);
1631:Generated_Source\PSoC4/ADC.c ****                 (void) ADC_LowerAgndTrimToCrossing(ADC_AGND_TRIM_POS_BASE);
1632:Generated_Source\PSoC4/ADC.c ****             }
1633:Generated_Source\PSoC4/ADC.c ****         }
1634:Generated_Source\PSoC4/ADC.c ****         else
1635:Generated_Source\PSoC4/ADC.c ****         {
1636:Generated_Source\PSoC4/ADC.c ****             opampTrim = ADC_LowerOpampTrimToCrossing(ADC_OPAMP_TRIM_POS_BASE);
1637:Generated_Source\PSoC4/ADC.c ****             agndTrim = ADC_LowerAgndTrimToCrossing(ADC_AGND_TRIM_POS_BASE);
1638:Generated_Source\PSoC4/ADC.c ****             if ((agndTrim == (ADC_AGND_TRIM_NEG_LIMIT - 1uL))
1639:Generated_Source\PSoC4/ADC.c ****                 && (opampTrim != (ADC_OPAMP_TRIM_NEG_LIMIT - 1uL)))
1640:Generated_Source\PSoC4/ADC.c ****             {
1641:Generated_Source\PSoC4/ADC.c ****                 opampTrim = ADC_DecOpampTrim(opampTrim);
1642:Generated_Source\PSoC4/ADC.c ****                 (void) ADC_SetOpampAndAgndTrim(opampTrim, ADC_AGND_TRIM_POS_BASE);
1643:Generated_Source\PSoC4/ADC.c ****                 (void) ADC_RaiseAgndTrimToCrossing(ADC_AGND_TRIM_POS_BASE);
1644:Generated_Source\PSoC4/ADC.c ****             }
1645:Generated_Source\PSoC4/ADC.c ****         }
1646:Generated_Source\PSoC4/ADC.c ****         
1647:Generated_Source\PSoC4/ADC.c ****         ADC_UndoComparatorTrimSetup();
1648:Generated_Source\PSoC4/ADC.c ****     }
1649:Generated_Source\PSoC4/ADC.c ****     
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccogxpIC.s 			page 54


1650:Generated_Source\PSoC4/ADC.c ****     
1651:Generated_Source\PSoC4/ADC.c ****     static void ADC_SetupComparatorTrim(void)
1652:Generated_Source\PSoC4/ADC.c ****     {
1653:Generated_Source\PSoC4/ADC.c ****         /* Set firmware modbit. */
1654:Generated_Source\PSoC4/ADC.c ****         ADC_UABH_A_CAP_ABCF_VAL_REG |= (0x1uL << CyUAB_SIGN_VAL_SHIFT);
1655:Generated_Source\PSoC4/ADC.c ****         ADC_UABH_B_CAP_ABCF_VAL_REG |= (0x1uL << CyUAB_SIGN_VAL_SHIFT);
1656:Generated_Source\PSoC4/ADC.c ****         
1657:Generated_Source\PSoC4/ADC.c ****         /* Open filter output switch to isolate filter during trim. */
1658:Generated_Source\PSoC4/ADC.c ****         ADC_UABH_B_SW_CF_BOT_REG &= ~(uint32)(ADC_UABH_B_SW_PO_MASK);
1659:Generated_Source\PSoC4/ADC.c ****         
1660:Generated_Source\PSoC4/ADC.c ****         /* Power on the UAB half B reference buffer. */
1661:Generated_Source\PSoC4/ADC.c ****         ADC_UABH_B_OA_CTRL_REG |= (uint32)ADC_UABH_B_REF_PWR_MASK;
1662:Generated_Source\PSoC4/ADC.c ****         
1663:Generated_Source\PSoC4/ADC.c ****         /* Connect the UAB half B reference buffer to the comparator. */
1664:Generated_Source\PSoC4/ADC.c ****         ADC_UABH_B_SW_STATIC_REG |= (uint32)ADC_UABH_B_SW_RT_MASK;
1665:Generated_Source\PSoC4/ADC.c ****                         
1666:Generated_Source\PSoC4/ADC.c ****         /* Clock the UAB half B comparator with phi1. */
1667:Generated_Source\PSoC4/ADC.c ****         ADC_UABH_B_SW_OTHER_REG &= ~(uint32)ADC_UABH_B_CMP_FF_MASK;
1668:Generated_Source\PSoC4/ADC.c ****         ADC_UABH_B_SW_OTHER_REG |= (uint32)((uint32)CyUAB_CLK_PHI1 << ADC_UABH_B_CMP_FF_SHIFT);
1669:Generated_Source\PSoC4/ADC.c ****         
1670:Generated_Source\PSoC4/ADC.c ****         /* Power on the UAB half B comparator. */
1671:Generated_Source\PSoC4/ADC.c ****         ADC_UABH_B_OA_CTRL_REG |= (uint32)ADC_UABH_B_CMP_PWR_MASK;
1672:Generated_Source\PSoC4/ADC.c ****     }
1673:Generated_Source\PSoC4/ADC.c ****     
1674:Generated_Source\PSoC4/ADC.c ****     
1675:Generated_Source\PSoC4/ADC.c ****     static void ADC_UndoComparatorTrimSetup(void)
1676:Generated_Source\PSoC4/ADC.c ****     {
1677:Generated_Source\PSoC4/ADC.c ****         /* Power off the UAB half B comparator. */
1678:Generated_Source\PSoC4/ADC.c ****         ADC_UABH_B_OA_CTRL_REG &= ~(uint32)ADC_UABH_B_CMP_PWR_MASK;
1679:Generated_Source\PSoC4/ADC.c ****         
1680:Generated_Source\PSoC4/ADC.c ****         /* Remove clock from the UAB half B comparator. */
1681:Generated_Source\PSoC4/ADC.c ****         ADC_UABH_B_SW_OTHER_REG &= ~(uint32)ADC_UABH_B_CMP_FF_MASK;
1682:Generated_Source\PSoC4/ADC.c ****         ADC_UABH_B_SW_OTHER_REG |= (uint32)((uint32)CyUAB_SW_OPEN << ADC_UABH_B_CMP_FF_SHIFT);
1683:Generated_Source\PSoC4/ADC.c ****         
1684:Generated_Source\PSoC4/ADC.c ****         /* Disconnect the UAB half B reference buffer from the comparator. */
1685:Generated_Source\PSoC4/ADC.c ****         ADC_UABH_B_SW_STATIC_REG &= ~(uint32)ADC_UABH_B_SW_RT_MASK;
1686:Generated_Source\PSoC4/ADC.c ****                         
1687:Generated_Source\PSoC4/ADC.c ****         /* Power off the UAB half B reference buffer. */
1688:Generated_Source\PSoC4/ADC.c ****         ADC_UABH_B_OA_CTRL_REG &= ~(uint32)ADC_UABH_B_REF_PWR_MASK;
1689:Generated_Source\PSoC4/ADC.c ****         
1690:Generated_Source\PSoC4/ADC.c ****         /* Close filter output switch to connect filter to AROUTE. */
1691:Generated_Source\PSoC4/ADC.c ****         ADC_UABH_B_SW_CF_BOT_REG &= ~(uint32)(ADC_UABH_B_SW_PO_MASK);
1692:Generated_Source\PSoC4/ADC.c ****         ADC_UABH_B_SW_CF_BOT_REG |= (uint32)((uint32)CyUAB_CLK_PHI3 << ADC_UABH_B_SW_PO_SHIFT);
1693:Generated_Source\PSoC4/ADC.c ****         
1694:Generated_Source\PSoC4/ADC.c ****         /* Clear the modbit */
1695:Generated_Source\PSoC4/ADC.c ****         ADC_UABH_A_CAP_ABCF_VAL_REG &= ~(0x1uL << CyUAB_SIGN_VAL_SHIFT);
1696:Generated_Source\PSoC4/ADC.c ****         ADC_UABH_B_CAP_ABCF_VAL_REG &= ~(0x1uL << CyUAB_SIGN_VAL_SHIFT);
1697:Generated_Source\PSoC4/ADC.c ****     }
1698:Generated_Source\PSoC4/ADC.c ****     
1699:Generated_Source\PSoC4/ADC.c ****     
1700:Generated_Source\PSoC4/ADC.c ****     static uint32 ADC_RaiseOpampTrimToCrossing(uint32 startTrim)
1701:Generated_Source\PSoC4/ADC.c ****     {
1702:Generated_Source\PSoC4/ADC.c ****         uint32 opampTrim;
1703:Generated_Source\PSoC4/ADC.c ****         uint32 lastOpampTrim;
1704:Generated_Source\PSoC4/ADC.c ****         uint32 compStatus;
1705:Generated_Source\PSoC4/ADC.c **** 
1706:Generated_Source\PSoC4/ADC.c ****         lastOpampTrim = startTrim;
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccogxpIC.s 			page 55


1707:Generated_Source\PSoC4/ADC.c ****         for (opampTrim = startTrim;
1708:Generated_Source\PSoC4/ADC.c ****             opampTrim != ADC_OPAMP_TRIM_NEG_LIMIT;
1709:Generated_Source\PSoC4/ADC.c ****             opampTrim = ADC_IncOpampTrim(opampTrim))
1710:Generated_Source\PSoC4/ADC.c ****         {
1711:Generated_Source\PSoC4/ADC.c ****             compStatus = ADC_SetOpampAndAgndTrim(opampTrim, ADC_AGND_TRIM_POS_BASE);
1712:Generated_Source\PSoC4/ADC.c ****             if (0uL != compStatus)
1713:Generated_Source\PSoC4/ADC.c ****             {
1714:Generated_Source\PSoC4/ADC.c ****                 (void) ADC_SetOpampTrim(lastOpampTrim);
1715:Generated_Source\PSoC4/ADC.c ****                 break;
1716:Generated_Source\PSoC4/ADC.c ****             }
1717:Generated_Source\PSoC4/ADC.c ****             lastOpampTrim = opampTrim;
1718:Generated_Source\PSoC4/ADC.c ****         }
1719:Generated_Source\PSoC4/ADC.c ****         
1720:Generated_Source\PSoC4/ADC.c ****         return lastOpampTrim;
1721:Generated_Source\PSoC4/ADC.c ****     }
1722:Generated_Source\PSoC4/ADC.c **** 
1723:Generated_Source\PSoC4/ADC.c **** 
1724:Generated_Source\PSoC4/ADC.c ****     static uint32 ADC_LowerOpampTrimToCrossing(uint32 startTrim)
1725:Generated_Source\PSoC4/ADC.c ****     {
1726:Generated_Source\PSoC4/ADC.c ****         uint32 opampTrim;
1727:Generated_Source\PSoC4/ADC.c ****         uint32 lastOpampTrim;
1728:Generated_Source\PSoC4/ADC.c ****         uint32 compStatus;
1729:Generated_Source\PSoC4/ADC.c **** 
1730:Generated_Source\PSoC4/ADC.c ****         lastOpampTrim = startTrim;
1731:Generated_Source\PSoC4/ADC.c ****         for (opampTrim = startTrim;
1732:Generated_Source\PSoC4/ADC.c ****             opampTrim != ADC_OPAMP_TRIM_NEG_LIMIT;
1733:Generated_Source\PSoC4/ADC.c ****             opampTrim = ADC_DecOpampTrim(opampTrim))
1734:Generated_Source\PSoC4/ADC.c ****         {
1735:Generated_Source\PSoC4/ADC.c ****             compStatus = ADC_SetOpampAndAgndTrim(opampTrim, ADC_AGND_TRIM_POS_BASE);
1736:Generated_Source\PSoC4/ADC.c ****             if (0uL == compStatus)
1737:Generated_Source\PSoC4/ADC.c ****             {
1738:Generated_Source\PSoC4/ADC.c ****                 (void) ADC_SetOpampTrim(lastOpampTrim);
1739:Generated_Source\PSoC4/ADC.c ****                 break;
1740:Generated_Source\PSoC4/ADC.c ****             }
1741:Generated_Source\PSoC4/ADC.c ****             lastOpampTrim = opampTrim;
1742:Generated_Source\PSoC4/ADC.c ****         }
1743:Generated_Source\PSoC4/ADC.c ****         
1744:Generated_Source\PSoC4/ADC.c ****         return lastOpampTrim;
1745:Generated_Source\PSoC4/ADC.c ****     }
1746:Generated_Source\PSoC4/ADC.c **** 
1747:Generated_Source\PSoC4/ADC.c **** 
1748:Generated_Source\PSoC4/ADC.c ****     static uint32 ADC_RaiseAgndTrimToCrossing(uint32 startTrim)
1749:Generated_Source\PSoC4/ADC.c ****     {
1750:Generated_Source\PSoC4/ADC.c ****         uint32 agndTrim;
1751:Generated_Source\PSoC4/ADC.c ****         uint32 lastAgndTrim;
1752:Generated_Source\PSoC4/ADC.c ****         uint32 compStatus;
1753:Generated_Source\PSoC4/ADC.c **** 
1754:Generated_Source\PSoC4/ADC.c ****         lastAgndTrim = startTrim;
1755:Generated_Source\PSoC4/ADC.c ****         for (agndTrim = startTrim;
1756:Generated_Source\PSoC4/ADC.c ****             agndTrim != ADC_AGND_TRIM_NEG_LIMIT;
1757:Generated_Source\PSoC4/ADC.c ****             agndTrim = ADC_IncAgndTrim(agndTrim))
1758:Generated_Source\PSoC4/ADC.c ****         {
1759:Generated_Source\PSoC4/ADC.c ****             compStatus = ADC_SetAgndTrim(agndTrim);
1760:Generated_Source\PSoC4/ADC.c ****             if (0uL != compStatus)
1761:Generated_Source\PSoC4/ADC.c ****             {
1762:Generated_Source\PSoC4/ADC.c ****                 (void) ADC_SetAgndTrim(lastAgndTrim); 
1763:Generated_Source\PSoC4/ADC.c ****                 break;
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccogxpIC.s 			page 56


1764:Generated_Source\PSoC4/ADC.c ****             }
1765:Generated_Source\PSoC4/ADC.c ****             lastAgndTrim = agndTrim;
1766:Generated_Source\PSoC4/ADC.c ****         }
1767:Generated_Source\PSoC4/ADC.c ****         
1768:Generated_Source\PSoC4/ADC.c ****         return lastAgndTrim;
1769:Generated_Source\PSoC4/ADC.c ****     }
1770:Generated_Source\PSoC4/ADC.c ****     
1771:Generated_Source\PSoC4/ADC.c ****     
1772:Generated_Source\PSoC4/ADC.c ****     static uint32 ADC_LowerAgndTrimToCrossing(uint32 startTrim)
1773:Generated_Source\PSoC4/ADC.c ****     {
1774:Generated_Source\PSoC4/ADC.c ****         uint32 agndTrim = startTrim;
1775:Generated_Source\PSoC4/ADC.c ****         uint32 lastAgndTrim = agndTrim;
1776:Generated_Source\PSoC4/ADC.c ****         uint32 compStatus = 1uL;
1777:Generated_Source\PSoC4/ADC.c **** 
1778:Generated_Source\PSoC4/ADC.c ****         lastAgndTrim = startTrim;
1779:Generated_Source\PSoC4/ADC.c ****         for (agndTrim = startTrim;
1780:Generated_Source\PSoC4/ADC.c ****             agndTrim != ADC_AGND_TRIM_NEG_LIMIT;
1781:Generated_Source\PSoC4/ADC.c ****             agndTrim = ADC_DecAgndTrim(agndTrim))
1782:Generated_Source\PSoC4/ADC.c ****         {
1783:Generated_Source\PSoC4/ADC.c ****             compStatus = ADC_SetAgndTrim(agndTrim);
1784:Generated_Source\PSoC4/ADC.c ****             if (0uL == compStatus)
1785:Generated_Source\PSoC4/ADC.c ****             {
1786:Generated_Source\PSoC4/ADC.c ****                 (void) ADC_SetAgndTrim(lastAgndTrim); 
1787:Generated_Source\PSoC4/ADC.c ****                 break;
1788:Generated_Source\PSoC4/ADC.c ****             }
1789:Generated_Source\PSoC4/ADC.c ****             lastAgndTrim = agndTrim;
1790:Generated_Source\PSoC4/ADC.c ****         }
1791:Generated_Source\PSoC4/ADC.c ****         
1792:Generated_Source\PSoC4/ADC.c ****         return lastAgndTrim;
1793:Generated_Source\PSoC4/ADC.c ****     }
1794:Generated_Source\PSoC4/ADC.c ****     
1795:Generated_Source\PSoC4/ADC.c ****     
1796:Generated_Source\PSoC4/ADC.c ****     static uint32 ADC_SetOpampAndAgndTrim(uint32 opampTrim, uint32 agndTrim)
1797:Generated_Source\PSoC4/ADC.c ****     {
1798:Generated_Source\PSoC4/ADC.c ****         uint32 compStatus = 0uL;
1799:Generated_Source\PSoC4/ADC.c ****  
1800:Generated_Source\PSoC4/ADC.c ****         uint32 trimRegVal = ADC_UABH_A_OA_TRIM_REG;
1801:Generated_Source\PSoC4/ADC.c ****         trimRegVal &= ~(ADC_OPAMP_TRIM_MASK << CyUAB_OA_OFFSET_SHIFT);
1802:Generated_Source\PSoC4/ADC.c ****         trimRegVal |= (opampTrim << CyUAB_OA_OFFSET_SHIFT);
1803:Generated_Source\PSoC4/ADC.c ****         trimRegVal &= ~(ADC_AGND_TRIM_MASK << CyUAB_AGND_OFFSET_SHIFT);
1804:Generated_Source\PSoC4/ADC.c ****         trimRegVal |= (agndTrim << CyUAB_AGND_OFFSET_SHIFT);
1805:Generated_Source\PSoC4/ADC.c ****         ADC_UABH_A_OA_TRIM_REG = trimRegVal;
1806:Generated_Source\PSoC4/ADC.c ****         
1807:Generated_Source\PSoC4/ADC.c ****         CyDelayUs(100u);
1808:Generated_Source\PSoC4/ADC.c ****         
1809:Generated_Source\PSoC4/ADC.c ****         compStatus = ADC_UABH_B_STAT_REG & ADC_UABH_B_COMP_MASK;
1810:Generated_Source\PSoC4/ADC.c ****         
1811:Generated_Source\PSoC4/ADC.c ****         return compStatus;
1812:Generated_Source\PSoC4/ADC.c ****     }
1813:Generated_Source\PSoC4/ADC.c ****     
1814:Generated_Source\PSoC4/ADC.c ****     
1815:Generated_Source\PSoC4/ADC.c ****     static uint32 ADC_SetOpampTrim(uint32 opampTrim)
1816:Generated_Source\PSoC4/ADC.c ****     {
1817:Generated_Source\PSoC4/ADC.c ****         uint32 compStatus = 0uL;
1818:Generated_Source\PSoC4/ADC.c ****  
1819:Generated_Source\PSoC4/ADC.c ****         uint32 trimRegVal = ADC_UABH_A_OA_TRIM_REG;
1820:Generated_Source\PSoC4/ADC.c ****         trimRegVal &= ~(ADC_OPAMP_TRIM_MASK << CyUAB_OA_OFFSET_SHIFT);
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccogxpIC.s 			page 57


1821:Generated_Source\PSoC4/ADC.c ****         trimRegVal |= (opampTrim << CyUAB_OA_OFFSET_SHIFT);
1822:Generated_Source\PSoC4/ADC.c ****         ADC_UABH_A_OA_TRIM_REG = trimRegVal;
1823:Generated_Source\PSoC4/ADC.c ****         
1824:Generated_Source\PSoC4/ADC.c ****         CyDelayUs(100u);
1825:Generated_Source\PSoC4/ADC.c ****         
1826:Generated_Source\PSoC4/ADC.c ****         compStatus = ADC_UABH_B_STAT_REG & ADC_UABH_B_COMP_MASK;
1827:Generated_Source\PSoC4/ADC.c ****         
1828:Generated_Source\PSoC4/ADC.c ****         return compStatus;
1829:Generated_Source\PSoC4/ADC.c ****     }
1830:Generated_Source\PSoC4/ADC.c ****     
1831:Generated_Source\PSoC4/ADC.c ****     
1832:Generated_Source\PSoC4/ADC.c ****     static uint32 ADC_SetAgndTrim(uint32 agndTrim)
1833:Generated_Source\PSoC4/ADC.c ****     {
1834:Generated_Source\PSoC4/ADC.c ****         uint32 compStatus = 0uL;
1835:Generated_Source\PSoC4/ADC.c ****  
1836:Generated_Source\PSoC4/ADC.c ****         uint32 trimRegVal = ADC_UABH_A_OA_TRIM_REG;
1837:Generated_Source\PSoC4/ADC.c ****         trimRegVal &= ~(ADC_AGND_TRIM_MASK << CyUAB_AGND_OFFSET_SHIFT);
1838:Generated_Source\PSoC4/ADC.c ****         trimRegVal |= (agndTrim << CyUAB_AGND_OFFSET_SHIFT);
1839:Generated_Source\PSoC4/ADC.c ****         ADC_UABH_A_OA_TRIM_REG = trimRegVal;
1840:Generated_Source\PSoC4/ADC.c ****         
1841:Generated_Source\PSoC4/ADC.c ****         CyDelayUs(100u);
1842:Generated_Source\PSoC4/ADC.c ****         
1843:Generated_Source\PSoC4/ADC.c ****         compStatus = ADC_UABH_B_STAT_REG & ADC_UABH_B_COMP_MASK;
1844:Generated_Source\PSoC4/ADC.c ****         
1845:Generated_Source\PSoC4/ADC.c ****         return compStatus;
1846:Generated_Source\PSoC4/ADC.c ****     }
1847:Generated_Source\PSoC4/ADC.c ****     
1848:Generated_Source\PSoC4/ADC.c ****     /* Skips OPAMP_TRIM_NEG_BASE because it is the same as POS_BASE. */
1849:Generated_Source\PSoC4/ADC.c ****     static uint32 ADC_IncOpampTrim(uint32 trim)
1850:Generated_Source\PSoC4/ADC.c ****     {
1851:Generated_Source\PSoC4/ADC.c ****         
1852:Generated_Source\PSoC4/ADC.c ****         if (trim < (ADC_OPAMP_TRIM_POS_LIMIT - 1uL))
1853:Generated_Source\PSoC4/ADC.c ****         {
1854:Generated_Source\PSoC4/ADC.c ****             trim = trim + 1uL;
1855:Generated_Source\PSoC4/ADC.c ****         }
1856:Generated_Source\PSoC4/ADC.c ****         else if ((ADC_OPAMP_TRIM_POS_LIMIT - 1uL) == trim)
1857:Generated_Source\PSoC4/ADC.c ****         {
1858:Generated_Source\PSoC4/ADC.c ****             trim = ADC_OPAMP_TRIM_NEG_LIMIT;
1859:Generated_Source\PSoC4/ADC.c ****         }
1860:Generated_Source\PSoC4/ADC.c ****         else if (trim <= (ADC_OPAMP_TRIM_NEG_BASE + 1uL))
1861:Generated_Source\PSoC4/ADC.c ****         {
1862:Generated_Source\PSoC4/ADC.c ****             trim = ADC_OPAMP_TRIM_POS_BASE;
1863:Generated_Source\PSoC4/ADC.c ****         }
1864:Generated_Source\PSoC4/ADC.c ****         else
1865:Generated_Source\PSoC4/ADC.c ****         {
1866:Generated_Source\PSoC4/ADC.c ****             trim = trim - 1uL;
1867:Generated_Source\PSoC4/ADC.c ****         }
1868:Generated_Source\PSoC4/ADC.c ****         
1869:Generated_Source\PSoC4/ADC.c ****         return trim;
1870:Generated_Source\PSoC4/ADC.c ****     }
1871:Generated_Source\PSoC4/ADC.c **** 
1872:Generated_Source\PSoC4/ADC.c **** 
1873:Generated_Source\PSoC4/ADC.c ****     /* Skips OPAMP_TRIM_NEG_BASE because it is the same as POS_BASE. */
1874:Generated_Source\PSoC4/ADC.c ****     static uint32 ADC_DecOpampTrim(uint32 trim)
1875:Generated_Source\PSoC4/ADC.c ****     {
1876:Generated_Source\PSoC4/ADC.c ****         
1877:Generated_Source\PSoC4/ADC.c ****         if (ADC_OPAMP_TRIM_POS_BASE == trim)
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccogxpIC.s 			page 58


1878:Generated_Source\PSoC4/ADC.c ****         {
1879:Generated_Source\PSoC4/ADC.c ****             trim = ADC_OPAMP_TRIM_NEG_BASE + 1uL;
1880:Generated_Source\PSoC4/ADC.c ****         }
1881:Generated_Source\PSoC4/ADC.c ****         else if (trim < ADC_OPAMP_TRIM_POS_LIMIT)
1882:Generated_Source\PSoC4/ADC.c ****         {
1883:Generated_Source\PSoC4/ADC.c ****             trim = trim - 1uL;
1884:Generated_Source\PSoC4/ADC.c ****         }
1885:Generated_Source\PSoC4/ADC.c ****         else if (trim < ADC_OPAMP_TRIM_NEG_LIMIT)
1886:Generated_Source\PSoC4/ADC.c ****         {
1887:Generated_Source\PSoC4/ADC.c ****             trim = trim + 1uL;
1888:Generated_Source\PSoC4/ADC.c ****         }
1889:Generated_Source\PSoC4/ADC.c ****         else
1890:Generated_Source\PSoC4/ADC.c ****         {
1891:Generated_Source\PSoC4/ADC.c ****             trim = ADC_OPAMP_TRIM_POS_LIMIT - 1uL;
1892:Generated_Source\PSoC4/ADC.c ****         }
1893:Generated_Source\PSoC4/ADC.c ****         
1894:Generated_Source\PSoC4/ADC.c ****         return trim;
1895:Generated_Source\PSoC4/ADC.c ****     }
1896:Generated_Source\PSoC4/ADC.c **** 
1897:Generated_Source\PSoC4/ADC.c **** 
1898:Generated_Source\PSoC4/ADC.c ****     /* Skips AGND_TRIM_NEG_BASE because it is the same as POS_BASE. */
1899:Generated_Source\PSoC4/ADC.c ****     static uint32 ADC_IncAgndTrim(uint32 trim)
1900:Generated_Source\PSoC4/ADC.c ****     {
1901:Generated_Source\PSoC4/ADC.c ****         
1902:Generated_Source\PSoC4/ADC.c ****         if (trim < (ADC_AGND_TRIM_POS_LIMIT - 1uL))
1903:Generated_Source\PSoC4/ADC.c ****         {
1904:Generated_Source\PSoC4/ADC.c ****             trim = trim + 1uL;
1905:Generated_Source\PSoC4/ADC.c ****         }
1906:Generated_Source\PSoC4/ADC.c ****         else if ((ADC_AGND_TRIM_POS_LIMIT - 1uL) == trim)
1907:Generated_Source\PSoC4/ADC.c ****         {
1908:Generated_Source\PSoC4/ADC.c ****             trim = ADC_AGND_TRIM_NEG_LIMIT;
1909:Generated_Source\PSoC4/ADC.c ****         }
1910:Generated_Source\PSoC4/ADC.c ****         else if (trim <= (ADC_AGND_TRIM_NEG_BASE + 1uL))
1911:Generated_Source\PSoC4/ADC.c ****         {
1912:Generated_Source\PSoC4/ADC.c ****             trim = ADC_AGND_TRIM_POS_BASE;
1913:Generated_Source\PSoC4/ADC.c ****         }
1914:Generated_Source\PSoC4/ADC.c ****         else
1915:Generated_Source\PSoC4/ADC.c ****         {
1916:Generated_Source\PSoC4/ADC.c ****             trim = trim - 1uL;
1917:Generated_Source\PSoC4/ADC.c ****         }
1918:Generated_Source\PSoC4/ADC.c ****         
1919:Generated_Source\PSoC4/ADC.c ****         return trim;
1920:Generated_Source\PSoC4/ADC.c ****     }
1921:Generated_Source\PSoC4/ADC.c **** 
1922:Generated_Source\PSoC4/ADC.c **** 
1923:Generated_Source\PSoC4/ADC.c ****     /* Skips ADC_AGND_TRIM_NEG_BASE because it is the same as POS_BASE. */
1924:Generated_Source\PSoC4/ADC.c ****     static uint32 ADC_DecAgndTrim(uint32 trim)
1925:Generated_Source\PSoC4/ADC.c ****     {
1926:Generated_Source\PSoC4/ADC.c ****         
1927:Generated_Source\PSoC4/ADC.c ****         if (trim == ADC_AGND_TRIM_POS_BASE)
1928:Generated_Source\PSoC4/ADC.c ****         {
1929:Generated_Source\PSoC4/ADC.c ****             trim = ADC_AGND_TRIM_NEG_BASE + 1uL;
1930:Generated_Source\PSoC4/ADC.c ****         }
1931:Generated_Source\PSoC4/ADC.c ****         else if (trim < ADC_AGND_TRIM_POS_LIMIT)
1932:Generated_Source\PSoC4/ADC.c ****         {
1933:Generated_Source\PSoC4/ADC.c ****             trim = trim - 1uL;
1934:Generated_Source\PSoC4/ADC.c ****         }
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccogxpIC.s 			page 59


1935:Generated_Source\PSoC4/ADC.c ****         else if (trim < ADC_AGND_TRIM_NEG_LIMIT)
1936:Generated_Source\PSoC4/ADC.c ****         {
1937:Generated_Source\PSoC4/ADC.c ****             trim = trim + 1uL;
1938:Generated_Source\PSoC4/ADC.c ****         }
1939:Generated_Source\PSoC4/ADC.c ****         else
1940:Generated_Source\PSoC4/ADC.c ****         {
1941:Generated_Source\PSoC4/ADC.c ****             trim = ADC_AGND_TRIM_POS_LIMIT - 1uL;
1942:Generated_Source\PSoC4/ADC.c ****         }
1943:Generated_Source\PSoC4/ADC.c ****         
1944:Generated_Source\PSoC4/ADC.c ****         return trim;
1945:Generated_Source\PSoC4/ADC.c ****     }
1946:Generated_Source\PSoC4/ADC.c **** 
1947:Generated_Source\PSoC4/ADC.c ****     
1948:Generated_Source\PSoC4/ADC.c ****     void ADC_filterInit(uint32 configNum)
1949:Generated_Source\PSoC4/ADC.c ****     {
1950:Generated_Source\PSoC4/ADC.c ****         /* Configure the common filter settings if any configuration filters */
1951:Generated_Source\PSoC4/ADC.c ****         switch (configNum)
1952:Generated_Source\PSoC4/ADC.c ****         {
1953:Generated_Source\PSoC4/ADC.c ****             #if (0u != ADC_CFG0_FILTER_PRESENT)
1954:Generated_Source\PSoC4/ADC.c ****             case 0u:
1955:Generated_Source\PSoC4/ADC.c ****     		    ADC_UABH_A_Init(&ADC_CFG0_UABH_A_FILTER_config);
1956:Generated_Source\PSoC4/ADC.c ****     		    ADC_UABH_B_Init(&ADC_CFG0_UABH_B_FILTER_config);
1957:Generated_Source\PSoC4/ADC.c ****                 
1958:Generated_Source\PSoC4/ADC.c ****             break;
1959:Generated_Source\PSoC4/ADC.c ****             #endif
1960:Generated_Source\PSoC4/ADC.c ****             #if (0u != ADC_CFG1_FILTER_PRESENT)
1961:Generated_Source\PSoC4/ADC.c ****             case 1u:
1962:Generated_Source\PSoC4/ADC.c ****     		    ADC_UABH_A_Init(&ADC_CFG1_UABH_A_FILTER_config);
1963:Generated_Source\PSoC4/ADC.c ****     		    ADC_UABH_B_Init(&ADC_CFG1_UABH_B_FILTER_config);
1964:Generated_Source\PSoC4/ADC.c ****                 
1965:Generated_Source\PSoC4/ADC.c ****             break;
1966:Generated_Source\PSoC4/ADC.c ****             #endif
1967:Generated_Source\PSoC4/ADC.c ****             #if (0u != ADC_CFG2_FILTER_PRESENT)
1968:Generated_Source\PSoC4/ADC.c ****             case 2u:
1969:Generated_Source\PSoC4/ADC.c ****     		    ADC_UABH_A_Init(&ADC_CFG2_UABH_A_FILTER_config);
1970:Generated_Source\PSoC4/ADC.c ****     		    ADC_UABH_B_Init(&ADC_CFG2_UABH_B_FILTER_config);
1971:Generated_Source\PSoC4/ADC.c ****                 
1972:Generated_Source\PSoC4/ADC.c ****             break;
1973:Generated_Source\PSoC4/ADC.c ****             #endif
1974:Generated_Source\PSoC4/ADC.c ****             #if (0u != ADC_CFG3_FILTER_PRESENT)
1975:Generated_Source\PSoC4/ADC.c ****             case 3u:
1976:Generated_Source\PSoC4/ADC.c ****     		    ADC_UABH_A_Init(&ADC_CFG3_UABH_A_FILTER_config);
1977:Generated_Source\PSoC4/ADC.c ****     		    ADC_UABH_B_Init(&ADC_CFG3_UABH_B_FILTER_config);
1978:Generated_Source\PSoC4/ADC.c ****                 
1979:Generated_Source\PSoC4/ADC.c ****             break;
1980:Generated_Source\PSoC4/ADC.c ****             #endif
1981:Generated_Source\PSoC4/ADC.c ****             default:
1982:Generated_Source\PSoC4/ADC.c ****             break;
1983:Generated_Source\PSoC4/ADC.c ****         }
1984:Generated_Source\PSoC4/ADC.c ****         ADC_FILTERAGND2SAR_BUFFER_Init();
1985:Generated_Source\PSoC4/ADC.c ****     }
1986:Generated_Source\PSoC4/ADC.c **** #endif /* ADC_ANY_CONFIG_USES_FILTER != 0u */
1987:Generated_Source\PSoC4/ADC.c **** 
1988:Generated_Source\PSoC4/ADC.c **** 
1989:Generated_Source\PSoC4/ADC.c **** /* ****************************************************************************
1990:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_Init
1991:Generated_Source\PSoC4/ADC.c **** ****************************************************************************//*
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccogxpIC.s 			page 60


1992:Generated_Source\PSoC4/ADC.c **** *
1993:Generated_Source\PSoC4/ADC.c **** * \brief Initialize the component according to parameters defined in the 
1994:Generated_Source\PSoC4/ADC.c **** * customizer.
1995:Generated_Source\PSoC4/ADC.c **** *
1996:Generated_Source\PSoC4/ADC.c **** * \param None
1997:Generated_Source\PSoC4/ADC.c **** * 
1998:Generated_Source\PSoC4/ADC.c **** * \return None
1999:Generated_Source\PSoC4/ADC.c **** *
2000:Generated_Source\PSoC4/ADC.c **** * \sideeffect None
2001:Generated_Source\PSoC4/ADC.c **** *
2002:Generated_Source\PSoC4/ADC.c **** * <b>Code Snippet</b>
2003:Generated_Source\PSoC4/ADC.c **** *  \snippet main.c snippet_ADC_Init
2004:Generated_Source\PSoC4/ADC.c **** *
2005:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
2006:Generated_Source\PSoC4/ADC.c **** void ADC_Init(void)
2007:Generated_Source\PSoC4/ADC.c **** {
 1245              		.loc 1 2007 0
 1246              		.cfi_startproc
 1247              	.LVL102:
 1248 0000 F7B5     		push	{r0, r1, r2, r4, r5, r6, r7, lr}
 1249              		.cfi_def_cfa_offset 32
 1250              		.cfi_offset 0, -32
 1251              		.cfi_offset 1, -28
 1252              		.cfi_offset 2, -24
 1253              		.cfi_offset 4, -20
 1254              		.cfi_offset 5, -16
 1255              		.cfi_offset 6, -12
 1256              		.cfi_offset 7, -8
 1257              		.cfi_offset 14, -4
2008:Generated_Source\PSoC4/ADC.c **** 	uint32 chNum = 0ul;
2009:Generated_Source\PSoC4/ADC.c **** 	uint32 configNum = 0u;
2010:Generated_Source\PSoC4/ADC.c **** 	int32 counts;
2011:Generated_Source\PSoC4/ADC.c **** 	
2012:Generated_Source\PSoC4/ADC.c **** 	if(0u == ADC_initVar)
 1258              		.loc 1 2012 0
 1259 0002 324B     		ldr	r3, .L129
 1260 0004 1D79     		ldrb	r5, [r3, #4]
 1261 0006 0193     		str	r3, [sp, #4]
 1262 0008 2C1E     		sub	r4, r5, #0
 1263 000a 5DD1     		bne	.L112
 1264              	.L113:
 1265              	.LVL103:
 1266              	.LBB17:
 1267              	.LBB18:
2013:Generated_Source\PSoC4/ADC.c **** 	{
2014:Generated_Source\PSoC4/ADC.c **** 		/* Set offset and countsPer10Volt for all channels */
2015:Generated_Source\PSoC4/ADC.c **** 		for(chNum = 0ul; chNum < ADC_TOTAL_CHANNELS_NUM; chNum++)
2016:Generated_Source\PSoC4/ADC.c **** 		{      
2017:Generated_Source\PSoC4/ADC.c **** 			if((ADC_channelsConfig[chNum] & ADC_SAR_CHAN_CONFIG_RESOLUTION_MSK) != 0u)
 1268              		.loc 1 2017 0
 1269 000c 304B     		ldr	r3, .L129+4
 1270 000e A200     		lsl	r2, r4, #2
 1271 0010 D058     		ldr	r0, [r2, r3]
 1272 0012 304E     		ldr	r6, .L129+8
 1273 0014 8305     		lsl	r3, r0, #22
 1274 0016 08D5     		bpl	.L122
2018:Generated_Source\PSoC4/ADC.c ****         	{
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccogxpIC.s 			page 61


2019:Generated_Source\PSoC4/ADC.c **** 				if((ADC_allConfigs[configNum].sampleCtrl 
 1275              		.loc 1 2019 0
 1276 0018 3823     		mov	r3, #56
 1277 001a 6B43     		mul	r3, r5
 1278 001c F318     		add	r3, r6, r3
2020:Generated_Source\PSoC4/ADC.c **** 					& ADC_SAR_SAMPLE_CTRL_SUB_RESOLUTION_MSK) 
 1279              		.loc 1 2020 0
 1280 001e DB68     		ldr	r3, [r3, #12]
2021:Generated_Source\PSoC4/ADC.c **** 					== ADC_SUB_RESOLUTION_10B)
2022:Generated_Source\PSoC4/ADC.c **** 				{
2023:Generated_Source\PSoC4/ADC.c **** 					counts = (int32) ADC_SAR_WRK_MAX_10BIT;
 1281              		.loc 1 2023 0
 1282 0020 8022     		mov	r2, #128
2019:Generated_Source\PSoC4/ADC.c **** 					& ADC_SAR_SAMPLE_CTRL_SUB_RESOLUTION_MSK) 
 1283              		.loc 1 2019 0
 1284 0022 DB07     		lsl	r3, r3, #31
 1285 0024 04D4     		bmi	.L123
2024:Generated_Source\PSoC4/ADC.c **** 				}
2025:Generated_Source\PSoC4/ADC.c **** 				else
2026:Generated_Source\PSoC4/ADC.c **** 				{
2027:Generated_Source\PSoC4/ADC.c **** 					counts = (int32) ADC_SAR_WRK_MAX_8BIT;
 1286              		.loc 1 2027 0
 1287 0026 5200     		lsl	r2, r2, #1
 1288 0028 03E0     		b	.L115
 1289              	.L122:
2028:Generated_Source\PSoC4/ADC.c **** 				}
2029:Generated_Source\PSoC4/ADC.c ****         	}
2030:Generated_Source\PSoC4/ADC.c ****         	else
2031:Generated_Source\PSoC4/ADC.c ****         	{
2032:Generated_Source\PSoC4/ADC.c ****                counts = (int32)ADC_SAR_WRK_MAX_12BIT;
 1290              		.loc 1 2032 0
 1291 002a 8022     		mov	r2, #128
 1292 002c 5201     		lsl	r2, r2, #5
 1293 002e 00E0     		b	.L115
 1294              	.L123:
2023:Generated_Source\PSoC4/ADC.c **** 				}
 1295              		.loc 1 2023 0
 1296 0030 D200     		lsl	r2, r2, #3
 1297              	.L115:
 1298              	.LVL104:
 1299 0032 2949     		ldr	r1, .L129+12
2033:Generated_Source\PSoC4/ADC.c ****         	}
2034:Generated_Source\PSoC4/ADC.c **** 			
2035:Generated_Source\PSoC4/ADC.c **** 			/* Single Ended Channel */
2036:Generated_Source\PSoC4/ADC.c **** 			if((ADC_channelsConfig[chNum] & ADC_SAR_CHAN_CONFIG_DIFFERENTIAL_EN_MSK) == 0u)
 1300              		.loc 1 2036 0
 1301 0034 C305     		lsl	r3, r0, #23
 1302 0036 11D4     		bmi	.L116
2037:Generated_Source\PSoC4/ADC.c ****         	{
2038:Generated_Source\PSoC4/ADC.c **** 				if(((ADC_allConfigs[configNum].sampleCtrl 
 1303              		.loc 1 2038 0
 1304 0038 3823     		mov	r3, #56
 1305 003a 6B43     		mul	r3, r5
 1306 003c F318     		add	r3, r6, r3
 1307 003e D868     		ldr	r0, [r3, #12]
 1308 0040 4007     		lsl	r0, r0, #29
 1309 0042 0BD5     		bpl	.L116
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccogxpIC.s 			page 62


2039:Generated_Source\PSoC4/ADC.c **** 					& ADC_SAR_SAMPLE_CTRL_SINGLE_ENDED_SIGNED_MSK) 
2040:Generated_Source\PSoC4/ADC.c **** 					== ADC_SAR_SAMPLE_CTRL_SINGLE_ENDED_SIGNED_MSK) && 
2041:Generated_Source\PSoC4/ADC.c **** 					((ADC_allConfigs[configNum].ctrl & ADC_SAR_CTRL_NEG_SEL_MSK) 
 1310              		.loc 1 2041 0
 1311 0044 E020     		mov	r0, #224
 1312 0046 9B68     		ldr	r3, [r3, #8]
 1313 0048 0001     		lsl	r0, r0, #4
 1314 004a 0340     		and	r3, r0
2040:Generated_Source\PSoC4/ADC.c **** 					((ADC_allConfigs[configNum].ctrl & ADC_SAR_CTRL_NEG_SEL_MSK) 
 1315              		.loc 1 2040 0
 1316 004c 8342     		cmp	r3, r0
 1317 004e 05D1     		bne	.L116
2042:Generated_Source\PSoC4/ADC.c **** 					== ADC_NEG_VREF_SHIFTED))
2043:Generated_Source\PSoC4/ADC.c **** 				{
2044:Generated_Source\PSoC4/ADC.c **** 					/* Set offset to the minus half scale to convert results to unsigned format */
2045:Generated_Source\PSoC4/ADC.c ****                 	ADC_offset[chNum] = (int16)(counts / -2);		
 1318              		.loc 1 2045 0
 1319 0050 5308     		lsr	r3, r2, #1
 1320 0052 5B42     		neg	r3, r3
 1321 0054 9BB2     		uxth	r3, r3
 1322 0056 6000     		lsl	r0, r4, #1
 1323 0058 0B52     		strh	r3, [r1, r0]
 1324 005a 02E0     		b	.L118
 1325              	.L116:
2046:Generated_Source\PSoC4/ADC.c ****             	}
2047:Generated_Source\PSoC4/ADC.c **** 				else
2048:Generated_Source\PSoC4/ADC.c **** 				{
2049:Generated_Source\PSoC4/ADC.c ****                 	ADC_offset[chNum] = 0;	
2050:Generated_Source\PSoC4/ADC.c **** 				}
2051:Generated_Source\PSoC4/ADC.c **** 				
2052:Generated_Source\PSoC4/ADC.c **** 			}
2053:Generated_Source\PSoC4/ADC.c **** 			else    /* Differential channel */
2054:Generated_Source\PSoC4/ADC.c ****         	{
2055:Generated_Source\PSoC4/ADC.c ****                	ADC_offset[chNum] = 0; 
 1326              		.loc 1 2055 0
 1327 005c 0020     		mov	r0, #0
 1328 005e 6300     		lsl	r3, r4, #1
 1329 0060 C852     		strh	r0, [r1, r3]
 1330              	.L118:
2056:Generated_Source\PSoC4/ADC.c **** 			}
2057:Generated_Source\PSoC4/ADC.c ****             
2058:Generated_Source\PSoC4/ADC.c **** 			/* Calculate gain in counts per 10 volts with rounding */
2059:Generated_Source\PSoC4/ADC.c ****         	ADC_countsPer10Volt[chNum] = (int16)(((counts * ADC_10MV_COUNTS) \
2060:Generated_Source\PSoC4/ADC.c ****                             + ADC_allConfigs[configNum].vrefMvValue) \
 1331              		.loc 1 2060 0
 1332 0062 3823     		mov	r3, #56
 1333 0064 6B43     		mul	r3, r5
2059:Generated_Source\PSoC4/ADC.c ****                             + ADC_allConfigs[configNum].vrefMvValue) \
 1334              		.loc 1 2059 0
 1335 0066 1D48     		ldr	r0, .L129+16
 1336              		.loc 1 2060 0
 1337 0068 F718     		add	r7, r6, r3
2059:Generated_Source\PSoC4/ADC.c ****                             + ADC_allConfigs[configNum].vrefMvValue) \
 1338              		.loc 1 2059 0
 1339 006a 5043     		mul	r0, r2
 1340              		.loc 1 2060 0
 1341 006c F96A     		ldr	r1, [r7, #44]
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccogxpIC.s 			page 63


 1342 006e 0093     		str	r3, [sp]
 1343 0070 4018     		add	r0, r0, r1
2061:Generated_Source\PSoC4/ADC.c **** 							/ (ADC_allConfigs[configNum].vrefMvValue * 2));
 1344              		.loc 1 2061 0
 1345 0072 4900     		lsl	r1, r1, #1
 1346 0074 FFF7FEFF 		bl	__aeabi_idiv
 1347              	.LVL105:
2059:Generated_Source\PSoC4/ADC.c ****                             + ADC_allConfigs[configNum].vrefMvValue) \
 1348              		.loc 1 2059 0
 1349 0078 194A     		ldr	r2, .L129+20
 1350 007a A300     		lsl	r3, r4, #2
 1351 007c 00B2     		sxth	r0, r0
 1352 007e 9850     		str	r0, [r3, r2]
2062:Generated_Source\PSoC4/ADC.c ****             
2063:Generated_Source\PSoC4/ADC.c ****             /* Increment configuration number after rolling over to the next configuration*/
2064:Generated_Source\PSoC4/ADC.c **** 			if((ADC_allConfigs[configNum].channelBase
2065:Generated_Source\PSoC4/ADC.c **** 				+ (ADC_allConfigs[configNum].numChannels - 1uL)) == chNum)
 1353              		.loc 1 2065 0
 1354 0080 009B     		ldr	r3, [sp]
 1355 0082 F258     		ldr	r2, [r6, r3]
 1356 0084 7B68     		ldr	r3, [r7, #4]
 1357 0086 D318     		add	r3, r2, r3
 1358 0088 013B     		sub	r3, r3, #1
2066:Generated_Source\PSoC4/ADC.c **** 			{
2067:Generated_Source\PSoC4/ADC.c **** 				configNum++;
 1359              		.loc 1 2067 0
 1360 008a 1B1B     		sub	r3, r3, r4
 1361 008c 5942     		neg	r1, r3
 1362 008e 5941     		adc	r1, r1, r3
 1363 0090 6D18     		add	r5, r5, r1
 1364              	.LVL106:
2015:Generated_Source\PSoC4/ADC.c **** 		{      
 1365              		.loc 1 2015 0
 1366 0092 012C     		cmp	r4, #1
 1367 0094 01D0     		beq	.L128
 1368 0096 0124     		mov	r4, #1
 1369              	.LVL107:
 1370 0098 B8E7     		b	.L113
 1371              	.LVL108:
 1372              	.L128:
2068:Generated_Source\PSoC4/ADC.c **** 			}
2069:Generated_Source\PSoC4/ADC.c **** 		} /* for(chNum = 0ul; chNum < ADC_TOTAL_CHANNELS_NUM; chNum++) */
2070:Generated_Source\PSoC4/ADC.c ****         
2071:Generated_Source\PSoC4/ADC.c ****         #if(ADC_IRQ_REMOVE == 0u)
2072:Generated_Source\PSoC4/ADC.c ****             /* Start and set interrupt vector */
2073:Generated_Source\PSoC4/ADC.c ****             CyIntSetPriority(ADC_INTC_NUMBER, ADC_INTC_PRIOR_NUMBER);
 1373              		.loc 1 2073 0
 1374 009a 0F20     		mov	r0, #15
 1375 009c 0321     		mov	r1, #3
 1376 009e FFF7FEFF 		bl	CyIntSetPriority
 1377              	.LVL109:
2074:Generated_Source\PSoC4/ADC.c ****             (void)CyIntSetVector(ADC_INTC_NUMBER, &ADC_ISR);
 1378              		.loc 1 2074 0
 1379 00a2 0F20     		mov	r0, #15
 1380 00a4 0F49     		ldr	r1, .L129+24
 1381 00a6 FFF7FEFF 		bl	CyIntSetVector
 1382              	.LVL110:
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccogxpIC.s 			page 64


2075:Generated_Source\PSoC4/ADC.c ****         #endif   /* End ADC_IRQ_REMOVE */
2076:Generated_Source\PSoC4/ADC.c ****         
2077:Generated_Source\PSoC4/ADC.c ****         /* Initialize configuration zero if SelectConfig has not been called */
2078:Generated_Source\PSoC4/ADC.c ****         if(0u == ADC_selected)
 1383              		.loc 1 2078 0
 1384 00aa 019B     		ldr	r3, [sp, #4]
 1385 00ac 5B79     		ldrb	r3, [r3, #5]
 1386 00ae 002B     		cmp	r3, #0
 1387 00b0 0AD1     		bne	.L112
2079:Generated_Source\PSoC4/ADC.c **** 	    {
2080:Generated_Source\PSoC4/ADC.c ****             ADC_selected = 1u;
 1388              		.loc 1 2080 0
 1389 00b2 019B     		ldr	r3, [sp, #4]
 1390 00b4 5C71     		strb	r4, [r3, #5]
 1391              	.LVL111:
2081:Generated_Source\PSoC4/ADC.c ****             configNum = 0u;
2082:Generated_Source\PSoC4/ADC.c ****             /* Change Vref selection if is was routed by Creator. Break. */
2083:Generated_Source\PSoC4/ADC.c ****             #if (ADC_VREF_ROUTED)
2084:Generated_Source\PSoC4/ADC.c ****                 ADC_vrefAMux_DisconnectAll();
2085:Generated_Source\PSoC4/ADC.c ****             #endif
2086:Generated_Source\PSoC4/ADC.c ****             ADC_InitConfig(&ADC_allConfigs[configNum]);
 1392              		.loc 1 2086 0
 1393 00b6 074C     		ldr	r4, .L129+8
 1394              	.LVL112:
 1395 00b8 201C     		mov	r0, r4
 1396 00ba FFF7FEFF 		bl	ADC_InitConfig
 1397              	.LVL113:
2087:Generated_Source\PSoC4/ADC.c ****             /* Change Vref selection if is was routed by Creator. Make. */
2088:Generated_Source\PSoC4/ADC.c ****             #if (ADC_VREF_ROUTED)
2089:Generated_Source\PSoC4/ADC.c ****                 ADC_vrefAMux_Select((uint8)configNum);
2090:Generated_Source\PSoC4/ADC.c ****             #endif
2091:Generated_Source\PSoC4/ADC.c ****             ADC_SAR_CHAN_EN_REG = ADC_allConfigs[configNum].chanEn;
 1398              		.loc 1 2091 0
 1399 00be 236A     		ldr	r3, [r4, #32]
 1400 00c0 0093     		str	r3, [sp]
 1401 00c2 009A     		ldr	r2, [sp]
 1402 00c4 084B     		ldr	r3, .L129+28
 1403 00c6 1A60     		str	r2, [r3]
 1404              	.LVL114:
 1405              	.L112:
 1406              	.LBE18:
 1407              	.LBE17:
2092:Generated_Source\PSoC4/ADC.c ****             #if(0u != ADC_ANY_CONFIG_USES_FILTER)	
2093:Generated_Source\PSoC4/ADC.c ****                 ADC_filterVinMux_Select((uint8)configNum);
2094:Generated_Source\PSoC4/ADC.c ****                 ADC_filterInit(configNum);
2095:Generated_Source\PSoC4/ADC.c ****             #endif
2096:Generated_Source\PSoC4/ADC.c ****         }           
2097:Generated_Source\PSoC4/ADC.c **** 	}
2098:Generated_Source\PSoC4/ADC.c ****     return;
2099:Generated_Source\PSoC4/ADC.c **** }
 1408              		.loc 1 2099 0
 1409              		@ sp needed
 1410 00c8 F7BD     		pop	{r0, r1, r2, r4, r5, r6, r7, pc}
 1411              	.L130:
 1412 00ca C046     		.align	2
 1413              	.L129:
 1414 00cc 00000000 		.word	.LANCHOR0
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccogxpIC.s 			page 65


 1415 00d0 00000000 		.word	.LANCHOR1
 1416 00d4 00000000 		.word	ADC_allConfigs
 1417 00d8 00000000 		.word	ADC_offset
 1418 00dc 10270000 		.word	10000
 1419 00e0 00000000 		.word	ADC_countsPer10Volt
 1420 00e4 00000000 		.word	ADC_ISR
 1421 00e8 20003A40 		.word	1077542944
 1422              		.cfi_endproc
 1423              	.LFE25:
 1424              		.size	ADC_Init, .-ADC_Init
 1425              		.section	.text.ADC_Enable,"ax",%progbits
 1426              		.align	1
 1427              		.global	ADC_Enable
 1428              		.code	16
 1429              		.thumb_func
 1430              		.type	ADC_Enable, %function
 1431              	ADC_Enable:
 1432              	.LFB26:
2100:Generated_Source\PSoC4/ADC.c **** 
2101:Generated_Source\PSoC4/ADC.c **** 
2102:Generated_Source\PSoC4/ADC.c **** /* ****************************************************************************
2103:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_Enable
2104:Generated_Source\PSoC4/ADC.c **** ****************************************************************************//*
2105:Generated_Source\PSoC4/ADC.c **** *
2106:Generated_Source\PSoC4/ADC.c **** * \brief Enables the component. 
2107:Generated_Source\PSoC4/ADC.c **** *
2108:Generated_Source\PSoC4/ADC.c **** * \param None
2109:Generated_Source\PSoC4/ADC.c **** * 
2110:Generated_Source\PSoC4/ADC.c **** * \return None
2111:Generated_Source\PSoC4/ADC.c **** * 
2112:Generated_Source\PSoC4/ADC.c **** * \sideeffect
2113:Generated_Source\PSoC4/ADC.c **** *  None
2114:Generated_Source\PSoC4/ADC.c **** *
2115:Generated_Source\PSoC4/ADC.c **** * <b>Code Snippet</b>
2116:Generated_Source\PSoC4/ADC.c **** *  \snippet main.c snippet_ADC_Enable
2117:Generated_Source\PSoC4/ADC.c **** *
2118:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
2119:Generated_Source\PSoC4/ADC.c **** void ADC_Enable(void) 
2120:Generated_Source\PSoC4/ADC.c **** {
 1433              		.loc 1 2120 0
 1434              		.cfi_startproc
 1435 0000 08B5     		push	{r3, lr}
 1436              		.cfi_def_cfa_offset 8
 1437              		.cfi_offset 3, -8
 1438              		.cfi_offset 14, -4
2121:Generated_Source\PSoC4/ADC.c **** 
2122:Generated_Source\PSoC4/ADC.c ****     #if(0u != ADC_ANY_CONFIG_USES_FILTER)	
2123:Generated_Source\PSoC4/ADC.c ****     	if((ADC_allConfigs[ADC_currentConfig].miscConfig
2124:Generated_Source\PSoC4/ADC.c ****     		& ADC_MISC_CONFIG_FILTER_PRESENT_MSK)
2125:Generated_Source\PSoC4/ADC.c ****     		== ADC_MISC_CONFIG_FILTER_PRESENT_MSK)
2126:Generated_Source\PSoC4/ADC.c ****     	{
2127:Generated_Source\PSoC4/ADC.c ****             ADC_FILTERAGND2SAR_BUFFER_Enable();
2128:Generated_Source\PSoC4/ADC.c ****     		ADC_UABH_A_Enable();
2129:Generated_Source\PSoC4/ADC.c ****     		ADC_UABH_B_Enable();
2130:Generated_Source\PSoC4/ADC.c ****             ADC_UABH_B_Run(1u);
2131:Generated_Source\PSoC4/ADC.c ****             ADC_UABH_A_Run(1u);
2132:Generated_Source\PSoC4/ADC.c ****     	}
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccogxpIC.s 			page 66


2133:Generated_Source\PSoC4/ADC.c ****     #endif /* ADC_ANY_CONFIG_USES_FILTER != 0u */
2134:Generated_Source\PSoC4/ADC.c ****         
2135:Generated_Source\PSoC4/ADC.c ****     if (0u == (ADC_SAR_CTRL_REG & ADC_SAR_CTRL_ENABLED_MSK))
 1439              		.loc 1 2135 0
 1440 0002 084B     		ldr	r3, .L134
 1441 0004 1A68     		ldr	r2, [r3]
 1442 0006 002A     		cmp	r2, #0
 1443 0008 0BDB     		blt	.L131
 1444              	.L133:
 1445              	.LBB21:
 1446              	.LBB22:
2136:Generated_Source\PSoC4/ADC.c ****     {
2137:Generated_Source\PSoC4/ADC.c ****         while (0u != (ADC_SAR_STATUS_REG & ADC_BUSY_MSK))
 1447              		.loc 1 2137 0
 1448 000a 074A     		ldr	r2, .L134+4
 1449 000c 1268     		ldr	r2, [r2]
 1450 000e 002A     		cmp	r2, #0
 1451 0010 FBDB     		blt	.L133
2138:Generated_Source\PSoC4/ADC.c ****         {
2139:Generated_Source\PSoC4/ADC.c ****             /* wait for SAR to go idle to avoid deadlock */
2140:Generated_Source\PSoC4/ADC.c ****         }
2141:Generated_Source\PSoC4/ADC.c ****         
2142:Generated_Source\PSoC4/ADC.c ****         ADC_SAR_CTRL_REG |= ADC_SAR_CTRL_ENABLED_MSK;
 1452              		.loc 1 2142 0
 1453 0012 8021     		mov	r1, #128
 1454 0014 1A68     		ldr	r2, [r3]
 1455 0016 0906     		lsl	r1, r1, #24
 1456 0018 0A43     		orr	r2, r1
 1457 001a 1A60     		str	r2, [r3]
2143:Generated_Source\PSoC4/ADC.c ****         
2144:Generated_Source\PSoC4/ADC.c ****         /* The block is ready to use 10 us after the enable signal is set high. */
2145:Generated_Source\PSoC4/ADC.c ****         CyDelayUs(ADC_10US_DELAY);
 1458              		.loc 1 2145 0
 1459 001c 0A20     		mov	r0, #10
 1460 001e FFF7FEFF 		bl	CyDelayUs
 1461              	.LVL115:
 1462              	.L131:
 1463              	.LBE22:
 1464              	.LBE21:
2146:Generated_Source\PSoC4/ADC.c ****     }
2147:Generated_Source\PSoC4/ADC.c ****     return;
2148:Generated_Source\PSoC4/ADC.c **** }
 1465              		.loc 1 2148 0
 1466              		@ sp needed
 1467 0022 08BD     		pop	{r3, pc}
 1468              	.L135:
 1469              		.align	2
 1470              	.L134:
 1471 0024 00003A40 		.word	1077542912
 1472 0028 A0023A40 		.word	1077543584
 1473              		.cfi_endproc
 1474              	.LFE26:
 1475              		.size	ADC_Enable, .-ADC_Enable
 1476              		.section	.text.ADC_Start,"ax",%progbits
 1477              		.align	1
 1478              		.global	ADC_Start
 1479              		.code	16
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccogxpIC.s 			page 67


 1480              		.thumb_func
 1481              		.type	ADC_Start, %function
 1482              	ADC_Start:
 1483              	.LFB1:
 571:Generated_Source\PSoC4/ADC.c ****     if (ADC_INIT_VAR_INIT_FLAG != (ADC_INIT_VAR_INIT_FLAG & ADC_initVar))
 1484              		.loc 1 571 0
 1485              		.cfi_startproc
 1486 0000 38B5     		push	{r3, r4, r5, lr}
 1487              		.cfi_def_cfa_offset 16
 1488              		.cfi_offset 3, -16
 1489              		.cfi_offset 4, -12
 1490              		.cfi_offset 5, -8
 1491              		.cfi_offset 14, -4
 572:Generated_Source\PSoC4/ADC.c ****     {
 1492              		.loc 1 572 0
 1493 0002 0125     		mov	r5, #1
 1494 0004 054C     		ldr	r4, .L138
 1495 0006 2379     		ldrb	r3, [r4, #4]
 1496 0008 2B42     		tst	r3, r5
 1497 000a 04D1     		bne	.L137
 574:Generated_Source\PSoC4/ADC.c ****         ADC_initVar |= ADC_INIT_VAR_INIT_FLAG;
 1498              		.loc 1 574 0
 1499 000c FFF7FEFF 		bl	ADC_Init
 1500              	.LVL116:
 575:Generated_Source\PSoC4/ADC.c ****     }
 1501              		.loc 1 575 0
 1502 0010 2379     		ldrb	r3, [r4, #4]
 1503 0012 2B43     		orr	r3, r5
 1504 0014 2371     		strb	r3, [r4, #4]
 1505              	.L137:
 578:Generated_Source\PSoC4/ADC.c ****     
 1506              		.loc 1 578 0
 1507 0016 FFF7FEFF 		bl	ADC_Enable
 1508              	.LVL117:
 581:Generated_Source\PSoC4/ADC.c **** 
 1509              		.loc 1 581 0
 1510              		@ sp needed
 1511 001a 38BD     		pop	{r3, r4, r5, pc}
 1512              	.L139:
 1513              		.align	2
 1514              	.L138:
 1515 001c 00000000 		.word	.LANCHOR0
 1516              		.cfi_endproc
 1517              	.LFE1:
 1518              		.size	ADC_Start, .-ADC_Start
 1519              		.section	.text.ADC_StartEx,"ax",%progbits
 1520              		.align	1
 1521              		.global	ADC_StartEx
 1522              		.code	16
 1523              		.thumb_func
 1524              		.type	ADC_StartEx, %function
 1525              	ADC_StartEx:
 1526              	.LFB2:
 603:Generated_Source\PSoC4/ADC.c ****     ADC_Start();
 1527              		.loc 1 603 0
 1528              		.cfi_startproc
 1529              	.LVL118:
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccogxpIC.s 			page 68


 1530 0000 10B5     		push	{r4, lr}
 1531              		.cfi_def_cfa_offset 8
 1532              		.cfi_offset 4, -8
 1533              		.cfi_offset 14, -4
 603:Generated_Source\PSoC4/ADC.c ****     ADC_Start();
 1534              		.loc 1 603 0
 1535 0002 041C     		mov	r4, r0
 604:Generated_Source\PSoC4/ADC.c ****     ADC_IRQ_StartEx(address);
 1536              		.loc 1 604 0
 1537 0004 FFF7FEFF 		bl	ADC_Start
 1538              	.LVL119:
 605:Generated_Source\PSoC4/ADC.c ****     return;
 1539              		.loc 1 605 0
 1540 0008 201C     		mov	r0, r4
 1541 000a FFF7FEFF 		bl	ADC_IRQ_StartEx
 1542              	.LVL120:
 607:Generated_Source\PSoC4/ADC.c **** 
 1543              		.loc 1 607 0
 1544              		@ sp needed
 1545              	.LVL121:
 1546 000e 10BD     		pop	{r4, pc}
 1547              		.cfi_endproc
 1548              	.LFE2:
 1549              		.size	ADC_StartEx, .-ADC_StartEx
 1550              		.section	.text.ADC_SelectConfig,"ax",%progbits
 1551              		.align	1
 1552              		.global	ADC_SelectConfig
 1553              		.code	16
 1554              		.thumb_func
 1555              		.type	ADC_SelectConfig, %function
 1556              	ADC_SelectConfig:
 1557              	.LFB5:
 770:Generated_Source\PSoC4/ADC.c ****     /* Check whether the configuration number is valid or not */
 1558              		.loc 1 770 0
 1559              		.cfi_startproc
 1560              	.LVL122:
 1561 0000 73B5     		push	{r0, r1, r4, r5, r6, lr}
 1562              		.cfi_def_cfa_offset 24
 1563              		.cfi_offset 0, -24
 1564              		.cfi_offset 1, -20
 1565              		.cfi_offset 4, -16
 1566              		.cfi_offset 5, -12
 1567              		.cfi_offset 6, -8
 1568              		.cfi_offset 14, -4
 772:Generated_Source\PSoC4/ADC.c ****     {        
 1569              		.loc 1 772 0
 1570 0002 0028     		cmp	r0, #0
 1571 0004 28D1     		bne	.L141
 776:Generated_Source\PSoC4/ADC.c ****         
 1572              		.loc 1 776 0
 1573 0006 0125     		mov	r5, #1
 1574 0008 0E1C     		mov	r6, r1
 775:Generated_Source\PSoC4/ADC.c ****         ADC_selected = 1u;
 1575              		.loc 1 775 0
 1576 000a FFF7FEFF 		bl	ADC_Stop
 1577              	.LVL123:
 776:Generated_Source\PSoC4/ADC.c ****         
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccogxpIC.s 			page 69


 1578              		.loc 1 776 0
 1579 000e 134C     		ldr	r4, .L146
 778:Generated_Source\PSoC4/ADC.c ****     	{
 1580              		.loc 1 778 0
 1581 0010 2379     		ldrb	r3, [r4, #4]
 776:Generated_Source\PSoC4/ADC.c ****         
 1582              		.loc 1 776 0
 1583 0012 6571     		strb	r5, [r4, #5]
 778:Generated_Source\PSoC4/ADC.c ****     	{
 1584              		.loc 1 778 0
 1585 0014 002B     		cmp	r3, #0
 1586 0016 04D1     		bne	.L144
 780:Generated_Source\PSoC4/ADC.c ****             ADC_initVar |= ADC_INIT_VAR_INIT_FLAG;
 1587              		.loc 1 780 0
 1588 0018 FFF7FEFF 		bl	ADC_Init
 1589              	.LVL124:
 781:Generated_Source\PSoC4/ADC.c ****     	}
 1590              		.loc 1 781 0
 1591 001c 2379     		ldrb	r3, [r4, #4]
 1592 001e 2B43     		orr	r3, r5
 1593 0020 2371     		strb	r3, [r4, #4]
 1594              	.L144:
 786:Generated_Source\PSoC4/ADC.c ****         #if (ADC_VREF_ROUTED)
 1595              		.loc 1 786 0
 1596 0022 0F4D     		ldr	r5, .L146+4
 1597 0024 281C     		mov	r0, r5
 1598 0026 FFF7FEFF 		bl	ADC_InitConfig
 1599              	.LVL125:
 794:Generated_Source\PSoC4/ADC.c ****     	ADC_SAR_RANGE_INTR_MASK_REG = ADC_allConfigs[config].rangeIntMask;
 1600              		.loc 1 794 0
 1601 002a 2B6A     		ldr	r3, [r5, #32]
 1602 002c 0193     		str	r3, [sp, #4]
 1603 002e 019A     		ldr	r2, [sp, #4]
 1604 0030 0C4B     		ldr	r3, .L146+8
 1605 0032 1A60     		str	r2, [r3]
 795:Generated_Source\PSoC4/ADC.c ****     	ADC_SAR_SATURATE_INTR_MASK_REG = ADC_allConfigs[config].satIntMask;
 1606              		.loc 1 795 0
 1607 0034 6B6A     		ldr	r3, [r5, #36]
 1608 0036 0193     		str	r3, [sp, #4]
 1609 0038 019A     		ldr	r2, [sp, #4]
 1610 003a 0B4B     		ldr	r3, .L146+12
 1611 003c 1A60     		str	r2, [r3]
 796:Generated_Source\PSoC4/ADC.c ****     	ADC_currentConfig = config;
 1612              		.loc 1 796 0
 1613 003e AB6A     		ldr	r3, [r5, #40]
 1614 0040 0193     		str	r3, [sp, #4]
 1615 0042 019A     		ldr	r2, [sp, #4]
 1616 0044 094B     		ldr	r3, .L146+16
 1617 0046 1A60     		str	r2, [r3]
 797:Generated_Source\PSoC4/ADC.c ****         
 1618              		.loc 1 797 0
 1619 0048 0023     		mov	r3, #0
 1620 004a 2360     		str	r3, [r4]
 799:Generated_Source\PSoC4/ADC.c ****         {
 1621              		.loc 1 799 0
 1622 004c 012E     		cmp	r6, #1
 1623 004e 03D1     		bne	.L141
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccogxpIC.s 			page 70


 802:Generated_Source\PSoC4/ADC.c ****             
 1624              		.loc 1 802 0
 1625 0050 FFF7FEFF 		bl	ADC_Start
 1626              	.LVL126:
 805:Generated_Source\PSoC4/ADC.c ****         }
 1627              		.loc 1 805 0
 1628 0054 FFF7FEFF 		bl	ADC_StartConvert
 1629              	.LVL127:
 1630              	.L141:
 809:Generated_Source\PSoC4/ADC.c **** 
 1631              		.loc 1 809 0
 1632              		@ sp needed
 1633 0058 73BD     		pop	{r0, r1, r4, r5, r6, pc}
 1634              	.L147:
 1635 005a C046     		.align	2
 1636              	.L146:
 1637 005c 00000000 		.word	.LANCHOR0
 1638 0060 00000000 		.word	ADC_allConfigs
 1639 0064 20003A40 		.word	1077542944
 1640 0068 38023A40 		.word	1077543480
 1641 006c 28023A40 		.word	1077543464
 1642              		.cfi_endproc
 1643              	.LFE5:
 1644              		.size	ADC_SelectConfig, .-ADC_SelectConfig
 1645              		.section	.text.ADC_StopConvert,"ax",%progbits
 1646              		.align	1
 1647              		.global	ADC_StopConvert
 1648              		.code	16
 1649              		.thumb_func
 1650              		.type	ADC_StopConvert, %function
 1651              	ADC_StopConvert:
 1652              	.LFB7:
 875:Generated_Source\PSoC4/ADC.c ****     if((ADC_SAR_SAMPLE_CTRL_REG  
 1653              		.loc 1 875 0
 1654              		.cfi_startproc
 1655 0000 08B5     		push	{r3, lr}
 1656              		.cfi_def_cfa_offset 8
 1657              		.cfi_offset 3, -8
 1658              		.cfi_offset 14, -4
 876:Generated_Source\PSoC4/ADC.c **** 		& ADC_SAR_SAMPLE_CTRL_DSI_TRIGGER_LEVEL_MSK) 
 1659              		.loc 1 876 0
 1660 0002 0B4B     		ldr	r3, .L155
 1661 0004 1A68     		ldr	r2, [r3]
 1662 0006 5203     		lsl	r2, r2, #13
 1663 0008 10D5     		bpl	.L148
 880:Generated_Source\PSoC4/ADC.c ****         
 1664              		.loc 1 880 0
 1665 000a 1968     		ldr	r1, [r3]
 1666 000c 094A     		ldr	r2, .L155+4
 1667 000e 0A40     		and	r2, r1
 1668 0010 1A60     		str	r2, [r3]
 882:Generated_Source\PSoC4/ADC.c ****             & ADC_MISC_CONFIG_FILTER_PRESENT_MSK) 
 1669              		.loc 1 882 0
 1670 0012 094B     		ldr	r3, .L155+8
 1671 0014 1A68     		ldr	r2, [r3]
 1672 0016 3823     		mov	r3, #56
 1673 0018 5343     		mul	r3, r2
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccogxpIC.s 			page 71


 1674 001a 084A     		ldr	r2, .L155+12
 1675 001c D318     		add	r3, r2, r3
 883:Generated_Source\PSoC4/ADC.c ****     	    == ADC_MISC_CONFIG_FILTER_PRESENT_MSK)
 1676              		.loc 1 883 0
 1677 001e 1B6B     		ldr	r3, [r3, #48]
 882:Generated_Source\PSoC4/ADC.c ****             & ADC_MISC_CONFIG_FILTER_PRESENT_MSK) 
 1678              		.loc 1 882 0
 1679 0020 9B07     		lsl	r3, r3, #30
 1680 0022 03D5     		bpl	.L148
 887:Generated_Source\PSoC4/ADC.c ****             ADC_Start();
 1681              		.loc 1 887 0
 1682 0024 FFF7FEFF 		bl	ADC_Stop
 1683              	.LVL128:
 888:Generated_Source\PSoC4/ADC.c ****         }
 1684              		.loc 1 888 0
 1685 0028 FFF7FEFF 		bl	ADC_Start
 1686              	.LVL129:
 1687              	.L148:
 893:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 1688              		.loc 1 893 0
 1689              		@ sp needed
 1690 002c 08BD     		pop	{r3, pc}
 1691              	.L156:
 1692 002e C046     		.align	2
 1693              	.L155:
 1694 0030 04003A40 		.word	1077542916
 1695 0034 FFFFFEFF 		.word	-65537
 1696 0038 00000000 		.word	.LANCHOR0
 1697 003c 00000000 		.word	ADC_allConfigs
 1698              		.cfi_endproc
 1699              	.LFE7:
 1700              		.size	ADC_StopConvert, .-ADC_StopConvert
 1701              		.comm	ADC_countsPer10Volt,8,4
 1702              		.comm	ADC_offset,4,2
 1703              		.global	ADC_selected
 1704              		.global	ADC_initVar
 1705              		.section	.rodata
 1706              		.align	2
 1707              		.set	.LANCHOR1,. + 0
 1708              		.type	ADC_channelsConfig, %object
 1709              		.size	ADC_channelsConfig, 8
 1710              	ADC_channelsConfig:
 1711 0000 00010000 		.word	256
 1712 0004 00110000 		.word	4352
 1713              		.bss
 1714              		.align	2
 1715              		.set	.LANCHOR0,. + 0
 1716              		.type	ADC_currentConfig, %object
 1717              		.size	ADC_currentConfig, 4
 1718              	ADC_currentConfig:
 1719 0000 00000000 		.space	4
 1720              		.type	ADC_initVar, %object
 1721              		.size	ADC_initVar, 1
 1722              	ADC_initVar:
 1723 0004 00       		.space	1
 1724              		.type	ADC_selected, %object
 1725              		.size	ADC_selected, 1
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccogxpIC.s 			page 72


 1726              	ADC_selected:
 1727 0005 00       		.space	1
 1728 0006 0000     		.text
 1729              	.Letext0:
 1730              		.file 2 "Generated_Source\\PSoC4\\cytypes.h"
 1731              		.file 3 "Generated_Source\\PSoC4\\ADC.h"
 1732              		.file 4 "Generated_Source\\PSoC4\\ADC_intSarClock.h"
 1733              		.file 5 "Generated_Source\\PSoC4\\CyLib.h"
 1734              		.file 6 "Generated_Source\\PSoC4\\ADC_IRQ.h"
 1735              		.section	.debug_info,"",%progbits
 1736              	.Ldebug_info0:
 1737 0000 150A0000 		.4byte	0xa15
 1738 0004 0400     		.2byte	0x4
 1739 0006 00000000 		.4byte	.Ldebug_abbrev0
 1740 000a 04       		.byte	0x4
 1741 000b 01       		.uleb128 0x1
 1742 000c 59020000 		.4byte	.LASF104
 1743 0010 01       		.byte	0x1
 1744 0011 EA030000 		.4byte	.LASF105
 1745 0015 4E040000 		.4byte	.LASF106
 1746 0019 28000000 		.4byte	.Ldebug_ranges0+0x28
 1747 001d 00000000 		.4byte	0
 1748 0021 00000000 		.4byte	.Ldebug_line0
 1749 0025 02       		.uleb128 0x2
 1750 0026 01       		.byte	0x1
 1751 0027 06       		.byte	0x6
 1752 0028 A7000000 		.4byte	.LASF0
 1753 002c 02       		.uleb128 0x2
 1754 002d 01       		.byte	0x1
 1755 002e 08       		.byte	0x8
 1756 002f 7A040000 		.4byte	.LASF1
 1757 0033 02       		.uleb128 0x2
 1758 0034 02       		.byte	0x2
 1759 0035 05       		.byte	0x5
 1760 0036 93040000 		.4byte	.LASF2
 1761 003a 02       		.uleb128 0x2
 1762 003b 02       		.byte	0x2
 1763 003c 07       		.byte	0x7
 1764 003d 15020000 		.4byte	.LASF3
 1765 0041 02       		.uleb128 0x2
 1766 0042 04       		.byte	0x4
 1767 0043 05       		.byte	0x5
 1768 0044 E4000000 		.4byte	.LASF4
 1769 0048 02       		.uleb128 0x2
 1770 0049 04       		.byte	0x4
 1771 004a 07       		.byte	0x7
 1772 004b D9010000 		.4byte	.LASF5
 1773 004f 02       		.uleb128 0x2
 1774 0050 08       		.byte	0x8
 1775 0051 05       		.byte	0x5
 1776 0052 99000000 		.4byte	.LASF6
 1777 0056 02       		.uleb128 0x2
 1778 0057 08       		.byte	0x8
 1779 0058 07       		.byte	0x7
 1780 0059 5D000000 		.4byte	.LASF7
 1781 005d 03       		.uleb128 0x3
 1782 005e 04       		.byte	0x4
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccogxpIC.s 			page 73


 1783 005f 05       		.byte	0x5
 1784 0060 696E7400 		.ascii	"int\000"
 1785 0064 02       		.uleb128 0x2
 1786 0065 04       		.byte	0x4
 1787 0066 07       		.byte	0x7
 1788 0067 B5010000 		.4byte	.LASF8
 1789 006b 04       		.uleb128 0x4
 1790 006c 2A010000 		.4byte	.LASF9
 1791 0070 02       		.byte	0x2
 1792 0071 B901     		.2byte	0x1b9
 1793 0073 2C000000 		.4byte	0x2c
 1794 0077 04       		.uleb128 0x4
 1795 0078 00000000 		.4byte	.LASF10
 1796 007c 02       		.byte	0x2
 1797 007d BA01     		.2byte	0x1ba
 1798 007f 3A000000 		.4byte	0x3a
 1799 0083 04       		.uleb128 0x4
 1800 0084 70010000 		.4byte	.LASF11
 1801 0088 02       		.byte	0x2
 1802 0089 BB01     		.2byte	0x1bb
 1803 008b 48000000 		.4byte	0x48
 1804 008f 04       		.uleb128 0x4
 1805 0090 B0050000 		.4byte	.LASF12
 1806 0094 02       		.byte	0x2
 1807 0095 BD01     		.2byte	0x1bd
 1808 0097 33000000 		.4byte	0x33
 1809 009b 04       		.uleb128 0x4
 1810 009c BE000000 		.4byte	.LASF13
 1811 00a0 02       		.byte	0x2
 1812 00a1 BE01     		.2byte	0x1be
 1813 00a3 41000000 		.4byte	0x41
 1814 00a7 04       		.uleb128 0x4
 1815 00a8 39030000 		.4byte	.LASF14
 1816 00ac 02       		.byte	0x2
 1817 00ad BF01     		.2byte	0x1bf
 1818 00af B3000000 		.4byte	0xb3
 1819 00b3 02       		.uleb128 0x2
 1820 00b4 04       		.byte	0x4
 1821 00b5 04       		.byte	0x4
 1822 00b6 13040000 		.4byte	.LASF15
 1823 00ba 02       		.uleb128 0x2
 1824 00bb 08       		.byte	0x8
 1825 00bc 04       		.byte	0x4
 1826 00bd 3A010000 		.4byte	.LASF16
 1827 00c1 04       		.uleb128 0x4
 1828 00c2 C3030000 		.4byte	.LASF17
 1829 00c6 02       		.byte	0x2
 1830 00c7 C401     		.2byte	0x1c4
 1831 00c9 4F000000 		.4byte	0x4f
 1832 00cd 02       		.uleb128 0x2
 1833 00ce 01       		.byte	0x1
 1834 00cf 08       		.byte	0x8
 1835 00d0 03050000 		.4byte	.LASF18
 1836 00d4 04       		.uleb128 0x4
 1837 00d5 0D030000 		.4byte	.LASF19
 1838 00d9 02       		.byte	0x2
 1839 00da 6502     		.2byte	0x265
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccogxpIC.s 			page 74


 1840 00dc E0000000 		.4byte	0xe0
 1841 00e0 05       		.uleb128 0x5
 1842 00e1 83000000 		.4byte	0x83
 1843 00e5 04       		.uleb128 0x4
 1844 00e6 0D050000 		.4byte	.LASF20
 1845 00ea 02       		.byte	0x2
 1846 00eb 7502     		.2byte	0x275
 1847 00ed F1000000 		.4byte	0xf1
 1848 00f1 06       		.uleb128 0x6
 1849 00f2 04       		.byte	0x4
 1850 00f3 F7000000 		.4byte	0xf7
 1851 00f7 07       		.uleb128 0x7
 1852 00f8 02       		.uleb128 0x2
 1853 00f9 04       		.byte	0x4
 1854 00fa 07       		.byte	0x7
 1855 00fb 41030000 		.4byte	.LASF21
 1856 00ff 08       		.uleb128 0x8
 1857 0100 38       		.byte	0x38
 1858 0101 03       		.byte	0x3
 1859 0102 5E       		.byte	0x5e
 1860 0103 B0010000 		.4byte	0x1b0
 1861 0107 09       		.uleb128 0x9
 1862 0108 E2050000 		.4byte	.LASF22
 1863 010c 03       		.byte	0x3
 1864 010d 60       		.byte	0x60
 1865 010e 83000000 		.4byte	0x83
 1866 0112 00       		.byte	0
 1867 0113 09       		.uleb128 0x9
 1868 0114 F6020000 		.4byte	.LASF23
 1869 0118 03       		.byte	0x3
 1870 0119 61       		.byte	0x61
 1871 011a 83000000 		.4byte	0x83
 1872 011e 04       		.byte	0x4
 1873 011f 09       		.uleb128 0x9
 1874 0120 6C050000 		.4byte	.LASF24
 1875 0124 03       		.byte	0x3
 1876 0125 62       		.byte	0x62
 1877 0126 83000000 		.4byte	0x83
 1878 012a 08       		.byte	0x8
 1879 012b 09       		.uleb128 0x9
 1880 012c A5050000 		.4byte	.LASF25
 1881 0130 03       		.byte	0x3
 1882 0131 65       		.byte	0x65
 1883 0132 83000000 		.4byte	0x83
 1884 0136 0C       		.byte	0xc
 1885 0137 09       		.uleb128 0x9
 1886 0138 63010000 		.4byte	.LASF26
 1887 013c 03       		.byte	0x3
 1888 013d 66       		.byte	0x66
 1889 013e 83000000 		.4byte	0x83
 1890 0142 10       		.byte	0x10
 1891 0143 09       		.uleb128 0x9
 1892 0144 80030000 		.4byte	.LASF27
 1893 0148 03       		.byte	0x3
 1894 0149 67       		.byte	0x67
 1895 014a 83000000 		.4byte	0x83
 1896 014e 14       		.byte	0x14
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccogxpIC.s 			page 75


 1897 014f 09       		.uleb128 0x9
 1898 0150 28020000 		.4byte	.LASF28
 1899 0154 03       		.byte	0x3
 1900 0155 68       		.byte	0x68
 1901 0156 83000000 		.4byte	0x83
 1902 015a 18       		.byte	0x18
 1903 015b 09       		.uleb128 0x9
 1904 015c 90050000 		.4byte	.LASF29
 1905 0160 03       		.byte	0x3
 1906 0161 69       		.byte	0x69
 1907 0162 83000000 		.4byte	0x83
 1908 0166 1C       		.byte	0x1c
 1909 0167 09       		.uleb128 0x9
 1910 0168 37040000 		.4byte	.LASF30
 1911 016c 03       		.byte	0x3
 1912 016d 6A       		.byte	0x6a
 1913 016e 83000000 		.4byte	0x83
 1914 0172 20       		.byte	0x20
 1915 0173 09       		.uleb128 0x9
 1916 0174 C2010000 		.4byte	.LASF31
 1917 0178 03       		.byte	0x3
 1918 0179 6B       		.byte	0x6b
 1919 017a 83000000 		.4byte	0x83
 1920 017e 24       		.byte	0x24
 1921 017f 09       		.uleb128 0x9
 1922 0180 8D030000 		.4byte	.LASF32
 1923 0184 03       		.byte	0x3
 1924 0185 6C       		.byte	0x6c
 1925 0186 83000000 		.4byte	0x83
 1926 018a 28       		.byte	0x28
 1927 018b 09       		.uleb128 0x9
 1928 018c F2040000 		.4byte	.LASF33
 1929 0190 03       		.byte	0x3
 1930 0191 6D       		.byte	0x6d
 1931 0192 9B000000 		.4byte	0x9b
 1932 0196 2C       		.byte	0x2c
 1933 0197 09       		.uleb128 0x9
 1934 0198 71050000 		.4byte	.LASF34
 1935 019c 03       		.byte	0x3
 1936 019d 6F       		.byte	0x6f
 1937 019e 83000000 		.4byte	0x83
 1938 01a2 30       		.byte	0x30
 1939 01a3 09       		.uleb128 0x9
 1940 01a4 B3000000 		.4byte	.LASF35
 1941 01a8 03       		.byte	0x3
 1942 01a9 76       		.byte	0x76
 1943 01aa 77000000 		.4byte	0x77
 1944 01ae 34       		.byte	0x34
 1945 01af 00       		.byte	0
 1946 01b0 0A       		.uleb128 0xa
 1947 01b1 51010000 		.4byte	.LASF36
 1948 01b5 03       		.byte	0x3
 1949 01b6 7C       		.byte	0x7c
 1950 01b7 FF000000 		.4byte	0xff
 1951 01bb 0B       		.uleb128 0xb
 1952 01bc 6C030000 		.4byte	.LASF107
 1953 01c0 01       		.byte	0x1
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccogxpIC.s 			page 76


 1954 01c1 3304     		.2byte	0x433
 1955 01c3 9B000000 		.4byte	0x9b
 1956 01c7 01       		.byte	0x1
 1957 01c8 F1010000 		.4byte	0x1f1
 1958 01cc 0C       		.uleb128 0xc
 1959 01cd FE040000 		.4byte	.LASF58
 1960 01d1 01       		.byte	0x1
 1961 01d2 3304     		.2byte	0x433
 1962 01d4 83000000 		.4byte	0x83
 1963 01d8 0D       		.uleb128 0xd
 1964 01d9 13030000 		.4byte	.LASF37
 1965 01dd 01       		.byte	0x1
 1966 01de 3504     		.2byte	0x435
 1967 01e0 9B000000 		.4byte	0x9b
 1968 01e4 0D       		.uleb128 0xd
 1969 01e5 02030000 		.4byte	.LASF38
 1970 01e9 01       		.byte	0x1
 1971 01ea 3604     		.2byte	0x436
 1972 01ec 83000000 		.4byte	0x83
 1973 01f0 00       		.byte	0
 1974 01f1 0E       		.uleb128 0xe
 1975 01f2 88000000 		.4byte	.LASF42
 1976 01f6 01       		.byte	0x1
 1977 01f7 4103     		.2byte	0x341
 1978 01f9 01       		.byte	0x1
 1979 01fa 0F       		.uleb128 0xf
 1980 01fb 33000000 		.4byte	.LASF100
 1981 01ff 01       		.byte	0x1
 1982 0200 D607     		.2byte	0x7d6
 1983 0202 01       		.byte	0x1
 1984 0203 2C020000 		.4byte	0x22c
 1985 0207 0D       		.uleb128 0xd
 1986 0208 EC040000 		.4byte	.LASF39
 1987 020c 01       		.byte	0x1
 1988 020d D807     		.2byte	0x7d8
 1989 020f 83000000 		.4byte	0x83
 1990 0213 0D       		.uleb128 0xd
 1991 0214 CF010000 		.4byte	.LASF40
 1992 0218 01       		.byte	0x1
 1993 0219 D907     		.2byte	0x7d9
 1994 021b 83000000 		.4byte	0x83
 1995 021f 0D       		.uleb128 0xd
 1996 0220 19000000 		.4byte	.LASF41
 1997 0224 01       		.byte	0x1
 1998 0225 DA07     		.2byte	0x7da
 1999 0227 9B000000 		.4byte	0x9b
 2000 022b 00       		.byte	0
 2001 022c 0E       		.uleb128 0xe
 2002 022d 9A050000 		.4byte	.LASF43
 2003 0231 01       		.byte	0x1
 2004 0232 4708     		.2byte	0x847
 2005 0234 01       		.byte	0x1
 2006 0235 10       		.uleb128 0x10
 2007 0236 BB010000 		.4byte	0x1bb
 2008 023a 00000000 		.4byte	.LFB12
 2009 023e 3C000000 		.4byte	.LFE12-.LFB12
 2010 0242 01       		.uleb128 0x1
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccogxpIC.s 			page 77


 2011 0243 9C       		.byte	0x9c
 2012 0244 83020000 		.4byte	0x283
 2013 0248 11       		.uleb128 0x11
 2014 0249 CC010000 		.4byte	0x1cc
 2015 024d 00000000 		.4byte	.LLST0
 2016 0251 12       		.uleb128 0x12
 2017 0252 D8010000 		.4byte	0x1d8
 2018 0256 21000000 		.4byte	.LLST1
 2019 025a 12       		.uleb128 0x12
 2020 025b E4010000 		.4byte	0x1e4
 2021 025f 40000000 		.4byte	.LLST2
 2022 0263 13       		.uleb128 0x13
 2023 0264 00000000 		.4byte	.Ldebug_ranges0+0
 2024 0268 11       		.uleb128 0x11
 2025 0269 CC010000 		.4byte	0x1cc
 2026 026d 53000000 		.4byte	.LLST3
 2027 0271 13       		.uleb128 0x13
 2028 0272 00000000 		.4byte	.Ldebug_ranges0+0
 2029 0276 14       		.uleb128 0x14
 2030 0277 D8010000 		.4byte	0x1d8
 2031 027b 14       		.uleb128 0x14
 2032 027c E4010000 		.4byte	0x1e4
 2033 0280 00       		.byte	0
 2034 0281 00       		.byte	0
 2035 0282 00       		.byte	0
 2036 0283 15       		.uleb128 0x15
 2037 0284 CA040000 		.4byte	.LASF108
 2038 0288 01       		.byte	0x1
 2039 0289 7B02     		.2byte	0x27b
 2040 028b 00000000 		.4byte	.LFB3
 2041 028f 10000000 		.4byte	.LFE3-.LFB3
 2042 0293 01       		.uleb128 0x1
 2043 0294 9C       		.byte	0x9c
 2044 0295 16       		.uleb128 0x16
 2045 0296 AC030000 		.4byte	.LASF45
 2046 029a 01       		.byte	0x1
 2047 029b 9B02     		.2byte	0x29b
 2048 029d 00000000 		.4byte	.LFB4
 2049 02a1 E8000000 		.4byte	.LFE4-.LFB4
 2050 02a5 01       		.uleb128 0x1
 2051 02a6 9C       		.byte	0x9c
 2052 02a7 E9020000 		.4byte	0x2e9
 2053 02ab 17       		.uleb128 0x17
 2054 02ac 29050000 		.4byte	.LASF47
 2055 02b0 01       		.byte	0x1
 2056 02b1 9B02     		.2byte	0x29b
 2057 02b3 E9020000 		.4byte	0x2e9
 2058 02b7 69000000 		.4byte	.LLST4
 2059 02bb 18       		.uleb128 0x18
 2060 02bc EC040000 		.4byte	.LASF39
 2061 02c0 01       		.byte	0x1
 2062 02c1 9D02     		.2byte	0x29d
 2063 02c3 83000000 		.4byte	0x83
 2064 02c7 01       		.uleb128 0x1
 2065 02c8 51       		.byte	0x51
 2066 02c9 19       		.uleb128 0x19
 2067 02ca EB010000 		.4byte	.LASF44
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccogxpIC.s 			page 78


 2068 02ce 01       		.byte	0x1
 2069 02cf 9E02     		.2byte	0x29e
 2070 02d1 83000000 		.4byte	0x83
 2071 02d5 95000000 		.4byte	.LLST5
 2072 02d9 1A       		.uleb128 0x1a
 2073 02da 0C000000 		.4byte	.LVL9
 2074 02de B4090000 		.4byte	0x9b4
 2075 02e2 1B       		.uleb128 0x1b
 2076 02e3 01       		.uleb128 0x1
 2077 02e4 51       		.byte	0x51
 2078 02e5 01       		.uleb128 0x1
 2079 02e6 30       		.byte	0x30
 2080 02e7 00       		.byte	0
 2081 02e8 00       		.byte	0
 2082 02e9 06       		.uleb128 0x6
 2083 02ea 04       		.byte	0x4
 2084 02eb EF020000 		.4byte	0x2ef
 2085 02ef 1C       		.uleb128 0x1c
 2086 02f0 B0010000 		.4byte	0x1b0
 2087 02f4 1D       		.uleb128 0x1d
 2088 02f5 F1010000 		.4byte	0x1f1
 2089 02f9 00000000 		.4byte	.LFB6
 2090 02fd 24000000 		.4byte	.LFE6-.LFB6
 2091 0301 01       		.uleb128 0x1
 2092 0302 9C       		.byte	0x9c
 2093 0303 16       		.uleb128 0x16
 2094 0304 26030000 		.4byte	.LASF46
 2095 0308 01       		.byte	0x1
 2096 0309 9403     		.2byte	0x394
 2097 030b 00000000 		.4byte	.LFB8
 2098 030f 24000000 		.4byte	.LFE8-.LFB8
 2099 0313 01       		.uleb128 0x1
 2100 0314 9C       		.byte	0x9c
 2101 0315 28030000 		.4byte	0x328
 2102 0319 1E       		.uleb128 0x1e
 2103 031a 08050000 		.4byte	.LASF48
 2104 031e 01       		.byte	0x1
 2105 031f 9403     		.2byte	0x394
 2106 0321 83000000 		.4byte	0x83
 2107 0325 01       		.uleb128 0x1
 2108 0326 50       		.byte	0x50
 2109 0327 00       		.byte	0
 2110 0328 16       		.uleb128 0x16
 2111 0329 4E000000 		.4byte	.LASF49
 2112 032d 01       		.byte	0x1
 2113 032e D403     		.2byte	0x3d4
 2114 0330 00000000 		.4byte	.LFB9
 2115 0334 10000000 		.4byte	.LFE9-.LFB9
 2116 0338 01       		.uleb128 0x1
 2117 0339 9C       		.byte	0x9c
 2118 033a 4F030000 		.4byte	0x34f
 2119 033e 17       		.uleb128 0x17
 2120 033f 86010000 		.4byte	.LASF50
 2121 0343 01       		.byte	0x1
 2122 0344 D403     		.2byte	0x3d4
 2123 0346 83000000 		.4byte	0x83
 2124 034a DA000000 		.4byte	.LLST6
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccogxpIC.s 			page 79


 2125 034e 00       		.byte	0
 2126 034f 16       		.uleb128 0x16
 2127 0350 DA030000 		.4byte	.LASF51
 2128 0354 01       		.byte	0x1
 2129 0355 EC03     		.2byte	0x3ec
 2130 0357 00000000 		.4byte	.LFB10
 2131 035b 28000000 		.4byte	.LFE10-.LFB10
 2132 035f 01       		.uleb128 0x1
 2133 0360 9C       		.byte	0x9c
 2134 0361 82030000 		.4byte	0x382
 2135 0365 17       		.uleb128 0x17
 2136 0366 F5010000 		.4byte	.LASF52
 2137 036a 01       		.byte	0x1
 2138 036b EC03     		.2byte	0x3ec
 2139 036d 83000000 		.4byte	0x83
 2140 0371 FB000000 		.4byte	.LLST7
 2141 0375 0D       		.uleb128 0xd
 2142 0376 07000000 		.4byte	.LASF53
 2143 037a 01       		.byte	0x1
 2144 037b EE03     		.2byte	0x3ee
 2145 037d 83000000 		.4byte	0x83
 2146 0381 00       		.byte	0
 2147 0382 1F       		.uleb128 0x1f
 2148 0383 98030000 		.4byte	.LASF56
 2149 0387 01       		.byte	0x1
 2150 0388 0D04     		.2byte	0x40d
 2151 038a 83000000 		.4byte	0x83
 2152 038e 00000000 		.4byte	.LFB11
 2153 0392 34000000 		.4byte	.LFE11-.LFB11
 2154 0396 01       		.uleb128 0x1
 2155 0397 9C       		.byte	0x9c
 2156 0398 CD030000 		.4byte	0x3cd
 2157 039c 17       		.uleb128 0x17
 2158 039d 9C010000 		.4byte	.LASF54
 2159 03a1 01       		.byte	0x1
 2160 03a2 0D04     		.2byte	0x40d
 2161 03a4 83000000 		.4byte	0x83
 2162 03a8 19010000 		.4byte	.LLST8
 2163 03ac 19       		.uleb128 0x19
 2164 03ad EE050000 		.4byte	.LASF55
 2165 03b1 01       		.byte	0x1
 2166 03b2 0F04     		.2byte	0x40f
 2167 03b4 83000000 		.4byte	0x83
 2168 03b8 45010000 		.4byte	.LLST9
 2169 03bc 20       		.uleb128 0x20
 2170 03bd 77647400 		.ascii	"wdt\000"
 2171 03c1 01       		.byte	0x1
 2172 03c2 1004     		.2byte	0x410
 2173 03c4 83000000 		.4byte	0x83
 2174 03c8 70010000 		.4byte	.LLST10
 2175 03cc 00       		.byte	0
 2176 03cd 1F       		.uleb128 0x1f
 2177 03ce 0B060000 		.4byte	.LASF57
 2178 03d2 01       		.byte	0x1
 2179 03d3 5F04     		.2byte	0x45f
 2180 03d5 8F000000 		.4byte	0x8f
 2181 03d9 00000000 		.4byte	.LFB13
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccogxpIC.s 			page 80


 2182 03dd 30000000 		.4byte	.LFE13-.LFB13
 2183 03e1 01       		.uleb128 0x1
 2184 03e2 9C       		.byte	0x9c
 2185 03e3 06040000 		.4byte	0x406
 2186 03e7 17       		.uleb128 0x17
 2187 03e8 FE040000 		.4byte	.LASF58
 2188 03ec 01       		.byte	0x1
 2189 03ed 5F04     		.2byte	0x45f
 2190 03ef 83000000 		.4byte	0x83
 2191 03f3 B8010000 		.4byte	.LLST11
 2192 03f7 18       		.uleb128 0x18
 2193 03f8 1C030000 		.4byte	.LASF59
 2194 03fc 01       		.byte	0x1
 2195 03fd 6104     		.2byte	0x461
 2196 03ff 83000000 		.4byte	0x83
 2197 0403 01       		.uleb128 0x1
 2198 0404 53       		.byte	0x53
 2199 0405 00       		.byte	0
 2200 0406 1F       		.uleb128 0x1f
 2201 0407 41010000 		.4byte	.LASF60
 2202 040b 01       		.byte	0x1
 2203 040c 8504     		.2byte	0x485
 2204 040e 9B000000 		.4byte	0x9b
 2205 0412 00000000 		.4byte	.LFB14
 2206 0416 3C000000 		.4byte	.LFE14-.LFB14
 2207 041a 01       		.uleb128 0x1
 2208 041b 9C       		.byte	0x9c
 2209 041c 60040000 		.4byte	0x460
 2210 0420 17       		.uleb128 0x17
 2211 0421 FE040000 		.4byte	.LASF58
 2212 0425 01       		.byte	0x1
 2213 0426 8504     		.2byte	0x485
 2214 0428 83000000 		.4byte	0x83
 2215 042c D9010000 		.4byte	.LLST12
 2216 0430 0D       		.uleb128 0xd
 2217 0431 1C030000 		.4byte	.LASF59
 2218 0435 01       		.byte	0x1
 2219 0436 8704     		.2byte	0x487
 2220 0438 83000000 		.4byte	0x83
 2221 043c 0D       		.uleb128 0xd
 2222 043d E0040000 		.4byte	.LASF61
 2223 0441 01       		.byte	0x1
 2224 0442 8804     		.2byte	0x488
 2225 0444 8F000000 		.4byte	0x8f
 2226 0448 18       		.uleb128 0x18
 2227 0449 43020000 		.4byte	.LASF62
 2228 044d 01       		.byte	0x1
 2229 044e 8904     		.2byte	0x489
 2230 0450 9B000000 		.4byte	0x9b
 2231 0454 01       		.uleb128 0x1
 2232 0455 50       		.byte	0x50
 2233 0456 21       		.uleb128 0x21
 2234 0457 24000000 		.4byte	.LVL44
 2235 045b BB010000 		.4byte	0x1bb
 2236 045f 00       		.byte	0
 2237 0460 16       		.uleb128 0x16
 2238 0461 3E040000 		.4byte	.LASF63
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccogxpIC.s 			page 81


 2239 0465 01       		.byte	0x1
 2240 0466 B404     		.2byte	0x4b4
 2241 0468 00000000 		.4byte	.LFB15
 2242 046c 18000000 		.4byte	.LFE15-.LFB15
 2243 0470 01       		.uleb128 0x1
 2244 0471 9C       		.byte	0x9c
 2245 0472 87040000 		.4byte	0x487
 2246 0476 17       		.uleb128 0x17
 2247 0477 4A030000 		.4byte	.LASF64
 2248 047b 01       		.byte	0x1
 2249 047c B404     		.2byte	0x4b4
 2250 047e 83000000 		.4byte	0x83
 2251 0482 FA010000 		.4byte	.LLST13
 2252 0486 00       		.byte	0
 2253 0487 16       		.uleb128 0x16
 2254 0488 53030000 		.4byte	.LASF65
 2255 048c 01       		.byte	0x1
 2256 048d CB04     		.2byte	0x4cb
 2257 048f 00000000 		.4byte	.LFB16
 2258 0493 18000000 		.4byte	.LFE16-.LFB16
 2259 0497 01       		.uleb128 0x1
 2260 0498 9C       		.byte	0x9c
 2261 0499 AE040000 		.4byte	0x4ae
 2262 049d 17       		.uleb128 0x17
 2263 049e 19040000 		.4byte	.LASF66
 2264 04a2 01       		.byte	0x1
 2265 04a3 CB04     		.2byte	0x4cb
 2266 04a5 83000000 		.4byte	0x83
 2267 04a9 1B020000 		.4byte	.LLST14
 2268 04ad 00       		.byte	0
 2269 04ae 16       		.uleb128 0x16
 2270 04af A4010000 		.4byte	.LASF67
 2271 04b3 01       		.byte	0x1
 2272 04b4 E604     		.2byte	0x4e6
 2273 04b6 00000000 		.4byte	.LFB17
 2274 04ba 28000000 		.4byte	.LFE17-.LFB17
 2275 04be 01       		.uleb128 0x1
 2276 04bf 9C       		.byte	0x9c
 2277 04c0 E1040000 		.4byte	0x4e1
 2278 04c4 17       		.uleb128 0x17
 2279 04c5 4F020000 		.4byte	.LASF68
 2280 04c9 01       		.byte	0x1
 2281 04ca E604     		.2byte	0x4e6
 2282 04cc 83000000 		.4byte	0x83
 2283 04d0 3C020000 		.4byte	.LLST15
 2284 04d4 0D       		.uleb128 0xd
 2285 04d5 07000000 		.4byte	.LASF53
 2286 04d9 01       		.byte	0x1
 2287 04da E804     		.2byte	0x4e8
 2288 04dc 83000000 		.4byte	0x83
 2289 04e0 00       		.byte	0
 2290 04e1 16       		.uleb128 0x16
 2291 04e2 D5000000 		.4byte	.LASF69
 2292 04e6 01       		.byte	0x1
 2293 04e7 0105     		.2byte	0x501
 2294 04e9 00000000 		.4byte	.LFB18
 2295 04ed 28000000 		.4byte	.LFE18-.LFB18
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccogxpIC.s 			page 82


 2296 04f1 01       		.uleb128 0x1
 2297 04f2 9C       		.byte	0x9c
 2298 04f3 14050000 		.4byte	0x514
 2299 04f7 17       		.uleb128 0x17
 2300 04f8 BB030000 		.4byte	.LASF70
 2301 04fc 01       		.byte	0x1
 2302 04fd 0105     		.2byte	0x501
 2303 04ff 83000000 		.4byte	0x83
 2304 0503 5A020000 		.4byte	.LLST16
 2305 0507 0D       		.uleb128 0xd
 2306 0508 07000000 		.4byte	.LASF53
 2307 050c 01       		.byte	0x1
 2308 050d 0305     		.2byte	0x503
 2309 050f 83000000 		.4byte	0x83
 2310 0513 00       		.byte	0
 2311 0514 16       		.uleb128 0x16
 2312 0515 C4050000 		.4byte	.LASF71
 2313 0519 01       		.byte	0x1
 2314 051a 2505     		.2byte	0x525
 2315 051c 00000000 		.4byte	.LFB19
 2316 0520 24000000 		.4byte	.LFE19-.LFB19
 2317 0524 01       		.uleb128 0x1
 2318 0525 9C       		.byte	0x9c
 2319 0526 49050000 		.4byte	0x549
 2320 052a 17       		.uleb128 0x17
 2321 052b FE040000 		.4byte	.LASF58
 2322 052f 01       		.byte	0x1
 2323 0530 2505     		.2byte	0x525
 2324 0532 83000000 		.4byte	0x83
 2325 0536 78020000 		.4byte	.LLST17
 2326 053a 1E       		.uleb128 0x1e
 2327 053b 65050000 		.4byte	.LASF72
 2328 053f 01       		.byte	0x1
 2329 0540 2505     		.2byte	0x525
 2330 0542 8F000000 		.4byte	0x8f
 2331 0546 01       		.uleb128 0x1
 2332 0547 51       		.byte	0x51
 2333 0548 00       		.byte	0
 2334 0549 16       		.uleb128 0x16
 2335 054a 07040000 		.4byte	.LASF73
 2336 054e 01       		.byte	0x1
 2337 054f 4805     		.2byte	0x548
 2338 0551 00000000 		.4byte	.LFB20
 2339 0555 24000000 		.4byte	.LFE20-.LFB20
 2340 0559 01       		.uleb128 0x1
 2341 055a 9C       		.byte	0x9c
 2342 055b 7E050000 		.4byte	0x57e
 2343 055f 17       		.uleb128 0x17
 2344 0560 FE040000 		.4byte	.LASF58
 2345 0564 01       		.byte	0x1
 2346 0565 4805     		.2byte	0x548
 2347 0567 83000000 		.4byte	0x83
 2348 056b 99020000 		.4byte	.LLST18
 2349 056f 1E       		.uleb128 0x1e
 2350 0570 11000000 		.4byte	.LASF74
 2351 0574 01       		.byte	0x1
 2352 0575 4805     		.2byte	0x548
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccogxpIC.s 			page 83


 2353 0577 9B000000 		.4byte	0x9b
 2354 057b 01       		.uleb128 0x1
 2355 057c 51       		.byte	0x51
 2356 057d 00       		.byte	0
 2357 057e 22       		.uleb128 0x22
 2358 057f 15010000 		.4byte	.LASF75
 2359 0583 01       		.byte	0x1
 2360 0584 6105     		.2byte	0x561
 2361 0586 8F000000 		.4byte	0x8f
 2362 058a 00000000 		.4byte	.LFB21
 2363 058e 74000000 		.4byte	.LFE21-.LFB21
 2364 0592 01       		.uleb128 0x1
 2365 0593 9C       		.byte	0x9c
 2366 0594 F2050000 		.4byte	0x5f2
 2367 0598 17       		.uleb128 0x17
 2368 0599 FE040000 		.4byte	.LASF58
 2369 059d 01       		.byte	0x1
 2370 059e 6105     		.2byte	0x561
 2371 05a0 83000000 		.4byte	0x83
 2372 05a4 BA020000 		.4byte	.LLST19
 2373 05a8 17       		.uleb128 0x17
 2374 05a9 7C050000 		.4byte	.LASF76
 2375 05ad 01       		.byte	0x1
 2376 05ae 6105     		.2byte	0x561
 2377 05b0 8F000000 		.4byte	0x8f
 2378 05b4 DB020000 		.4byte	.LLST20
 2379 05b8 19       		.uleb128 0x19
 2380 05b9 97010000 		.4byte	.LASF77
 2381 05bd 01       		.byte	0x1
 2382 05be 6305     		.2byte	0x563
 2383 05c0 83000000 		.4byte	0x83
 2384 05c4 12030000 		.4byte	.LLST21
 2385 05c8 19       		.uleb128 0x19
 2386 05c9 00020000 		.4byte	.LASF78
 2387 05cd 01       		.byte	0x1
 2388 05ce 6405     		.2byte	0x564
 2389 05d0 83000000 		.4byte	0x83
 2390 05d4 25030000 		.4byte	.LLST22
 2391 05d8 19       		.uleb128 0x19
 2392 05d9 EB020000 		.4byte	.LASF79
 2393 05dd 01       		.byte	0x1
 2394 05de 6505     		.2byte	0x565
 2395 05e0 83000000 		.4byte	0x83
 2396 05e4 55030000 		.4byte	.LLST23
 2397 05e8 21       		.uleb128 0x21
 2398 05e9 3E000000 		.4byte	.LVL67
 2399 05ed BB010000 		.4byte	0x1bb
 2400 05f1 00       		.byte	0
 2401 05f2 22       		.uleb128 0x22
 2402 05f3 20000000 		.4byte	.LASF80
 2403 05f7 01       		.byte	0x1
 2404 05f8 B905     		.2byte	0x5b9
 2405 05fa A7000000 		.4byte	0xa7
 2406 05fe 00000000 		.4byte	.LFB22
 2407 0602 54000000 		.4byte	.LFE22-.LFB22
 2408 0606 01       		.uleb128 0x1
 2409 0607 9C       		.byte	0x9c
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccogxpIC.s 			page 84


 2410 0608 5D060000 		.4byte	0x65d
 2411 060c 17       		.uleb128 0x17
 2412 060d FE040000 		.4byte	.LASF58
 2413 0611 01       		.byte	0x1
 2414 0612 B905     		.2byte	0x5b9
 2415 0614 83000000 		.4byte	0x83
 2416 0618 68030000 		.4byte	.LLST24
 2417 061c 17       		.uleb128 0x17
 2418 061d 7C050000 		.4byte	.LASF76
 2419 0621 01       		.byte	0x1
 2420 0622 B905     		.2byte	0x5b9
 2421 0624 8F000000 		.4byte	0x8f
 2422 0628 AD030000 		.4byte	.LLST25
 2423 062c 19       		.uleb128 0x19
 2424 062d D3040000 		.4byte	.LASF81
 2425 0631 01       		.byte	0x1
 2426 0632 BB05     		.2byte	0x5bb
 2427 0634 A7000000 		.4byte	0xa7
 2428 0638 E4030000 		.4byte	.LLST26
 2429 063c 19       		.uleb128 0x19
 2430 063d EB020000 		.4byte	.LASF79
 2431 0641 01       		.byte	0x1
 2432 0642 BC05     		.2byte	0x5bc
 2433 0644 83000000 		.4byte	0x83
 2434 0648 22040000 		.4byte	.LLST27
 2435 064c 1A       		.uleb128 0x1a
 2436 064d 1C000000 		.4byte	.LVL76
 2437 0651 7E050000 		.4byte	0x57e
 2438 0655 1B       		.uleb128 0x1b
 2439 0656 01       		.uleb128 0x1
 2440 0657 50       		.byte	0x50
 2441 0658 02       		.uleb128 0x2
 2442 0659 75       		.byte	0x75
 2443 065a 00       		.sleb128 0
 2444 065b 00       		.byte	0
 2445 065c 00       		.byte	0
 2446 065d 22       		.uleb128 0x22
 2447 065e 23040000 		.4byte	.LASF82
 2448 0662 01       		.byte	0x1
 2449 0663 EF05     		.2byte	0x5ef
 2450 0665 8F000000 		.4byte	0x8f
 2451 0669 00000000 		.4byte	.LFB23
 2452 066d 58000000 		.4byte	.LFE23-.LFB23
 2453 0671 01       		.uleb128 0x1
 2454 0672 9C       		.byte	0x9c
 2455 0673 C9060000 		.4byte	0x6c9
 2456 0677 17       		.uleb128 0x17
 2457 0678 FE040000 		.4byte	.LASF58
 2458 067c 01       		.byte	0x1
 2459 067d EF05     		.2byte	0x5ef
 2460 067f 83000000 		.4byte	0x83
 2461 0683 65040000 		.4byte	.LLST28
 2462 0687 17       		.uleb128 0x17
 2463 0688 7C050000 		.4byte	.LASF76
 2464 068c 01       		.byte	0x1
 2465 068d EF05     		.2byte	0x5ef
 2466 068f 8F000000 		.4byte	0x8f
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccogxpIC.s 			page 85


 2467 0693 86040000 		.4byte	.LLST29
 2468 0697 19       		.uleb128 0x19
 2469 0698 B6050000 		.4byte	.LASF83
 2470 069c 01       		.byte	0x1
 2471 069d F105     		.2byte	0x5f1
 2472 069f 8F000000 		.4byte	0x8f
 2473 06a3 B2040000 		.4byte	.LLST30
 2474 06a7 19       		.uleb128 0x19
 2475 06a8 EB020000 		.4byte	.LASF79
 2476 06ac 01       		.byte	0x1
 2477 06ad F205     		.2byte	0x5f2
 2478 06af 83000000 		.4byte	0x83
 2479 06b3 D1040000 		.4byte	.LLST31
 2480 06b7 1A       		.uleb128 0x1a
 2481 06b8 1E000000 		.4byte	.LVL89
 2482 06bc 7E050000 		.4byte	0x57e
 2483 06c0 1B       		.uleb128 0x1b
 2484 06c1 01       		.uleb128 0x1
 2485 06c2 50       		.byte	0x50
 2486 06c3 03       		.uleb128 0x3
 2487 06c4 F3       		.byte	0xf3
 2488 06c5 01       		.uleb128 0x1
 2489 06c6 50       		.byte	0x50
 2490 06c7 00       		.byte	0
 2491 06c8 00       		.byte	0
 2492 06c9 22       		.uleb128 0x22
 2493 06ca ED000000 		.4byte	.LASF84
 2494 06ce 01       		.byte	0x1
 2495 06cf 2806     		.2byte	0x628
 2496 06d1 9B000000 		.4byte	0x9b
 2497 06d5 00000000 		.4byte	.LFB24
 2498 06d9 4C000000 		.4byte	.LFE24-.LFB24
 2499 06dd 01       		.uleb128 0x1
 2500 06de 9C       		.byte	0x9c
 2501 06df 34070000 		.4byte	0x734
 2502 06e3 17       		.uleb128 0x17
 2503 06e4 FE040000 		.4byte	.LASF58
 2504 06e8 01       		.byte	0x1
 2505 06e9 2806     		.2byte	0x628
 2506 06eb 83000000 		.4byte	0x83
 2507 06ef F4040000 		.4byte	.LLST32
 2508 06f3 17       		.uleb128 0x17
 2509 06f4 7C050000 		.4byte	.LASF76
 2510 06f8 01       		.byte	0x1
 2511 06f9 2806     		.2byte	0x628
 2512 06fb 8F000000 		.4byte	0x8f
 2513 06ff 20050000 		.4byte	.LLST33
 2514 0703 19       		.uleb128 0x19
 2515 0704 4F050000 		.4byte	.LASF85
 2516 0708 01       		.byte	0x1
 2517 0709 2A06     		.2byte	0x62a
 2518 070b C1000000 		.4byte	0xc1
 2519 070f 4C050000 		.4byte	.LLST34
 2520 0713 19       		.uleb128 0x19
 2521 0714 EB020000 		.4byte	.LASF79
 2522 0718 01       		.byte	0x1
 2523 0719 2B06     		.2byte	0x62b
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccogxpIC.s 			page 86


 2524 071b 83000000 		.4byte	0x83
 2525 071f 68050000 		.4byte	.LLST35
 2526 0723 1A       		.uleb128 0x1a
 2527 0724 20000000 		.4byte	.LVL96
 2528 0728 7E050000 		.4byte	0x57e
 2529 072c 1B       		.uleb128 0x1b
 2530 072d 01       		.uleb128 0x1
 2531 072e 50       		.byte	0x50
 2532 072f 02       		.uleb128 0x2
 2533 0730 75       		.byte	0x75
 2534 0731 00       		.sleb128 0
 2535 0732 00       		.byte	0
 2536 0733 00       		.byte	0
 2537 0734 23       		.uleb128 0x23
 2538 0735 FA010000 		.4byte	0x1fa
 2539 0739 00000000 		.4byte	.LFB25
 2540 073d EC000000 		.4byte	.LFE25-.LFB25
 2541 0741 01       		.uleb128 0x1
 2542 0742 9C       		.byte	0x9c
 2543 0743 B9070000 		.4byte	0x7b9
 2544 0747 24       		.uleb128 0x24
 2545 0748 07020000 		.4byte	0x207
 2546 074c 00       		.byte	0
 2547 074d 24       		.uleb128 0x24
 2548 074e 13020000 		.4byte	0x213
 2549 0752 00       		.byte	0
 2550 0753 14       		.uleb128 0x14
 2551 0754 1F020000 		.4byte	0x21f
 2552 0758 25       		.uleb128 0x25
 2553 0759 0C000000 		.4byte	.LBB18
 2554 075d BC000000 		.4byte	.LBE18-.LBB18
 2555 0761 12       		.uleb128 0x12
 2556 0762 07020000 		.4byte	0x207
 2557 0766 8B050000 		.4byte	.LLST36
 2558 076a 12       		.uleb128 0x12
 2559 076b 13020000 		.4byte	0x213
 2560 076f B8050000 		.4byte	.LLST37
 2561 0773 12       		.uleb128 0x12
 2562 0774 1F020000 		.4byte	0x21f
 2563 0778 D7050000 		.4byte	.LLST38
 2564 077c 26       		.uleb128 0x26
 2565 077d A2000000 		.4byte	.LVL109
 2566 0781 CA090000 		.4byte	0x9ca
 2567 0785 94070000 		.4byte	0x794
 2568 0789 1B       		.uleb128 0x1b
 2569 078a 01       		.uleb128 0x1
 2570 078b 51       		.byte	0x51
 2571 078c 01       		.uleb128 0x1
 2572 078d 33       		.byte	0x33
 2573 078e 1B       		.uleb128 0x1b
 2574 078f 01       		.uleb128 0x1
 2575 0790 50       		.byte	0x50
 2576 0791 01       		.uleb128 0x1
 2577 0792 3F       		.byte	0x3f
 2578 0793 00       		.byte	0
 2579 0794 26       		.uleb128 0x26
 2580 0795 AA000000 		.4byte	.LVL110
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccogxpIC.s 			page 87


 2581 0799 E0090000 		.4byte	0x9e0
 2582 079d A7070000 		.4byte	0x7a7
 2583 07a1 1B       		.uleb128 0x1b
 2584 07a2 01       		.uleb128 0x1
 2585 07a3 50       		.byte	0x50
 2586 07a4 01       		.uleb128 0x1
 2587 07a5 3F       		.byte	0x3f
 2588 07a6 00       		.byte	0
 2589 07a7 1A       		.uleb128 0x1a
 2590 07a8 BE000000 		.4byte	.LVL113
 2591 07ac 95020000 		.4byte	0x295
 2592 07b0 1B       		.uleb128 0x1b
 2593 07b1 01       		.uleb128 0x1
 2594 07b2 50       		.byte	0x50
 2595 07b3 02       		.uleb128 0x2
 2596 07b4 74       		.byte	0x74
 2597 07b5 00       		.sleb128 0
 2598 07b6 00       		.byte	0
 2599 07b7 00       		.byte	0
 2600 07b8 00       		.byte	0
 2601 07b9 10       		.uleb128 0x10
 2602 07ba 2C020000 		.4byte	0x22c
 2603 07be 00000000 		.4byte	.LFB26
 2604 07c2 2C000000 		.4byte	.LFE26-.LFB26
 2605 07c6 01       		.uleb128 0x1
 2606 07c7 9C       		.byte	0x9c
 2607 07c8 DC070000 		.4byte	0x7dc
 2608 07cc 1A       		.uleb128 0x1a
 2609 07cd 22000000 		.4byte	.LVL115
 2610 07d1 FA090000 		.4byte	0x9fa
 2611 07d5 1B       		.uleb128 0x1b
 2612 07d6 01       		.uleb128 0x1
 2613 07d7 50       		.byte	0x50
 2614 07d8 01       		.uleb128 0x1
 2615 07d9 3A       		.byte	0x3a
 2616 07da 00       		.byte	0
 2617 07db 00       		.byte	0
 2618 07dc 16       		.uleb128 0x16
 2619 07dd 86050000 		.4byte	.LASF86
 2620 07e1 01       		.byte	0x1
 2621 07e2 3A02     		.2byte	0x23a
 2622 07e4 00000000 		.4byte	.LFB1
 2623 07e8 20000000 		.4byte	.LFE1-.LFB1
 2624 07ec 01       		.uleb128 0x1
 2625 07ed 9C       		.byte	0x9c
 2626 07ee 05080000 		.4byte	0x805
 2627 07f2 21       		.uleb128 0x21
 2628 07f3 10000000 		.4byte	.LVL116
 2629 07f7 FA010000 		.4byte	0x1fa
 2630 07fb 21       		.uleb128 0x21
 2631 07fc 1A000000 		.4byte	.LVL117
 2632 0800 2C020000 		.4byte	0x22c
 2633 0804 00       		.byte	0
 2634 0805 16       		.uleb128 0x16
 2635 0806 43050000 		.4byte	.LASF87
 2636 080a 01       		.byte	0x1
 2637 080b 5A02     		.2byte	0x25a
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccogxpIC.s 			page 88


 2638 080d 00000000 		.4byte	.LFB2
 2639 0811 10000000 		.4byte	.LFE2-.LFB2
 2640 0815 01       		.uleb128 0x1
 2641 0816 9C       		.byte	0x9c
 2642 0817 45080000 		.4byte	0x845
 2643 081b 17       		.uleb128 0x17
 2644 081c 64030000 		.4byte	.LASF88
 2645 0820 01       		.byte	0x1
 2646 0821 5A02     		.2byte	0x25a
 2647 0823 E5000000 		.4byte	0xe5
 2648 0827 EA050000 		.4byte	.LLST39
 2649 082b 21       		.uleb128 0x21
 2650 082c 08000000 		.4byte	.LVL119
 2651 0830 DC070000 		.4byte	0x7dc
 2652 0834 1A       		.uleb128 0x1a
 2653 0835 0E000000 		.4byte	.LVL120
 2654 0839 0B0A0000 		.4byte	0xa0b
 2655 083d 1B       		.uleb128 0x1b
 2656 083e 01       		.uleb128 0x1
 2657 083f 50       		.byte	0x50
 2658 0840 02       		.uleb128 0x2
 2659 0841 74       		.byte	0x74
 2660 0842 00       		.sleb128 0
 2661 0843 00       		.byte	0
 2662 0844 00       		.byte	0
 2663 0845 16       		.uleb128 0x16
 2664 0846 C4000000 		.4byte	.LASF89
 2665 084a 01       		.byte	0x1
 2666 084b 0103     		.2byte	0x301
 2667 084d 00000000 		.4byte	.LFB5
 2668 0851 70000000 		.4byte	.LFE5-.LFB5
 2669 0855 01       		.uleb128 0x1
 2670 0856 9C       		.byte	0x9c
 2671 0857 B4080000 		.4byte	0x8b4
 2672 085b 17       		.uleb128 0x17
 2673 085c 29050000 		.4byte	.LASF47
 2674 0860 01       		.byte	0x1
 2675 0861 0103     		.2byte	0x301
 2676 0863 83000000 		.4byte	0x83
 2677 0867 16060000 		.4byte	.LLST40
 2678 086b 17       		.uleb128 0x17
 2679 086c 5D050000 		.4byte	.LASF90
 2680 0870 01       		.byte	0x1
 2681 0871 0103     		.2byte	0x301
 2682 0873 83000000 		.4byte	0x83
 2683 0877 37060000 		.4byte	.LLST41
 2684 087b 21       		.uleb128 0x21
 2685 087c 0E000000 		.4byte	.LVL123
 2686 0880 83020000 		.4byte	0x283
 2687 0884 21       		.uleb128 0x21
 2688 0885 1C000000 		.4byte	.LVL124
 2689 0889 FA010000 		.4byte	0x1fa
 2690 088d 26       		.uleb128 0x26
 2691 088e 2A000000 		.4byte	.LVL125
 2692 0892 95020000 		.4byte	0x295
 2693 0896 A1080000 		.4byte	0x8a1
 2694 089a 1B       		.uleb128 0x1b
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccogxpIC.s 			page 89


 2695 089b 01       		.uleb128 0x1
 2696 089c 50       		.byte	0x50
 2697 089d 02       		.uleb128 0x2
 2698 089e 75       		.byte	0x75
 2699 089f 00       		.sleb128 0
 2700 08a0 00       		.byte	0
 2701 08a1 21       		.uleb128 0x21
 2702 08a2 54000000 		.4byte	.LVL126
 2703 08a6 DC070000 		.4byte	0x7dc
 2704 08aa 21       		.uleb128 0x21
 2705 08ab 58000000 		.4byte	.LVL127
 2706 08af F1010000 		.4byte	0x1f1
 2707 08b3 00       		.byte	0
 2708 08b4 16       		.uleb128 0x16
 2709 08b5 33020000 		.4byte	.LASF91
 2710 08b9 01       		.byte	0x1
 2711 08ba 6A03     		.2byte	0x36a
 2712 08bc 00000000 		.4byte	.LFB7
 2713 08c0 40000000 		.4byte	.LFE7-.LFB7
 2714 08c4 01       		.uleb128 0x1
 2715 08c5 9C       		.byte	0x9c
 2716 08c6 DD080000 		.4byte	0x8dd
 2717 08ca 21       		.uleb128 0x21
 2718 08cb 28000000 		.4byte	.LVL128
 2719 08cf 83020000 		.4byte	0x283
 2720 08d3 21       		.uleb128 0x21
 2721 08d4 2C000000 		.4byte	.LVL129
 2722 08d8 DC070000 		.4byte	0x7dc
 2723 08dc 00       		.byte	0
 2724 08dd 27       		.uleb128 0x27
 2725 08de 3C000000 		.4byte	.LASF92
 2726 08e2 01       		.byte	0x1
 2727 08e3 43       		.byte	0x43
 2728 08e4 83000000 		.4byte	0x83
 2729 08e8 05       		.uleb128 0x5
 2730 08e9 03       		.byte	0x3
 2731 08ea 00000000 		.4byte	ADC_currentConfig
 2732 08ee 28       		.uleb128 0x28
 2733 08ef 83000000 		.4byte	0x83
 2734 08f3 FE080000 		.4byte	0x8fe
 2735 08f7 29       		.uleb128 0x29
 2736 08f8 F8000000 		.4byte	0xf8
 2737 08fc 01       		.byte	0x1
 2738 08fd 00       		.byte	0
 2739 08fe 27       		.uleb128 0x27
 2740 08ff 30050000 		.4byte	.LASF93
 2741 0903 01       		.byte	0x1
 2742 0904 49       		.byte	0x49
 2743 0905 0F090000 		.4byte	0x90f
 2744 0909 05       		.uleb128 0x5
 2745 090a 03       		.byte	0x3
 2746 090b 00000000 		.4byte	ADC_channelsConfig
 2747 090f 1C       		.uleb128 0x1c
 2748 0910 EE080000 		.4byte	0x8ee
 2749 0914 2A       		.uleb128 0x2a
 2750 0915 8B010000 		.4byte	.LASF94
 2751 0919 01       		.byte	0x1
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccogxpIC.s 			page 90


 2752 091a 3D       		.byte	0x3d
 2753 091b 6B000000 		.4byte	0x6b
 2754 091f 05       		.uleb128 0x5
 2755 0920 03       		.byte	0x3
 2756 0921 00000000 		.4byte	ADC_initVar
 2757 0925 2A       		.uleb128 0x2a
 2758 0926 FE050000 		.4byte	.LASF95
 2759 092a 01       		.byte	0x1
 2760 092b 3F       		.byte	0x3f
 2761 092c 6B000000 		.4byte	0x6b
 2762 0930 05       		.uleb128 0x5
 2763 0931 03       		.byte	0x3
 2764 0932 00000000 		.4byte	ADC_selected
 2765 0936 28       		.uleb128 0x28
 2766 0937 8F000000 		.4byte	0x8f
 2767 093b 46090000 		.4byte	0x946
 2768 093f 29       		.uleb128 0x29
 2769 0940 F8000000 		.4byte	0xf8
 2770 0944 01       		.byte	0x1
 2771 0945 00       		.byte	0
 2772 0946 2A       		.uleb128 0x2a
 2773 0947 88040000 		.4byte	.LASF96
 2774 094b 01       		.byte	0x1
 2775 094c 40       		.byte	0x40
 2776 094d 57090000 		.4byte	0x957
 2777 0951 05       		.uleb128 0x5
 2778 0952 03       		.byte	0x3
 2779 0953 00000000 		.4byte	ADC_offset
 2780 0957 05       		.uleb128 0x5
 2781 0958 36090000 		.4byte	0x936
 2782 095c 28       		.uleb128 0x28
 2783 095d 9B000000 		.4byte	0x9b
 2784 0961 6C090000 		.4byte	0x96c
 2785 0965 29       		.uleb128 0x29
 2786 0966 F8000000 		.4byte	0xf8
 2787 096a 01       		.byte	0x1
 2788 096b 00       		.byte	0
 2789 096c 2A       		.uleb128 0x2a
 2790 096d 01010000 		.4byte	.LASF97
 2791 0971 01       		.byte	0x1
 2792 0972 41       		.byte	0x41
 2793 0973 7D090000 		.4byte	0x97d
 2794 0977 05       		.uleb128 0x5
 2795 0978 03       		.byte	0x3
 2796 0979 00000000 		.4byte	ADC_countsPer10Volt
 2797 097d 05       		.uleb128 0x5
 2798 097e 5C090000 		.4byte	0x95c
 2799 0982 28       		.uleb128 0x28
 2800 0983 B0010000 		.4byte	0x1b0
 2801 0987 92090000 		.4byte	0x992
 2802 098b 29       		.uleb128 0x29
 2803 098c F8000000 		.4byte	0xf8
 2804 0990 00       		.byte	0
 2805 0991 00       		.byte	0
 2806 0992 2B       		.uleb128 0x2b
 2807 0993 1A050000 		.4byte	.LASF98
 2808 0997 03       		.byte	0x3
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccogxpIC.s 			page 91


 2809 0998 DF01     		.2byte	0x1df
 2810 099a 9E090000 		.4byte	0x99e
 2811 099e 1C       		.uleb128 0x1c
 2812 099f 82090000 		.4byte	0x982
 2813 09a3 2B       		.uleb128 0x2b
 2814 09a4 74000000 		.4byte	.LASF99
 2815 09a8 03       		.byte	0x3
 2816 09a9 E001     		.2byte	0x1e0
 2817 09ab AF090000 		.4byte	0x9af
 2818 09af 1C       		.uleb128 0x1c
 2819 09b0 EE080000 		.4byte	0x8ee
 2820 09b4 2C       		.uleb128 0x2c
 2821 09b5 9D040000 		.4byte	.LASF101
 2822 09b9 04       		.byte	0x4
 2823 09ba 29       		.byte	0x29
 2824 09bb CA090000 		.4byte	0x9ca
 2825 09bf 2D       		.uleb128 0x2d
 2826 09c0 77000000 		.4byte	0x77
 2827 09c4 2D       		.uleb128 0x2d
 2828 09c5 6B000000 		.4byte	0x6b
 2829 09c9 00       		.byte	0
 2830 09ca 2C       		.uleb128 0x2c
 2831 09cb C9030000 		.4byte	.LASF102
 2832 09cf 05       		.byte	0x5
 2833 09d0 C0       		.byte	0xc0
 2834 09d1 E0090000 		.4byte	0x9e0
 2835 09d5 2D       		.uleb128 0x2d
 2836 09d6 6B000000 		.4byte	0x6b
 2837 09da 2D       		.uleb128 0x2d
 2838 09db 6B000000 		.4byte	0x6b
 2839 09df 00       		.byte	0
 2840 09e0 2E       		.uleb128 0x2e
 2841 09e1 77010000 		.4byte	.LASF109
 2842 09e5 05       		.byte	0x5
 2843 09e6 BD       		.byte	0xbd
 2844 09e7 E5000000 		.4byte	0xe5
 2845 09eb FA090000 		.4byte	0x9fa
 2846 09ef 2D       		.uleb128 0x2d
 2847 09f0 6B000000 		.4byte	0x6b
 2848 09f4 2D       		.uleb128 0x2d
 2849 09f5 E5000000 		.4byte	0xe5
 2850 09f9 00       		.byte	0
 2851 09fa 2C       		.uleb128 0x2c
 2852 09fb 30010000 		.4byte	.LASF103
 2853 09ff 05       		.byte	0x5
 2854 0a00 DA       		.byte	0xda
 2855 0a01 0B0A0000 		.4byte	0xa0b
 2856 0a05 2D       		.uleb128 0x2d
 2857 0a06 77000000 		.4byte	0x77
 2858 0a0a 00       		.byte	0
 2859 0a0b 2F       		.uleb128 0x2f
 2860 0a0c D2050000 		.4byte	.LASF110
 2861 0a10 06       		.byte	0x6
 2862 0a11 18       		.byte	0x18
 2863 0a12 2D       		.uleb128 0x2d
 2864 0a13 E5000000 		.4byte	0xe5
 2865 0a17 00       		.byte	0
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccogxpIC.s 			page 92


 2866 0a18 00       		.byte	0
 2867              		.section	.debug_abbrev,"",%progbits
 2868              	.Ldebug_abbrev0:
 2869 0000 01       		.uleb128 0x1
 2870 0001 11       		.uleb128 0x11
 2871 0002 01       		.byte	0x1
 2872 0003 25       		.uleb128 0x25
 2873 0004 0E       		.uleb128 0xe
 2874 0005 13       		.uleb128 0x13
 2875 0006 0B       		.uleb128 0xb
 2876 0007 03       		.uleb128 0x3
 2877 0008 0E       		.uleb128 0xe
 2878 0009 1B       		.uleb128 0x1b
 2879 000a 0E       		.uleb128 0xe
 2880 000b 55       		.uleb128 0x55
 2881 000c 17       		.uleb128 0x17
 2882 000d 11       		.uleb128 0x11
 2883 000e 01       		.uleb128 0x1
 2884 000f 10       		.uleb128 0x10
 2885 0010 17       		.uleb128 0x17
 2886 0011 00       		.byte	0
 2887 0012 00       		.byte	0
 2888 0013 02       		.uleb128 0x2
 2889 0014 24       		.uleb128 0x24
 2890 0015 00       		.byte	0
 2891 0016 0B       		.uleb128 0xb
 2892 0017 0B       		.uleb128 0xb
 2893 0018 3E       		.uleb128 0x3e
 2894 0019 0B       		.uleb128 0xb
 2895 001a 03       		.uleb128 0x3
 2896 001b 0E       		.uleb128 0xe
 2897 001c 00       		.byte	0
 2898 001d 00       		.byte	0
 2899 001e 03       		.uleb128 0x3
 2900 001f 24       		.uleb128 0x24
 2901 0020 00       		.byte	0
 2902 0021 0B       		.uleb128 0xb
 2903 0022 0B       		.uleb128 0xb
 2904 0023 3E       		.uleb128 0x3e
 2905 0024 0B       		.uleb128 0xb
 2906 0025 03       		.uleb128 0x3
 2907 0026 08       		.uleb128 0x8
 2908 0027 00       		.byte	0
 2909 0028 00       		.byte	0
 2910 0029 04       		.uleb128 0x4
 2911 002a 16       		.uleb128 0x16
 2912 002b 00       		.byte	0
 2913 002c 03       		.uleb128 0x3
 2914 002d 0E       		.uleb128 0xe
 2915 002e 3A       		.uleb128 0x3a
 2916 002f 0B       		.uleb128 0xb
 2917 0030 3B       		.uleb128 0x3b
 2918 0031 05       		.uleb128 0x5
 2919 0032 49       		.uleb128 0x49
 2920 0033 13       		.uleb128 0x13
 2921 0034 00       		.byte	0
 2922 0035 00       		.byte	0
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccogxpIC.s 			page 93


 2923 0036 05       		.uleb128 0x5
 2924 0037 35       		.uleb128 0x35
 2925 0038 00       		.byte	0
 2926 0039 49       		.uleb128 0x49
 2927 003a 13       		.uleb128 0x13
 2928 003b 00       		.byte	0
 2929 003c 00       		.byte	0
 2930 003d 06       		.uleb128 0x6
 2931 003e 0F       		.uleb128 0xf
 2932 003f 00       		.byte	0
 2933 0040 0B       		.uleb128 0xb
 2934 0041 0B       		.uleb128 0xb
 2935 0042 49       		.uleb128 0x49
 2936 0043 13       		.uleb128 0x13
 2937 0044 00       		.byte	0
 2938 0045 00       		.byte	0
 2939 0046 07       		.uleb128 0x7
 2940 0047 15       		.uleb128 0x15
 2941 0048 00       		.byte	0
 2942 0049 27       		.uleb128 0x27
 2943 004a 19       		.uleb128 0x19
 2944 004b 00       		.byte	0
 2945 004c 00       		.byte	0
 2946 004d 08       		.uleb128 0x8
 2947 004e 13       		.uleb128 0x13
 2948 004f 01       		.byte	0x1
 2949 0050 0B       		.uleb128 0xb
 2950 0051 0B       		.uleb128 0xb
 2951 0052 3A       		.uleb128 0x3a
 2952 0053 0B       		.uleb128 0xb
 2953 0054 3B       		.uleb128 0x3b
 2954 0055 0B       		.uleb128 0xb
 2955 0056 01       		.uleb128 0x1
 2956 0057 13       		.uleb128 0x13
 2957 0058 00       		.byte	0
 2958 0059 00       		.byte	0
 2959 005a 09       		.uleb128 0x9
 2960 005b 0D       		.uleb128 0xd
 2961 005c 00       		.byte	0
 2962 005d 03       		.uleb128 0x3
 2963 005e 0E       		.uleb128 0xe
 2964 005f 3A       		.uleb128 0x3a
 2965 0060 0B       		.uleb128 0xb
 2966 0061 3B       		.uleb128 0x3b
 2967 0062 0B       		.uleb128 0xb
 2968 0063 49       		.uleb128 0x49
 2969 0064 13       		.uleb128 0x13
 2970 0065 38       		.uleb128 0x38
 2971 0066 0B       		.uleb128 0xb
 2972 0067 00       		.byte	0
 2973 0068 00       		.byte	0
 2974 0069 0A       		.uleb128 0xa
 2975 006a 16       		.uleb128 0x16
 2976 006b 00       		.byte	0
 2977 006c 03       		.uleb128 0x3
 2978 006d 0E       		.uleb128 0xe
 2979 006e 3A       		.uleb128 0x3a
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccogxpIC.s 			page 94


 2980 006f 0B       		.uleb128 0xb
 2981 0070 3B       		.uleb128 0x3b
 2982 0071 0B       		.uleb128 0xb
 2983 0072 49       		.uleb128 0x49
 2984 0073 13       		.uleb128 0x13
 2985 0074 00       		.byte	0
 2986 0075 00       		.byte	0
 2987 0076 0B       		.uleb128 0xb
 2988 0077 2E       		.uleb128 0x2e
 2989 0078 01       		.byte	0x1
 2990 0079 03       		.uleb128 0x3
 2991 007a 0E       		.uleb128 0xe
 2992 007b 3A       		.uleb128 0x3a
 2993 007c 0B       		.uleb128 0xb
 2994 007d 3B       		.uleb128 0x3b
 2995 007e 05       		.uleb128 0x5
 2996 007f 27       		.uleb128 0x27
 2997 0080 19       		.uleb128 0x19
 2998 0081 49       		.uleb128 0x49
 2999 0082 13       		.uleb128 0x13
 3000 0083 20       		.uleb128 0x20
 3001 0084 0B       		.uleb128 0xb
 3002 0085 01       		.uleb128 0x1
 3003 0086 13       		.uleb128 0x13
 3004 0087 00       		.byte	0
 3005 0088 00       		.byte	0
 3006 0089 0C       		.uleb128 0xc
 3007 008a 05       		.uleb128 0x5
 3008 008b 00       		.byte	0
 3009 008c 03       		.uleb128 0x3
 3010 008d 0E       		.uleb128 0xe
 3011 008e 3A       		.uleb128 0x3a
 3012 008f 0B       		.uleb128 0xb
 3013 0090 3B       		.uleb128 0x3b
 3014 0091 05       		.uleb128 0x5
 3015 0092 49       		.uleb128 0x49
 3016 0093 13       		.uleb128 0x13
 3017 0094 00       		.byte	0
 3018 0095 00       		.byte	0
 3019 0096 0D       		.uleb128 0xd
 3020 0097 34       		.uleb128 0x34
 3021 0098 00       		.byte	0
 3022 0099 03       		.uleb128 0x3
 3023 009a 0E       		.uleb128 0xe
 3024 009b 3A       		.uleb128 0x3a
 3025 009c 0B       		.uleb128 0xb
 3026 009d 3B       		.uleb128 0x3b
 3027 009e 05       		.uleb128 0x5
 3028 009f 49       		.uleb128 0x49
 3029 00a0 13       		.uleb128 0x13
 3030 00a1 00       		.byte	0
 3031 00a2 00       		.byte	0
 3032 00a3 0E       		.uleb128 0xe
 3033 00a4 2E       		.uleb128 0x2e
 3034 00a5 00       		.byte	0
 3035 00a6 3F       		.uleb128 0x3f
 3036 00a7 19       		.uleb128 0x19
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccogxpIC.s 			page 95


 3037 00a8 03       		.uleb128 0x3
 3038 00a9 0E       		.uleb128 0xe
 3039 00aa 3A       		.uleb128 0x3a
 3040 00ab 0B       		.uleb128 0xb
 3041 00ac 3B       		.uleb128 0x3b
 3042 00ad 05       		.uleb128 0x5
 3043 00ae 27       		.uleb128 0x27
 3044 00af 19       		.uleb128 0x19
 3045 00b0 20       		.uleb128 0x20
 3046 00b1 0B       		.uleb128 0xb
 3047 00b2 00       		.byte	0
 3048 00b3 00       		.byte	0
 3049 00b4 0F       		.uleb128 0xf
 3050 00b5 2E       		.uleb128 0x2e
 3051 00b6 01       		.byte	0x1
 3052 00b7 3F       		.uleb128 0x3f
 3053 00b8 19       		.uleb128 0x19
 3054 00b9 03       		.uleb128 0x3
 3055 00ba 0E       		.uleb128 0xe
 3056 00bb 3A       		.uleb128 0x3a
 3057 00bc 0B       		.uleb128 0xb
 3058 00bd 3B       		.uleb128 0x3b
 3059 00be 05       		.uleb128 0x5
 3060 00bf 27       		.uleb128 0x27
 3061 00c0 19       		.uleb128 0x19
 3062 00c1 20       		.uleb128 0x20
 3063 00c2 0B       		.uleb128 0xb
 3064 00c3 01       		.uleb128 0x1
 3065 00c4 13       		.uleb128 0x13
 3066 00c5 00       		.byte	0
 3067 00c6 00       		.byte	0
 3068 00c7 10       		.uleb128 0x10
 3069 00c8 2E       		.uleb128 0x2e
 3070 00c9 01       		.byte	0x1
 3071 00ca 31       		.uleb128 0x31
 3072 00cb 13       		.uleb128 0x13
 3073 00cc 11       		.uleb128 0x11
 3074 00cd 01       		.uleb128 0x1
 3075 00ce 12       		.uleb128 0x12
 3076 00cf 06       		.uleb128 0x6
 3077 00d0 40       		.uleb128 0x40
 3078 00d1 18       		.uleb128 0x18
 3079 00d2 9742     		.uleb128 0x2117
 3080 00d4 19       		.uleb128 0x19
 3081 00d5 01       		.uleb128 0x1
 3082 00d6 13       		.uleb128 0x13
 3083 00d7 00       		.byte	0
 3084 00d8 00       		.byte	0
 3085 00d9 11       		.uleb128 0x11
 3086 00da 05       		.uleb128 0x5
 3087 00db 00       		.byte	0
 3088 00dc 31       		.uleb128 0x31
 3089 00dd 13       		.uleb128 0x13
 3090 00de 02       		.uleb128 0x2
 3091 00df 17       		.uleb128 0x17
 3092 00e0 00       		.byte	0
 3093 00e1 00       		.byte	0
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccogxpIC.s 			page 96


 3094 00e2 12       		.uleb128 0x12
 3095 00e3 34       		.uleb128 0x34
 3096 00e4 00       		.byte	0
 3097 00e5 31       		.uleb128 0x31
 3098 00e6 13       		.uleb128 0x13
 3099 00e7 02       		.uleb128 0x2
 3100 00e8 17       		.uleb128 0x17
 3101 00e9 00       		.byte	0
 3102 00ea 00       		.byte	0
 3103 00eb 13       		.uleb128 0x13
 3104 00ec 0B       		.uleb128 0xb
 3105 00ed 01       		.byte	0x1
 3106 00ee 55       		.uleb128 0x55
 3107 00ef 17       		.uleb128 0x17
 3108 00f0 00       		.byte	0
 3109 00f1 00       		.byte	0
 3110 00f2 14       		.uleb128 0x14
 3111 00f3 34       		.uleb128 0x34
 3112 00f4 00       		.byte	0
 3113 00f5 31       		.uleb128 0x31
 3114 00f6 13       		.uleb128 0x13
 3115 00f7 00       		.byte	0
 3116 00f8 00       		.byte	0
 3117 00f9 15       		.uleb128 0x15
 3118 00fa 2E       		.uleb128 0x2e
 3119 00fb 00       		.byte	0
 3120 00fc 3F       		.uleb128 0x3f
 3121 00fd 19       		.uleb128 0x19
 3122 00fe 03       		.uleb128 0x3
 3123 00ff 0E       		.uleb128 0xe
 3124 0100 3A       		.uleb128 0x3a
 3125 0101 0B       		.uleb128 0xb
 3126 0102 3B       		.uleb128 0x3b
 3127 0103 05       		.uleb128 0x5
 3128 0104 27       		.uleb128 0x27
 3129 0105 19       		.uleb128 0x19
 3130 0106 11       		.uleb128 0x11
 3131 0107 01       		.uleb128 0x1
 3132 0108 12       		.uleb128 0x12
 3133 0109 06       		.uleb128 0x6
 3134 010a 40       		.uleb128 0x40
 3135 010b 18       		.uleb128 0x18
 3136 010c 9742     		.uleb128 0x2117
 3137 010e 19       		.uleb128 0x19
 3138 010f 00       		.byte	0
 3139 0110 00       		.byte	0
 3140 0111 16       		.uleb128 0x16
 3141 0112 2E       		.uleb128 0x2e
 3142 0113 01       		.byte	0x1
 3143 0114 3F       		.uleb128 0x3f
 3144 0115 19       		.uleb128 0x19
 3145 0116 03       		.uleb128 0x3
 3146 0117 0E       		.uleb128 0xe
 3147 0118 3A       		.uleb128 0x3a
 3148 0119 0B       		.uleb128 0xb
 3149 011a 3B       		.uleb128 0x3b
 3150 011b 05       		.uleb128 0x5
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccogxpIC.s 			page 97


 3151 011c 27       		.uleb128 0x27
 3152 011d 19       		.uleb128 0x19
 3153 011e 11       		.uleb128 0x11
 3154 011f 01       		.uleb128 0x1
 3155 0120 12       		.uleb128 0x12
 3156 0121 06       		.uleb128 0x6
 3157 0122 40       		.uleb128 0x40
 3158 0123 18       		.uleb128 0x18
 3159 0124 9742     		.uleb128 0x2117
 3160 0126 19       		.uleb128 0x19
 3161 0127 01       		.uleb128 0x1
 3162 0128 13       		.uleb128 0x13
 3163 0129 00       		.byte	0
 3164 012a 00       		.byte	0
 3165 012b 17       		.uleb128 0x17
 3166 012c 05       		.uleb128 0x5
 3167 012d 00       		.byte	0
 3168 012e 03       		.uleb128 0x3
 3169 012f 0E       		.uleb128 0xe
 3170 0130 3A       		.uleb128 0x3a
 3171 0131 0B       		.uleb128 0xb
 3172 0132 3B       		.uleb128 0x3b
 3173 0133 05       		.uleb128 0x5
 3174 0134 49       		.uleb128 0x49
 3175 0135 13       		.uleb128 0x13
 3176 0136 02       		.uleb128 0x2
 3177 0137 17       		.uleb128 0x17
 3178 0138 00       		.byte	0
 3179 0139 00       		.byte	0
 3180 013a 18       		.uleb128 0x18
 3181 013b 34       		.uleb128 0x34
 3182 013c 00       		.byte	0
 3183 013d 03       		.uleb128 0x3
 3184 013e 0E       		.uleb128 0xe
 3185 013f 3A       		.uleb128 0x3a
 3186 0140 0B       		.uleb128 0xb
 3187 0141 3B       		.uleb128 0x3b
 3188 0142 05       		.uleb128 0x5
 3189 0143 49       		.uleb128 0x49
 3190 0144 13       		.uleb128 0x13
 3191 0145 02       		.uleb128 0x2
 3192 0146 18       		.uleb128 0x18
 3193 0147 00       		.byte	0
 3194 0148 00       		.byte	0
 3195 0149 19       		.uleb128 0x19
 3196 014a 34       		.uleb128 0x34
 3197 014b 00       		.byte	0
 3198 014c 03       		.uleb128 0x3
 3199 014d 0E       		.uleb128 0xe
 3200 014e 3A       		.uleb128 0x3a
 3201 014f 0B       		.uleb128 0xb
 3202 0150 3B       		.uleb128 0x3b
 3203 0151 05       		.uleb128 0x5
 3204 0152 49       		.uleb128 0x49
 3205 0153 13       		.uleb128 0x13
 3206 0154 02       		.uleb128 0x2
 3207 0155 17       		.uleb128 0x17
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccogxpIC.s 			page 98


 3208 0156 00       		.byte	0
 3209 0157 00       		.byte	0
 3210 0158 1A       		.uleb128 0x1a
 3211 0159 898201   		.uleb128 0x4109
 3212 015c 01       		.byte	0x1
 3213 015d 11       		.uleb128 0x11
 3214 015e 01       		.uleb128 0x1
 3215 015f 31       		.uleb128 0x31
 3216 0160 13       		.uleb128 0x13
 3217 0161 00       		.byte	0
 3218 0162 00       		.byte	0
 3219 0163 1B       		.uleb128 0x1b
 3220 0164 8A8201   		.uleb128 0x410a
 3221 0167 00       		.byte	0
 3222 0168 02       		.uleb128 0x2
 3223 0169 18       		.uleb128 0x18
 3224 016a 9142     		.uleb128 0x2111
 3225 016c 18       		.uleb128 0x18
 3226 016d 00       		.byte	0
 3227 016e 00       		.byte	0
 3228 016f 1C       		.uleb128 0x1c
 3229 0170 26       		.uleb128 0x26
 3230 0171 00       		.byte	0
 3231 0172 49       		.uleb128 0x49
 3232 0173 13       		.uleb128 0x13
 3233 0174 00       		.byte	0
 3234 0175 00       		.byte	0
 3235 0176 1D       		.uleb128 0x1d
 3236 0177 2E       		.uleb128 0x2e
 3237 0178 00       		.byte	0
 3238 0179 31       		.uleb128 0x31
 3239 017a 13       		.uleb128 0x13
 3240 017b 11       		.uleb128 0x11
 3241 017c 01       		.uleb128 0x1
 3242 017d 12       		.uleb128 0x12
 3243 017e 06       		.uleb128 0x6
 3244 017f 40       		.uleb128 0x40
 3245 0180 18       		.uleb128 0x18
 3246 0181 9742     		.uleb128 0x2117
 3247 0183 19       		.uleb128 0x19
 3248 0184 00       		.byte	0
 3249 0185 00       		.byte	0
 3250 0186 1E       		.uleb128 0x1e
 3251 0187 05       		.uleb128 0x5
 3252 0188 00       		.byte	0
 3253 0189 03       		.uleb128 0x3
 3254 018a 0E       		.uleb128 0xe
 3255 018b 3A       		.uleb128 0x3a
 3256 018c 0B       		.uleb128 0xb
 3257 018d 3B       		.uleb128 0x3b
 3258 018e 05       		.uleb128 0x5
 3259 018f 49       		.uleb128 0x49
 3260 0190 13       		.uleb128 0x13
 3261 0191 02       		.uleb128 0x2
 3262 0192 18       		.uleb128 0x18
 3263 0193 00       		.byte	0
 3264 0194 00       		.byte	0
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccogxpIC.s 			page 99


 3265 0195 1F       		.uleb128 0x1f
 3266 0196 2E       		.uleb128 0x2e
 3267 0197 01       		.byte	0x1
 3268 0198 3F       		.uleb128 0x3f
 3269 0199 19       		.uleb128 0x19
 3270 019a 03       		.uleb128 0x3
 3271 019b 0E       		.uleb128 0xe
 3272 019c 3A       		.uleb128 0x3a
 3273 019d 0B       		.uleb128 0xb
 3274 019e 3B       		.uleb128 0x3b
 3275 019f 05       		.uleb128 0x5
 3276 01a0 27       		.uleb128 0x27
 3277 01a1 19       		.uleb128 0x19
 3278 01a2 49       		.uleb128 0x49
 3279 01a3 13       		.uleb128 0x13
 3280 01a4 11       		.uleb128 0x11
 3281 01a5 01       		.uleb128 0x1
 3282 01a6 12       		.uleb128 0x12
 3283 01a7 06       		.uleb128 0x6
 3284 01a8 40       		.uleb128 0x40
 3285 01a9 18       		.uleb128 0x18
 3286 01aa 9742     		.uleb128 0x2117
 3287 01ac 19       		.uleb128 0x19
 3288 01ad 01       		.uleb128 0x1
 3289 01ae 13       		.uleb128 0x13
 3290 01af 00       		.byte	0
 3291 01b0 00       		.byte	0
 3292 01b1 20       		.uleb128 0x20
 3293 01b2 34       		.uleb128 0x34
 3294 01b3 00       		.byte	0
 3295 01b4 03       		.uleb128 0x3
 3296 01b5 08       		.uleb128 0x8
 3297 01b6 3A       		.uleb128 0x3a
 3298 01b7 0B       		.uleb128 0xb
 3299 01b8 3B       		.uleb128 0x3b
 3300 01b9 05       		.uleb128 0x5
 3301 01ba 49       		.uleb128 0x49
 3302 01bb 13       		.uleb128 0x13
 3303 01bc 02       		.uleb128 0x2
 3304 01bd 17       		.uleb128 0x17
 3305 01be 00       		.byte	0
 3306 01bf 00       		.byte	0
 3307 01c0 21       		.uleb128 0x21
 3308 01c1 898201   		.uleb128 0x4109
 3309 01c4 00       		.byte	0
 3310 01c5 11       		.uleb128 0x11
 3311 01c6 01       		.uleb128 0x1
 3312 01c7 31       		.uleb128 0x31
 3313 01c8 13       		.uleb128 0x13
 3314 01c9 00       		.byte	0
 3315 01ca 00       		.byte	0
 3316 01cb 22       		.uleb128 0x22
 3317 01cc 2E       		.uleb128 0x2e
 3318 01cd 01       		.byte	0x1
 3319 01ce 3F       		.uleb128 0x3f
 3320 01cf 19       		.uleb128 0x19
 3321 01d0 03       		.uleb128 0x3
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccogxpIC.s 			page 100


 3322 01d1 0E       		.uleb128 0xe
 3323 01d2 3A       		.uleb128 0x3a
 3324 01d3 0B       		.uleb128 0xb
 3325 01d4 3B       		.uleb128 0x3b
 3326 01d5 05       		.uleb128 0x5
 3327 01d6 27       		.uleb128 0x27
 3328 01d7 19       		.uleb128 0x19
 3329 01d8 49       		.uleb128 0x49
 3330 01d9 13       		.uleb128 0x13
 3331 01da 11       		.uleb128 0x11
 3332 01db 01       		.uleb128 0x1
 3333 01dc 12       		.uleb128 0x12
 3334 01dd 06       		.uleb128 0x6
 3335 01de 40       		.uleb128 0x40
 3336 01df 18       		.uleb128 0x18
 3337 01e0 9642     		.uleb128 0x2116
 3338 01e2 19       		.uleb128 0x19
 3339 01e3 01       		.uleb128 0x1
 3340 01e4 13       		.uleb128 0x13
 3341 01e5 00       		.byte	0
 3342 01e6 00       		.byte	0
 3343 01e7 23       		.uleb128 0x23
 3344 01e8 2E       		.uleb128 0x2e
 3345 01e9 01       		.byte	0x1
 3346 01ea 31       		.uleb128 0x31
 3347 01eb 13       		.uleb128 0x13
 3348 01ec 11       		.uleb128 0x11
 3349 01ed 01       		.uleb128 0x1
 3350 01ee 12       		.uleb128 0x12
 3351 01ef 06       		.uleb128 0x6
 3352 01f0 40       		.uleb128 0x40
 3353 01f1 18       		.uleb128 0x18
 3354 01f2 9642     		.uleb128 0x2116
 3355 01f4 19       		.uleb128 0x19
 3356 01f5 01       		.uleb128 0x1
 3357 01f6 13       		.uleb128 0x13
 3358 01f7 00       		.byte	0
 3359 01f8 00       		.byte	0
 3360 01f9 24       		.uleb128 0x24
 3361 01fa 34       		.uleb128 0x34
 3362 01fb 00       		.byte	0
 3363 01fc 31       		.uleb128 0x31
 3364 01fd 13       		.uleb128 0x13
 3365 01fe 1C       		.uleb128 0x1c
 3366 01ff 0B       		.uleb128 0xb
 3367 0200 00       		.byte	0
 3368 0201 00       		.byte	0
 3369 0202 25       		.uleb128 0x25
 3370 0203 0B       		.uleb128 0xb
 3371 0204 01       		.byte	0x1
 3372 0205 11       		.uleb128 0x11
 3373 0206 01       		.uleb128 0x1
 3374 0207 12       		.uleb128 0x12
 3375 0208 06       		.uleb128 0x6
 3376 0209 00       		.byte	0
 3377 020a 00       		.byte	0
 3378 020b 26       		.uleb128 0x26
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccogxpIC.s 			page 101


 3379 020c 898201   		.uleb128 0x4109
 3380 020f 01       		.byte	0x1
 3381 0210 11       		.uleb128 0x11
 3382 0211 01       		.uleb128 0x1
 3383 0212 31       		.uleb128 0x31
 3384 0213 13       		.uleb128 0x13
 3385 0214 01       		.uleb128 0x1
 3386 0215 13       		.uleb128 0x13
 3387 0216 00       		.byte	0
 3388 0217 00       		.byte	0
 3389 0218 27       		.uleb128 0x27
 3390 0219 34       		.uleb128 0x34
 3391 021a 00       		.byte	0
 3392 021b 03       		.uleb128 0x3
 3393 021c 0E       		.uleb128 0xe
 3394 021d 3A       		.uleb128 0x3a
 3395 021e 0B       		.uleb128 0xb
 3396 021f 3B       		.uleb128 0x3b
 3397 0220 0B       		.uleb128 0xb
 3398 0221 49       		.uleb128 0x49
 3399 0222 13       		.uleb128 0x13
 3400 0223 02       		.uleb128 0x2
 3401 0224 18       		.uleb128 0x18
 3402 0225 00       		.byte	0
 3403 0226 00       		.byte	0
 3404 0227 28       		.uleb128 0x28
 3405 0228 01       		.uleb128 0x1
 3406 0229 01       		.byte	0x1
 3407 022a 49       		.uleb128 0x49
 3408 022b 13       		.uleb128 0x13
 3409 022c 01       		.uleb128 0x1
 3410 022d 13       		.uleb128 0x13
 3411 022e 00       		.byte	0
 3412 022f 00       		.byte	0
 3413 0230 29       		.uleb128 0x29
 3414 0231 21       		.uleb128 0x21
 3415 0232 00       		.byte	0
 3416 0233 49       		.uleb128 0x49
 3417 0234 13       		.uleb128 0x13
 3418 0235 2F       		.uleb128 0x2f
 3419 0236 0B       		.uleb128 0xb
 3420 0237 00       		.byte	0
 3421 0238 00       		.byte	0
 3422 0239 2A       		.uleb128 0x2a
 3423 023a 34       		.uleb128 0x34
 3424 023b 00       		.byte	0
 3425 023c 03       		.uleb128 0x3
 3426 023d 0E       		.uleb128 0xe
 3427 023e 3A       		.uleb128 0x3a
 3428 023f 0B       		.uleb128 0xb
 3429 0240 3B       		.uleb128 0x3b
 3430 0241 0B       		.uleb128 0xb
 3431 0242 49       		.uleb128 0x49
 3432 0243 13       		.uleb128 0x13
 3433 0244 3F       		.uleb128 0x3f
 3434 0245 19       		.uleb128 0x19
 3435 0246 02       		.uleb128 0x2
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccogxpIC.s 			page 102


 3436 0247 18       		.uleb128 0x18
 3437 0248 00       		.byte	0
 3438 0249 00       		.byte	0
 3439 024a 2B       		.uleb128 0x2b
 3440 024b 34       		.uleb128 0x34
 3441 024c 00       		.byte	0
 3442 024d 03       		.uleb128 0x3
 3443 024e 0E       		.uleb128 0xe
 3444 024f 3A       		.uleb128 0x3a
 3445 0250 0B       		.uleb128 0xb
 3446 0251 3B       		.uleb128 0x3b
 3447 0252 05       		.uleb128 0x5
 3448 0253 49       		.uleb128 0x49
 3449 0254 13       		.uleb128 0x13
 3450 0255 3F       		.uleb128 0x3f
 3451 0256 19       		.uleb128 0x19
 3452 0257 3C       		.uleb128 0x3c
 3453 0258 19       		.uleb128 0x19
 3454 0259 00       		.byte	0
 3455 025a 00       		.byte	0
 3456 025b 2C       		.uleb128 0x2c
 3457 025c 2E       		.uleb128 0x2e
 3458 025d 01       		.byte	0x1
 3459 025e 3F       		.uleb128 0x3f
 3460 025f 19       		.uleb128 0x19
 3461 0260 03       		.uleb128 0x3
 3462 0261 0E       		.uleb128 0xe
 3463 0262 3A       		.uleb128 0x3a
 3464 0263 0B       		.uleb128 0xb
 3465 0264 3B       		.uleb128 0x3b
 3466 0265 0B       		.uleb128 0xb
 3467 0266 27       		.uleb128 0x27
 3468 0267 19       		.uleb128 0x19
 3469 0268 3C       		.uleb128 0x3c
 3470 0269 19       		.uleb128 0x19
 3471 026a 01       		.uleb128 0x1
 3472 026b 13       		.uleb128 0x13
 3473 026c 00       		.byte	0
 3474 026d 00       		.byte	0
 3475 026e 2D       		.uleb128 0x2d
 3476 026f 05       		.uleb128 0x5
 3477 0270 00       		.byte	0
 3478 0271 49       		.uleb128 0x49
 3479 0272 13       		.uleb128 0x13
 3480 0273 00       		.byte	0
 3481 0274 00       		.byte	0
 3482 0275 2E       		.uleb128 0x2e
 3483 0276 2E       		.uleb128 0x2e
 3484 0277 01       		.byte	0x1
 3485 0278 3F       		.uleb128 0x3f
 3486 0279 19       		.uleb128 0x19
 3487 027a 03       		.uleb128 0x3
 3488 027b 0E       		.uleb128 0xe
 3489 027c 3A       		.uleb128 0x3a
 3490 027d 0B       		.uleb128 0xb
 3491 027e 3B       		.uleb128 0x3b
 3492 027f 0B       		.uleb128 0xb
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccogxpIC.s 			page 103


 3493 0280 27       		.uleb128 0x27
 3494 0281 19       		.uleb128 0x19
 3495 0282 49       		.uleb128 0x49
 3496 0283 13       		.uleb128 0x13
 3497 0284 3C       		.uleb128 0x3c
 3498 0285 19       		.uleb128 0x19
 3499 0286 01       		.uleb128 0x1
 3500 0287 13       		.uleb128 0x13
 3501 0288 00       		.byte	0
 3502 0289 00       		.byte	0
 3503 028a 2F       		.uleb128 0x2f
 3504 028b 2E       		.uleb128 0x2e
 3505 028c 01       		.byte	0x1
 3506 028d 3F       		.uleb128 0x3f
 3507 028e 19       		.uleb128 0x19
 3508 028f 03       		.uleb128 0x3
 3509 0290 0E       		.uleb128 0xe
 3510 0291 3A       		.uleb128 0x3a
 3511 0292 0B       		.uleb128 0xb
 3512 0293 3B       		.uleb128 0x3b
 3513 0294 0B       		.uleb128 0xb
 3514 0295 27       		.uleb128 0x27
 3515 0296 19       		.uleb128 0x19
 3516 0297 3C       		.uleb128 0x3c
 3517 0298 19       		.uleb128 0x19
 3518 0299 00       		.byte	0
 3519 029a 00       		.byte	0
 3520 029b 00       		.byte	0
 3521              		.section	.debug_loc,"",%progbits
 3522              	.Ldebug_loc0:
 3523              	.LLST0:
 3524 0000 00000000 		.4byte	.LVL0
 3525 0004 04000000 		.4byte	.LVL1
 3526 0008 0100     		.2byte	0x1
 3527 000a 50       		.byte	0x50
 3528 000b 04000000 		.4byte	.LVL1
 3529 000f 3C000000 		.4byte	.LFE12
 3530 0013 0400     		.2byte	0x4
 3531 0015 F3       		.byte	0xf3
 3532 0016 01       		.uleb128 0x1
 3533 0017 50       		.byte	0x50
 3534 0018 9F       		.byte	0x9f
 3535 0019 00000000 		.4byte	0
 3536 001d 00000000 		.4byte	0
 3537              	.LLST1:
 3538 0021 00000000 		.4byte	.LVL0
 3539 0025 28000000 		.4byte	.LVL5
 3540 0029 0200     		.2byte	0x2
 3541 002b 30       		.byte	0x30
 3542 002c 9F       		.byte	0x9f
 3543 002d 28000000 		.4byte	.LVL5
 3544 0031 3C000000 		.4byte	.LFE12
 3545 0035 0100     		.2byte	0x1
 3546 0037 50       		.byte	0x50
 3547 0038 00000000 		.4byte	0
 3548 003c 00000000 		.4byte	0
 3549              	.LLST2:
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccogxpIC.s 			page 104


 3550 0040 10000000 		.4byte	.LVL2
 3551 0044 28000000 		.4byte	.LVL6
 3552 0048 0100     		.2byte	0x1
 3553 004a 54       		.byte	0x54
 3554 004b 00000000 		.4byte	0
 3555 004f 00000000 		.4byte	0
 3556              	.LLST3:
 3557 0053 1C000000 		.4byte	.LVL3
 3558 0057 22000000 		.4byte	.LVL4
 3559 005b 0400     		.2byte	0x4
 3560 005d F3       		.byte	0xf3
 3561 005e 01       		.uleb128 0x1
 3562 005f 50       		.byte	0x50
 3563 0060 9F       		.byte	0x9f
 3564 0061 00000000 		.4byte	0
 3565 0065 00000000 		.4byte	0
 3566              	.LLST4:
 3567 0069 00000000 		.4byte	.LVL7
 3568 006d 08000000 		.4byte	.LVL8
 3569 0071 0100     		.2byte	0x1
 3570 0073 50       		.byte	0x50
 3571 0074 08000000 		.4byte	.LVL8
 3572 0078 A2000000 		.4byte	.LVL23
 3573 007c 0100     		.2byte	0x1
 3574 007e 54       		.byte	0x54
 3575 007f A2000000 		.4byte	.LVL23
 3576 0083 E8000000 		.4byte	.LFE4
 3577 0087 0400     		.2byte	0x4
 3578 0089 F3       		.byte	0xf3
 3579 008a 01       		.uleb128 0x1
 3580 008b 50       		.byte	0x50
 3581 008c 9F       		.byte	0x9f
 3582 008d 00000000 		.4byte	0
 3583 0091 00000000 		.4byte	0
 3584              	.LLST5:
 3585 0095 58000000 		.4byte	.LVL10
 3586 0099 64000000 		.4byte	.LVL11
 3587 009d 0100     		.2byte	0x1
 3588 009f 52       		.byte	0x52
 3589 00a0 64000000 		.4byte	.LVL11
 3590 00a4 68000000 		.4byte	.LVL13
 3591 00a8 0100     		.2byte	0x1
 3592 00aa 53       		.byte	0x53
 3593 00ab 68000000 		.4byte	.LVL13
 3594 00af 6C000000 		.4byte	.LVL14
 3595 00b3 0700     		.2byte	0x7
 3596 00b5 72       		.byte	0x72
 3597 00b6 00       		.sleb128 0
 3598 00b7 40       		.byte	0x40
 3599 00b8 49       		.byte	0x49
 3600 00b9 24       		.byte	0x24
 3601 00ba 21       		.byte	0x21
 3602 00bb 9F       		.byte	0x9f
 3603 00bc 70000000 		.4byte	.LVL15
 3604 00c0 76000000 		.4byte	.LVL17
 3605 00c4 0100     		.2byte	0x1
 3606 00c6 53       		.byte	0x53
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccogxpIC.s 			page 105


 3607 00c7 88000000 		.4byte	.LVL18
 3608 00cb A2000000 		.4byte	.LVL22
 3609 00cf 0100     		.2byte	0x1
 3610 00d1 53       		.byte	0x53
 3611 00d2 00000000 		.4byte	0
 3612 00d6 00000000 		.4byte	0
 3613              	.LLST6:
 3614 00da 00000000 		.4byte	.LVL25
 3615 00de 04000000 		.4byte	.LVL26
 3616 00e2 0100     		.2byte	0x1
 3617 00e4 50       		.byte	0x50
 3618 00e5 04000000 		.4byte	.LVL26
 3619 00e9 10000000 		.4byte	.LFE9
 3620 00ed 0400     		.2byte	0x4
 3621 00ef F3       		.byte	0xf3
 3622 00f0 01       		.uleb128 0x1
 3623 00f1 50       		.byte	0x50
 3624 00f2 9F       		.byte	0x9f
 3625 00f3 00000000 		.4byte	0
 3626 00f7 00000000 		.4byte	0
 3627              	.LLST7:
 3628 00fb 00000000 		.4byte	.LVL27
 3629 00ff 16000000 		.4byte	.LVL28
 3630 0103 0100     		.2byte	0x1
 3631 0105 50       		.byte	0x50
 3632 0106 16000000 		.4byte	.LVL28
 3633 010a 28000000 		.4byte	.LFE10
 3634 010e 0100     		.2byte	0x1
 3635 0110 50       		.byte	0x50
 3636 0111 00000000 		.4byte	0
 3637 0115 00000000 		.4byte	0
 3638              	.LLST8:
 3639 0119 00000000 		.4byte	.LVL30
 3640 011d 08000000 		.4byte	.LVL31
 3641 0121 0100     		.2byte	0x1
 3642 0123 50       		.byte	0x50
 3643 0124 08000000 		.4byte	.LVL31
 3644 0128 2A000000 		.4byte	.LVL38
 3645 012c 0100     		.2byte	0x1
 3646 012e 55       		.byte	0x55
 3647 012f 2A000000 		.4byte	.LVL38
 3648 0133 34000000 		.4byte	.LFE11
 3649 0137 0400     		.2byte	0x4
 3650 0139 F3       		.byte	0xf3
 3651 013a 01       		.uleb128 0x1
 3652 013b 50       		.byte	0x50
 3653 013c 9F       		.byte	0x9f
 3654 013d 00000000 		.4byte	0
 3655 0141 00000000 		.4byte	0
 3656              	.LLST9:
 3657 0145 00000000 		.4byte	.LVL30
 3658 0149 0E000000 		.4byte	.LVL32
 3659 014d 0200     		.2byte	0x2
 3660 014f 30       		.byte	0x30
 3661 0150 9F       		.byte	0x9f
 3662 0151 18000000 		.4byte	.LVL33
 3663 0155 28000000 		.4byte	.LVL36
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccogxpIC.s 			page 106


 3664 0159 0100     		.2byte	0x1
 3665 015b 50       		.byte	0x50
 3666 015c 28000000 		.4byte	.LVL36
 3667 0160 2A000000 		.4byte	.LVL37
 3668 0164 0200     		.2byte	0x2
 3669 0166 31       		.byte	0x31
 3670 0167 9F       		.byte	0x9f
 3671 0168 00000000 		.4byte	0
 3672 016c 00000000 		.4byte	0
 3673              	.LLST10:
 3674 0170 00000000 		.4byte	.LVL30
 3675 0174 0E000000 		.4byte	.LVL32
 3676 0178 0600     		.2byte	0x6
 3677 017a 0C       		.byte	0xc
 3678 017b FFFFFF03 		.4byte	0x3ffffff
 3679 017f 9F       		.byte	0x9f
 3680 0180 0E000000 		.4byte	.LVL32
 3681 0184 18000000 		.4byte	.LVL33
 3682 0188 0100     		.2byte	0x1
 3683 018a 51       		.byte	0x51
 3684 018b 18000000 		.4byte	.LVL33
 3685 018f 20000000 		.4byte	.LVL34
 3686 0193 0300     		.2byte	0x3
 3687 0195 71       		.byte	0x71
 3688 0196 7F       		.sleb128 -1
 3689 0197 9F       		.byte	0x9f
 3690 0198 20000000 		.4byte	.LVL34
 3691 019c 26000000 		.4byte	.LVL35
 3692 01a0 0100     		.2byte	0x1
 3693 01a2 51       		.byte	0x51
 3694 01a3 26000000 		.4byte	.LVL35
 3695 01a7 2A000000 		.4byte	.LVL37
 3696 01ab 0300     		.2byte	0x3
 3697 01ad 71       		.byte	0x71
 3698 01ae 7F       		.sleb128 -1
 3699 01af 9F       		.byte	0x9f
 3700 01b0 00000000 		.4byte	0
 3701 01b4 00000000 		.4byte	0
 3702              	.LLST11:
 3703 01b8 00000000 		.4byte	.LVL39
 3704 01bc 18000000 		.4byte	.LVL40
 3705 01c0 0100     		.2byte	0x1
 3706 01c2 50       		.byte	0x50
 3707 01c3 18000000 		.4byte	.LVL40
 3708 01c7 30000000 		.4byte	.LFE13
 3709 01cb 0400     		.2byte	0x4
 3710 01cd F3       		.byte	0xf3
 3711 01ce 01       		.uleb128 0x1
 3712 01cf 50       		.byte	0x50
 3713 01d0 9F       		.byte	0x9f
 3714 01d1 00000000 		.4byte	0
 3715 01d5 00000000 		.4byte	0
 3716              	.LLST12:
 3717 01d9 00000000 		.4byte	.LVL42
 3718 01dd 23000000 		.4byte	.LVL44-1
 3719 01e1 0100     		.2byte	0x1
 3720 01e3 50       		.byte	0x50
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccogxpIC.s 			page 107


 3721 01e4 23000000 		.4byte	.LVL44-1
 3722 01e8 3C000000 		.4byte	.LFE14
 3723 01ec 0400     		.2byte	0x4
 3724 01ee F3       		.byte	0xf3
 3725 01ef 01       		.uleb128 0x1
 3726 01f0 50       		.byte	0x50
 3727 01f1 9F       		.byte	0x9f
 3728 01f2 00000000 		.4byte	0
 3729 01f6 00000000 		.4byte	0
 3730              	.LLST13:
 3731 01fa 00000000 		.4byte	.LVL47
 3732 01fe 04000000 		.4byte	.LVL48
 3733 0202 0100     		.2byte	0x1
 3734 0204 50       		.byte	0x50
 3735 0205 04000000 		.4byte	.LVL48
 3736 0209 18000000 		.4byte	.LFE15
 3737 020d 0400     		.2byte	0x4
 3738 020f F3       		.byte	0xf3
 3739 0210 01       		.uleb128 0x1
 3740 0211 50       		.byte	0x50
 3741 0212 9F       		.byte	0x9f
 3742 0213 00000000 		.4byte	0
 3743 0217 00000000 		.4byte	0
 3744              	.LLST14:
 3745 021b 00000000 		.4byte	.LVL49
 3746 021f 04000000 		.4byte	.LVL50
 3747 0223 0100     		.2byte	0x1
 3748 0225 50       		.byte	0x50
 3749 0226 04000000 		.4byte	.LVL50
 3750 022a 18000000 		.4byte	.LFE16
 3751 022e 0400     		.2byte	0x4
 3752 0230 F3       		.byte	0xf3
 3753 0231 01       		.uleb128 0x1
 3754 0232 50       		.byte	0x50
 3755 0233 9F       		.byte	0x9f
 3756 0234 00000000 		.4byte	0
 3757 0238 00000000 		.4byte	0
 3758              	.LLST15:
 3759 023c 00000000 		.4byte	.LVL51
 3760 0240 16000000 		.4byte	.LVL52
 3761 0244 0100     		.2byte	0x1
 3762 0246 50       		.byte	0x50
 3763 0247 16000000 		.4byte	.LVL52
 3764 024b 28000000 		.4byte	.LFE17
 3765 024f 0100     		.2byte	0x1
 3766 0251 50       		.byte	0x50
 3767 0252 00000000 		.4byte	0
 3768 0256 00000000 		.4byte	0
 3769              	.LLST16:
 3770 025a 00000000 		.4byte	.LVL54
 3771 025e 16000000 		.4byte	.LVL55
 3772 0262 0100     		.2byte	0x1
 3773 0264 50       		.byte	0x50
 3774 0265 16000000 		.4byte	.LVL55
 3775 0269 28000000 		.4byte	.LFE18
 3776 026d 0100     		.2byte	0x1
 3777 026f 50       		.byte	0x50
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccogxpIC.s 			page 108


 3778 0270 00000000 		.4byte	0
 3779 0274 00000000 		.4byte	0
 3780              	.LLST17:
 3781 0278 00000000 		.4byte	.LVL57
 3782 027c 0E000000 		.4byte	.LVL58
 3783 0280 0100     		.2byte	0x1
 3784 0282 50       		.byte	0x50
 3785 0283 0E000000 		.4byte	.LVL58
 3786 0287 24000000 		.4byte	.LFE19
 3787 028b 0400     		.2byte	0x4
 3788 028d F3       		.byte	0xf3
 3789 028e 01       		.uleb128 0x1
 3790 028f 50       		.byte	0x50
 3791 0290 9F       		.byte	0x9f
 3792 0291 00000000 		.4byte	0
 3793 0295 00000000 		.4byte	0
 3794              	.LLST18:
 3795 0299 00000000 		.4byte	.LVL59
 3796 029d 0E000000 		.4byte	.LVL60
 3797 02a1 0100     		.2byte	0x1
 3798 02a3 50       		.byte	0x50
 3799 02a4 0E000000 		.4byte	.LVL60
 3800 02a8 24000000 		.4byte	.LFE20
 3801 02ac 0400     		.2byte	0x4
 3802 02ae F3       		.byte	0xf3
 3803 02af 01       		.uleb128 0x1
 3804 02b0 50       		.byte	0x50
 3805 02b1 9F       		.byte	0x9f
 3806 02b2 00000000 		.4byte	0
 3807 02b6 00000000 		.4byte	0
 3808              	.LLST19:
 3809 02ba 00000000 		.4byte	.LVL61
 3810 02be 3D000000 		.4byte	.LVL67-1
 3811 02c2 0100     		.2byte	0x1
 3812 02c4 50       		.byte	0x50
 3813 02c5 3D000000 		.4byte	.LVL67-1
 3814 02c9 74000000 		.4byte	.LFE21
 3815 02cd 0400     		.2byte	0x4
 3816 02cf F3       		.byte	0xf3
 3817 02d0 01       		.uleb128 0x1
 3818 02d1 50       		.byte	0x50
 3819 02d2 9F       		.byte	0x9f
 3820 02d3 00000000 		.4byte	0
 3821 02d7 00000000 		.4byte	0
 3822              	.LLST20:
 3823 02db 00000000 		.4byte	.LVL61
 3824 02df 0E000000 		.4byte	.LVL62
 3825 02e3 0100     		.2byte	0x1
 3826 02e5 51       		.byte	0x51
 3827 02e6 0E000000 		.4byte	.LVL62
 3828 02ea 56000000 		.4byte	.LVL71
 3829 02ee 0400     		.2byte	0x4
 3830 02f0 F3       		.byte	0xf3
 3831 02f1 01       		.uleb128 0x1
 3832 02f2 51       		.byte	0x51
 3833 02f3 9F       		.byte	0x9f
 3834 02f4 56000000 		.4byte	.LVL71
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccogxpIC.s 			page 109


 3835 02f8 5E000000 		.4byte	.LVL73
 3836 02fc 0100     		.2byte	0x1
 3837 02fe 54       		.byte	0x54
 3838 02ff 5E000000 		.4byte	.LVL73
 3839 0303 74000000 		.4byte	.LFE21
 3840 0307 0100     		.2byte	0x1
 3841 0309 50       		.byte	0x50
 3842 030a 00000000 		.4byte	0
 3843 030e 00000000 		.4byte	0
 3844              	.LLST21:
 3845 0312 4A000000 		.4byte	.LVL68
 3846 0316 4C000000 		.4byte	.LVL69
 3847 031a 0100     		.2byte	0x1
 3848 031c 50       		.byte	0x50
 3849 031d 00000000 		.4byte	0
 3850 0321 00000000 		.4byte	0
 3851              	.LLST22:
 3852 0325 24000000 		.4byte	.LVL64
 3853 0329 30000000 		.4byte	.LVL65
 3854 032d 0800     		.2byte	0x8
 3855 032f 73       		.byte	0x73
 3856 0330 00       		.sleb128 0
 3857 0331 08       		.byte	0x8
 3858 0332 70       		.byte	0x70
 3859 0333 1A       		.byte	0x1a
 3860 0334 34       		.byte	0x34
 3861 0335 25       		.byte	0x25
 3862 0336 9F       		.byte	0x9f
 3863 0337 30000000 		.4byte	.LVL65
 3864 033b 3A000000 		.4byte	.LVL66
 3865 033f 0100     		.2byte	0x1
 3866 0341 52       		.byte	0x52
 3867 0342 3A000000 		.4byte	.LVL66
 3868 0346 56000000 		.4byte	.LVL71
 3869 034a 0100     		.2byte	0x1
 3870 034c 56       		.byte	0x56
 3871 034d 00000000 		.4byte	0
 3872 0351 00000000 		.4byte	0
 3873              	.LLST23:
 3874 0355 16000000 		.4byte	.LVL63
 3875 0359 5A000000 		.4byte	.LVL72
 3876 035d 0100     		.2byte	0x1
 3877 035f 55       		.byte	0x55
 3878 0360 00000000 		.4byte	0
 3879 0364 00000000 		.4byte	0
 3880              	.LLST24:
 3881 0368 00000000 		.4byte	.LVL74
 3882 036c 1B000000 		.4byte	.LVL76-1
 3883 0370 0100     		.2byte	0x1
 3884 0372 50       		.byte	0x50
 3885 0373 1B000000 		.4byte	.LVL76-1
 3886 0377 24000000 		.4byte	.LVL79
 3887 037b 0100     		.2byte	0x1
 3888 037d 55       		.byte	0x55
 3889 037e 24000000 		.4byte	.LVL79
 3890 0382 40000000 		.4byte	.LVL84
 3891 0386 0400     		.2byte	0x4
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccogxpIC.s 			page 110


 3892 0388 F3       		.byte	0xf3
 3893 0389 01       		.uleb128 0x1
 3894 038a 50       		.byte	0x50
 3895 038b 9F       		.byte	0x9f
 3896 038c 40000000 		.4byte	.LVL84
 3897 0390 42000000 		.4byte	.LVL85
 3898 0394 0100     		.2byte	0x1
 3899 0396 50       		.byte	0x50
 3900 0397 42000000 		.4byte	.LVL85
 3901 039b 54000000 		.4byte	.LFE22
 3902 039f 0400     		.2byte	0x4
 3903 03a1 F3       		.byte	0xf3
 3904 03a2 01       		.uleb128 0x1
 3905 03a3 50       		.byte	0x50
 3906 03a4 9F       		.byte	0x9f
 3907 03a5 00000000 		.4byte	0
 3908 03a9 00000000 		.4byte	0
 3909              	.LLST25:
 3910 03ad 00000000 		.4byte	.LVL74
 3911 03b1 1B000000 		.4byte	.LVL76-1
 3912 03b5 0100     		.2byte	0x1
 3913 03b7 51       		.byte	0x51
 3914 03b8 1B000000 		.4byte	.LVL76-1
 3915 03bc 1C000000 		.4byte	.LVL76
 3916 03c0 0400     		.2byte	0x4
 3917 03c2 F3       		.byte	0xf3
 3918 03c3 01       		.uleb128 0x1
 3919 03c4 51       		.byte	0x51
 3920 03c5 9F       		.byte	0x9f
 3921 03c6 1C000000 		.4byte	.LVL76
 3922 03ca 27000000 		.4byte	.LVL80-1
 3923 03ce 0100     		.2byte	0x1
 3924 03d0 50       		.byte	0x50
 3925 03d1 40000000 		.4byte	.LVL84
 3926 03d5 42000000 		.4byte	.LVL85
 3927 03d9 0100     		.2byte	0x1
 3928 03db 51       		.byte	0x51
 3929 03dc 00000000 		.4byte	0
 3930 03e0 00000000 		.4byte	0
 3931              	.LLST26:
 3932 03e4 00000000 		.4byte	.LVL74
 3933 03e8 3E000000 		.4byte	.LVL83
 3934 03ec 0600     		.2byte	0x6
 3935 03ee 9E       		.byte	0x9e
 3936 03ef 04       		.uleb128 0x4
 3937 03f0 00000000 		.4byte	0
 3938 03f4 3E000000 		.4byte	.LVL83
 3939 03f8 40000000 		.4byte	.LVL84
 3940 03fc 0100     		.2byte	0x1
 3941 03fe 50       		.byte	0x50
 3942 03ff 40000000 		.4byte	.LVL84
 3943 0403 42000000 		.4byte	.LVL85
 3944 0407 0600     		.2byte	0x6
 3945 0409 9E       		.byte	0x9e
 3946 040a 04       		.uleb128 0x4
 3947 040b 00000000 		.4byte	0
 3948 040f 42000000 		.4byte	.LVL85
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccogxpIC.s 			page 111


 3949 0413 54000000 		.4byte	.LFE22
 3950 0417 0100     		.2byte	0x1
 3951 0419 50       		.byte	0x50
 3952 041a 00000000 		.4byte	0
 3953 041e 00000000 		.4byte	0
 3954              	.LLST27:
 3955 0422 0E000000 		.4byte	.LVL75
 3956 0426 1B000000 		.4byte	.LVL76-1
 3957 042a 0600     		.2byte	0x6
 3958 042c 70       		.byte	0x70
 3959 042d 00       		.sleb128 0
 3960 042e 74       		.byte	0x74
 3961 042f 00       		.sleb128 0
 3962 0430 22       		.byte	0x22
 3963 0431 9F       		.byte	0x9f
 3964 0432 1B000000 		.4byte	.LVL76-1
 3965 0436 1E000000 		.4byte	.LVL77
 3966 043a 0600     		.2byte	0x6
 3967 043c 75       		.byte	0x75
 3968 043d 00       		.sleb128 0
 3969 043e 74       		.byte	0x74
 3970 043f 00       		.sleb128 0
 3971 0440 22       		.byte	0x22
 3972 0441 9F       		.byte	0x9f
 3973 0442 1E000000 		.4byte	.LVL77
 3974 0446 22000000 		.4byte	.LVL78
 3975 044a 0100     		.2byte	0x1
 3976 044c 54       		.byte	0x54
 3977 044d 40000000 		.4byte	.LVL84
 3978 0451 42000000 		.4byte	.LVL85
 3979 0455 0600     		.2byte	0x6
 3980 0457 70       		.byte	0x70
 3981 0458 00       		.sleb128 0
 3982 0459 74       		.byte	0x74
 3983 045a 00       		.sleb128 0
 3984 045b 22       		.byte	0x22
 3985 045c 9F       		.byte	0x9f
 3986 045d 00000000 		.4byte	0
 3987 0461 00000000 		.4byte	0
 3988              	.LLST28:
 3989 0465 00000000 		.4byte	.LVL86
 3990 0469 1D000000 		.4byte	.LVL89-1
 3991 046d 0100     		.2byte	0x1
 3992 046f 50       		.byte	0x50
 3993 0470 1D000000 		.4byte	.LVL89-1
 3994 0474 58000000 		.4byte	.LFE23
 3995 0478 0400     		.2byte	0x4
 3996 047a F3       		.byte	0xf3
 3997 047b 01       		.uleb128 0x1
 3998 047c 50       		.byte	0x50
 3999 047d 9F       		.byte	0x9f
 4000 047e 00000000 		.4byte	0
 4001 0482 00000000 		.4byte	0
 4002              	.LLST29:
 4003 0486 00000000 		.4byte	.LVL86
 4004 048a 1D000000 		.4byte	.LVL89-1
 4005 048e 0100     		.2byte	0x1
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccogxpIC.s 			page 112


 4006 0490 51       		.byte	0x51
 4007 0491 1D000000 		.4byte	.LVL89-1
 4008 0495 1E000000 		.4byte	.LVL89
 4009 0499 0400     		.2byte	0x4
 4010 049b F3       		.byte	0xf3
 4011 049c 01       		.uleb128 0x1
 4012 049d 51       		.byte	0x51
 4013 049e 9F       		.byte	0x9f
 4014 049f 1E000000 		.4byte	.LVL89
 4015 04a3 3C000000 		.4byte	.LVL90
 4016 04a7 0100     		.2byte	0x1
 4017 04a9 50       		.byte	0x50
 4018 04aa 00000000 		.4byte	0
 4019 04ae 00000000 		.4byte	0
 4020              	.LLST30:
 4021 04b2 00000000 		.4byte	.LVL86
 4022 04b6 44000000 		.4byte	.LVL92
 4023 04ba 0200     		.2byte	0x2
 4024 04bc 30       		.byte	0x30
 4025 04bd 9F       		.byte	0x9f
 4026 04be 44000000 		.4byte	.LVL92
 4027 04c2 58000000 		.4byte	.LFE23
 4028 04c6 0100     		.2byte	0x1
 4029 04c8 53       		.byte	0x53
 4030 04c9 00000000 		.4byte	0
 4031 04cd 00000000 		.4byte	0
 4032              	.LLST31:
 4033 04d1 0E000000 		.4byte	.LVL87
 4034 04d5 1A000000 		.4byte	.LVL88
 4035 04d9 0600     		.2byte	0x6
 4036 04db 70       		.byte	0x70
 4037 04dc 00       		.sleb128 0
 4038 04dd 76       		.byte	0x76
 4039 04de 00       		.sleb128 0
 4040 04df 22       		.byte	0x22
 4041 04e0 9F       		.byte	0x9f
 4042 04e1 1A000000 		.4byte	.LVL88
 4043 04e5 44000000 		.4byte	.LVL92
 4044 04e9 0100     		.2byte	0x1
 4045 04eb 56       		.byte	0x56
 4046 04ec 00000000 		.4byte	0
 4047 04f0 00000000 		.4byte	0
 4048              	.LLST32:
 4049 04f4 00000000 		.4byte	.LVL93
 4050 04f8 0C000000 		.4byte	.LVL94
 4051 04fc 0100     		.2byte	0x1
 4052 04fe 50       		.byte	0x50
 4053 04ff 0C000000 		.4byte	.LVL94
 4054 0503 3A000000 		.4byte	.LVL101
 4055 0507 0100     		.2byte	0x1
 4056 0509 55       		.byte	0x55
 4057 050a 3A000000 		.4byte	.LVL101
 4058 050e 4C000000 		.4byte	.LFE24
 4059 0512 0400     		.2byte	0x4
 4060 0514 F3       		.byte	0xf3
 4061 0515 01       		.uleb128 0x1
 4062 0516 50       		.byte	0x50
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccogxpIC.s 			page 113


 4063 0517 9F       		.byte	0x9f
 4064 0518 00000000 		.4byte	0
 4065 051c 00000000 		.4byte	0
 4066              	.LLST33:
 4067 0520 00000000 		.4byte	.LVL93
 4068 0524 1F000000 		.4byte	.LVL96-1
 4069 0528 0100     		.2byte	0x1
 4070 052a 51       		.byte	0x51
 4071 052b 1F000000 		.4byte	.LVL96-1
 4072 052f 20000000 		.4byte	.LVL96
 4073 0533 0400     		.2byte	0x4
 4074 0535 F3       		.byte	0xf3
 4075 0536 01       		.uleb128 0x1
 4076 0537 51       		.byte	0x51
 4077 0538 9F       		.byte	0x9f
 4078 0539 20000000 		.4byte	.LVL96
 4079 053d 31000000 		.4byte	.LVL99-1
 4080 0541 0100     		.2byte	0x1
 4081 0543 50       		.byte	0x50
 4082 0544 00000000 		.4byte	0
 4083 0548 00000000 		.4byte	0
 4084              	.LLST34:
 4085 054c 00000000 		.4byte	.LVL93
 4086 0550 3A000000 		.4byte	.LVL100
 4087 0554 0A00     		.2byte	0xa
 4088 0556 9E       		.byte	0x9e
 4089 0557 08       		.uleb128 0x8
 4090 0558 00000000 		.8byte	0
 4090      00000000 
 4091 0560 00000000 		.4byte	0
 4092 0564 00000000 		.4byte	0
 4093              	.LLST35:
 4094 0568 10000000 		.4byte	.LVL95
 4095 056c 22000000 		.4byte	.LVL97
 4096 0570 0600     		.2byte	0x6
 4097 0572 75       		.byte	0x75
 4098 0573 00       		.sleb128 0
 4099 0574 74       		.byte	0x74
 4100 0575 00       		.sleb128 0
 4101 0576 22       		.byte	0x22
 4102 0577 9F       		.byte	0x9f
 4103 0578 22000000 		.4byte	.LVL97
 4104 057c 26000000 		.4byte	.LVL98
 4105 0580 0100     		.2byte	0x1
 4106 0582 54       		.byte	0x54
 4107 0583 00000000 		.4byte	0
 4108 0587 00000000 		.4byte	0
 4109              	.LLST36:
 4110 058b 0C000000 		.4byte	.LVL103
 4111 058f 92000000 		.4byte	.LVL106
 4112 0593 0100     		.2byte	0x1
 4113 0595 54       		.byte	0x54
 4114 0596 92000000 		.4byte	.LVL106
 4115 059a 98000000 		.4byte	.LVL107
 4116 059e 0300     		.2byte	0x3
 4117 05a0 74       		.byte	0x74
 4118 05a1 01       		.sleb128 1
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccogxpIC.s 			page 114


 4119 05a2 9F       		.byte	0x9f
 4120 05a3 9A000000 		.4byte	.LVL108
 4121 05a7 B8000000 		.4byte	.LVL112
 4122 05ab 0300     		.2byte	0x3
 4123 05ad 74       		.byte	0x74
 4124 05ae 01       		.sleb128 1
 4125 05af 9F       		.byte	0x9f
 4126 05b0 00000000 		.4byte	0
 4127 05b4 00000000 		.4byte	0
 4128              	.LLST37:
 4129 05b8 0C000000 		.4byte	.LVL103
 4130 05bc B6000000 		.4byte	.LVL111
 4131 05c0 0100     		.2byte	0x1
 4132 05c2 55       		.byte	0x55
 4133 05c3 B6000000 		.4byte	.LVL111
 4134 05c7 C8000000 		.4byte	.LVL114
 4135 05cb 0200     		.2byte	0x2
 4136 05cd 30       		.byte	0x30
 4137 05ce 9F       		.byte	0x9f
 4138 05cf 00000000 		.4byte	0
 4139 05d3 00000000 		.4byte	0
 4140              	.LLST38:
 4141 05d7 32000000 		.4byte	.LVL104
 4142 05db 77000000 		.4byte	.LVL105-1
 4143 05df 0100     		.2byte	0x1
 4144 05e1 52       		.byte	0x52
 4145 05e2 00000000 		.4byte	0
 4146 05e6 00000000 		.4byte	0
 4147              	.LLST39:
 4148 05ea 00000000 		.4byte	.LVL118
 4149 05ee 07000000 		.4byte	.LVL119-1
 4150 05f2 0100     		.2byte	0x1
 4151 05f4 50       		.byte	0x50
 4152 05f5 07000000 		.4byte	.LVL119-1
 4153 05f9 0E000000 		.4byte	.LVL121
 4154 05fd 0100     		.2byte	0x1
 4155 05ff 54       		.byte	0x54
 4156 0600 0E000000 		.4byte	.LVL121
 4157 0604 10000000 		.4byte	.LFE2
 4158 0608 0400     		.2byte	0x4
 4159 060a F3       		.byte	0xf3
 4160 060b 01       		.uleb128 0x1
 4161 060c 50       		.byte	0x50
 4162 060d 9F       		.byte	0x9f
 4163 060e 00000000 		.4byte	0
 4164 0612 00000000 		.4byte	0
 4165              	.LLST40:
 4166 0616 00000000 		.4byte	.LVL122
 4167 061a 0D000000 		.4byte	.LVL123-1
 4168 061e 0100     		.2byte	0x1
 4169 0620 50       		.byte	0x50
 4170 0621 0D000000 		.4byte	.LVL123-1
 4171 0625 70000000 		.4byte	.LFE5
 4172 0629 0400     		.2byte	0x4
 4173 062b F3       		.byte	0xf3
 4174 062c 01       		.uleb128 0x1
 4175 062d 50       		.byte	0x50
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccogxpIC.s 			page 115


 4176 062e 9F       		.byte	0x9f
 4177 062f 00000000 		.4byte	0
 4178 0633 00000000 		.4byte	0
 4179              	.LLST41:
 4180 0637 00000000 		.4byte	.LVL122
 4181 063b 0D000000 		.4byte	.LVL123-1
 4182 063f 0100     		.2byte	0x1
 4183 0641 51       		.byte	0x51
 4184 0642 0D000000 		.4byte	.LVL123-1
 4185 0646 58000000 		.4byte	.LVL127
 4186 064a 0100     		.2byte	0x1
 4187 064c 56       		.byte	0x56
 4188 064d 58000000 		.4byte	.LVL127
 4189 0651 70000000 		.4byte	.LFE5
 4190 0655 0400     		.2byte	0x4
 4191 0657 F3       		.byte	0xf3
 4192 0658 01       		.uleb128 0x1
 4193 0659 51       		.byte	0x51
 4194 065a 9F       		.byte	0x9f
 4195 065b 00000000 		.4byte	0
 4196 065f 00000000 		.4byte	0
 4197              		.section	.debug_aranges,"",%progbits
 4198 0000 E4000000 		.4byte	0xe4
 4199 0004 0200     		.2byte	0x2
 4200 0006 00000000 		.4byte	.Ldebug_info0
 4201 000a 04       		.byte	0x4
 4202 000b 00       		.byte	0
 4203 000c 0000     		.2byte	0
 4204 000e 0000     		.2byte	0
 4205 0010 00000000 		.4byte	.LFB12
 4206 0014 3C000000 		.4byte	.LFE12-.LFB12
 4207 0018 00000000 		.4byte	.LFB3
 4208 001c 10000000 		.4byte	.LFE3-.LFB3
 4209 0020 00000000 		.4byte	.LFB4
 4210 0024 E8000000 		.4byte	.LFE4-.LFB4
 4211 0028 00000000 		.4byte	.LFB6
 4212 002c 24000000 		.4byte	.LFE6-.LFB6
 4213 0030 00000000 		.4byte	.LFB8
 4214 0034 24000000 		.4byte	.LFE8-.LFB8
 4215 0038 00000000 		.4byte	.LFB9
 4216 003c 10000000 		.4byte	.LFE9-.LFB9
 4217 0040 00000000 		.4byte	.LFB10
 4218 0044 28000000 		.4byte	.LFE10-.LFB10
 4219 0048 00000000 		.4byte	.LFB11
 4220 004c 34000000 		.4byte	.LFE11-.LFB11
 4221 0050 00000000 		.4byte	.LFB13
 4222 0054 30000000 		.4byte	.LFE13-.LFB13
 4223 0058 00000000 		.4byte	.LFB14
 4224 005c 3C000000 		.4byte	.LFE14-.LFB14
 4225 0060 00000000 		.4byte	.LFB15
 4226 0064 18000000 		.4byte	.LFE15-.LFB15
 4227 0068 00000000 		.4byte	.LFB16
 4228 006c 18000000 		.4byte	.LFE16-.LFB16
 4229 0070 00000000 		.4byte	.LFB17
 4230 0074 28000000 		.4byte	.LFE17-.LFB17
 4231 0078 00000000 		.4byte	.LFB18
 4232 007c 28000000 		.4byte	.LFE18-.LFB18
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccogxpIC.s 			page 116


 4233 0080 00000000 		.4byte	.LFB19
 4234 0084 24000000 		.4byte	.LFE19-.LFB19
 4235 0088 00000000 		.4byte	.LFB20
 4236 008c 24000000 		.4byte	.LFE20-.LFB20
 4237 0090 00000000 		.4byte	.LFB21
 4238 0094 74000000 		.4byte	.LFE21-.LFB21
 4239 0098 00000000 		.4byte	.LFB22
 4240 009c 54000000 		.4byte	.LFE22-.LFB22
 4241 00a0 00000000 		.4byte	.LFB23
 4242 00a4 58000000 		.4byte	.LFE23-.LFB23
 4243 00a8 00000000 		.4byte	.LFB24
 4244 00ac 4C000000 		.4byte	.LFE24-.LFB24
 4245 00b0 00000000 		.4byte	.LFB25
 4246 00b4 EC000000 		.4byte	.LFE25-.LFB25
 4247 00b8 00000000 		.4byte	.LFB26
 4248 00bc 2C000000 		.4byte	.LFE26-.LFB26
 4249 00c0 00000000 		.4byte	.LFB1
 4250 00c4 20000000 		.4byte	.LFE1-.LFB1
 4251 00c8 00000000 		.4byte	.LFB2
 4252 00cc 10000000 		.4byte	.LFE2-.LFB2
 4253 00d0 00000000 		.4byte	.LFB5
 4254 00d4 70000000 		.4byte	.LFE5-.LFB5
 4255 00d8 00000000 		.4byte	.LFB7
 4256 00dc 40000000 		.4byte	.LFE7-.LFB7
 4257 00e0 00000000 		.4byte	0
 4258 00e4 00000000 		.4byte	0
 4259              		.section	.debug_ranges,"",%progbits
 4260              	.Ldebug_ranges0:
 4261 0000 0C000000 		.4byte	.LBB4
 4262 0004 0E000000 		.4byte	.LBE4
 4263 0008 10000000 		.4byte	.LBB9
 4264 000c 14000000 		.4byte	.LBE9
 4265 0010 16000000 		.4byte	.LBB10
 4266 0014 18000000 		.4byte	.LBE10
 4267 0018 1C000000 		.4byte	.LBB11
 4268 001c 22000000 		.4byte	.LBE11
 4269 0020 00000000 		.4byte	0
 4270 0024 00000000 		.4byte	0
 4271 0028 00000000 		.4byte	.LFB12
 4272 002c 3C000000 		.4byte	.LFE12
 4273 0030 00000000 		.4byte	.LFB3
 4274 0034 10000000 		.4byte	.LFE3
 4275 0038 00000000 		.4byte	.LFB4
 4276 003c E8000000 		.4byte	.LFE4
 4277 0040 00000000 		.4byte	.LFB6
 4278 0044 24000000 		.4byte	.LFE6
 4279 0048 00000000 		.4byte	.LFB8
 4280 004c 24000000 		.4byte	.LFE8
 4281 0050 00000000 		.4byte	.LFB9
 4282 0054 10000000 		.4byte	.LFE9
 4283 0058 00000000 		.4byte	.LFB10
 4284 005c 28000000 		.4byte	.LFE10
 4285 0060 00000000 		.4byte	.LFB11
 4286 0064 34000000 		.4byte	.LFE11
 4287 0068 00000000 		.4byte	.LFB13
 4288 006c 30000000 		.4byte	.LFE13
 4289 0070 00000000 		.4byte	.LFB14
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccogxpIC.s 			page 117


 4290 0074 3C000000 		.4byte	.LFE14
 4291 0078 00000000 		.4byte	.LFB15
 4292 007c 18000000 		.4byte	.LFE15
 4293 0080 00000000 		.4byte	.LFB16
 4294 0084 18000000 		.4byte	.LFE16
 4295 0088 00000000 		.4byte	.LFB17
 4296 008c 28000000 		.4byte	.LFE17
 4297 0090 00000000 		.4byte	.LFB18
 4298 0094 28000000 		.4byte	.LFE18
 4299 0098 00000000 		.4byte	.LFB19
 4300 009c 24000000 		.4byte	.LFE19
 4301 00a0 00000000 		.4byte	.LFB20
 4302 00a4 24000000 		.4byte	.LFE20
 4303 00a8 00000000 		.4byte	.LFB21
 4304 00ac 74000000 		.4byte	.LFE21
 4305 00b0 00000000 		.4byte	.LFB22
 4306 00b4 54000000 		.4byte	.LFE22
 4307 00b8 00000000 		.4byte	.LFB23
 4308 00bc 58000000 		.4byte	.LFE23
 4309 00c0 00000000 		.4byte	.LFB24
 4310 00c4 4C000000 		.4byte	.LFE24
 4311 00c8 00000000 		.4byte	.LFB25
 4312 00cc EC000000 		.4byte	.LFE25
 4313 00d0 00000000 		.4byte	.LFB26
 4314 00d4 2C000000 		.4byte	.LFE26
 4315 00d8 00000000 		.4byte	.LFB1
 4316 00dc 20000000 		.4byte	.LFE1
 4317 00e0 00000000 		.4byte	.LFB2
 4318 00e4 10000000 		.4byte	.LFE2
 4319 00e8 00000000 		.4byte	.LFB5
 4320 00ec 70000000 		.4byte	.LFE5
 4321 00f0 00000000 		.4byte	.LFB7
 4322 00f4 40000000 		.4byte	.LFE7
 4323 00f8 00000000 		.4byte	0
 4324 00fc 00000000 		.4byte	0
 4325              		.section	.debug_line,"",%progbits
 4326              	.Ldebug_line0:
 4327 0000 83030000 		.section	.debug_str,"MS",%progbits,1
 4327      02007600 
 4327      00000201 
 4327      FB0E0D00 
 4327      01010101 
 4328              	.LASF10:
 4329 0000 75696E74 		.ascii	"uint16\000"
 4329      313600
 4330              	.LASF53:
 4331 0007 6368616E 		.ascii	"chanCount\000"
 4331      436F756E 
 4331      7400
 4332              	.LASF74:
 4333 0011 61646347 		.ascii	"adcGain\000"
 4333      61696E00 
 4334              	.LASF41:
 4335 0019 636F756E 		.ascii	"counts\000"
 4335      747300
 4336              	.LASF80:
 4337 0020 4144435F 		.ascii	"ADC_CountsTo_Volts\000"
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccogxpIC.s 			page 118


 4337      436F756E 
 4337      7473546F 
 4337      5F566F6C 
 4337      747300
 4338              	.LASF100:
 4339 0033 4144435F 		.ascii	"ADC_Init\000"
 4339      496E6974 
 4339      00
 4340              	.LASF92:
 4341 003c 4144435F 		.ascii	"ADC_currentConfig\000"
 4341      63757272 
 4341      656E7443 
 4341      6F6E6669 
 4341      6700
 4342              	.LASF49:
 4343 004e 4144435F 		.ascii	"ADC_SetEosMask\000"
 4343      53657445 
 4343      6F734D61 
 4343      736B00
 4344              	.LASF7:
 4345 005d 6C6F6E67 		.ascii	"long long unsigned int\000"
 4345      206C6F6E 
 4345      6720756E 
 4345      7369676E 
 4345      65642069 
 4346              	.LASF99:
 4347 0074 4144435F 		.ascii	"ADC_InputsPlacement\000"
 4347      496E7075 
 4347      7473506C 
 4347      6163656D 
 4347      656E7400 
 4348              	.LASF42:
 4349 0088 4144435F 		.ascii	"ADC_StartConvert\000"
 4349      53746172 
 4349      74436F6E 
 4349      76657274 
 4349      00
 4350              	.LASF6:
 4351 0099 6C6F6E67 		.ascii	"long long int\000"
 4351      206C6F6E 
 4351      6720696E 
 4351      7400
 4352              	.LASF0:
 4353 00a7 7369676E 		.ascii	"signed char\000"
 4353      65642063 
 4353      68617200 
 4354              	.LASF35:
 4355 00b3 636C6B44 		.ascii	"clkDivider\000"
 4355      69766964 
 4355      657200
 4356              	.LASF13:
 4357 00be 696E7433 		.ascii	"int32\000"
 4357      3200
 4358              	.LASF89:
 4359 00c4 4144435F 		.ascii	"ADC_SelectConfig\000"
 4359      53656C65 
 4359      6374436F 
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccogxpIC.s 			page 119


 4359      6E666967 
 4359      00
 4360              	.LASF69:
 4361 00d5 4144435F 		.ascii	"ADC_SetSatMask\000"
 4361      53657453 
 4361      61744D61 
 4361      736B00
 4362              	.LASF4:
 4363 00e4 6C6F6E67 		.ascii	"long int\000"
 4363      20696E74 
 4363      00
 4364              	.LASF84:
 4365 00ed 4144435F 		.ascii	"ADC_CountsTo_uVolts\000"
 4365      436F756E 
 4365      7473546F 
 4365      5F75566F 
 4365      6C747300 
 4366              	.LASF97:
 4367 0101 4144435F 		.ascii	"ADC_countsPer10Volt\000"
 4367      636F756E 
 4367      74735065 
 4367      72313056 
 4367      6F6C7400 
 4368              	.LASF75:
 4369 0115 4144435F 		.ascii	"ADC_RawCounts2Counts\000"
 4369      52617743 
 4369      6F756E74 
 4369      7332436F 
 4369      756E7473 
 4370              	.LASF9:
 4371 012a 75696E74 		.ascii	"uint8\000"
 4371      3800
 4372              	.LASF103:
 4373 0130 43794465 		.ascii	"CyDelayUs\000"
 4373      6C617955 
 4373      7300
 4374              	.LASF16:
 4375 013a 646F7562 		.ascii	"double\000"
 4375      6C6500
 4376              	.LASF60:
 4377 0141 4144435F 		.ascii	"ADC_GetResult32\000"
 4377      47657452 
 4377      6573756C 
 4377      74333200 
 4378              	.LASF36:
 4379 0151 4144435F 		.ascii	"ADC_CONFIG_STRUCT\000"
 4379      434F4E46 
 4379      49475F53 
 4379      54525543 
 4379      5400
 4380              	.LASF26:
 4381 0163 73616D70 		.ascii	"sampleTime01\000"
 4381      6C655469 
 4381      6D653031 
 4381      00
 4382              	.LASF11:
 4383 0170 75696E74 		.ascii	"uint32\000"
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccogxpIC.s 			page 120


 4383      333200
 4384              	.LASF109:
 4385 0177 4379496E 		.ascii	"CyIntSetVector\000"
 4385      74536574 
 4385      56656374 
 4385      6F7200
 4386              	.LASF50:
 4387 0186 6D61736B 		.ascii	"mask\000"
 4387      00
 4388              	.LASF94:
 4389 018b 4144435F 		.ascii	"ADC_initVar\000"
 4389      696E6974 
 4389      56617200 
 4390              	.LASF77:
 4391 0197 74656D70 		.ascii	"temp\000"
 4391      00
 4392              	.LASF54:
 4393 019c 7265744D 		.ascii	"retMode\000"
 4393      6F646500 
 4394              	.LASF67:
 4395 01a4 4144435F 		.ascii	"ADC_SetLimitMask\000"
 4395      5365744C 
 4395      696D6974 
 4395      4D61736B 
 4395      00
 4396              	.LASF8:
 4397 01b5 756E7369 		.ascii	"unsigned int\000"
 4397      676E6564 
 4397      20696E74 
 4397      00
 4398              	.LASF31:
 4399 01c2 72616E67 		.ascii	"rangeIntMask\000"
 4399      65496E74 
 4399      4D61736B 
 4399      00
 4400              	.LASF40:
 4401 01cf 636F6E66 		.ascii	"configNum\000"
 4401      69674E75 
 4401      6D00
 4402              	.LASF5:
 4403 01d9 6C6F6E67 		.ascii	"long unsigned int\000"
 4403      20756E73 
 4403      69676E65 
 4403      6420696E 
 4403      7400
 4404              	.LASF44:
 4405 01eb 746D7052 		.ascii	"tmpRegVal\000"
 4405      65675661 
 4405      6C00
 4406              	.LASF52:
 4407 01f5 656E6162 		.ascii	"enableMask\000"
 4407      6C654D61 
 4407      736B00
 4408              	.LASF78:
 4409 0200 61766572 		.ascii	"averageAdcSamplesDiv\000"
 4409      61676541 
 4409      64635361 
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccogxpIC.s 			page 121


 4409      6D706C65 
 4409      73446976 
 4410              	.LASF3:
 4411 0215 73686F72 		.ascii	"short unsigned int\000"
 4411      7420756E 
 4411      7369676E 
 4411      65642069 
 4411      6E7400
 4412              	.LASF28:
 4413 0228 72616E67 		.ascii	"rangeThres\000"
 4413      65546872 
 4413      657300
 4414              	.LASF91:
 4415 0233 4144435F 		.ascii	"ADC_StopConvert\000"
 4415      53746F70 
 4415      436F6E76 
 4415      65727400 
 4416              	.LASF62:
 4417 0243 66696E61 		.ascii	"finalResult\000"
 4417      6C526573 
 4417      756C7400 
 4418              	.LASF68:
 4419 024f 6C696D69 		.ascii	"limitMask\000"
 4419      744D6173 
 4419      6B00
 4420              	.LASF104:
 4421 0259 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 4421      4320342E 
 4421      392E3320 
 4421      32303135 
 4421      30333033 
 4422 028c 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m0plus -mthumb -"
 4422      20726576 
 4422      6973696F 
 4422      6E203232 
 4422      31323230 
 4423 02bf 67202D4F 		.ascii	"g -Os -ffunction-sections -ffat-lto-objects\000"
 4423      73202D66 
 4423      66756E63 
 4423      74696F6E 
 4423      2D736563 
 4424              	.LASF79:
 4425 02eb 72617743 		.ascii	"rawChannel\000"
 4425      68616E6E 
 4425      656C00
 4426              	.LASF23:
 4427 02f6 6E756D43 		.ascii	"numChannels\000"
 4427      68616E6E 
 4427      656C7300 
 4428              	.LASF38:
 4429 0302 6368616E 		.ascii	"chanConfig\000"
 4429      436F6E66 
 4429      696700
 4430              	.LASF19:
 4431 030d 72656733 		.ascii	"reg32\000"
 4431      3200
 4432              	.LASF37:
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccogxpIC.s 			page 122


 4433 0313 69735369 		.ascii	"isSigned\000"
 4433      676E6564 
 4433      00
 4434              	.LASF59:
 4435 031c 61646352 		.ascii	"adcResult\000"
 4435      6573756C 
 4435      7400
 4436              	.LASF46:
 4437 0326 4144435F 		.ascii	"ADC_SetConvertMode\000"
 4437      53657443 
 4437      6F6E7665 
 4437      72744D6F 
 4437      646500
 4438              	.LASF14:
 4439 0339 666C6F61 		.ascii	"float32\000"
 4439      74333200 
 4440              	.LASF21:
 4441 0341 73697A65 		.ascii	"sizetype\000"
 4441      74797065 
 4441      00
 4442              	.LASF64:
 4443 034a 6C6F774C 		.ascii	"lowLimit\000"
 4443      696D6974 
 4443      00
 4444              	.LASF65:
 4445 0353 4144435F 		.ascii	"ADC_SetHighLimit\000"
 4445      53657448 
 4445      6967684C 
 4445      696D6974 
 4445      00
 4446              	.LASF88:
 4447 0364 61646472 		.ascii	"address\000"
 4447      65737300 
 4448              	.LASF107:
 4449 036c 4144435F 		.ascii	"ADC_IsChannelSigned\000"
 4449      49734368 
 4449      616E6E65 
 4449      6C536967 
 4449      6E656400 
 4450              	.LASF27:
 4451 0380 73616D70 		.ascii	"sampleTime23\000"
 4451      6C655469 
 4451      6D653233 
 4451      00
 4452              	.LASF32:
 4453 038d 73617449 		.ascii	"satIntMask\000"
 4453      6E744D61 
 4453      736B00
 4454              	.LASF56:
 4455 0398 4144435F 		.ascii	"ADC_IsEndConversion\000"
 4455      4973456E 
 4455      64436F6E 
 4455      76657273 
 4455      696F6E00 
 4456              	.LASF45:
 4457 03ac 4144435F 		.ascii	"ADC_InitConfig\000"
 4457      496E6974 
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccogxpIC.s 			page 123


 4457      436F6E66 
 4457      696700
 4458              	.LASF70:
 4459 03bb 7361744D 		.ascii	"satMask\000"
 4459      61736B00 
 4460              	.LASF17:
 4461 03c3 696E7436 		.ascii	"int64\000"
 4461      3400
 4462              	.LASF102:
 4463 03c9 4379496E 		.ascii	"CyIntSetPriority\000"
 4463      74536574 
 4463      5072696F 
 4463      72697479 
 4463      00
 4464              	.LASF51:
 4465 03da 4144435F 		.ascii	"ADC_SetChanMask\000"
 4465      53657443 
 4465      68616E4D 
 4465      61736B00 
 4466              	.LASF105:
 4467 03ea 47656E65 		.ascii	"Generated_Source\\PSoC4\\ADC.c\000"
 4467      72617465 
 4467      645F536F 
 4467      75726365 
 4467      5C50536F 
 4468              	.LASF73:
 4469 0407 4144435F 		.ascii	"ADC_SetGain\000"
 4469      53657447 
 4469      61696E00 
 4470              	.LASF15:
 4471 0413 666C6F61 		.ascii	"float\000"
 4471      7400
 4472              	.LASF66:
 4473 0419 68696768 		.ascii	"highLimit\000"
 4473      4C696D69 
 4473      7400
 4474              	.LASF82:
 4475 0423 4144435F 		.ascii	"ADC_CountsTo_mVolts\000"
 4475      436F756E 
 4475      7473546F 
 4475      5F6D566F 
 4475      6C747300 
 4476              	.LASF30:
 4477 0437 6368616E 		.ascii	"chanEn\000"
 4477      456E00
 4478              	.LASF63:
 4479 043e 4144435F 		.ascii	"ADC_SetLowLimit\000"
 4479      5365744C 
 4479      6F774C69 
 4479      6D697400 
 4480              	.LASF106:
 4481 044e 433A5C63 		.ascii	"C:\\cypress\\TalkingClock\\Talking_Clock.cydsn\000"
 4481      79707265 
 4481      73735C54 
 4481      616C6B69 
 4481      6E67436C 
 4482              	.LASF1:
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccogxpIC.s 			page 124


 4483 047a 756E7369 		.ascii	"unsigned char\000"
 4483      676E6564 
 4483      20636861 
 4483      7200
 4484              	.LASF96:
 4485 0488 4144435F 		.ascii	"ADC_offset\000"
 4485      6F666673 
 4485      657400
 4486              	.LASF2:
 4487 0493 73686F72 		.ascii	"short int\000"
 4487      7420696E 
 4487      7400
 4488              	.LASF101:
 4489 049d 4144435F 		.ascii	"ADC_intSarClock_SetFractionalDividerRegister\000"
 4489      696E7453 
 4489      6172436C 
 4489      6F636B5F 
 4489      53657446 
 4490              	.LASF108:
 4491 04ca 4144435F 		.ascii	"ADC_Stop\000"
 4491      53746F70 
 4491      00
 4492              	.LASF81:
 4493 04d3 72657375 		.ascii	"result_Volts\000"
 4493      6C745F56 
 4493      6F6C7473 
 4493      00
 4494              	.LASF61:
 4495 04e0 61646352 		.ascii	"adcResult16\000"
 4495      6573756C 
 4495      74313600 
 4496              	.LASF39:
 4497 04ec 63684E75 		.ascii	"chNum\000"
 4497      6D00
 4498              	.LASF33:
 4499 04f2 76726566 		.ascii	"vrefMvValue\000"
 4499      4D765661 
 4499      6C756500 
 4500              	.LASF58:
 4501 04fe 6368616E 		.ascii	"chan\000"
 4501      00
 4502              	.LASF18:
 4503 0503 63686172 		.ascii	"char\000"
 4503      00
 4504              	.LASF48:
 4505 0508 6D6F6465 		.ascii	"mode\000"
 4505      00
 4506              	.LASF20:
 4507 050d 63796973 		.ascii	"cyisraddress\000"
 4507      72616464 
 4507      72657373 
 4507      00
 4508              	.LASF98:
 4509 051a 4144435F 		.ascii	"ADC_allConfigs\000"
 4509      616C6C43 
 4509      6F6E6669 
 4509      677300
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccogxpIC.s 			page 125


 4510              	.LASF47:
 4511 0529 636F6E66 		.ascii	"config\000"
 4511      696700
 4512              	.LASF93:
 4513 0530 4144435F 		.ascii	"ADC_channelsConfig\000"
 4513      6368616E 
 4513      6E656C73 
 4513      436F6E66 
 4513      696700
 4514              	.LASF87:
 4515 0543 4144435F 		.ascii	"ADC_StartEx\000"
 4515      53746172 
 4515      74457800 
 4516              	.LASF85:
 4517 054f 72657375 		.ascii	"result_uVolts\000"
 4517      6C745F75 
 4517      566F6C74 
 4517      7300
 4518              	.LASF90:
 4519 055d 72657374 		.ascii	"restart\000"
 4519      61727400 
 4520              	.LASF72:
 4521 0565 6F666673 		.ascii	"offset\000"
 4521      657400
 4522              	.LASF24:
 4523 056c 6374726C 		.ascii	"ctrl\000"
 4523      00
 4524              	.LASF34:
 4525 0571 6D697363 		.ascii	"miscConfig\000"
 4525      436F6E66 
 4525      696700
 4526              	.LASF76:
 4527 057c 61646343 		.ascii	"adcCounts\000"
 4527      6F756E74 
 4527      7300
 4528              	.LASF86:
 4529 0586 4144435F 		.ascii	"ADC_Start\000"
 4529      53746172 
 4529      7400
 4530              	.LASF29:
 4531 0590 72616E67 		.ascii	"rangeCond\000"
 4531      65436F6E 
 4531      6400
 4532              	.LASF43:
 4533 059a 4144435F 		.ascii	"ADC_Enable\000"
 4533      456E6162 
 4533      6C6500
 4534              	.LASF25:
 4535 05a5 73616D70 		.ascii	"sampleCtrl\000"
 4535      6C654374 
 4535      726C00
 4536              	.LASF12:
 4537 05b0 696E7431 		.ascii	"int16\000"
 4537      3600
 4538              	.LASF83:
 4539 05b6 72657375 		.ascii	"result_mVolts\000"
 4539      6C745F6D 
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccogxpIC.s 			page 126


 4539      566F6C74 
 4539      7300
 4540              	.LASF71:
 4541 05c4 4144435F 		.ascii	"ADC_SetOffset\000"
 4541      5365744F 
 4541      66667365 
 4541      7400
 4542              	.LASF110:
 4543 05d2 4144435F 		.ascii	"ADC_IRQ_StartEx\000"
 4543      4952515F 
 4543      53746172 
 4543      74457800 
 4544              	.LASF22:
 4545 05e2 6368616E 		.ascii	"channelBase\000"
 4545      6E656C42 
 4545      61736500 
 4546              	.LASF55:
 4547 05ee 656E644F 		.ascii	"endOfConversion\000"
 4547      66436F6E 
 4547      76657273 
 4547      696F6E00 
 4548              	.LASF95:
 4549 05fe 4144435F 		.ascii	"ADC_selected\000"
 4549      73656C65 
 4549      63746564 
 4549      00
 4550              	.LASF57:
 4551 060b 4144435F 		.ascii	"ADC_GetResult16\000"
 4551      47657452 
 4551      6573756C 
 4551      74313600 
 4552              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
