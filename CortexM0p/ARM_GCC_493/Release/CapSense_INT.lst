ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccubcZxx.s 			page 1


   1              		.cpu cortex-m0plus
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 4
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"CapSense_INT.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.CapSense_SsCSDPostScan,"ax",%progbits
  18              		.align	1
  19              		.code	16
  20              		.thumb_func
  21              		.type	CapSense_SsCSDPostScan, %function
  22              	CapSense_SsCSDPostScan:
  23              	.LFB3:
  24              		.file 1 "Generated_Source\\PSoC4\\CapSense_INT.c"
   1:Generated_Source\PSoC4/CapSense_INT.c **** /***************************************************************************//**
   2:Generated_Source\PSoC4/CapSense_INT.c **** * \file CapSense_INT.c
   3:Generated_Source\PSoC4/CapSense_INT.c **** * \version 3.10
   4:Generated_Source\PSoC4/CapSense_INT.c **** *
   5:Generated_Source\PSoC4/CapSense_INT.c **** * \brief
   6:Generated_Source\PSoC4/CapSense_INT.c **** *   This file contains the source code for implementation of the CapSense component
   7:Generated_Source\PSoC4/CapSense_INT.c **** *   Interrupt Service Routine (ISR).
   8:Generated_Source\PSoC4/CapSense_INT.c **** *
   9:Generated_Source\PSoC4/CapSense_INT.c **** * \see CapSense P4 v3.10 Datasheet
  10:Generated_Source\PSoC4/CapSense_INT.c **** *
  11:Generated_Source\PSoC4/CapSense_INT.c **** *//*****************************************************************************
  12:Generated_Source\PSoC4/CapSense_INT.c **** * Copyright (2016), Cypress Semiconductor Corporation.
  13:Generated_Source\PSoC4/CapSense_INT.c **** ********************************************************************************
  14:Generated_Source\PSoC4/CapSense_INT.c **** * This software is owned by Cypress Semiconductor Corporation (Cypress) and is
  15:Generated_Source\PSoC4/CapSense_INT.c **** * protected by and subject to worldwide patent protection (United States and
  16:Generated_Source\PSoC4/CapSense_INT.c **** * foreign), United States copyright laws and international treaty provisions.
  17:Generated_Source\PSoC4/CapSense_INT.c **** * Cypress hereby grants to licensee a personal, non-exclusive, non-transferable
  18:Generated_Source\PSoC4/CapSense_INT.c **** * license to copy, use, modify, create derivative works of, and compile the
  19:Generated_Source\PSoC4/CapSense_INT.c **** * Cypress Source Code and derivative works for the sole purpose of creating
  20:Generated_Source\PSoC4/CapSense_INT.c **** * custom software in support of licensee product to be used only in conjunction
  21:Generated_Source\PSoC4/CapSense_INT.c **** * with a Cypress integrated circuit as specified in the applicable agreement.
  22:Generated_Source\PSoC4/CapSense_INT.c **** * Any reproduction, modification, translation, compilation, or representation of
  23:Generated_Source\PSoC4/CapSense_INT.c **** * this software except as specified above is prohibited without the express
  24:Generated_Source\PSoC4/CapSense_INT.c **** * written permission of Cypress.
  25:Generated_Source\PSoC4/CapSense_INT.c **** *
  26:Generated_Source\PSoC4/CapSense_INT.c **** * Disclaimer: CYPRESS MAKES NO WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, WITH
  27:Generated_Source\PSoC4/CapSense_INT.c **** * REGARD TO THIS MATERIAL, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
  28:Generated_Source\PSoC4/CapSense_INT.c **** * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
  29:Generated_Source\PSoC4/CapSense_INT.c **** * Cypress reserves the right to make changes without further notice to the
  30:Generated_Source\PSoC4/CapSense_INT.c **** * materials described herein. Cypress does not assume any liability arising out
  31:Generated_Source\PSoC4/CapSense_INT.c **** * of the application or use of any product or circuit described herein. Cypress
  32:Generated_Source\PSoC4/CapSense_INT.c **** * does not authorize its products for use as critical components in life-support
  33:Generated_Source\PSoC4/CapSense_INT.c **** * systems where a malfunction or failure may reasonably be expected to result in
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccubcZxx.s 			page 2


  34:Generated_Source\PSoC4/CapSense_INT.c **** * significant injury to the user. The inclusion of Cypress' product in a life-
  35:Generated_Source\PSoC4/CapSense_INT.c **** * support systems application implies that the manufacturer assumes all risk of
  36:Generated_Source\PSoC4/CapSense_INT.c **** * such use and in doing so indemnifies Cypress against all charges. Use may be
  37:Generated_Source\PSoC4/CapSense_INT.c **** * limited by and subject to the applicable Cypress software license agreement.
  38:Generated_Source\PSoC4/CapSense_INT.c **** *******************************************************************************/
  39:Generated_Source\PSoC4/CapSense_INT.c **** #include "cytypes.h"
  40:Generated_Source\PSoC4/CapSense_INT.c **** #include "cyfitter.h"
  41:Generated_Source\PSoC4/CapSense_INT.c **** #include "CapSense_Configuration.h"
  42:Generated_Source\PSoC4/CapSense_INT.c **** #include "CapSense_Sensing.h"
  43:Generated_Source\PSoC4/CapSense_INT.c **** #include "cyapicallbacks.h"
  44:Generated_Source\PSoC4/CapSense_INT.c **** 
  45:Generated_Source\PSoC4/CapSense_INT.c **** /*******************************************************************************
  46:Generated_Source\PSoC4/CapSense_INT.c **** * Static Function Prototypes
  47:Generated_Source\PSoC4/CapSense_INT.c **** *******************************************************************************/
  48:Generated_Source\PSoC4/CapSense_INT.c **** /**
  49:Generated_Source\PSoC4/CapSense_INT.c **** * \if SECTION_CAPSENSE_INTERNAL
  50:Generated_Source\PSoC4/CapSense_INT.c **** * \addtogroup group_capsense_internal
  51:Generated_Source\PSoC4/CapSense_INT.c **** * \{
  52:Generated_Source\PSoC4/CapSense_INT.c **** */
  53:Generated_Source\PSoC4/CapSense_INT.c **** 
  54:Generated_Source\PSoC4/CapSense_INT.c **** #if (((CapSense_ENABLE == CapSense_CSD_EN) || (CapSense_ENABLE == CapSense_CSD_CSX_EN)) && \
  55:Generated_Source\PSoC4/CapSense_INT.c ****      (CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN))
  56:Generated_Source\PSoC4/CapSense_INT.c ****     static void CapSense_SsNextFrequencyScan(void);
  57:Generated_Source\PSoC4/CapSense_INT.c **** #endif /* (((CapSense_ENABLE == CapSense_CSD_EN) || (CapSense_ENABLE == CapSense_CSD_CSX_EN)) && \
  58:Generated_Source\PSoC4/CapSense_INT.c ****             (CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN)) */
  59:Generated_Source\PSoC4/CapSense_INT.c **** 
  60:Generated_Source\PSoC4/CapSense_INT.c **** #if ((CapSense_ENABLE == CapSense_CSD_EN) || (CapSense_ENABLE == CapSense_CSD_CSX_EN))
  61:Generated_Source\PSoC4/CapSense_INT.c ****     CY_INLINE static void CapSense_SsCSDPostScan(void);
  62:Generated_Source\PSoC4/CapSense_INT.c ****     CY_INLINE static void CapSense_SsCSDInitNextScan(void);
  63:Generated_Source\PSoC4/CapSense_INT.c **** #endif /* ((CapSense_ENABLE == CapSense_CSD_EN) || (CapSense_ENABLE == CapSense_CSD_CSX_EN)) */ 
  64:Generated_Source\PSoC4/CapSense_INT.c **** 
  65:Generated_Source\PSoC4/CapSense_INT.c **** #if (CapSense_ENABLE == CapSense_CSD2X_EN)
  66:Generated_Source\PSoC4/CapSense_INT.c ****     #if (CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN)
  67:Generated_Source\PSoC4/CapSense_INT.c ****         CY_INLINE static void CapSense_SsCSD2XCheckNextScan(void);
  68:Generated_Source\PSoC4/CapSense_INT.c ****         static void CapSense_SsCSD2XNextFrequencyScan(void);
  69:Generated_Source\PSoC4/CapSense_INT.c ****     #endif /* (CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN) */
  70:Generated_Source\PSoC4/CapSense_INT.c ****     CY_INLINE static void CapSense_SsCSD2XInitNextScan(void);
  71:Generated_Source\PSoC4/CapSense_INT.c **** #endif /* (CapSense_ENABLE == CapSense_CSD2X_EN) */
  72:Generated_Source\PSoC4/CapSense_INT.c **** 
  73:Generated_Source\PSoC4/CapSense_INT.c ****    
  74:Generated_Source\PSoC4/CapSense_INT.c **** /** \}
  75:Generated_Source\PSoC4/CapSense_INT.c **** * \endif */
  76:Generated_Source\PSoC4/CapSense_INT.c **** 
  77:Generated_Source\PSoC4/CapSense_INT.c **** 
  78:Generated_Source\PSoC4/CapSense_INT.c **** /**
  79:Generated_Source\PSoC4/CapSense_INT.c **** * \if SECTION_CAPSENSE_INTERRUPT
  80:Generated_Source\PSoC4/CapSense_INT.c **** * \addtogroup group_capsense_interrupt
  81:Generated_Source\PSoC4/CapSense_INT.c **** * \{
  82:Generated_Source\PSoC4/CapSense_INT.c **** */
  83:Generated_Source\PSoC4/CapSense_INT.c **** 
  84:Generated_Source\PSoC4/CapSense_INT.c **** 
  85:Generated_Source\PSoC4/CapSense_INT.c **** #if ((CapSense_ENABLE == CapSense_CSD_EN) || (CapSense_ENABLE == CapSense_CSD_CSX_EN))
  86:Generated_Source\PSoC4/CapSense_INT.c **** 
  87:Generated_Source\PSoC4/CapSense_INT.c **** #if (CapSense_ENABLE == CapSense_CSDV2)
  88:Generated_Source\PSoC4/CapSense_INT.c ****     /*  CSDv2 HW IP block part */
  89:Generated_Source\PSoC4/CapSense_INT.c **** 
  90:Generated_Source\PSoC4/CapSense_INT.c ****     /*******************************************************************************
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccubcZxx.s 			page 3


  91:Generated_Source\PSoC4/CapSense_INT.c ****     * Function Name: CapSense_CSDPostSingleScan
  92:Generated_Source\PSoC4/CapSense_INT.c ****     ****************************************************************************//**
  93:Generated_Source\PSoC4/CapSense_INT.c ****     *
  94:Generated_Source\PSoC4/CapSense_INT.c ****     * \brief
  95:Generated_Source\PSoC4/CapSense_INT.c ****     *  This is an internal ISR function for single-sensor scanning implementation.
  96:Generated_Source\PSoC4/CapSense_INT.c ****     *
  97:Generated_Source\PSoC4/CapSense_INT.c ****     * \details
  98:Generated_Source\PSoC4/CapSense_INT.c ****     *  This ISR handler is triggered when the user calls the
  99:Generated_Source\PSoC4/CapSense_INT.c ****     *  CapSense_CSDScanExt() function.
 100:Generated_Source\PSoC4/CapSense_INT.c ****     *
 101:Generated_Source\PSoC4/CapSense_INT.c ****     *  The following tasks are performed for CSDv1 HW IP block:
 102:Generated_Source\PSoC4/CapSense_INT.c ****     *    1. Disable the CSD interrupt
 103:Generated_Source\PSoC4/CapSense_INT.c ****     *    2. Read the Counter register and update the data structure with raw data
 104:Generated_Source\PSoC4/CapSense_INT.c ****     *    3. Connect the Vref buffer to the AMUX bus
 105:Generated_Source\PSoC4/CapSense_INT.c ****     *    4. Update the Scan Counter
 106:Generated_Source\PSoC4/CapSense_INT.c ****     *    5. Reset the BUSY flag
 107:Generated_Source\PSoC4/CapSense_INT.c ****     *    6. Enable the CSD interrupt.
 108:Generated_Source\PSoC4/CapSense_INT.c ****     *
 109:Generated_Source\PSoC4/CapSense_INT.c ****     *  The following tasks are performed for CSDv2 HW IP block:
 110:Generated_Source\PSoC4/CapSense_INT.c ****     *    1. Check if the raw data is not noisy
 111:Generated_Source\PSoC4/CapSense_INT.c ****     *    2. Read the Counter register and update the data structure with raw data
 112:Generated_Source\PSoC4/CapSense_INT.c ****     *    3. Configure and start the scan for the next frequency if the
 113:Generated_Source\PSoC4/CapSense_INT.c ****     *      multi-frequency is enabled
 114:Generated_Source\PSoC4/CapSense_INT.c ****     *    4. Update the Scan Counter
 115:Generated_Source\PSoC4/CapSense_INT.c ****     *    5. Reset the BUSY flag
 116:Generated_Source\PSoC4/CapSense_INT.c ****     *    6. Enable the CSD interrupt.
 117:Generated_Source\PSoC4/CapSense_INT.c ****     *
 118:Generated_Source\PSoC4/CapSense_INT.c ****     *  The ISR handler changes IMO and initializes scanning for the next frequency
 119:Generated_Source\PSoC4/CapSense_INT.c ****     *  channels when multi-frequency scanning is enabled.
 120:Generated_Source\PSoC4/CapSense_INT.c ****     *
 121:Generated_Source\PSoC4/CapSense_INT.c **** 	*  This function has two Macro Callbacks that allow calling the user code
 122:Generated_Source\PSoC4/CapSense_INT.c ****     *  from macros specified in a component's generated code. Refer to the 
 123:Generated_Source\PSoC4/CapSense_INT.c ****     *  \ref group_capsense_macrocallbacks section of PSoC Creator User Guide 
 124:Generated_Source\PSoC4/CapSense_INT.c ****     *  for details. 
 125:Generated_Source\PSoC4/CapSense_INT.c ****     *
 126:Generated_Source\PSoC4/CapSense_INT.c ****     *******************************************************************************/
 127:Generated_Source\PSoC4/CapSense_INT.c ****     CY_ISR(CapSense_CSDPostSingleScan)
 128:Generated_Source\PSoC4/CapSense_INT.c ****     {
 129:Generated_Source\PSoC4/CapSense_INT.c ****         #ifdef CapSense_ENTRY_CALLBACK
 130:Generated_Source\PSoC4/CapSense_INT.c ****             CapSense_EntryCallback();
 131:Generated_Source\PSoC4/CapSense_INT.c ****         #endif /* CapSense_ENTRY_CALLBACK */
 132:Generated_Source\PSoC4/CapSense_INT.c **** 
 133:Generated_Source\PSoC4/CapSense_INT.c ****         /* Clear pending interrupt */
 134:Generated_Source\PSoC4/CapSense_INT.c ****         CY_SET_REG32(CapSense_INTR_PTR, CapSense_INTR_SET_MASK);
 135:Generated_Source\PSoC4/CapSense_INT.c **** 
 136:Generated_Source\PSoC4/CapSense_INT.c ****     #if (CapSense_ENABLE == CapSense_CSD_NOISE_METRIC_EN)
 137:Generated_Source\PSoC4/CapSense_INT.c ****         if ((CapSense_CSD_NOISE_METRIC_TH < ((CY_GET_REG32(CapSense_RESULT_VAL1_PTR) &
 138:Generated_Source\PSoC4/CapSense_INT.c ****                                                     CapSense_RESULT_VAL1_BAD_CONVS_MASK) >>
 139:Generated_Source\PSoC4/CapSense_INT.c ****                                                     CapSense_RESULT_VAL1_BAD_CONVS_SHIFT)) &&
 140:Generated_Source\PSoC4/CapSense_INT.c ****                                                     (0u < CapSense_badConversionsNum))
 141:Generated_Source\PSoC4/CapSense_INT.c ****         {
 142:Generated_Source\PSoC4/CapSense_INT.c ****             /* Decrement bad conversions number */
 143:Generated_Source\PSoC4/CapSense_INT.c ****             CapSense_badConversionsNum--;
 144:Generated_Source\PSoC4/CapSense_INT.c **** 
 145:Generated_Source\PSoC4/CapSense_INT.c ****             /* Start the re-scan */
 146:Generated_Source\PSoC4/CapSense_INT.c ****             CY_SET_REG32(CapSense_SEQ_START_PTR, CapSense_SEQ_START_AZ0_SKIP_MASK |
 147:Generated_Source\PSoC4/CapSense_INT.c ****                                                          CapSense_SEQ_START_AZ1_SKIP_MASK |
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccubcZxx.s 			page 4


 148:Generated_Source\PSoC4/CapSense_INT.c ****                                                          CapSense_SEQ_START_START_MASK);
 149:Generated_Source\PSoC4/CapSense_INT.c ****         }
 150:Generated_Source\PSoC4/CapSense_INT.c ****         else
 151:Generated_Source\PSoC4/CapSense_INT.c ****         {
 152:Generated_Source\PSoC4/CapSense_INT.c ****     #endif /* (CapSense_ENABLE == CapSense_CSD_NOISE_METRIC_EN) */
 153:Generated_Source\PSoC4/CapSense_INT.c **** 
 154:Generated_Source\PSoC4/CapSense_INT.c ****             CapSense_SsCSDPostScan();
 155:Generated_Source\PSoC4/CapSense_INT.c **** 
 156:Generated_Source\PSoC4/CapSense_INT.c ****             #if (CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN)
 157:Generated_Source\PSoC4/CapSense_INT.c ****                 if (CapSense_FREQ_CHANNEL_2 > CapSense_scanFreqIndex)
 158:Generated_Source\PSoC4/CapSense_INT.c ****                 {
 159:Generated_Source\PSoC4/CapSense_INT.c ****                     /* Scan the next channel */
 160:Generated_Source\PSoC4/CapSense_INT.c ****                     CapSense_SsNextFrequencyScan();
 161:Generated_Source\PSoC4/CapSense_INT.c ****                 }
 162:Generated_Source\PSoC4/CapSense_INT.c ****                 else
 163:Generated_Source\PSoC4/CapSense_INT.c ****                 {
 164:Generated_Source\PSoC4/CapSense_INT.c ****                     /* All channels are scanned. Set IMO to zero channel */
 165:Generated_Source\PSoC4/CapSense_INT.c ****                     CapSense_scanFreqIndex = CapSense_FREQ_CHANNEL_0;
 166:Generated_Source\PSoC4/CapSense_INT.c ****                     CapSense_SsChangeImoFreq(CapSense_FREQ_CHANNEL_0);
 167:Generated_Source\PSoC4/CapSense_INT.c **** 
 168:Generated_Source\PSoC4/CapSense_INT.c ****                     #if (CapSense_ENABLE == CapSense_BLOCK_OFF_AFTER_SCAN_EN)
 169:Generated_Source\PSoC4/CapSense_INT.c ****                         /*  Disable CSDv2 block */
 170:Generated_Source\PSoC4/CapSense_INT.c ****                         CY_SET_REG32(CapSense_CONFIG_PTR, CapSense_configCsd);
 171:Generated_Source\PSoC4/CapSense_INT.c ****                     #endif /* (CapSense_ENABLE == CapSense_BLOCK_OFF_AFTER_SCAN_EN) */
 172:Generated_Source\PSoC4/CapSense_INT.c **** 
 173:Generated_Source\PSoC4/CapSense_INT.c ****                     /* Update Scan Counter */
 174:Generated_Source\PSoC4/CapSense_INT.c ****                     CapSense_dsRam.scanCounter++;
 175:Generated_Source\PSoC4/CapSense_INT.c **** 
 176:Generated_Source\PSoC4/CapSense_INT.c ****                     /* Sensor is totally scanned. Reset BUSY flag */
 177:Generated_Source\PSoC4/CapSense_INT.c ****                     CapSense_dsRam.status &= ~(CapSense_SW_STS_BUSY | CapSense_WDGT_SW_STS_BUSY);
 178:Generated_Source\PSoC4/CapSense_INT.c ****                 }
 179:Generated_Source\PSoC4/CapSense_INT.c ****             #else
 180:Generated_Source\PSoC4/CapSense_INT.c ****                 {
 181:Generated_Source\PSoC4/CapSense_INT.c ****                     #if (CapSense_ENABLE == CapSense_BLOCK_OFF_AFTER_SCAN_EN)
 182:Generated_Source\PSoC4/CapSense_INT.c ****                         /*  Disable CSDv2 block */
 183:Generated_Source\PSoC4/CapSense_INT.c ****                         CY_SET_REG32(CapSense_CONFIG_PTR, CapSense_configCsd);
 184:Generated_Source\PSoC4/CapSense_INT.c ****                     #endif /* (CapSense_ENABLE == CapSense_BLOCK_OFF_AFTER_SCAN_EN) */
 185:Generated_Source\PSoC4/CapSense_INT.c **** 
 186:Generated_Source\PSoC4/CapSense_INT.c ****                     /* Update Scan Counter */
 187:Generated_Source\PSoC4/CapSense_INT.c ****                     CapSense_dsRam.scanCounter++;
 188:Generated_Source\PSoC4/CapSense_INT.c **** 
 189:Generated_Source\PSoC4/CapSense_INT.c ****                     /* Sensor is totally scanned. Reset BUSY flag */
 190:Generated_Source\PSoC4/CapSense_INT.c ****                     CapSense_dsRam.status &= ~(CapSense_SW_STS_BUSY | CapSense_WDGT_SW_STS_BUSY);
 191:Generated_Source\PSoC4/CapSense_INT.c ****                 }
 192:Generated_Source\PSoC4/CapSense_INT.c ****             #endif /* (CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN) */
 193:Generated_Source\PSoC4/CapSense_INT.c ****     #if (CapSense_ENABLE == CapSense_CSD_NOISE_METRIC_EN)
 194:Generated_Source\PSoC4/CapSense_INT.c ****         }
 195:Generated_Source\PSoC4/CapSense_INT.c ****     #endif /* (CapSense_ENABLE == CapSense_CSD_NOISE_METRIC_EN) */
 196:Generated_Source\PSoC4/CapSense_INT.c **** 
 197:Generated_Source\PSoC4/CapSense_INT.c ****         #ifdef CapSense_EXIT_CALLBACK
 198:Generated_Source\PSoC4/CapSense_INT.c ****             CapSense_ExitCallback();
 199:Generated_Source\PSoC4/CapSense_INT.c ****         #endif /* CapSense_EXIT_CALLBACK */
 200:Generated_Source\PSoC4/CapSense_INT.c ****     }
 201:Generated_Source\PSoC4/CapSense_INT.c **** 
 202:Generated_Source\PSoC4/CapSense_INT.c **** 
 203:Generated_Source\PSoC4/CapSense_INT.c ****     /*******************************************************************************
 204:Generated_Source\PSoC4/CapSense_INT.c ****     * Function Name: CapSense_CSDPostMultiScan
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccubcZxx.s 			page 5


 205:Generated_Source\PSoC4/CapSense_INT.c ****     ****************************************************************************//**
 206:Generated_Source\PSoC4/CapSense_INT.c ****     *
 207:Generated_Source\PSoC4/CapSense_INT.c ****     * \brief
 208:Generated_Source\PSoC4/CapSense_INT.c ****     *  This is an internal ISR function for multiple-sensor scanning 
 209:Generated_Source\PSoC4/CapSense_INT.c ****     *  implementation.
 210:Generated_Source\PSoC4/CapSense_INT.c ****     *
 211:Generated_Source\PSoC4/CapSense_INT.c ****     * \details
 212:Generated_Source\PSoC4/CapSense_INT.c ****     *  This ISR handler is triggered when the user calls the
 213:Generated_Source\PSoC4/CapSense_INT.c ****     *  CapSense_Scan() or CapSense_ScanAllWidgets() APIs.
 214:Generated_Source\PSoC4/CapSense_INT.c ****     *  
 215:Generated_Source\PSoC4/CapSense_INT.c ****     *  The following tasks are performed:
 216:Generated_Source\PSoC4/CapSense_INT.c ****     *    1. Disable the CSD interrupt
 217:Generated_Source\PSoC4/CapSense_INT.c ****     *    2. Read the Counter register and update the data structure with raw data
 218:Generated_Source\PSoC4/CapSense_INT.c ****     *    3. Connect the Vref buffer to the AMUX bus
 219:Generated_Source\PSoC4/CapSense_INT.c ****     *    4. Disable the CSD block (after the widget has been scanned)
 220:Generated_Source\PSoC4/CapSense_INT.c ****     *    5. Update Scan Counter
 221:Generated_Source\PSoC4/CapSense_INT.c ****     *    6. Reset the BUSY flag
 222:Generated_Source\PSoC4/CapSense_INT.c ****     *    7. Enable the CSD interrupt.
 223:Generated_Source\PSoC4/CapSense_INT.c ****     *
 224:Generated_Source\PSoC4/CapSense_INT.c ****     *  The ISR handler initializes scanning for the previous sensor when the 
 225:Generated_Source\PSoC4/CapSense_INT.c ****     *  widget has more than one sensor.
 226:Generated_Source\PSoC4/CapSense_INT.c ****     *  The ISR handler initializes scanning for the next widget when the
 227:Generated_Source\PSoC4/CapSense_INT.c ****     *  CapSense_ScanAllWidgets() APIs are called and the project has
 228:Generated_Source\PSoC4/CapSense_INT.c ****     *  more than one widget.
 229:Generated_Source\PSoC4/CapSense_INT.c ****     *  The ISR handler changes the IMO and initializes scanning for the next
 230:Generated_Source\PSoC4/CapSense_INT.c ****     *  frequency channels when multi-frequency scanning is enabled.
 231:Generated_Source\PSoC4/CapSense_INT.c ****     *
 232:Generated_Source\PSoC4/CapSense_INT.c ****     *  This function has two Macro Callbacks that allow calling the user 
 233:Generated_Source\PSoC4/CapSense_INT.c ****     *  code from macros specified in a component's generated code. Refer to the 
 234:Generated_Source\PSoC4/CapSense_INT.c ****     *  \ref group_capsense_macrocallbacks section of PSoC Creator User Guide 
 235:Generated_Source\PSoC4/CapSense_INT.c ****     *  for details.
 236:Generated_Source\PSoC4/CapSense_INT.c ****     *
 237:Generated_Source\PSoC4/CapSense_INT.c ****     *******************************************************************************/
 238:Generated_Source\PSoC4/CapSense_INT.c ****     CY_ISR(CapSense_CSDPostMultiScan)
 239:Generated_Source\PSoC4/CapSense_INT.c ****     {
 240:Generated_Source\PSoC4/CapSense_INT.c ****         /*  Declare and initialise ptr to sensor IO structure to appropriate address        */
 241:Generated_Source\PSoC4/CapSense_INT.c ****         CapSense_FLASH_IO_STRUCT const *curSnsIOPtr = (CapSense_FLASH_IO_STRUCT const *)
 242:Generated_Source\PSoC4/CapSense_INT.c ****                                                           CapSense_dsFlash.wdgtArray[CapSense_widge
 243:Generated_Source\PSoC4/CapSense_INT.c ****                                                           + CapSense_sensorIndex;
 244:Generated_Source\PSoC4/CapSense_INT.c **** 
 245:Generated_Source\PSoC4/CapSense_INT.c ****         #ifdef CapSense_ENTRY_CALLBACK
 246:Generated_Source\PSoC4/CapSense_INT.c ****             CapSense_EntryCallback();
 247:Generated_Source\PSoC4/CapSense_INT.c ****         #endif /* CapSense_ENTRY_CALLBACK */
 248:Generated_Source\PSoC4/CapSense_INT.c **** 
 249:Generated_Source\PSoC4/CapSense_INT.c ****         /* Clear pending interrupt */
 250:Generated_Source\PSoC4/CapSense_INT.c ****         CY_SET_REG32(CapSense_INTR_PTR, CapSense_INTR_SET_MASK);
 251:Generated_Source\PSoC4/CapSense_INT.c **** 
 252:Generated_Source\PSoC4/CapSense_INT.c ****         #if (CapSense_ENABLE == CapSense_CSD_NOISE_METRIC_EN)
 253:Generated_Source\PSoC4/CapSense_INT.c ****             if ((CapSense_CSD_NOISE_METRIC_TH < ((CY_GET_REG32(CapSense_RESULT_VAL1_PTR) &
 254:Generated_Source\PSoC4/CapSense_INT.c ****                                                       CapSense_RESULT_VAL1_BAD_CONVS_MASK) >>
 255:Generated_Source\PSoC4/CapSense_INT.c ****                                                       CapSense_RESULT_VAL1_BAD_CONVS_SHIFT)) &&
 256:Generated_Source\PSoC4/CapSense_INT.c ****                                                       (0u < CapSense_badConversionsNum))
 257:Generated_Source\PSoC4/CapSense_INT.c ****             {
 258:Generated_Source\PSoC4/CapSense_INT.c ****                 /* Decrement bad conversions number */
 259:Generated_Source\PSoC4/CapSense_INT.c ****                 CapSense_badConversionsNum--;
 260:Generated_Source\PSoC4/CapSense_INT.c **** 
 261:Generated_Source\PSoC4/CapSense_INT.c ****                 /* Start the re-scan */
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccubcZxx.s 			page 6


 262:Generated_Source\PSoC4/CapSense_INT.c ****                 CY_SET_REG32(CapSense_SEQ_START_PTR, CapSense_SEQ_START_AZ0_SKIP_MASK |
 263:Generated_Source\PSoC4/CapSense_INT.c ****                                                              CapSense_SEQ_START_AZ1_SKIP_MASK |
 264:Generated_Source\PSoC4/CapSense_INT.c ****                                                              CapSense_SEQ_START_START_MASK);
 265:Generated_Source\PSoC4/CapSense_INT.c ****             }
 266:Generated_Source\PSoC4/CapSense_INT.c ****             else
 267:Generated_Source\PSoC4/CapSense_INT.c ****             {
 268:Generated_Source\PSoC4/CapSense_INT.c ****         #endif /* (CapSense_ENABLE == CapSense_CSD_NOISE_METRIC_EN) */
 269:Generated_Source\PSoC4/CapSense_INT.c **** 
 270:Generated_Source\PSoC4/CapSense_INT.c ****             CapSense_SsCSDPostScan();
 271:Generated_Source\PSoC4/CapSense_INT.c **** 
 272:Generated_Source\PSoC4/CapSense_INT.c ****             #if (CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN)
 273:Generated_Source\PSoC4/CapSense_INT.c ****                 /* Disable sensor when all frequency channels are scanned */
 274:Generated_Source\PSoC4/CapSense_INT.c ****                 if (CapSense_FREQ_CHANNEL_2 == CapSense_scanFreqIndex)
 275:Generated_Source\PSoC4/CapSense_INT.c ****                 {
 276:Generated_Source\PSoC4/CapSense_INT.c ****                     /* Disable sensor */
 277:Generated_Source\PSoC4/CapSense_INT.c ****                     CapSense_CSDDisconnectSns(curSnsIOPtr);
 278:Generated_Source\PSoC4/CapSense_INT.c ****                 }
 279:Generated_Source\PSoC4/CapSense_INT.c ****             #else
 280:Generated_Source\PSoC4/CapSense_INT.c ****                 /* Disable sensor */
 281:Generated_Source\PSoC4/CapSense_INT.c ****                 CapSense_CSDDisconnectSns(curSnsIOPtr);
 282:Generated_Source\PSoC4/CapSense_INT.c ****             #endif /* (CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN) */
 283:Generated_Source\PSoC4/CapSense_INT.c **** 
 284:Generated_Source\PSoC4/CapSense_INT.c ****             #if (CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN)
 285:Generated_Source\PSoC4/CapSense_INT.c ****                 if (CapSense_FREQ_CHANNEL_2 > CapSense_scanFreqIndex)
 286:Generated_Source\PSoC4/CapSense_INT.c ****                 {
 287:Generated_Source\PSoC4/CapSense_INT.c ****                      /* Scan the next channel */
 288:Generated_Source\PSoC4/CapSense_INT.c ****                     CapSense_SsNextFrequencyScan();
 289:Generated_Source\PSoC4/CapSense_INT.c ****                 }
 290:Generated_Source\PSoC4/CapSense_INT.c ****                 else
 291:Generated_Source\PSoC4/CapSense_INT.c ****                 {
 292:Generated_Source\PSoC4/CapSense_INT.c ****                      /* All channels are scanned. Set IMO to zero channel */
 293:Generated_Source\PSoC4/CapSense_INT.c ****                     CapSense_scanFreqIndex = CapSense_FREQ_CHANNEL_0;
 294:Generated_Source\PSoC4/CapSense_INT.c ****                     CapSense_SsChangeImoFreq(CapSense_FREQ_CHANNEL_0);
 295:Generated_Source\PSoC4/CapSense_INT.c **** 
 296:Generated_Source\PSoC4/CapSense_INT.c ****                      /* Scan the next sensor */
 297:Generated_Source\PSoC4/CapSense_INT.c ****                     CapSense_SsCSDInitNextScan();
 298:Generated_Source\PSoC4/CapSense_INT.c ****                 }
 299:Generated_Source\PSoC4/CapSense_INT.c ****             #else
 300:Generated_Source\PSoC4/CapSense_INT.c ****                 /* Scan the next sensor */
 301:Generated_Source\PSoC4/CapSense_INT.c ****                 CapSense_SsCSDInitNextScan();
 302:Generated_Source\PSoC4/CapSense_INT.c ****             #endif /* (CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN) */
 303:Generated_Source\PSoC4/CapSense_INT.c ****         #if (CapSense_ENABLE == CapSense_CSD_NOISE_METRIC_EN)
 304:Generated_Source\PSoC4/CapSense_INT.c ****             }
 305:Generated_Source\PSoC4/CapSense_INT.c ****         #endif /* (CapSense_ENABLE == CapSense_CSD_NOISE_METRIC_EN) */
 306:Generated_Source\PSoC4/CapSense_INT.c **** 
 307:Generated_Source\PSoC4/CapSense_INT.c ****         #ifdef CapSense_EXIT_CALLBACK
 308:Generated_Source\PSoC4/CapSense_INT.c ****             CapSense_ExitCallback();
 309:Generated_Source\PSoC4/CapSense_INT.c ****         #endif /* CapSense_EXIT_CALLBACK */
 310:Generated_Source\PSoC4/CapSense_INT.c ****     }
 311:Generated_Source\PSoC4/CapSense_INT.c **** 
 312:Generated_Source\PSoC4/CapSense_INT.c **** 
 313:Generated_Source\PSoC4/CapSense_INT.c ****     #if (CapSense_ENABLE == CapSense_CSD_GANGED_SNS_EN)
 314:Generated_Source\PSoC4/CapSense_INT.c ****     /*******************************************************************************
 315:Generated_Source\PSoC4/CapSense_INT.c ****     * Function Name: CapSense_CSDPostMultiScanGanged
 316:Generated_Source\PSoC4/CapSense_INT.c ****     ****************************************************************************//**
 317:Generated_Source\PSoC4/CapSense_INT.c ****     *
 318:Generated_Source\PSoC4/CapSense_INT.c ****     * \brief
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccubcZxx.s 			page 7


 319:Generated_Source\PSoC4/CapSense_INT.c ****     *  This is an internal ISR function for multiple-sensor scanning 
 320:Generated_Source\PSoC4/CapSense_INT.c ****     *  implementation for ganged sensors.
 321:Generated_Source\PSoC4/CapSense_INT.c ****     *
 322:Generated_Source\PSoC4/CapSense_INT.c ****     * \details
 323:Generated_Source\PSoC4/CapSense_INT.c ****     *  This ISR handler is triggered when the user calls the
 324:Generated_Source\PSoC4/CapSense_INT.c ****     *  CapSense_Scan() API for a ganged sensor or the
 325:Generated_Source\PSoC4/CapSense_INT.c ****     *  CapSense_ScanAllWidgets() API in the project with ganged sensors.
 326:Generated_Source\PSoC4/CapSense_INT.c ****     *
 327:Generated_Source\PSoC4/CapSense_INT.c ****     *  The following tasks are performed:
 328:Generated_Source\PSoC4/CapSense_INT.c ****     *    1. Disable the CSD interrupt
 329:Generated_Source\PSoC4/CapSense_INT.c ****     *    2. Read the Counter register and update the data structure with raw data
 330:Generated_Source\PSoC4/CapSense_INT.c ****     *    3. Connect the Vref buffer to the AMUX bus
 331:Generated_Source\PSoC4/CapSense_INT.c ****     *    4. Disable the CSD block (after the widget has been scanned)
 332:Generated_Source\PSoC4/CapSense_INT.c ****     *    5. Update Scan Counter
 333:Generated_Source\PSoC4/CapSense_INT.c ****     *    6. Reset the BUSY flag
 334:Generated_Source\PSoC4/CapSense_INT.c ****     *    7. Enable the CSD interrupt.
 335:Generated_Source\PSoC4/CapSense_INT.c ****     *
 336:Generated_Source\PSoC4/CapSense_INT.c ****     *  The ISR handler initializes scanning for the previous sensor when the
 337:Generated_Source\PSoC4/CapSense_INT.c ****     *  widget has more than one sensor.
 338:Generated_Source\PSoC4/CapSense_INT.c ****     *  The ISR handler initializes scanning for the next widget when the
 339:Generated_Source\PSoC4/CapSense_INT.c ****     *  CapSense_ScanAllWidgets() APIs are called and the project has 
 340:Generated_Source\PSoC4/CapSense_INT.c ****     *  more than one widget.
 341:Generated_Source\PSoC4/CapSense_INT.c ****     *  The ISR handler changes the IMO and initializes scanning for the next 
 342:Generated_Source\PSoC4/CapSense_INT.c ****     *  frequency channels when multi-frequency scanning is enabled.
 343:Generated_Source\PSoC4/CapSense_INT.c ****     *
 344:Generated_Source\PSoC4/CapSense_INT.c ****     *  This function has two Macro Callbacks that allow calling the user 
 345:Generated_Source\PSoC4/CapSense_INT.c ****     *  code from macros specified in a component's generated code. Refer to the 
 346:Generated_Source\PSoC4/CapSense_INT.c ****     *  \ref group_capsense_macrocallbacks section of PSoC Creator User Guide 
 347:Generated_Source\PSoC4/CapSense_INT.c ****     *  for details.
 348:Generated_Source\PSoC4/CapSense_INT.c ****     *
 349:Generated_Source\PSoC4/CapSense_INT.c ****     *******************************************************************************/
 350:Generated_Source\PSoC4/CapSense_INT.c ****     CY_ISR(CapSense_CSDPostMultiScanGanged)
 351:Generated_Source\PSoC4/CapSense_INT.c ****     {
 352:Generated_Source\PSoC4/CapSense_INT.c ****         #ifdef CapSense_ENTRY_CALLBACK
 353:Generated_Source\PSoC4/CapSense_INT.c ****             CapSense_EntryCallback();
 354:Generated_Source\PSoC4/CapSense_INT.c ****         #endif /* CapSense_ENTRY_CALLBACK */
 355:Generated_Source\PSoC4/CapSense_INT.c **** 
 356:Generated_Source\PSoC4/CapSense_INT.c ****         /* Clear pending interrupt */
 357:Generated_Source\PSoC4/CapSense_INT.c ****         CY_SET_REG32(CapSense_INTR_PTR, CapSense_INTR_SET_MASK);
 358:Generated_Source\PSoC4/CapSense_INT.c **** 
 359:Generated_Source\PSoC4/CapSense_INT.c ****         #if (CapSense_ENABLE == CapSense_CSD_NOISE_METRIC_EN)
 360:Generated_Source\PSoC4/CapSense_INT.c ****             if ((CapSense_CSD_NOISE_METRIC_TH < ((CY_GET_REG32(CapSense_RESULT_VAL1_PTR) &
 361:Generated_Source\PSoC4/CapSense_INT.c ****                                                       CapSense_RESULT_VAL1_BAD_CONVS_MASK) >>
 362:Generated_Source\PSoC4/CapSense_INT.c ****                                                       CapSense_RESULT_VAL1_BAD_CONVS_SHIFT)) &&
 363:Generated_Source\PSoC4/CapSense_INT.c ****                                                       (0u < CapSense_badConversionsNum))
 364:Generated_Source\PSoC4/CapSense_INT.c ****             {
 365:Generated_Source\PSoC4/CapSense_INT.c ****                 /* Decrement bad conversions number */
 366:Generated_Source\PSoC4/CapSense_INT.c ****                 CapSense_badConversionsNum--;
 367:Generated_Source\PSoC4/CapSense_INT.c **** 
 368:Generated_Source\PSoC4/CapSense_INT.c ****                 /* Start the re-scan */
 369:Generated_Source\PSoC4/CapSense_INT.c ****                 CY_SET_REG32(CapSense_SEQ_START_PTR, CapSense_SEQ_START_AZ0_SKIP_MASK |
 370:Generated_Source\PSoC4/CapSense_INT.c ****                                                              CapSense_SEQ_START_AZ1_SKIP_MASK |
 371:Generated_Source\PSoC4/CapSense_INT.c ****                                                              CapSense_SEQ_START_START_MASK);
 372:Generated_Source\PSoC4/CapSense_INT.c ****             }
 373:Generated_Source\PSoC4/CapSense_INT.c ****             else
 374:Generated_Source\PSoC4/CapSense_INT.c ****             {
 375:Generated_Source\PSoC4/CapSense_INT.c ****         #endif /* (CapSense_ENABLE == CapSense_CSD_NOISE_METRIC_EN) */
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccubcZxx.s 			page 8


 376:Generated_Source\PSoC4/CapSense_INT.c **** 
 377:Generated_Source\PSoC4/CapSense_INT.c ****             CapSense_SsCSDPostScan();
 378:Generated_Source\PSoC4/CapSense_INT.c **** 
 379:Generated_Source\PSoC4/CapSense_INT.c ****             #if (CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN)
 380:Generated_Source\PSoC4/CapSense_INT.c ****                 if (CapSense_FREQ_CHANNEL_2 == CapSense_scanFreqIndex)
 381:Generated_Source\PSoC4/CapSense_INT.c ****                 {
 382:Generated_Source\PSoC4/CapSense_INT.c ****                     CapSense_SsCSDDisconnectSnsExt((uint32)CapSense_widgetIndex, (uint32)CapSense_s
 383:Generated_Source\PSoC4/CapSense_INT.c ****                 }
 384:Generated_Source\PSoC4/CapSense_INT.c ****             #else
 385:Generated_Source\PSoC4/CapSense_INT.c ****                 CapSense_SsCSDDisconnectSnsExt((uint32)CapSense_widgetIndex, (uint32)CapSense_senso
 386:Generated_Source\PSoC4/CapSense_INT.c ****             #endif /* (CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN) */
 387:Generated_Source\PSoC4/CapSense_INT.c **** 
 388:Generated_Source\PSoC4/CapSense_INT.c ****             #if (CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN)
 389:Generated_Source\PSoC4/CapSense_INT.c ****                 if (CapSense_FREQ_CHANNEL_2 > CapSense_scanFreqIndex)
 390:Generated_Source\PSoC4/CapSense_INT.c ****                 {
 391:Generated_Source\PSoC4/CapSense_INT.c ****                      /* Scan the next channel */
 392:Generated_Source\PSoC4/CapSense_INT.c ****                     CapSense_SsNextFrequencyScan();
 393:Generated_Source\PSoC4/CapSense_INT.c ****                 }
 394:Generated_Source\PSoC4/CapSense_INT.c ****                 else
 395:Generated_Source\PSoC4/CapSense_INT.c ****                 {
 396:Generated_Source\PSoC4/CapSense_INT.c ****                     /* All channels are scanned. Set IMO to zero channel */
 397:Generated_Source\PSoC4/CapSense_INT.c ****                     CapSense_scanFreqIndex = CapSense_FREQ_CHANNEL_0;
 398:Generated_Source\PSoC4/CapSense_INT.c ****                     CapSense_SsChangeImoFreq(CapSense_FREQ_CHANNEL_0);
 399:Generated_Source\PSoC4/CapSense_INT.c **** 
 400:Generated_Source\PSoC4/CapSense_INT.c ****                      /* Scan the next sensor */
 401:Generated_Source\PSoC4/CapSense_INT.c ****                     CapSense_SsCSDInitNextScan();
 402:Generated_Source\PSoC4/CapSense_INT.c ****                 }
 403:Generated_Source\PSoC4/CapSense_INT.c ****             #else
 404:Generated_Source\PSoC4/CapSense_INT.c ****                  /* Scan the next sensor */
 405:Generated_Source\PSoC4/CapSense_INT.c ****                 CapSense_SsCSDInitNextScan();
 406:Generated_Source\PSoC4/CapSense_INT.c ****             #endif /* (CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN) */
 407:Generated_Source\PSoC4/CapSense_INT.c ****         #if (CapSense_ENABLE == CapSense_CSD_NOISE_METRIC_EN)
 408:Generated_Source\PSoC4/CapSense_INT.c ****             }
 409:Generated_Source\PSoC4/CapSense_INT.c ****         #endif /* (CapSense_ENABLE == CapSense_CSD_NOISE_METRIC_EN) */
 410:Generated_Source\PSoC4/CapSense_INT.c **** 
 411:Generated_Source\PSoC4/CapSense_INT.c ****         #ifdef CapSense_EXIT_CALLBACK
 412:Generated_Source\PSoC4/CapSense_INT.c ****             CapSense_ExitCallback();
 413:Generated_Source\PSoC4/CapSense_INT.c ****         #endif /* CapSense_EXIT_CALLBACK */
 414:Generated_Source\PSoC4/CapSense_INT.c ****     }
 415:Generated_Source\PSoC4/CapSense_INT.c ****     #endif /* (CapSense_ENABLE == CapSense_CSD_GANGED_SNS_EN) */
 416:Generated_Source\PSoC4/CapSense_INT.c **** 
 417:Generated_Source\PSoC4/CapSense_INT.c **** #else
 418:Generated_Source\PSoC4/CapSense_INT.c ****     /* CSDv1 part */
 419:Generated_Source\PSoC4/CapSense_INT.c **** 
 420:Generated_Source\PSoC4/CapSense_INT.c ****     /*******************************************************************************
 421:Generated_Source\PSoC4/CapSense_INT.c ****     * Function Name: CapSense_CSDPostSingleScan
 422:Generated_Source\PSoC4/CapSense_INT.c ****     ****************************************************************************//**
 423:Generated_Source\PSoC4/CapSense_INT.c ****     *
 424:Generated_Source\PSoC4/CapSense_INT.c ****     * \brief
 425:Generated_Source\PSoC4/CapSense_INT.c ****     *  This is an internal ISR function for single-sensor scanning implementation.
 426:Generated_Source\PSoC4/CapSense_INT.c ****     *
 427:Generated_Source\PSoC4/CapSense_INT.c ****     * \details
 428:Generated_Source\PSoC4/CapSense_INT.c ****     *  This ISR handler is triggered when the user calls the
 429:Generated_Source\PSoC4/CapSense_INT.c ****     *  CapSense_CSDScanExt() function.
 430:Generated_Source\PSoC4/CapSense_INT.c ****     *
 431:Generated_Source\PSoC4/CapSense_INT.c ****     *  The following tasks are performed for CSDv1 HW IP block:
 432:Generated_Source\PSoC4/CapSense_INT.c ****     *    1. Disable the CSD interrupt
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccubcZxx.s 			page 9


 433:Generated_Source\PSoC4/CapSense_INT.c ****     *    2. Read the Counter register and update the data structure with raw data
 434:Generated_Source\PSoC4/CapSense_INT.c ****     *    3. Connect the Vref buffer to the AMUX bus
 435:Generated_Source\PSoC4/CapSense_INT.c ****     *    4. Update the Scan Counter
 436:Generated_Source\PSoC4/CapSense_INT.c ****     *    5. Reset the BUSY flag
 437:Generated_Source\PSoC4/CapSense_INT.c ****     *    6. Enable the CSD interrupt.
 438:Generated_Source\PSoC4/CapSense_INT.c ****     *
 439:Generated_Source\PSoC4/CapSense_INT.c ****     *  The following tasks are performed for CSDv2 HW IP block:
 440:Generated_Source\PSoC4/CapSense_INT.c ****     *    1. Check if the raw data is not noisy
 441:Generated_Source\PSoC4/CapSense_INT.c ****     *    2. Read the Counter register and update the data structure with raw data
 442:Generated_Source\PSoC4/CapSense_INT.c ****     *    3. Configure and start the scan for the next frequency if the
 443:Generated_Source\PSoC4/CapSense_INT.c ****     *      multi-frequency is enabled
 444:Generated_Source\PSoC4/CapSense_INT.c ****     *    4. Update the Scan Counter
 445:Generated_Source\PSoC4/CapSense_INT.c ****     *    5. Reset the BUSY flag
 446:Generated_Source\PSoC4/CapSense_INT.c ****     *    6. Enable the CSD interrupt.
 447:Generated_Source\PSoC4/CapSense_INT.c ****     *
 448:Generated_Source\PSoC4/CapSense_INT.c ****     *  The ISR handler changes IMO and initializes scanning for the next frequency
 449:Generated_Source\PSoC4/CapSense_INT.c ****     *  channels when multi-frequency scanning is enabled.
 450:Generated_Source\PSoC4/CapSense_INT.c ****     *
 451:Generated_Source\PSoC4/CapSense_INT.c **** 	*  This function has two Macro Callbacks that allow calling the user code
 452:Generated_Source\PSoC4/CapSense_INT.c ****     *  from macros specified in a component's generated code. Refer to the 
 453:Generated_Source\PSoC4/CapSense_INT.c ****     *  \ref group_capsense_macrocallbacks section of PSoC Creator User Guide 
 454:Generated_Source\PSoC4/CapSense_INT.c ****     *  for details. 
 455:Generated_Source\PSoC4/CapSense_INT.c ****     *
 456:Generated_Source\PSoC4/CapSense_INT.c ****     *******************************************************************************/
 457:Generated_Source\PSoC4/CapSense_INT.c ****     CY_ISR(CapSense_CSDPostSingleScan)
 458:Generated_Source\PSoC4/CapSense_INT.c ****     {
 459:Generated_Source\PSoC4/CapSense_INT.c ****         #ifdef CapSense_ENTRY_CALLBACK
 460:Generated_Source\PSoC4/CapSense_INT.c ****             CapSense_EntryCallback();
 461:Generated_Source\PSoC4/CapSense_INT.c ****         #endif /* CapSense_ENTRY_CALLBACK */
 462:Generated_Source\PSoC4/CapSense_INT.c **** 
 463:Generated_Source\PSoC4/CapSense_INT.c ****         /* Clear pending interrupt */
 464:Generated_Source\PSoC4/CapSense_INT.c ****         CY_SET_REG32(CapSense_INTR_PTR, CapSense_INTR_SET_MASK);
 465:Generated_Source\PSoC4/CapSense_INT.c **** 
 466:Generated_Source\PSoC4/CapSense_INT.c ****         /* Read Rawdata */
 467:Generated_Source\PSoC4/CapSense_INT.c ****         CapSense_SsCSDPostScan();
 468:Generated_Source\PSoC4/CapSense_INT.c **** 
 469:Generated_Source\PSoC4/CapSense_INT.c ****         #if (CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN)
 470:Generated_Source\PSoC4/CapSense_INT.c ****             if (CapSense_FREQ_CHANNEL_2 > CapSense_scanFreqIndex)
 471:Generated_Source\PSoC4/CapSense_INT.c ****             {
 472:Generated_Source\PSoC4/CapSense_INT.c ****                 /*  Connect Vref Buffer to AMUX bus. CSDv1 block is enabled */
 473:Generated_Source\PSoC4/CapSense_INT.c ****                 CY_SET_REG32(CapSense_CONFIG_PTR, CapSense_configCsd | CapSense_CTANK_PRECHARGE_CON
 474:Generated_Source\PSoC4/CapSense_INT.c **** 
 475:Generated_Source\PSoC4/CapSense_INT.c ****                 CapSense_SsNextFrequencyScan();
 476:Generated_Source\PSoC4/CapSense_INT.c ****             }
 477:Generated_Source\PSoC4/CapSense_INT.c ****             else
 478:Generated_Source\PSoC4/CapSense_INT.c ****             {
 479:Generated_Source\PSoC4/CapSense_INT.c ****                 CapSense_scanFreqIndex = CapSense_FREQ_CHANNEL_0;
 480:Generated_Source\PSoC4/CapSense_INT.c ****                 CapSense_SsChangeImoFreq(CapSense_FREQ_CHANNEL_0);
 481:Generated_Source\PSoC4/CapSense_INT.c **** 
 482:Generated_Source\PSoC4/CapSense_INT.c ****                 #if (CapSense_ENABLE == CapSense_BLOCK_OFF_AFTER_SCAN_EN)
 483:Generated_Source\PSoC4/CapSense_INT.c ****                     /*  Disable CSDv1 block. Connect Vref Buffer to AMUX bus */
 484:Generated_Source\PSoC4/CapSense_INT.c ****                     #if ((CapSense_CSH_PRECHARGE_IO_BUF == CapSense_CSD_CSH_PRECHARGE_SRC) &&\
 485:Generated_Source\PSoC4/CapSense_INT.c ****                          (CapSense_ENABLE == CapSense_CSD_SHIELD_TANK_EN))
 486:Generated_Source\PSoC4/CapSense_INT.c ****                         CY_SET_REG32(CapSense_CONFIG_PTR, CapSense_configCsd | CapSense_CMOD_PRECHA
 487:Generated_Source\PSoC4/CapSense_INT.c ****                     #else
 488:Generated_Source\PSoC4/CapSense_INT.c ****                         CY_SET_REG32(CapSense_CONFIG_PTR, CapSense_configCsd | CapSense_CTANK_PRECH
 489:Generated_Source\PSoC4/CapSense_INT.c ****                     #endif /* ((CapSense_CSH_PRECHARGE_IO_BUF == CapSense_CSD_CSH_PRECHARGE_SRC) &&
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccubcZxx.s 			page 10


 490:Generated_Source\PSoC4/CapSense_INT.c ****                                (CapSense_ENABLE == CapSense_CSD_SHIELD_TANK_EN)) */
 491:Generated_Source\PSoC4/CapSense_INT.c ****                 #else
 492:Generated_Source\PSoC4/CapSense_INT.c ****                     /*  Connect Vref Buffer to AMUX bus. CSDv1 block is enabled */
 493:Generated_Source\PSoC4/CapSense_INT.c ****                     CY_SET_REG32(CapSense_CONFIG_PTR, CapSense_configCsd | CapSense_CTANK_PRECHARGE
 494:Generated_Source\PSoC4/CapSense_INT.c ****                 #endif /* (CapSense_ENABLE == CapSense_BLOCK_OFF_AFTER_SCAN_EN) */
 495:Generated_Source\PSoC4/CapSense_INT.c **** 
 496:Generated_Source\PSoC4/CapSense_INT.c ****                 /* Update Scan Counter */
 497:Generated_Source\PSoC4/CapSense_INT.c ****                 CapSense_dsRam.scanCounter++;
 498:Generated_Source\PSoC4/CapSense_INT.c **** 
 499:Generated_Source\PSoC4/CapSense_INT.c ****                 /* Sensor is totally scanned. Reset BUSY flag */
 500:Generated_Source\PSoC4/CapSense_INT.c ****                 CapSense_dsRam.status &= ~(CapSense_SW_STS_BUSY | CapSense_WDGT_SW_STS_BUSY);
 501:Generated_Source\PSoC4/CapSense_INT.c ****             }
 502:Generated_Source\PSoC4/CapSense_INT.c ****         #else
 503:Generated_Source\PSoC4/CapSense_INT.c ****             {
 504:Generated_Source\PSoC4/CapSense_INT.c ****                 #if (CapSense_ENABLE == CapSense_BLOCK_OFF_AFTER_SCAN_EN)
 505:Generated_Source\PSoC4/CapSense_INT.c ****                     /*  Disable CSDv1 block. Connect Vref Buffer to AMUX bus */
 506:Generated_Source\PSoC4/CapSense_INT.c ****                     #if ((CapSense_CSH_PRECHARGE_IO_BUF == CapSense_CSD_CSH_PRECHARGE_SRC) &&\
 507:Generated_Source\PSoC4/CapSense_INT.c ****                          (CapSense_ENABLE == CapSense_CSD_SHIELD_TANK_EN))
 508:Generated_Source\PSoC4/CapSense_INT.c ****                         CY_SET_REG32(CapSense_CONFIG_PTR, CapSense_configCsd | CapSense_CMOD_PRECHA
 509:Generated_Source\PSoC4/CapSense_INT.c ****                     #else
 510:Generated_Source\PSoC4/CapSense_INT.c ****                         CY_SET_REG32(CapSense_CONFIG_PTR, CapSense_configCsd | CapSense_CTANK_PRECH
 511:Generated_Source\PSoC4/CapSense_INT.c ****                     #endif /* ((CapSense_CSH_PRECHARGE_IO_BUF == CapSense_CSD_CSH_PRECHARGE_SRC) &&
 512:Generated_Source\PSoC4/CapSense_INT.c ****                                (CapSense_ENABLE == CapSense_CSD_SHIELD_TANK_EN)) */
 513:Generated_Source\PSoC4/CapSense_INT.c ****                 #else
 514:Generated_Source\PSoC4/CapSense_INT.c ****                     /*  Connect Vref Buffer to AMUX bus. CSDv1 block is enabled */
 515:Generated_Source\PSoC4/CapSense_INT.c ****                     CY_SET_REG32(CapSense_CONFIG_PTR, CapSense_configCsd | CapSense_CTANK_PRECHARGE
 516:Generated_Source\PSoC4/CapSense_INT.c ****                 #endif /* (CapSense_ENABLE == CapSense_BLOCK_OFF_AFTER_SCAN_EN) */
 517:Generated_Source\PSoC4/CapSense_INT.c **** 
 518:Generated_Source\PSoC4/CapSense_INT.c ****                 /* Update Scan Counter */
 519:Generated_Source\PSoC4/CapSense_INT.c ****                 CapSense_dsRam.scanCounter++;
 520:Generated_Source\PSoC4/CapSense_INT.c **** 
 521:Generated_Source\PSoC4/CapSense_INT.c ****                 /* Sensor is totally scanned. Reset BUSY flag */
 522:Generated_Source\PSoC4/CapSense_INT.c ****                 CapSense_dsRam.status &= ~(CapSense_SW_STS_BUSY | CapSense_WDGT_SW_STS_BUSY);
 523:Generated_Source\PSoC4/CapSense_INT.c ****             }
 524:Generated_Source\PSoC4/CapSense_INT.c ****         #endif /* (CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN) */
 525:Generated_Source\PSoC4/CapSense_INT.c **** 
 526:Generated_Source\PSoC4/CapSense_INT.c ****         #ifdef CapSense_EXIT_CALLBACK
 527:Generated_Source\PSoC4/CapSense_INT.c ****             CapSense_ExitCallback();
 528:Generated_Source\PSoC4/CapSense_INT.c ****         #endif /* CapSense_EXIT_CALLBACK */
 529:Generated_Source\PSoC4/CapSense_INT.c ****     }
 530:Generated_Source\PSoC4/CapSense_INT.c **** 
 531:Generated_Source\PSoC4/CapSense_INT.c **** 
 532:Generated_Source\PSoC4/CapSense_INT.c ****     /*******************************************************************************
 533:Generated_Source\PSoC4/CapSense_INT.c ****     * Function Name: CapSense_CSDPostMultiScan
 534:Generated_Source\PSoC4/CapSense_INT.c ****     ****************************************************************************//**
 535:Generated_Source\PSoC4/CapSense_INT.c ****     *
 536:Generated_Source\PSoC4/CapSense_INT.c ****     * \brief
 537:Generated_Source\PSoC4/CapSense_INT.c ****     *  This is an internal ISR function for multiple-sensor scanning 
 538:Generated_Source\PSoC4/CapSense_INT.c ****     *  implementation.
 539:Generated_Source\PSoC4/CapSense_INT.c ****     *
 540:Generated_Source\PSoC4/CapSense_INT.c ****     * \details
 541:Generated_Source\PSoC4/CapSense_INT.c ****     *  This ISR handler is triggered when the user calls the
 542:Generated_Source\PSoC4/CapSense_INT.c ****     *  CapSense_Scan() or CapSense_ScanAllWidgets() APIs.
 543:Generated_Source\PSoC4/CapSense_INT.c ****     *  
 544:Generated_Source\PSoC4/CapSense_INT.c ****     *  The following tasks are performed:
 545:Generated_Source\PSoC4/CapSense_INT.c ****     *    1. Disable the CSD interrupt
 546:Generated_Source\PSoC4/CapSense_INT.c ****     *    2. Read the Counter register and update the data structure with raw data
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccubcZxx.s 			page 11


 547:Generated_Source\PSoC4/CapSense_INT.c ****     *    3. Connect the Vref buffer to the AMUX bus
 548:Generated_Source\PSoC4/CapSense_INT.c ****     *    4. Disable the CSD block (after the widget has been scanned)
 549:Generated_Source\PSoC4/CapSense_INT.c ****     *    5. Update Scan Counter
 550:Generated_Source\PSoC4/CapSense_INT.c ****     *    6. Reset the BUSY flag
 551:Generated_Source\PSoC4/CapSense_INT.c ****     *    7. Enable the CSD interrupt.
 552:Generated_Source\PSoC4/CapSense_INT.c ****     *
 553:Generated_Source\PSoC4/CapSense_INT.c ****     *  The ISR handler initializes scanning for the previous sensor when the 
 554:Generated_Source\PSoC4/CapSense_INT.c ****     *  widget has more than one sensor.
 555:Generated_Source\PSoC4/CapSense_INT.c ****     *  The ISR handler initializes scanning for the next widget when the
 556:Generated_Source\PSoC4/CapSense_INT.c ****     *  CapSense_ScanAllWidgets() APIs are called and the project has
 557:Generated_Source\PSoC4/CapSense_INT.c ****     *  more than one widget.
 558:Generated_Source\PSoC4/CapSense_INT.c ****     *  The ISR handler changes the IMO and initializes scanning for the next
 559:Generated_Source\PSoC4/CapSense_INT.c ****     *  frequency channels when multi-frequency scanning is enabled.
 560:Generated_Source\PSoC4/CapSense_INT.c ****     *
 561:Generated_Source\PSoC4/CapSense_INT.c ****     *  This function has two Macro Callbacks that allow calling the user 
 562:Generated_Source\PSoC4/CapSense_INT.c ****     *  code from macros specified in a component's generated code. Refer to the 
 563:Generated_Source\PSoC4/CapSense_INT.c ****     *  \ref group_capsense_macrocallbacks section of PSoC Creator User Guide 
 564:Generated_Source\PSoC4/CapSense_INT.c ****     *  for details.
 565:Generated_Source\PSoC4/CapSense_INT.c ****     *
 566:Generated_Source\PSoC4/CapSense_INT.c ****     *******************************************************************************/
 567:Generated_Source\PSoC4/CapSense_INT.c ****     CY_ISR(CapSense_CSDPostMultiScan)
 568:Generated_Source\PSoC4/CapSense_INT.c ****     {
 569:Generated_Source\PSoC4/CapSense_INT.c ****         /*  Declare and initialise ptr to sensor IO structure to appropriate address        */
 570:Generated_Source\PSoC4/CapSense_INT.c ****         CapSense_FLASH_IO_STRUCT const *curSnsIOPtr = (CapSense_FLASH_IO_STRUCT const *)
 571:Generated_Source\PSoC4/CapSense_INT.c ****                                                           CapSense_dsFlash.wdgtArray[CapSense_widge
 572:Generated_Source\PSoC4/CapSense_INT.c ****                                                           + CapSense_sensorIndex;
 573:Generated_Source\PSoC4/CapSense_INT.c **** 
 574:Generated_Source\PSoC4/CapSense_INT.c ****         #ifdef CapSense_ENTRY_CALLBACK
 575:Generated_Source\PSoC4/CapSense_INT.c ****             CapSense_EntryCallback();
 576:Generated_Source\PSoC4/CapSense_INT.c ****         #endif /* CapSense_ENTRY_CALLBACK */
 577:Generated_Source\PSoC4/CapSense_INT.c **** 
 578:Generated_Source\PSoC4/CapSense_INT.c ****         /* Clear pending interrupt */
 579:Generated_Source\PSoC4/CapSense_INT.c ****         CY_SET_REG32(CapSense_INTR_PTR, CapSense_INTR_SET_MASK);
 580:Generated_Source\PSoC4/CapSense_INT.c **** 
 581:Generated_Source\PSoC4/CapSense_INT.c ****          /* Read Rawdata */
 582:Generated_Source\PSoC4/CapSense_INT.c ****         CapSense_SsCSDPostScan();
 583:Generated_Source\PSoC4/CapSense_INT.c **** 
 584:Generated_Source\PSoC4/CapSense_INT.c ****         /*  Connect Vref Buffer to AMUX bus */
 585:Generated_Source\PSoC4/CapSense_INT.c ****         CY_SET_REG32(CapSense_CONFIG_PTR, CapSense_configCsd | CapSense_CTANK_PRECHARGE_CONFIG_CSD_
 586:Generated_Source\PSoC4/CapSense_INT.c **** 
 587:Generated_Source\PSoC4/CapSense_INT.c ****         #if (CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN)
 588:Generated_Source\PSoC4/CapSense_INT.c ****             /* Disable sensor when all frequency channels are scanned */
 589:Generated_Source\PSoC4/CapSense_INT.c ****             if (CapSense_FREQ_CHANNEL_2 == CapSense_scanFreqIndex)
 590:Generated_Source\PSoC4/CapSense_INT.c ****             {
 591:Generated_Source\PSoC4/CapSense_INT.c ****                 /* Disable sensor */
 592:Generated_Source\PSoC4/CapSense_INT.c ****                 CapSense_CSDDisconnectSns(curSnsIOPtr);
 593:Generated_Source\PSoC4/CapSense_INT.c ****             }
 594:Generated_Source\PSoC4/CapSense_INT.c ****         #else
 595:Generated_Source\PSoC4/CapSense_INT.c ****             /* Disable sensor */
 596:Generated_Source\PSoC4/CapSense_INT.c ****             CapSense_CSDDisconnectSns(curSnsIOPtr);
 597:Generated_Source\PSoC4/CapSense_INT.c ****         #endif /* (CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN) */
 598:Generated_Source\PSoC4/CapSense_INT.c **** 
 599:Generated_Source\PSoC4/CapSense_INT.c ****         #if (CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN)
 600:Generated_Source\PSoC4/CapSense_INT.c ****             if (CapSense_FREQ_CHANNEL_2 > CapSense_scanFreqIndex)
 601:Generated_Source\PSoC4/CapSense_INT.c ****             {
 602:Generated_Source\PSoC4/CapSense_INT.c ****                  /* Scan the next channel */
 603:Generated_Source\PSoC4/CapSense_INT.c ****                 CapSense_SsNextFrequencyScan();
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccubcZxx.s 			page 12


 604:Generated_Source\PSoC4/CapSense_INT.c ****             }
 605:Generated_Source\PSoC4/CapSense_INT.c ****             else
 606:Generated_Source\PSoC4/CapSense_INT.c ****             {
 607:Generated_Source\PSoC4/CapSense_INT.c ****                  /* All channels are scanned. Set IMO to zero channel */
 608:Generated_Source\PSoC4/CapSense_INT.c ****                 CapSense_scanFreqIndex = CapSense_FREQ_CHANNEL_0;
 609:Generated_Source\PSoC4/CapSense_INT.c ****                 CapSense_SsChangeImoFreq(CapSense_FREQ_CHANNEL_0);
 610:Generated_Source\PSoC4/CapSense_INT.c **** 
 611:Generated_Source\PSoC4/CapSense_INT.c ****                  /* Scan the next sensor */
 612:Generated_Source\PSoC4/CapSense_INT.c ****                 CapSense_SsCSDInitNextScan();
 613:Generated_Source\PSoC4/CapSense_INT.c ****             }
 614:Generated_Source\PSoC4/CapSense_INT.c ****         #else
 615:Generated_Source\PSoC4/CapSense_INT.c ****             /* Scan the next sensor */
 616:Generated_Source\PSoC4/CapSense_INT.c ****             CapSense_SsCSDInitNextScan();
 617:Generated_Source\PSoC4/CapSense_INT.c ****         #endif /* (CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN) */
 618:Generated_Source\PSoC4/CapSense_INT.c **** 
 619:Generated_Source\PSoC4/CapSense_INT.c ****         #ifdef CapSense_EXIT_CALLBACK
 620:Generated_Source\PSoC4/CapSense_INT.c ****             CapSense_ExitCallback();
 621:Generated_Source\PSoC4/CapSense_INT.c ****         #endif /* CapSense_EXIT_CALLBACK */
 622:Generated_Source\PSoC4/CapSense_INT.c ****     }
 623:Generated_Source\PSoC4/CapSense_INT.c **** 
 624:Generated_Source\PSoC4/CapSense_INT.c **** 
 625:Generated_Source\PSoC4/CapSense_INT.c ****     #if (CapSense_ENABLE == CapSense_CSD_GANGED_SNS_EN)
 626:Generated_Source\PSoC4/CapSense_INT.c ****     /*******************************************************************************
 627:Generated_Source\PSoC4/CapSense_INT.c ****     * Function Name: CapSense_CSDPostMultiScanGanged
 628:Generated_Source\PSoC4/CapSense_INT.c ****     ****************************************************************************//**
 629:Generated_Source\PSoC4/CapSense_INT.c ****     *
 630:Generated_Source\PSoC4/CapSense_INT.c ****     * \brief
 631:Generated_Source\PSoC4/CapSense_INT.c ****     *  This is an internal ISR function for multiple-sensor scanning 
 632:Generated_Source\PSoC4/CapSense_INT.c ****     *  implementation for ganged sensors.
 633:Generated_Source\PSoC4/CapSense_INT.c ****     *
 634:Generated_Source\PSoC4/CapSense_INT.c ****     * \details
 635:Generated_Source\PSoC4/CapSense_INT.c ****     *  This ISR handler is triggered when the user calls the
 636:Generated_Source\PSoC4/CapSense_INT.c ****     *  CapSense_Scan() API for a ganged sensor or the
 637:Generated_Source\PSoC4/CapSense_INT.c ****     *  CapSense_ScanAllWidgets() API in the project with ganged sensors.
 638:Generated_Source\PSoC4/CapSense_INT.c ****     *
 639:Generated_Source\PSoC4/CapSense_INT.c ****     *  The following tasks are performed:
 640:Generated_Source\PSoC4/CapSense_INT.c ****     *    1. Disable the CSD interrupt
 641:Generated_Source\PSoC4/CapSense_INT.c ****     *    2. Read the Counter register and update the data structure with raw data
 642:Generated_Source\PSoC4/CapSense_INT.c ****     *    3. Connect the Vref buffer to the AMUX bus
 643:Generated_Source\PSoC4/CapSense_INT.c ****     *    4. Disable the CSD block (after the widget has been scanned)
 644:Generated_Source\PSoC4/CapSense_INT.c ****     *    5. Update Scan Counter
 645:Generated_Source\PSoC4/CapSense_INT.c ****     *    6. Reset the BUSY flag
 646:Generated_Source\PSoC4/CapSense_INT.c ****     *    7. Enable the CSD interrupt.
 647:Generated_Source\PSoC4/CapSense_INT.c ****     *
 648:Generated_Source\PSoC4/CapSense_INT.c ****     *  The ISR handler initializes scanning for the previous sensor when the
 649:Generated_Source\PSoC4/CapSense_INT.c ****     *  widget has more than one sensor.
 650:Generated_Source\PSoC4/CapSense_INT.c ****     *  The ISR handler initializes scanning for the next widget when the
 651:Generated_Source\PSoC4/CapSense_INT.c ****     *  CapSense_ScanAllWidgets() APIs are called and the project has 
 652:Generated_Source\PSoC4/CapSense_INT.c ****     *  more than one widget.
 653:Generated_Source\PSoC4/CapSense_INT.c ****     *  The ISR handler changes the IMO and initializes scanning for the next 
 654:Generated_Source\PSoC4/CapSense_INT.c ****     *  frequency channels when multi-frequency scanning is enabled.
 655:Generated_Source\PSoC4/CapSense_INT.c ****     *
 656:Generated_Source\PSoC4/CapSense_INT.c ****     *  This function has two Macro Callbacks that allow calling the user 
 657:Generated_Source\PSoC4/CapSense_INT.c ****     *  code from macros specified in a component's generated code. Refer to the 
 658:Generated_Source\PSoC4/CapSense_INT.c ****     *  \ref group_capsense_macrocallbacks section of PSoC Creator User Guide 
 659:Generated_Source\PSoC4/CapSense_INT.c ****     *  for details.
 660:Generated_Source\PSoC4/CapSense_INT.c ****     *
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccubcZxx.s 			page 13


 661:Generated_Source\PSoC4/CapSense_INT.c ****     *******************************************************************************/
 662:Generated_Source\PSoC4/CapSense_INT.c ****     CY_ISR(CapSense_CSDPostMultiScanGanged)
 663:Generated_Source\PSoC4/CapSense_INT.c ****     {
 664:Generated_Source\PSoC4/CapSense_INT.c ****         #ifdef CapSense_ENTRY_CALLBACK
 665:Generated_Source\PSoC4/CapSense_INT.c ****             CapSense_EntryCallback();
 666:Generated_Source\PSoC4/CapSense_INT.c ****         #endif /* CapSense_ENTRY_CALLBACK */
 667:Generated_Source\PSoC4/CapSense_INT.c **** 
 668:Generated_Source\PSoC4/CapSense_INT.c ****         /* Clear pending interrupt */
 669:Generated_Source\PSoC4/CapSense_INT.c ****         CY_SET_REG32(CapSense_INTR_PTR, CapSense_INTR_SET_MASK);
 670:Generated_Source\PSoC4/CapSense_INT.c **** 
 671:Generated_Source\PSoC4/CapSense_INT.c ****          /* Read Rawdata */
 672:Generated_Source\PSoC4/CapSense_INT.c ****         CapSense_SsCSDPostScan();
 673:Generated_Source\PSoC4/CapSense_INT.c **** 
 674:Generated_Source\PSoC4/CapSense_INT.c ****         /*  Connect Vref Buffer to AMUX bus */
 675:Generated_Source\PSoC4/CapSense_INT.c ****         CY_SET_REG32(CapSense_CONFIG_PTR, CapSense_configCsd | CapSense_CTANK_PRECHARGE_CONFIG_CSD_
 676:Generated_Source\PSoC4/CapSense_INT.c **** 
 677:Generated_Source\PSoC4/CapSense_INT.c ****         #if (CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN)
 678:Generated_Source\PSoC4/CapSense_INT.c ****             if (CapSense_FREQ_CHANNEL_2 == CapSense_scanFreqIndex)
 679:Generated_Source\PSoC4/CapSense_INT.c ****             {
 680:Generated_Source\PSoC4/CapSense_INT.c ****                 CapSense_SsCSDDisconnectSnsExt((uint32)CapSense_widgetIndex, (uint32)CapSense_senso
 681:Generated_Source\PSoC4/CapSense_INT.c ****             }
 682:Generated_Source\PSoC4/CapSense_INT.c ****         #else
 683:Generated_Source\PSoC4/CapSense_INT.c ****             CapSense_SsCSDDisconnectSnsExt((uint32)CapSense_widgetIndex, (uint32)CapSense_sensorInd
 684:Generated_Source\PSoC4/CapSense_INT.c ****         #endif /* (CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN) */
 685:Generated_Source\PSoC4/CapSense_INT.c **** 
 686:Generated_Source\PSoC4/CapSense_INT.c ****         #if (CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN)
 687:Generated_Source\PSoC4/CapSense_INT.c ****             if (CapSense_FREQ_CHANNEL_2 > CapSense_scanFreqIndex)
 688:Generated_Source\PSoC4/CapSense_INT.c ****             {
 689:Generated_Source\PSoC4/CapSense_INT.c ****                  /* Scan the next channel */
 690:Generated_Source\PSoC4/CapSense_INT.c ****                 CapSense_SsNextFrequencyScan();
 691:Generated_Source\PSoC4/CapSense_INT.c ****             }
 692:Generated_Source\PSoC4/CapSense_INT.c ****             else
 693:Generated_Source\PSoC4/CapSense_INT.c ****             {
 694:Generated_Source\PSoC4/CapSense_INT.c ****                 /* All channels are scanned. Set IMO to zero channel */
 695:Generated_Source\PSoC4/CapSense_INT.c ****                 CapSense_scanFreqIndex = CapSense_FREQ_CHANNEL_0;
 696:Generated_Source\PSoC4/CapSense_INT.c ****                 CapSense_SsChangeImoFreq(CapSense_FREQ_CHANNEL_0);
 697:Generated_Source\PSoC4/CapSense_INT.c **** 
 698:Generated_Source\PSoC4/CapSense_INT.c ****                  /* Scan the next sensor */
 699:Generated_Source\PSoC4/CapSense_INT.c ****                 CapSense_SsCSDInitNextScan();
 700:Generated_Source\PSoC4/CapSense_INT.c ****             }
 701:Generated_Source\PSoC4/CapSense_INT.c ****         #else
 702:Generated_Source\PSoC4/CapSense_INT.c ****              /* Scan the next sensor */
 703:Generated_Source\PSoC4/CapSense_INT.c ****             CapSense_SsCSDInitNextScan();
 704:Generated_Source\PSoC4/CapSense_INT.c ****         #endif /* (CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN) */
 705:Generated_Source\PSoC4/CapSense_INT.c **** 
 706:Generated_Source\PSoC4/CapSense_INT.c ****         #ifdef CapSense_EXIT_CALLBACK
 707:Generated_Source\PSoC4/CapSense_INT.c ****             CapSense_ExitCallback();
 708:Generated_Source\PSoC4/CapSense_INT.c ****         #endif /* CapSense_EXIT_CALLBACK */
 709:Generated_Source\PSoC4/CapSense_INT.c ****     }
 710:Generated_Source\PSoC4/CapSense_INT.c ****     #endif /* (CapSense_ENABLE == CapSense_CSD_GANGED_SNS_EN) */
 711:Generated_Source\PSoC4/CapSense_INT.c **** 
 712:Generated_Source\PSoC4/CapSense_INT.c **** #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
 713:Generated_Source\PSoC4/CapSense_INT.c **** 
 714:Generated_Source\PSoC4/CapSense_INT.c **** #endif /* ((CapSense_ENABLE == CapSense_CSD_EN) || (CapSense_ENABLE == CapSense_CSD_CSX_EN)) */
 715:Generated_Source\PSoC4/CapSense_INT.c **** 
 716:Generated_Source\PSoC4/CapSense_INT.c **** /** \}
 717:Generated_Source\PSoC4/CapSense_INT.c ****  * \endif */
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccubcZxx.s 			page 14


 718:Generated_Source\PSoC4/CapSense_INT.c **** 
 719:Generated_Source\PSoC4/CapSense_INT.c **** 
 720:Generated_Source\PSoC4/CapSense_INT.c **** #if ((CapSense_ENABLE == CapSense_CSD_EN) || (CapSense_ENABLE == CapSense_CSD_CSX_EN))
 721:Generated_Source\PSoC4/CapSense_INT.c **** 
 722:Generated_Source\PSoC4/CapSense_INT.c **** /*******************************************************************************
 723:Generated_Source\PSoC4/CapSense_INT.c **** * Function Name: CapSense_SsCSDPostScan
 724:Generated_Source\PSoC4/CapSense_INT.c **** ****************************************************************************//**
 725:Generated_Source\PSoC4/CapSense_INT.c **** *
 726:Generated_Source\PSoC4/CapSense_INT.c **** * \brief
 727:Generated_Source\PSoC4/CapSense_INT.c **** *   This function reads rawdata and releases required HW resources after scan.
 728:Generated_Source\PSoC4/CapSense_INT.c **** *
 729:Generated_Source\PSoC4/CapSense_INT.c **** * \details
 730:Generated_Source\PSoC4/CapSense_INT.c **** *   This function performs following tasks after scan:
 731:Generated_Source\PSoC4/CapSense_INT.c **** *   - Reads SlotResult from Raw Counter;
 732:Generated_Source\PSoC4/CapSense_INT.c **** *   - Inits bad Conversions number;
 733:Generated_Source\PSoC4/CapSense_INT.c **** *   - Disconnects Vrefhi from AMUBUF positive input;
 734:Generated_Source\PSoC4/CapSense_INT.c **** *   - Disconnects AMUBUF output from CSDBUSB with sych PHI2+HSCMP;
 735:Generated_Source\PSoC4/CapSense_INT.c **** *   - Opens HCBV and HCBG switches.
 736:Generated_Source\PSoC4/CapSense_INT.c **** *
 737:Generated_Source\PSoC4/CapSense_INT.c **** *******************************************************************************/
 738:Generated_Source\PSoC4/CapSense_INT.c **** CY_INLINE static void CapSense_SsCSDPostScan(void)
 739:Generated_Source\PSoC4/CapSense_INT.c **** {
  25              		.loc 1 739 0
  26              		.cfi_startproc
 740:Generated_Source\PSoC4/CapSense_INT.c ****     #if (CapSense_ENABLE == CapSense_CSDV2)
 741:Generated_Source\PSoC4/CapSense_INT.c **** 
 742:Generated_Source\PSoC4/CapSense_INT.c ****         uint32 tmpRawData;
 743:Generated_Source\PSoC4/CapSense_INT.c ****         uint32 tmpMaxCount;
 744:Generated_Source\PSoC4/CapSense_INT.c ****         CapSense_RAM_WD_BASE_STRUCT const *ptrWdgt = (CapSense_RAM_WD_BASE_STRUCT *)
 745:Generated_Source\PSoC4/CapSense_INT.c ****                                             CapSense_dsFlash.wdgtArray[CapSense_widgetIndex].ptr2Wd
  27              		.loc 1 745 0
  28 0000 0C4B     		ldr	r3, .L5
 746:Generated_Source\PSoC4/CapSense_INT.c **** 
 747:Generated_Source\PSoC4/CapSense_INT.c ****         /* Read SlotResult from Raw Counter */
 748:Generated_Source\PSoC4/CapSense_INT.c ****         tmpRawData = CapSense_RESULT_VAL1_VALUE_MASK & CY_GET_REG32(CapSense_COUNTER_PTR);
 749:Generated_Source\PSoC4/CapSense_INT.c **** 
 750:Generated_Source\PSoC4/CapSense_INT.c ****         tmpMaxCount = ((1uL << ptrWdgt->resolution) - 1uL);
  29              		.loc 1 750 0
  30 0002 0D49     		ldr	r1, .L5+4
 745:Generated_Source\PSoC4/CapSense_INT.c **** 
  31              		.loc 1 745 0
  32 0004 1B78     		ldrb	r3, [r3]
  33              	.LVL0:
 748:Generated_Source\PSoC4/CapSense_INT.c **** 
  34              		.loc 1 748 0
  35 0006 0D4A     		ldr	r2, .L5+8
 744:Generated_Source\PSoC4/CapSense_INT.c ****                                             CapSense_dsFlash.wdgtArray[CapSense_widgetIndex].ptr2Wd
  36              		.loc 1 744 0
  37 0008 5B01     		lsl	r3, r3, #5
  38              	.LVL1:
  39              		.loc 1 750 0
  40 000a CB18     		add	r3, r1, r3
  41 000c 5B68     		ldr	r3, [r3, #4]
 748:Generated_Source\PSoC4/CapSense_INT.c **** 
  42              		.loc 1 748 0
  43 000e 1268     		ldr	r2, [r2]
  44              		.loc 1 750 0
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccubcZxx.s 			page 15


  45 0010 1988     		ldrh	r1, [r3]
  46 0012 0123     		mov	r3, #1
  47 0014 8B40     		lsl	r3, r3, r1
  48 0016 0A48     		ldr	r0, .L5+12
 748:Generated_Source\PSoC4/CapSense_INT.c **** 
  49              		.loc 1 748 0
  50 0018 92B2     		uxth	r2, r2
  51              	.LVL2:
  52              		.loc 1 750 0
  53 001a 013B     		sub	r3, r3, #1
  54              	.LVL3:
  55 001c 0949     		ldr	r1, .L5+16
 751:Generated_Source\PSoC4/CapSense_INT.c ****         if(tmpRawData < tmpMaxCount)
 752:Generated_Source\PSoC4/CapSense_INT.c ****         {
 753:Generated_Source\PSoC4/CapSense_INT.c ****             CapSense_curRamSnsPtr->raw[CapSense_scanFreqIndex] = LO16(tmpRawData);
  56              		.loc 1 753 0
  57 001e 0068     		ldr	r0, [r0]
 751:Generated_Source\PSoC4/CapSense_INT.c ****         if(tmpRawData < tmpMaxCount)
  58              		.loc 1 751 0
  59 0020 9A42     		cmp	r2, r3
  60 0022 03D2     		bcs	.L2
  61              		.loc 1 753 0
  62 0024 0B78     		ldrb	r3, [r1]
  63              	.LVL4:
  64 0026 5B00     		lsl	r3, r3, #1
  65 0028 1A52     		strh	r2, [r3, r0]
  66 002a 02E0     		b	.L1
  67              	.LVL5:
  68              	.L2:
 754:Generated_Source\PSoC4/CapSense_INT.c ****         }
 755:Generated_Source\PSoC4/CapSense_INT.c ****         else
 756:Generated_Source\PSoC4/CapSense_INT.c ****         {
 757:Generated_Source\PSoC4/CapSense_INT.c ****             CapSense_curRamSnsPtr->raw[CapSense_scanFreqIndex] = LO16(tmpMaxCount);
  69              		.loc 1 757 0
  70 002c 0A78     		ldrb	r2, [r1]
  71              	.LVL6:
  72 002e 5200     		lsl	r2, r2, #1
  73 0030 1352     		strh	r3, [r2, r0]
  74              	.LVL7:
  75              	.L1:
 758:Generated_Source\PSoC4/CapSense_INT.c ****         }
 759:Generated_Source\PSoC4/CapSense_INT.c **** 
 760:Generated_Source\PSoC4/CapSense_INT.c ****         #if (CapSense_ENABLE == CapSense_CSD_NOISE_METRIC_EN)
 761:Generated_Source\PSoC4/CapSense_INT.c ****             /*  Init bad Conversions number */
 762:Generated_Source\PSoC4/CapSense_INT.c ****             CapSense_badConversionsNum = CapSense_BAD_CONVERSIONS_NUM;
 763:Generated_Source\PSoC4/CapSense_INT.c ****         #endif /* (CapSense_ENABLE == CapSense_CSD_NOISE_METRIC_EN) */
 764:Generated_Source\PSoC4/CapSense_INT.c **** 
 765:Generated_Source\PSoC4/CapSense_INT.c ****         #if ((CapSense_ENABLE == CapSense_CSD_SHIELD_EN) && \
 766:Generated_Source\PSoC4/CapSense_INT.c ****              (CapSense_2000_MV <= CapSense_CYDEV_VDDA_MV))
 767:Generated_Source\PSoC4/CapSense_INT.c ****             /*  Disconnect Vrefhi from AMUBUF positive input. Disconnect AMUBUF output from CSDBUSB
 768:Generated_Source\PSoC4/CapSense_INT.c ****             CY_SET_REG32(CapSense_SW_AMUXBUF_SEL_PTR, CapSense_SW_AMUXBUF_SEL_SW_DEFAULT);
 769:Generated_Source\PSoC4/CapSense_INT.c ****         #endif /* ((CapSense_ENABLE == CapSense_CSD_SHIELD_EN) && \
 770:Generated_Source\PSoC4/CapSense_INT.c ****                    (CapSense_2000_MV <= CapSense_CYDEV_VDDA_MV)) */
 771:Generated_Source\PSoC4/CapSense_INT.c **** 
 772:Generated_Source\PSoC4/CapSense_INT.c ****         #if (CapSense_ENABLE == CapSense_CSD_SHIELD_EN)
 773:Generated_Source\PSoC4/CapSense_INT.c ****             /* Open HCBV and HCBG switches */
 774:Generated_Source\PSoC4/CapSense_INT.c ****             CY_SET_REG32(CapSense_SW_SHIELD_SEL_PTR, CapSense_SW_SHIELD_SEL_SW_HCBV_STATIC_OPEN |
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccubcZxx.s 			page 16


 775:Generated_Source\PSoC4/CapSense_INT.c ****                                                              CapSense_SW_SHIELD_SEL_SW_HCBG_STATIC_
 776:Generated_Source\PSoC4/CapSense_INT.c ****         #endif /* (CapSense_ENABLE == CapSense_CSD_SHIELD_EN) */
 777:Generated_Source\PSoC4/CapSense_INT.c **** 
 778:Generated_Source\PSoC4/CapSense_INT.c ****     #else
 779:Generated_Source\PSoC4/CapSense_INT.c **** 
 780:Generated_Source\PSoC4/CapSense_INT.c ****         /* Read SlotResult from Raw Counter */
 781:Generated_Source\PSoC4/CapSense_INT.c ****        CapSense_curRamSnsPtr->raw[CapSense_scanFreqIndex] = (uint16)CY_GET_REG32(CapSense_COUNTER_P
 782:Generated_Source\PSoC4/CapSense_INT.c **** 
 783:Generated_Source\PSoC4/CapSense_INT.c ****     #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
 784:Generated_Source\PSoC4/CapSense_INT.c **** }
  76              		.loc 1 784 0
  77              		@ sp needed
  78 0032 7047     		bx	lr
  79              	.L6:
  80              		.align	2
  81              	.L5:
  82 0034 00000000 		.word	CapSense_widgetIndex
  83 0038 00000000 		.word	CapSense_dsFlash
  84 003c D0000C40 		.word	1074528464
  85 0040 00000000 		.word	CapSense_curRamSnsPtr
  86 0044 00000000 		.word	CapSense_scanFreqIndex
  87              		.cfi_endproc
  88              	.LFE3:
  89              		.size	CapSense_SsCSDPostScan, .-CapSense_SsCSDPostScan
  90              		.section	.text.CapSense_CSDPostSingleScan,"ax",%progbits
  91              		.align	1
  92              		.global	CapSense_CSDPostSingleScan
  93              		.code	16
  94              		.thumb_func
  95              		.type	CapSense_CSDPostSingleScan, %function
  96              	CapSense_CSDPostSingleScan:
  97              	.LFB1:
 128:Generated_Source\PSoC4/CapSense_INT.c ****         #ifdef CapSense_ENTRY_CALLBACK
  98              		.loc 1 128 0
  99              		.cfi_startproc
 134:Generated_Source\PSoC4/CapSense_INT.c **** 
 100              		.loc 1 134 0
 101 0000 8322     		mov	r2, #131
 128:Generated_Source\PSoC4/CapSense_INT.c ****         #ifdef CapSense_ENTRY_CALLBACK
 102              		.loc 1 128 0
 103 0002 08B5     		push	{r3, lr}
 104              		.cfi_def_cfa_offset 8
 105              		.cfi_offset 3, -8
 106              		.cfi_offset 14, -4
 134:Generated_Source\PSoC4/CapSense_INT.c **** 
 107              		.loc 1 134 0
 108 0004 064B     		ldr	r3, .L8
 109 0006 5200     		lsl	r2, r2, #1
 110 0008 1A60     		str	r2, [r3]
 154:Generated_Source\PSoC4/CapSense_INT.c **** 
 111              		.loc 1 154 0
 112 000a FFF7FEFF 		bl	CapSense_SsCSDPostScan
 113              	.LVL8:
 187:Generated_Source\PSoC4/CapSense_INT.c **** 
 114              		.loc 1 187 0
 115 000e 054B     		ldr	r3, .L8+4
 200:Generated_Source\PSoC4/CapSense_INT.c **** 
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccubcZxx.s 			page 17


 116              		.loc 1 200 0
 117              		@ sp needed
 187:Generated_Source\PSoC4/CapSense_INT.c **** 
 118              		.loc 1 187 0
 119 0010 DA88     		ldrh	r2, [r3, #6]
 190:Generated_Source\PSoC4/CapSense_INT.c ****                 }
 120              		.loc 1 190 0
 121 0012 9968     		ldr	r1, [r3, #8]
 187:Generated_Source\PSoC4/CapSense_INT.c **** 
 122              		.loc 1 187 0
 123 0014 0132     		add	r2, r2, #1
 124 0016 DA80     		strh	r2, [r3, #6]
 190:Generated_Source\PSoC4/CapSense_INT.c ****                 }
 125              		.loc 1 190 0
 126 0018 034A     		ldr	r2, .L8+8
 127 001a 0A40     		and	r2, r1
 128 001c 9A60     		str	r2, [r3, #8]
 200:Generated_Source\PSoC4/CapSense_INT.c **** 
 129              		.loc 1 200 0
 130 001e 08BD     		pop	{r3, pc}
 131              	.L9:
 132              		.align	2
 133              	.L8:
 134 0020 F0000C40 		.word	1074528496
 135 0024 00000000 		.word	CapSense_dsRam
 136 0028 7FFFFEFF 		.word	-65665
 137              		.cfi_endproc
 138              	.LFE1:
 139              		.size	CapSense_CSDPostSingleScan, .-CapSense_CSDPostSingleScan
 140              		.section	.text.CapSense_CSDPostMultiScan,"ax",%progbits
 141              		.align	1
 142              		.global	CapSense_CSDPostMultiScan
 143              		.code	16
 144              		.thumb_func
 145              		.type	CapSense_CSDPostMultiScan, %function
 146              	CapSense_CSDPostMultiScan:
 147              	.LFB2:
 239:Generated_Source\PSoC4/CapSense_INT.c ****         /*  Declare and initialise ptr to sensor IO structure to appropriate address        */
 148              		.loc 1 239 0
 149              		.cfi_startproc
 150 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 151              		.cfi_def_cfa_offset 24
 152              		.cfi_offset 3, -24
 153              		.cfi_offset 4, -20
 154              		.cfi_offset 5, -16
 155              		.cfi_offset 6, -12
 156              		.cfi_offset 7, -8
 157              		.cfi_offset 14, -4
 243:Generated_Source\PSoC4/CapSense_INT.c **** 
 158              		.loc 1 243 0
 159 0002 1C23     		mov	r3, #28
 241:Generated_Source\PSoC4/CapSense_INT.c ****                                                           CapSense_dsFlash.wdgtArray[CapSense_widge
 160              		.loc 1 241 0
 161 0004 254D     		ldr	r5, .L14
 243:Generated_Source\PSoC4/CapSense_INT.c **** 
 162              		.loc 1 243 0
 163 0006 264C     		ldr	r4, .L14+4
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccubcZxx.s 			page 18


 241:Generated_Source\PSoC4/CapSense_INT.c ****                                                           CapSense_dsFlash.wdgtArray[CapSense_widge
 164              		.loc 1 241 0
 165 0008 2A78     		ldrb	r2, [r5]
 242:Generated_Source\PSoC4/CapSense_INT.c ****                                                           + CapSense_sensorIndex;
 166              		.loc 1 242 0
 167 000a 264E     		ldr	r6, .L14+8
 243:Generated_Source\PSoC4/CapSense_INT.c **** 
 168              		.loc 1 243 0
 169 000c 2778     		ldrb	r7, [r4]
 242:Generated_Source\PSoC4/CapSense_INT.c ****                                                           + CapSense_sensorIndex;
 170              		.loc 1 242 0
 171 000e 5201     		lsl	r2, r2, #5
 243:Generated_Source\PSoC4/CapSense_INT.c **** 
 172              		.loc 1 243 0
 173 0010 5F43     		mul	r7, r3
 241:Generated_Source\PSoC4/CapSense_INT.c ****                                                           CapSense_dsFlash.wdgtArray[CapSense_widge
 174              		.loc 1 241 0
 175 0012 9359     		ldr	r3, [r2, r6]
 250:Generated_Source\PSoC4/CapSense_INT.c **** 
 176              		.loc 1 250 0
 177 0014 8322     		mov	r2, #131
 241:Generated_Source\PSoC4/CapSense_INT.c ****                                                           CapSense_dsFlash.wdgtArray[CapSense_widge
 178              		.loc 1 241 0
 179 0016 DF19     		add	r7, r3, r7
 180              	.LVL9:
 250:Generated_Source\PSoC4/CapSense_INT.c **** 
 181              		.loc 1 250 0
 182 0018 234B     		ldr	r3, .L14+12
 183 001a 5200     		lsl	r2, r2, #1
 184 001c 1A60     		str	r2, [r3]
 270:Generated_Source\PSoC4/CapSense_INT.c **** 
 185              		.loc 1 270 0
 186 001e FFF7FEFF 		bl	CapSense_SsCSDPostScan
 187              	.LVL10:
 281:Generated_Source\PSoC4/CapSense_INT.c ****             #endif /* (CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN) */
 188              		.loc 1 281 0
 189 0022 381C     		mov	r0, r7
 190 0024 FFF7FEFF 		bl	CapSense_CSDDisconnectSns
 191              	.LVL11:
 192              	.LBB4:
 193              	.LBB5:
 785:Generated_Source\PSoC4/CapSense_INT.c **** 
 786:Generated_Source\PSoC4/CapSense_INT.c **** 
 787:Generated_Source\PSoC4/CapSense_INT.c **** /*******************************************************************************
 788:Generated_Source\PSoC4/CapSense_INT.c **** * Function Name: CapSense_SsCSDInitNextScan
 789:Generated_Source\PSoC4/CapSense_INT.c **** ****************************************************************************//**
 790:Generated_Source\PSoC4/CapSense_INT.c **** *
 791:Generated_Source\PSoC4/CapSense_INT.c **** * \brief
 792:Generated_Source\PSoC4/CapSense_INT.c **** *   This function initializes the next sensor scan.
 793:Generated_Source\PSoC4/CapSense_INT.c **** *
 794:Generated_Source\PSoC4/CapSense_INT.c **** * \details
 795:Generated_Source\PSoC4/CapSense_INT.c **** *   The function decrements the sensor index, updates sense clock for matrix
 796:Generated_Source\PSoC4/CapSense_INT.c **** *   or touchpad widgets only, sets up Compensation IDAC, enables the sensor and
 797:Generated_Source\PSoC4/CapSense_INT.c **** *   scans it. When all sensors are scanned it continues to set up the next widget
 798:Generated_Source\PSoC4/CapSense_INT.c **** *   until all widgets are scanned. The CSD block is disabled when all widgets are
 799:Generated_Source\PSoC4/CapSense_INT.c **** *   scanned.
 800:Generated_Source\PSoC4/CapSense_INT.c **** *
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccubcZxx.s 			page 19


 801:Generated_Source\PSoC4/CapSense_INT.c **** *******************************************************************************/
 802:Generated_Source\PSoC4/CapSense_INT.c **** CY_INLINE static void CapSense_SsCSDInitNextScan(void)
 803:Generated_Source\PSoC4/CapSense_INT.c **** {
 804:Generated_Source\PSoC4/CapSense_INT.c ****     /*  Declare and initialise ptr to widget and sensor structures to appropriate address */
 805:Generated_Source\PSoC4/CapSense_INT.c ****     #if (((CapSense_ENABLE == CapSense_CSD_IDAC_COMP_EN) || \
 806:Generated_Source\PSoC4/CapSense_INT.c ****              (CapSense_ENABLE == (CapSense_CSD_MATRIX_WIDGET_EN | CapSense_CSD_TOUCHPAD_WIDGET_EN))
 807:Generated_Source\PSoC4/CapSense_INT.c ****          (((CapSense_DISABLE == CapSense_CSD_COMMON_SNS_CLK_EN) && \
 808:Generated_Source\PSoC4/CapSense_INT.c ****            (CapSense_ENABLE == CapSense_CSDV2) && \
 809:Generated_Source\PSoC4/CapSense_INT.c ****           (CapSense_ENABLE == (CapSense_CSD_MATRIX_WIDGET_EN | CapSense_CSD_TOUCHPAD_WIDGET_EN)))))
 810:Generated_Source\PSoC4/CapSense_INT.c ****         CapSense_RAM_WD_BASE_STRUCT *ptrWdgt = (CapSense_RAM_WD_BASE_STRUCT *)
 811:Generated_Source\PSoC4/CapSense_INT.c ****                                                         CapSense_dsFlash.wdgtArray[CapSense_widgetI
 194              		.loc 1 811 0
 195 0028 2B78     		ldrb	r3, [r5]
 810:Generated_Source\PSoC4/CapSense_INT.c ****                                                         CapSense_dsFlash.wdgtArray[CapSense_widgetI
 196              		.loc 1 810 0
 197 002a 5B01     		lsl	r3, r3, #5
 198 002c F318     		add	r3, r6, r3
 199 002e 5868     		ldr	r0, [r3, #4]
 200              	.LVL12:
 812:Generated_Source\PSoC4/CapSense_INT.c ****     #endif /* ((((CapSense_ENABLE == CapSense_CSD_IDAC_COMP_EN) && \
 813:Generated_Source\PSoC4/CapSense_INT.c ****                (CapSense_ENABLE == (CapSense_CSD_MATRIX_WIDGET_EN | CapSense_CSD_TOUCHPAD_WIDGET_EN
 814:Generated_Source\PSoC4/CapSense_INT.c ****                (((CapSense_DISABLE == CapSense_CSD_COMMON_SNS_CLK_EN) && \
 815:Generated_Source\PSoC4/CapSense_INT.c ****                (CapSense_ENABLE == (CapSense_CSD_MATRIX_WIDGET_EN | CapSense_CSD_TOUCHPAD_WIDGET_EN
 816:Generated_Source\PSoC4/CapSense_INT.c ****                (CapSense_CLK_SOURCE_DIRECT == CapSense_CSD_SNS_CLK_SOURCE))) */
 817:Generated_Source\PSoC4/CapSense_INT.c **** 
 818:Generated_Source\PSoC4/CapSense_INT.c ****     /* Check if all sensors are scanned in widget */
 819:Generated_Source\PSoC4/CapSense_INT.c ****     if (((uint8)CapSense_dsFlash.wdgtArray[(CapSense_widgetIndex)].totalNumSns - 1u) > CapSense_sen
 201              		.loc 1 819 0
 202 0030 2B78     		ldrb	r3, [r5]
 203 0032 2278     		ldrb	r2, [r4]
 204 0034 5B01     		lsl	r3, r3, #5
 205 0036 F318     		add	r3, r6, r3
 206 0038 9B7D     		ldrb	r3, [r3, #22]
 207 003a 013B     		sub	r3, r3, #1
 208 003c 9342     		cmp	r3, r2
 209 003e 18D9     		bls	.L11
 820:Generated_Source\PSoC4/CapSense_INT.c ****     {
 821:Generated_Source\PSoC4/CapSense_INT.c ****         /*  Decrement snsIndex to configure next sensor in widget */
 822:Generated_Source\PSoC4/CapSense_INT.c ****         CapSense_sensorIndex++;
 210              		.loc 1 822 0
 211 0040 2378     		ldrb	r3, [r4]
 212 0042 0133     		add	r3, r3, #1
 213 0044 DBB2     		uxtb	r3, r3
 214 0046 2370     		strb	r3, [r4]
 823:Generated_Source\PSoC4/CapSense_INT.c **** 
 824:Generated_Source\PSoC4/CapSense_INT.c ****         /*  Update global pointer to CapSense_RAM_SNS_STRUCT to current sensor  */
 825:Generated_Source\PSoC4/CapSense_INT.c ****         CapSense_curRamSnsPtr = (CapSense_RAM_SNS_STRUCT *)
 826:Generated_Source\PSoC4/CapSense_INT.c ****                                                   CapSense_dsFlash.wdgtArray[CapSense_widgetIndex].
 827:Generated_Source\PSoC4/CapSense_INT.c ****                                                   + CapSense_sensorIndex;
 215              		.loc 1 827 0
 216 0048 0A23     		mov	r3, #10
 826:Generated_Source\PSoC4/CapSense_INT.c ****                                                   + CapSense_sensorIndex;
 217              		.loc 1 826 0
 218 004a 2A78     		ldrb	r2, [r5]
 219              		.loc 1 827 0
 220 004c 2178     		ldrb	r1, [r4]
 826:Generated_Source\PSoC4/CapSense_INT.c ****                                                   + CapSense_sensorIndex;
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccubcZxx.s 			page 20


 221              		.loc 1 826 0
 222 004e 5201     		lsl	r2, r2, #5
 223              		.loc 1 827 0
 224 0050 4B43     		mul	r3, r1
 826:Generated_Source\PSoC4/CapSense_INT.c ****                                                   + CapSense_sensorIndex;
 225              		.loc 1 826 0
 226 0052 B218     		add	r2, r6, r2
 227              		.loc 1 827 0
 228 0054 9268     		ldr	r2, [r2, #8]
 229 0056 D318     		add	r3, r2, r3
 825:Generated_Source\PSoC4/CapSense_INT.c ****                                                   CapSense_dsFlash.wdgtArray[CapSense_widgetIndex].
 230              		.loc 1 825 0
 231 0058 144A     		ldr	r2, .L14+16
 232 005a 1360     		str	r3, [r2]
 828:Generated_Source\PSoC4/CapSense_INT.c **** 
 829:Generated_Source\PSoC4/CapSense_INT.c ****         /* Configure clock divider to row or column */
 830:Generated_Source\PSoC4/CapSense_INT.c ****         #if ((CapSense_DISABLE == CapSense_CSD_COMMON_SNS_CLK_EN) && \
 831:Generated_Source\PSoC4/CapSense_INT.c ****              (CapSense_ENABLE == (CapSense_CSD_MATRIX_WIDGET_EN | CapSense_CSD_TOUCHPAD_WIDGET_EN))
 832:Generated_Source\PSoC4/CapSense_INT.c ****             if ((CapSense_WD_TOUCHPAD_E == (CapSense_WD_TYPE_ENUM)CapSense_dsFlash.wdgtArray[(CapSe
 833:Generated_Source\PSoC4/CapSense_INT.c ****                 (CapSense_WD_MATRIX_BUTTON_E == (CapSense_WD_TYPE_ENUM)CapSense_dsFlash.wdgtArray[(
 834:Generated_Source\PSoC4/CapSense_INT.c ****             {
 835:Generated_Source\PSoC4/CapSense_INT.c ****                 CapSense_SsCSDConfigClock();
 836:Generated_Source\PSoC4/CapSense_INT.c **** 
 837:Generated_Source\PSoC4/CapSense_INT.c ****                 #if (CapSense_ENABLE == CapSense_CSDV2)
 838:Generated_Source\PSoC4/CapSense_INT.c ****                      /* Set up scanning resolution */
 839:Generated_Source\PSoC4/CapSense_INT.c ****                     CapSense_SsCSDCalculateScanDuration(ptrWdgt);
 840:Generated_Source\PSoC4/CapSense_INT.c ****                 #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
 841:Generated_Source\PSoC4/CapSense_INT.c ****             }
 842:Generated_Source\PSoC4/CapSense_INT.c ****         #endif /* ((CapSense_DISABLE == CapSense_CSD_COMMON_SNS_CLK_EN) && \
 843:Generated_Source\PSoC4/CapSense_INT.c ****                    (CapSense_ENABLE == (CapSense_CSD_MATRIX_WIDGET_EN | CapSense_CSD_TOUCHPAD_WIDGE
 844:Generated_Source\PSoC4/CapSense_INT.c **** 
 845:Generated_Source\PSoC4/CapSense_INT.c ****         /* Setup Compensation IDAC for next sensor in widget */
 846:Generated_Source\PSoC4/CapSense_INT.c ****         #if ((CapSense_ENABLE == CapSense_CSD_IDAC_COMP_EN) || \
 847:Generated_Source\PSoC4/CapSense_INT.c ****              (CapSense_ENABLE == (CapSense_CSD_MATRIX_WIDGET_EN | CapSense_CSD_TOUCHPAD_WIDGET_EN))
 848:Generated_Source\PSoC4/CapSense_INT.c ****             CapSense_SsCSDSetUpIdacs(ptrWdgt);
 233              		.loc 1 848 0
 234 005c FFF7FEFF 		bl	CapSense_SsCSDSetUpIdacs
 235              	.LVL13:
 849:Generated_Source\PSoC4/CapSense_INT.c ****         #endif /* ((CapSense_ENABLE == CapSense_CSD_IDAC_COMP_EN) || \
 850:Generated_Source\PSoC4/CapSense_INT.c ****              (CapSense_ENABLE == (CapSense_CSD_MATRIX_WIDGET_EN | CapSense_CSD_TOUCHPAD_WIDGET_EN))
 851:Generated_Source\PSoC4/CapSense_INT.c **** 
 852:Generated_Source\PSoC4/CapSense_INT.c ****         /* Enable sensor */
 853:Generated_Source\PSoC4/CapSense_INT.c ****         CapSense_SsCSDConnectSensorExt((uint32)CapSense_widgetIndex, (uint32)CapSense_sensorIndex);
 236              		.loc 1 853 0
 237 0060 2878     		ldrb	r0, [r5]
 238 0062 2178     		ldrb	r1, [r4]
 239 0064 C0B2     		uxtb	r0, r0
 240 0066 C9B2     		uxtb	r1, r1
 241 0068 FFF7FEFF 		bl	CapSense_SsCSDConnectSensorExt
 242              	.LVL14:
 854:Generated_Source\PSoC4/CapSense_INT.c **** 
 855:Generated_Source\PSoC4/CapSense_INT.c ****         /* Proceed scanning */
 856:Generated_Source\PSoC4/CapSense_INT.c ****         CapSense_SsCSDStartSample();
 243              		.loc 1 856 0
 244 006c FFF7FEFF 		bl	CapSense_SsCSDStartSample
 245              	.LVL15:
 246 0070 13E0     		b	.L10
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccubcZxx.s 			page 21


 247              	.LVL16:
 248              	.L11:
 857:Generated_Source\PSoC4/CapSense_INT.c ****     }
 858:Generated_Source\PSoC4/CapSense_INT.c ****     /*    Call scan next widget API if requested, if not, complete the scan  */
 859:Generated_Source\PSoC4/CapSense_INT.c ****     else
 860:Generated_Source\PSoC4/CapSense_INT.c ****     {
 861:Generated_Source\PSoC4/CapSense_INT.c ****         CapSense_sensorIndex = 0u;
 249              		.loc 1 861 0
 250 0072 0023     		mov	r3, #0
 251 0074 2370     		strb	r3, [r4]
 862:Generated_Source\PSoC4/CapSense_INT.c **** 
 863:Generated_Source\PSoC4/CapSense_INT.c ****         /* Current widget is totally scanned. Reset WIDGET BUSY flag */
 864:Generated_Source\PSoC4/CapSense_INT.c ****         CapSense_dsRam.status &= ~CapSense_WDGT_SW_STS_BUSY;
 252              		.loc 1 864 0
 253 0076 0E4B     		ldr	r3, .L14+20
 865:Generated_Source\PSoC4/CapSense_INT.c **** 
 866:Generated_Source\PSoC4/CapSense_INT.c ****         /* Check if all widgets have been scanned */
 867:Generated_Source\PSoC4/CapSense_INT.c ****         if (CapSense_ENABLE == CapSense_requestScanAllWidget)
 254              		.loc 1 867 0
 255 0078 0E4A     		ldr	r2, .L14+24
 864:Generated_Source\PSoC4/CapSense_INT.c **** 
 256              		.loc 1 864 0
 257 007a 9868     		ldr	r0, [r3, #8]
 258              	.LVL17:
 259 007c 0E49     		ldr	r1, .L14+28
 260              		.loc 1 867 0
 261 007e 1278     		ldrb	r2, [r2]
 864:Generated_Source\PSoC4/CapSense_INT.c **** 
 262              		.loc 1 864 0
 263 0080 0140     		and	r1, r0
 264 0082 9960     		str	r1, [r3, #8]
 265              		.loc 1 867 0
 266 0084 012A     		cmp	r2, #1
 267 0086 02D1     		bne	.L13
 868:Generated_Source\PSoC4/CapSense_INT.c ****         {
 869:Generated_Source\PSoC4/CapSense_INT.c ****             /* Configure and begin scanning next widget */
 870:Generated_Source\PSoC4/CapSense_INT.c ****             CapSense_SsPostAllWidgetsScan();
 268              		.loc 1 870 0
 269 0088 FFF7FEFF 		bl	CapSense_SsPostAllWidgetsScan
 270              	.LVL18:
 271 008c 05E0     		b	.L10
 272              	.L13:
 871:Generated_Source\PSoC4/CapSense_INT.c ****         }
 872:Generated_Source\PSoC4/CapSense_INT.c ****         else
 873:Generated_Source\PSoC4/CapSense_INT.c ****         {
 874:Generated_Source\PSoC4/CapSense_INT.c ****             #if (CapSense_ENABLE == CapSense_BLOCK_OFF_AFTER_SCAN_EN)
 875:Generated_Source\PSoC4/CapSense_INT.c ****                 #if (CapSense_ENABLE == CapSense_CSDV2)
 876:Generated_Source\PSoC4/CapSense_INT.c ****                     /*  Disable the CSD block */
 877:Generated_Source\PSoC4/CapSense_INT.c ****                     CY_SET_REG32(CapSense_CONFIG_PTR, CapSense_configCsd);
 878:Generated_Source\PSoC4/CapSense_INT.c ****                 #else
 879:Generated_Source\PSoC4/CapSense_INT.c ****                     /*  Disable the CSD block. Connect Vref Buffer to AMUX bus */
 880:Generated_Source\PSoC4/CapSense_INT.c ****                     #if ((CapSense_CSH_PRECHARGE_IO_BUF == CapSense_CSD_CSH_PRECHARGE_SRC) &&\
 881:Generated_Source\PSoC4/CapSense_INT.c ****                          (CapSense_ENABLE == CapSense_CSD_SHIELD_TANK_EN))
 882:Generated_Source\PSoC4/CapSense_INT.c ****                         CY_SET_REG32(CapSense_CONFIG_PTR, CapSense_configCsd | CapSense_CMOD_PRECHA
 883:Generated_Source\PSoC4/CapSense_INT.c ****                     #else
 884:Generated_Source\PSoC4/CapSense_INT.c ****                         CY_SET_REG32(CapSense_CONFIG_PTR, CapSense_configCsd | CapSense_CTANK_PRECH
 885:Generated_Source\PSoC4/CapSense_INT.c ****                     #endif /* ((CapSense_CSH_PRECHARGE_IO_BUF == CapSense_CSD_CSH_PRECHARGE_SRC) &&
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccubcZxx.s 			page 22


 886:Generated_Source\PSoC4/CapSense_INT.c ****                                (CapSense_ENABLE == CapSense_CSD_SHIELD_TANK_EN)) */
 887:Generated_Source\PSoC4/CapSense_INT.c ****                 #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
 888:Generated_Source\PSoC4/CapSense_INT.c ****             #endif /* (CapSense_ENABLE == CapSense_BLOCK_OFF_AFTER_SCAN_EN) */
 889:Generated_Source\PSoC4/CapSense_INT.c **** 
 890:Generated_Source\PSoC4/CapSense_INT.c ****             /* All widgets are totally scanned. Reset BUSY flag */
 891:Generated_Source\PSoC4/CapSense_INT.c ****             CapSense_dsRam.status &= ~CapSense_SW_STS_BUSY;
 273              		.loc 1 891 0
 274 008e 0B4A     		ldr	r2, .L14+32
 275 0090 0240     		and	r2, r0
 276 0092 9A60     		str	r2, [r3, #8]
 892:Generated_Source\PSoC4/CapSense_INT.c **** 
 893:Generated_Source\PSoC4/CapSense_INT.c ****             /* Update scan Counter */
 894:Generated_Source\PSoC4/CapSense_INT.c ****             CapSense_dsRam.scanCounter++;
 277              		.loc 1 894 0
 278 0094 DA88     		ldrh	r2, [r3, #6]
 279 0096 0132     		add	r2, r2, #1
 280 0098 DA80     		strh	r2, [r3, #6]
 281              	.L10:
 282              	.LBE5:
 283              	.LBE4:
 310:Generated_Source\PSoC4/CapSense_INT.c **** 
 284              		.loc 1 310 0
 285              		@ sp needed
 286              	.LVL19:
 287 009a F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 288              	.L15:
 289              		.align	2
 290              	.L14:
 291 009c 00000000 		.word	CapSense_widgetIndex
 292 00a0 00000000 		.word	CapSense_sensorIndex
 293 00a4 00000000 		.word	CapSense_dsFlash
 294 00a8 F0000C40 		.word	1074528496
 295 00ac 00000000 		.word	CapSense_curRamSnsPtr
 296 00b0 00000000 		.word	CapSense_dsRam
 297 00b4 00000000 		.word	CapSense_requestScanAllWidget
 298 00b8 FFFFFEFF 		.word	-65537
 299 00bc 7FFFFEFF 		.word	-65665
 300              		.cfi_endproc
 301              	.LFE2:
 302              		.size	CapSense_CSDPostMultiScan, .-CapSense_CSDPostMultiScan
 303              		.text
 304              	.Letext0:
 305              		.file 2 "Generated_Source\\PSoC4\\cytypes.h"
 306              		.file 3 "Generated_Source\\PSoC4\\CapSense_Configuration.h"
 307              		.file 4 "Generated_Source\\PSoC4\\CapSense_SmartSense_LL.h"
 308              		.file 5 "Generated_Source\\PSoC4\\CapSense_Structure.h"
 309              		.file 6 "Generated_Source\\PSoC4\\CapSense_Sensing.h"
 310              		.file 7 "Generated_Source\\PSoC4\\CapSense_SensingCSD_LL.h"
 311              		.section	.debug_info,"",%progbits
 312              	.Ldebug_info0:
 313 0000 C7070000 		.4byte	0x7c7
 314 0004 0400     		.2byte	0x4
 315 0006 00000000 		.4byte	.Ldebug_abbrev0
 316 000a 04       		.byte	0x4
 317 000b 01       		.uleb128 0x1
 318 000c F1020000 		.4byte	.LASF109
 319 0010 01       		.byte	0x1
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccubcZxx.s 			page 23


 320 0011 21020000 		.4byte	.LASF110
 321 0015 CB040000 		.4byte	.LASF111
 322 0019 00000000 		.4byte	.Ldebug_ranges0+0
 323 001d 00000000 		.4byte	0
 324 0021 00000000 		.4byte	.Ldebug_line0
 325 0025 02       		.uleb128 0x2
 326 0026 01       		.byte	0x1
 327 0027 06       		.byte	0x6
 328 0028 27010000 		.4byte	.LASF0
 329 002c 02       		.uleb128 0x2
 330 002d 01       		.byte	0x1
 331 002e 08       		.byte	0x8
 332 002f 11050000 		.4byte	.LASF1
 333 0033 02       		.uleb128 0x2
 334 0034 02       		.byte	0x2
 335 0035 05       		.byte	0x5
 336 0036 49050000 		.4byte	.LASF2
 337 003a 02       		.uleb128 0x2
 338 003b 02       		.byte	0x2
 339 003c 07       		.byte	0x7
 340 003d B3020000 		.4byte	.LASF3
 341 0041 02       		.uleb128 0x2
 342 0042 04       		.byte	0x4
 343 0043 05       		.byte	0x5
 344 0044 58010000 		.4byte	.LASF4
 345 0048 02       		.uleb128 0x2
 346 0049 04       		.byte	0x4
 347 004a 07       		.byte	0x7
 348 004b 78020000 		.4byte	.LASF5
 349 004f 02       		.uleb128 0x2
 350 0050 08       		.byte	0x8
 351 0051 05       		.byte	0x5
 352 0052 19010000 		.4byte	.LASF6
 353 0056 02       		.uleb128 0x2
 354 0057 08       		.byte	0x8
 355 0058 07       		.byte	0x7
 356 0059 57000000 		.4byte	.LASF7
 357 005d 03       		.uleb128 0x3
 358 005e 04       		.byte	0x4
 359 005f 05       		.byte	0x5
 360 0060 696E7400 		.ascii	"int\000"
 361 0064 02       		.uleb128 0x2
 362 0065 04       		.byte	0x4
 363 0066 07       		.byte	0x7
 364 0067 4C020000 		.4byte	.LASF8
 365 006b 04       		.uleb128 0x4
 366 006c 82010000 		.4byte	.LASF9
 367 0070 02       		.byte	0x2
 368 0071 B901     		.2byte	0x1b9
 369 0073 2C000000 		.4byte	0x2c
 370 0077 04       		.uleb128 0x4
 371 0078 00000000 		.4byte	.LASF10
 372 007c 02       		.byte	0x2
 373 007d BA01     		.2byte	0x1ba
 374 007f 3A000000 		.4byte	0x3a
 375 0083 04       		.uleb128 0x4
 376 0084 CB010000 		.4byte	.LASF11
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccubcZxx.s 			page 24


 377 0088 02       		.byte	0x2
 378 0089 BB01     		.2byte	0x1bb
 379 008b 48000000 		.4byte	0x48
 380 008f 02       		.uleb128 0x2
 381 0090 04       		.byte	0x4
 382 0091 04       		.byte	0x4
 383 0092 4C040000 		.4byte	.LASF12
 384 0096 02       		.uleb128 0x2
 385 0097 08       		.byte	0x8
 386 0098 04       		.byte	0x4
 387 0099 88010000 		.4byte	.LASF13
 388 009d 02       		.uleb128 0x2
 389 009e 01       		.byte	0x1
 390 009f 08       		.byte	0x8
 391 00a0 9E050000 		.4byte	.LASF14
 392 00a4 05       		.uleb128 0x5
 393 00a5 6B000000 		.4byte	0x6b
 394 00a9 04       		.uleb128 0x4
 395 00aa C4030000 		.4byte	.LASF15
 396 00ae 02       		.byte	0x2
 397 00af 6502     		.2byte	0x265
 398 00b1 B5000000 		.4byte	0xb5
 399 00b5 05       		.uleb128 0x5
 400 00b6 83000000 		.4byte	0x83
 401 00ba 06       		.uleb128 0x6
 402 00bb C5000000 		.4byte	.LASF16
 403 00bf 03       		.byte	0x3
 404 00c0 D7       		.byte	0xd7
 405 00c1 77000000 		.4byte	0x77
 406 00c5 06       		.uleb128 0x6
 407 00c6 80000000 		.4byte	.LASF17
 408 00ca 03       		.byte	0x3
 409 00cb DB       		.byte	0xdb
 410 00cc 6B000000 		.4byte	0x6b
 411 00d0 02       		.uleb128 0x2
 412 00d1 04       		.byte	0x4
 413 00d2 07       		.byte	0x7
 414 00d3 F9030000 		.4byte	.LASF18
 415 00d7 07       		.uleb128 0x7
 416 00d8 04       		.byte	0x4
 417 00d9 08       		.uleb128 0x8
 418 00da 6B000000 		.4byte	0x6b
 419 00de 09       		.uleb128 0x9
 420 00df 04       		.byte	0x4
 421 00e0 6B000000 		.4byte	0x6b
 422 00e4 0A       		.uleb128 0xa
 423 00e5 0C       		.byte	0xc
 424 00e6 04       		.byte	0x4
 425 00e7 6C       		.byte	0x6c
 426 00e8 41010000 		.4byte	0x141
 427 00ec 0B       		.uleb128 0xb
 428 00ed A5060000 		.4byte	.LASF19
 429 00f1 04       		.byte	0x4
 430 00f2 6E       		.byte	0x6e
 431 00f3 77000000 		.4byte	0x77
 432 00f7 00       		.byte	0
 433 00f8 0B       		.uleb128 0xb
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccubcZxx.s 			page 25


 434 00f9 1F050000 		.4byte	.LASF20
 435 00fd 04       		.byte	0x4
 436 00fe 6F       		.byte	0x6f
 437 00ff 77000000 		.4byte	0x77
 438 0103 02       		.byte	0x2
 439 0104 0B       		.uleb128 0xb
 440 0105 26050000 		.4byte	.LASF21
 441 0109 04       		.byte	0x4
 442 010a 70       		.byte	0x70
 443 010b 77000000 		.4byte	0x77
 444 010f 04       		.byte	0x4
 445 0110 0B       		.uleb128 0xb
 446 0111 2D050000 		.4byte	.LASF22
 447 0115 04       		.byte	0x4
 448 0116 71       		.byte	0x71
 449 0117 77000000 		.4byte	0x77
 450 011b 06       		.byte	0x6
 451 011c 0B       		.uleb128 0xb
 452 011d 34050000 		.4byte	.LASF23
 453 0121 04       		.byte	0x4
 454 0122 72       		.byte	0x72
 455 0123 77000000 		.4byte	0x77
 456 0127 08       		.byte	0x8
 457 0128 0B       		.uleb128 0xb
 458 0129 3B050000 		.4byte	.LASF24
 459 012d 04       		.byte	0x4
 460 012e 73       		.byte	0x73
 461 012f 6B000000 		.4byte	0x6b
 462 0133 0A       		.byte	0xa
 463 0134 0B       		.uleb128 0xb
 464 0135 42050000 		.4byte	.LASF25
 465 0139 04       		.byte	0x4
 466 013a 74       		.byte	0x74
 467 013b 6B000000 		.4byte	0x6b
 468 013f 0B       		.byte	0xb
 469 0140 00       		.byte	0
 470 0141 06       		.uleb128 0x6
 471 0142 6B040000 		.4byte	.LASF26
 472 0146 04       		.byte	0x4
 473 0147 75       		.byte	0x75
 474 0148 E4000000 		.4byte	0xe4
 475 014c 0A       		.uleb128 0xa
 476 014d 12       		.byte	0x12
 477 014e 05       		.byte	0x5
 478 014f 7C       		.byte	0x7c
 479 0150 F1010000 		.4byte	0x1f1
 480 0154 0B       		.uleb128 0xb
 481 0155 74050000 		.4byte	.LASF27
 482 0159 05       		.byte	0x5
 483 015a 82       		.byte	0x82
 484 015b 77000000 		.4byte	0x77
 485 015f 00       		.byte	0
 486 0160 0B       		.uleb128 0xb
 487 0161 9C060000 		.4byte	.LASF28
 488 0165 05       		.byte	0x5
 489 0166 87       		.byte	0x87
 490 0167 BA000000 		.4byte	0xba
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccubcZxx.s 			page 26


 491 016b 02       		.byte	0x2
 492 016c 0B       		.uleb128 0xb
 493 016d F7060000 		.4byte	.LASF29
 494 0171 05       		.byte	0x5
 495 0172 8C       		.byte	0x8c
 496 0173 6B000000 		.4byte	0x6b
 497 0177 04       		.byte	0x4
 498 0178 0B       		.uleb128 0xb
 499 0179 0F040000 		.4byte	.LASF30
 500 017d 05       		.byte	0x5
 501 017e 91       		.byte	0x91
 502 017f 6B000000 		.4byte	0x6b
 503 0183 05       		.byte	0x5
 504 0184 0B       		.uleb128 0xb
 505 0185 D2010000 		.4byte	.LASF31
 506 0189 05       		.byte	0x5
 507 018a 96       		.byte	0x96
 508 018b 6B000000 		.4byte	0x6b
 509 018f 06       		.byte	0x6
 510 0190 0B       		.uleb128 0xb
 511 0191 E7050000 		.4byte	.LASF32
 512 0195 05       		.byte	0x5
 513 0196 9B       		.byte	0x9b
 514 0197 6B000000 		.4byte	0x6b
 515 019b 07       		.byte	0x7
 516 019c 0B       		.uleb128 0xb
 517 019d A0020000 		.4byte	.LASF33
 518 01a1 05       		.byte	0x5
 519 01a2 A1       		.byte	0xa1
 520 01a3 C5000000 		.4byte	0xc5
 521 01a7 08       		.byte	0x8
 522 01a8 0B       		.uleb128 0xb
 523 01a9 90040000 		.4byte	.LASF34
 524 01ad 05       		.byte	0x5
 525 01ae A6       		.byte	0xa6
 526 01af 6B000000 		.4byte	0x6b
 527 01b3 09       		.byte	0x9
 528 01b4 0B       		.uleb128 0xb
 529 01b5 CA030000 		.4byte	.LASF35
 530 01b9 05       		.byte	0x5
 531 01ba AD       		.byte	0xad
 532 01bb F1010000 		.4byte	0x1f1
 533 01bf 0A       		.byte	0xa
 534 01c0 0B       		.uleb128 0xb
 535 01c1 A9050000 		.4byte	.LASF36
 536 01c5 05       		.byte	0x5
 537 01c6 B4       		.byte	0xb4
 538 01c7 6B000000 		.4byte	0x6b
 539 01cb 0B       		.byte	0xb
 540 01cc 0B       		.uleb128 0xb
 541 01cd 8F060000 		.4byte	.LASF37
 542 01d1 05       		.byte	0x5
 543 01d2 B9       		.byte	0xb9
 544 01d3 6B000000 		.4byte	0x6b
 545 01d7 0C       		.byte	0xc
 546 01d8 0B       		.uleb128 0xb
 547 01d9 35000000 		.4byte	.LASF38
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccubcZxx.s 			page 27


 548 01dd 05       		.byte	0x5
 549 01de BF       		.byte	0xbf
 550 01df 77000000 		.4byte	0x77
 551 01e3 0E       		.byte	0xe
 552 01e4 0B       		.uleb128 0xb
 553 01e5 18040000 		.4byte	.LASF39
 554 01e9 05       		.byte	0x5
 555 01ea C4       		.byte	0xc4
 556 01eb 77000000 		.4byte	0x77
 557 01ef 10       		.byte	0x10
 558 01f0 00       		.byte	0
 559 01f1 0C       		.uleb128 0xc
 560 01f2 6B000000 		.4byte	0x6b
 561 01f6 01020000 		.4byte	0x201
 562 01fa 0D       		.uleb128 0xd
 563 01fb D0000000 		.4byte	0xd0
 564 01ff 00       		.byte	0
 565 0200 00       		.byte	0
 566 0201 06       		.uleb128 0x6
 567 0202 B0050000 		.4byte	.LASF40
 568 0206 05       		.byte	0x5
 569 0207 C5       		.byte	0xc5
 570 0208 4C010000 		.4byte	0x14c
 571 020c 0A       		.uleb128 0xa
 572 020d 14       		.byte	0x14
 573 020e 05       		.byte	0x5
 574 020f CA       		.byte	0xca
 575 0210 C2020000 		.4byte	0x2c2
 576 0214 0B       		.uleb128 0xb
 577 0215 74050000 		.4byte	.LASF27
 578 0219 05       		.byte	0x5
 579 021a D0       		.byte	0xd0
 580 021b 77000000 		.4byte	0x77
 581 021f 00       		.byte	0
 582 0220 0B       		.uleb128 0xb
 583 0221 9C060000 		.4byte	.LASF28
 584 0225 05       		.byte	0x5
 585 0226 D5       		.byte	0xd5
 586 0227 BA000000 		.4byte	0xba
 587 022b 02       		.byte	0x2
 588 022c 0B       		.uleb128 0xb
 589 022d F7060000 		.4byte	.LASF29
 590 0231 05       		.byte	0x5
 591 0232 DA       		.byte	0xda
 592 0233 6B000000 		.4byte	0x6b
 593 0237 04       		.byte	0x4
 594 0238 0B       		.uleb128 0xb
 595 0239 0F040000 		.4byte	.LASF30
 596 023d 05       		.byte	0x5
 597 023e DF       		.byte	0xdf
 598 023f 6B000000 		.4byte	0x6b
 599 0243 05       		.byte	0x5
 600 0244 0B       		.uleb128 0xb
 601 0245 D2010000 		.4byte	.LASF31
 602 0249 05       		.byte	0x5
 603 024a E4       		.byte	0xe4
 604 024b 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccubcZxx.s 			page 28


 605 024f 06       		.byte	0x6
 606 0250 0B       		.uleb128 0xb
 607 0251 E7050000 		.4byte	.LASF32
 608 0255 05       		.byte	0x5
 609 0256 E9       		.byte	0xe9
 610 0257 6B000000 		.4byte	0x6b
 611 025b 07       		.byte	0x7
 612 025c 0B       		.uleb128 0xb
 613 025d A0020000 		.4byte	.LASF33
 614 0261 05       		.byte	0x5
 615 0262 EF       		.byte	0xef
 616 0263 C5000000 		.4byte	0xc5
 617 0267 08       		.byte	0x8
 618 0268 0B       		.uleb128 0xb
 619 0269 90040000 		.4byte	.LASF34
 620 026d 05       		.byte	0x5
 621 026e F4       		.byte	0xf4
 622 026f 6B000000 		.4byte	0x6b
 623 0273 09       		.byte	0x9
 624 0274 0B       		.uleb128 0xb
 625 0275 CA030000 		.4byte	.LASF35
 626 0279 05       		.byte	0x5
 627 027a FB       		.byte	0xfb
 628 027b F1010000 		.4byte	0x1f1
 629 027f 0A       		.byte	0xa
 630 0280 0E       		.uleb128 0xe
 631 0281 A9050000 		.4byte	.LASF36
 632 0285 05       		.byte	0x5
 633 0286 0201     		.2byte	0x102
 634 0288 6B000000 		.4byte	0x6b
 635 028c 0B       		.byte	0xb
 636 028d 0E       		.uleb128 0xe
 637 028e 8F060000 		.4byte	.LASF37
 638 0292 05       		.byte	0x5
 639 0293 0701     		.2byte	0x107
 640 0295 6B000000 		.4byte	0x6b
 641 0299 0C       		.byte	0xc
 642 029a 0E       		.uleb128 0xe
 643 029b 35000000 		.4byte	.LASF38
 644 029f 05       		.byte	0x5
 645 02a0 0D01     		.2byte	0x10d
 646 02a2 77000000 		.4byte	0x77
 647 02a6 0E       		.byte	0xe
 648 02a7 0E       		.uleb128 0xe
 649 02a8 18040000 		.4byte	.LASF39
 650 02ac 05       		.byte	0x5
 651 02ad 1201     		.2byte	0x112
 652 02af 77000000 		.4byte	0x77
 653 02b3 10       		.byte	0x10
 654 02b4 0E       		.uleb128 0xe
 655 02b5 76010000 		.4byte	.LASF41
 656 02b9 05       		.byte	0x5
 657 02ba 1701     		.2byte	0x117
 658 02bc BA000000 		.4byte	0xba
 659 02c0 12       		.byte	0x12
 660 02c1 00       		.byte	0
 661 02c2 04       		.uleb128 0x4
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccubcZxx.s 			page 29


 662 02c3 9A030000 		.4byte	.LASF42
 663 02c7 05       		.byte	0x5
 664 02c8 1801     		.2byte	0x118
 665 02ca 0C020000 		.4byte	0x20c
 666 02ce 0F       		.uleb128 0xf
 667 02cf 14       		.byte	0x14
 668 02d0 05       		.byte	0x5
 669 02d1 1E01     		.2byte	0x11e
 670 02d3 E5020000 		.4byte	0x2e5
 671 02d7 0E       		.uleb128 0xe
 672 02d8 F7000000 		.4byte	.LASF43
 673 02dc 05       		.byte	0x5
 674 02dd 2301     		.2byte	0x123
 675 02df C2020000 		.4byte	0x2c2
 676 02e3 00       		.byte	0
 677 02e4 00       		.byte	0
 678 02e5 04       		.uleb128 0x4
 679 02e6 B2060000 		.4byte	.LASF44
 680 02ea 05       		.byte	0x5
 681 02eb 2401     		.2byte	0x124
 682 02ed CE020000 		.4byte	0x2ce
 683 02f1 0F       		.uleb128 0xf
 684 02f2 0A       		.byte	0xa
 685 02f3 05       		.byte	0x5
 686 02f4 2A01     		.2byte	0x12a
 687 02f6 49030000 		.4byte	0x349
 688 02fa 10       		.uleb128 0x10
 689 02fb 72617700 		.ascii	"raw\000"
 690 02ff 05       		.byte	0x5
 691 0300 2F01     		.2byte	0x12f
 692 0302 49030000 		.4byte	0x349
 693 0306 00       		.byte	0
 694 0307 0E       		.uleb128 0xe
 695 0308 47020000 		.4byte	.LASF45
 696 030c 05       		.byte	0x5
 697 030d 3401     		.2byte	0x134
 698 030f 49030000 		.4byte	0x349
 699 0313 02       		.byte	0x2
 700 0314 0E       		.uleb128 0xe
 701 0315 F9010000 		.4byte	.LASF46
 702 0319 05       		.byte	0x5
 703 031a 3A01     		.2byte	0x13a
 704 031c F1010000 		.4byte	0x1f1
 705 0320 04       		.byte	0x4
 706 0321 0E       		.uleb128 0xe
 707 0322 7B000000 		.4byte	.LASF47
 708 0326 05       		.byte	0x5
 709 0327 3F01     		.2byte	0x13f
 710 0329 BA000000 		.4byte	0xba
 711 032d 06       		.byte	0x6
 712 032e 0E       		.uleb128 0xe
 713 032f 19060000 		.4byte	.LASF48
 714 0333 05       		.byte	0x5
 715 0334 4401     		.2byte	0x144
 716 0336 59030000 		.4byte	0x359
 717 033a 08       		.byte	0x8
 718 033b 0E       		.uleb128 0xe
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccubcZxx.s 			page 30


 719 033c 10060000 		.4byte	.LASF49
 720 0340 05       		.byte	0x5
 721 0341 4A01     		.2byte	0x14a
 722 0343 F1010000 		.4byte	0x1f1
 723 0347 09       		.byte	0x9
 724 0348 00       		.byte	0
 725 0349 0C       		.uleb128 0xc
 726 034a 77000000 		.4byte	0x77
 727 034e 59030000 		.4byte	0x359
 728 0352 0D       		.uleb128 0xd
 729 0353 D0000000 		.4byte	0xd0
 730 0357 00       		.byte	0
 731 0358 00       		.byte	0
 732 0359 0C       		.uleb128 0xc
 733 035a C5000000 		.4byte	0xc5
 734 035e 69030000 		.4byte	0x369
 735 0362 0D       		.uleb128 0xd
 736 0363 D0000000 		.4byte	0xd0
 737 0367 00       		.byte	0
 738 0368 00       		.byte	0
 739 0369 04       		.uleb128 0x4
 740 036a 3F000000 		.4byte	.LASF50
 741 036e 05       		.byte	0x5
 742 036f 4B01     		.2byte	0x14b
 743 0371 F1020000 		.4byte	0x2f1
 744 0375 0F       		.uleb128 0xf
 745 0376 0A       		.byte	0xa
 746 0377 05       		.byte	0x5
 747 0378 5101     		.2byte	0x151
 748 037a 8C030000 		.4byte	0x38c
 749 037e 0E       		.uleb128 0xe
 750 037f F7000000 		.4byte	.LASF43
 751 0383 05       		.byte	0x5
 752 0384 5601     		.2byte	0x156
 753 0386 8C030000 		.4byte	0x38c
 754 038a 00       		.byte	0
 755 038b 00       		.byte	0
 756 038c 0C       		.uleb128 0xc
 757 038d 69030000 		.4byte	0x369
 758 0391 9C030000 		.4byte	0x39c
 759 0395 0D       		.uleb128 0xd
 760 0396 D0000000 		.4byte	0xd0
 761 039a 00       		.byte	0
 762 039b 00       		.byte	0
 763 039c 04       		.uleb128 0x4
 764 039d 9A040000 		.4byte	.LASF51
 765 03a1 05       		.byte	0x5
 766 03a2 5701     		.2byte	0x157
 767 03a4 75030000 		.4byte	0x375
 768 03a8 0F       		.uleb128 0xf
 769 03a9 40       		.byte	0x40
 770 03aa 05       		.byte	0x5
 771 03ab 5E01     		.2byte	0x15e
 772 03ad 82040000 		.4byte	0x482
 773 03b1 0E       		.uleb128 0xe
 774 03b2 E8020000 		.4byte	.LASF52
 775 03b6 05       		.byte	0x5
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccubcZxx.s 			page 31


 776 03b7 6401     		.2byte	0x164
 777 03b9 77000000 		.4byte	0x77
 778 03bd 00       		.byte	0
 779 03be 0E       		.uleb128 0xe
 780 03bf BB030000 		.4byte	.LASF53
 781 03c3 05       		.byte	0x5
 782 03c4 6901     		.2byte	0x169
 783 03c6 77000000 		.4byte	0x77
 784 03ca 02       		.byte	0x2
 785 03cb 0E       		.uleb128 0xe
 786 03cc 43040000 		.4byte	.LASF54
 787 03d0 05       		.byte	0x5
 788 03d1 6F01     		.2byte	0x16f
 789 03d3 77000000 		.4byte	0x77
 790 03d7 04       		.byte	0x4
 791 03d8 0E       		.uleb128 0xe
 792 03d9 28040000 		.4byte	.LASF55
 793 03dd 05       		.byte	0x5
 794 03de 7401     		.2byte	0x174
 795 03e0 77000000 		.4byte	0x77
 796 03e4 06       		.byte	0x6
 797 03e5 0E       		.uleb128 0xe
 798 03e6 72060000 		.4byte	.LASF56
 799 03ea 05       		.byte	0x5
 800 03eb 7901     		.2byte	0x179
 801 03ed 83000000 		.4byte	0x83
 802 03f1 08       		.byte	0x8
 803 03f2 0E       		.uleb128 0xe
 804 03f3 8A020000 		.4byte	.LASF57
 805 03f7 05       		.byte	0x5
 806 03f8 7E01     		.2byte	0x17e
 807 03fa 82040000 		.4byte	0x482
 808 03fe 0C       		.byte	0xc
 809 03ff 0E       		.uleb128 0xe
 810 0400 01020000 		.4byte	.LASF58
 811 0404 05       		.byte	0x5
 812 0405 8301     		.2byte	0x183
 813 0407 82040000 		.4byte	0x482
 814 040b 10       		.byte	0x10
 815 040c 0E       		.uleb128 0xe
 816 040d 4E010000 		.4byte	.LASF59
 817 0411 05       		.byte	0x5
 818 0412 9101     		.2byte	0x191
 819 0414 F1010000 		.4byte	0x1f1
 820 0418 14       		.byte	0x14
 821 0419 0E       		.uleb128 0xe
 822 041a 83030000 		.4byte	.LASF60
 823 041e 05       		.byte	0x5
 824 041f 9601     		.2byte	0x196
 825 0421 77000000 		.4byte	0x77
 826 0425 16       		.byte	0x16
 827 0426 0E       		.uleb128 0xe
 828 0427 61010000 		.4byte	.LASF61
 829 042b 05       		.byte	0x5
 830 042c 9B01     		.2byte	0x19b
 831 042e 6B000000 		.4byte	0x6b
 832 0432 18       		.byte	0x18
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccubcZxx.s 			page 32


 833 0433 0E       		.uleb128 0xe
 834 0434 7F050000 		.4byte	.LASF62
 835 0438 05       		.byte	0x5
 836 0439 A001     		.2byte	0x1a0
 837 043b E5020000 		.4byte	0x2e5
 838 043f 1A       		.byte	0x1a
 839 0440 0E       		.uleb128 0xe
 840 0441 E0020000 		.4byte	.LASF63
 841 0445 05       		.byte	0x5
 842 0446 A501     		.2byte	0x1a5
 843 0448 9C030000 		.4byte	0x39c
 844 044c 2E       		.byte	0x2e
 845 044d 0E       		.uleb128 0xe
 846 044e 59020000 		.4byte	.LASF64
 847 0452 05       		.byte	0x5
 848 0453 AA01     		.2byte	0x1aa
 849 0455 6B000000 		.4byte	0x6b
 850 0459 38       		.byte	0x38
 851 045a 0E       		.uleb128 0xe
 852 045b A4000000 		.4byte	.LASF65
 853 045f 05       		.byte	0x5
 854 0460 AF01     		.2byte	0x1af
 855 0462 6B000000 		.4byte	0x6b
 856 0466 39       		.byte	0x39
 857 0467 0E       		.uleb128 0xe
 858 0468 CE060000 		.4byte	.LASF66
 859 046c 05       		.byte	0x5
 860 046d B401     		.2byte	0x1b4
 861 046f 77000000 		.4byte	0x77
 862 0473 3A       		.byte	0x3a
 863 0474 0E       		.uleb128 0xe
 864 0475 8F010000 		.4byte	.LASF67
 865 0479 05       		.byte	0x5
 866 047a B901     		.2byte	0x1b9
 867 047c 49030000 		.4byte	0x349
 868 0480 3C       		.byte	0x3c
 869 0481 00       		.byte	0
 870 0482 0C       		.uleb128 0xc
 871 0483 83000000 		.4byte	0x83
 872 0487 92040000 		.4byte	0x492
 873 048b 0D       		.uleb128 0xd
 874 048c D0000000 		.4byte	0xd0
 875 0490 00       		.byte	0
 876 0491 00       		.byte	0
 877 0492 04       		.uleb128 0x4
 878 0493 B7040000 		.4byte	.LASF68
 879 0497 05       		.byte	0x5
 880 0498 BA01     		.2byte	0x1ba
 881 049a A8030000 		.4byte	0x3a8
 882 049e 0F       		.uleb128 0xf
 883 049f 1C       		.byte	0x1c
 884 04a0 05       		.byte	0x5
 885 04a1 C001     		.2byte	0x1c0
 886 04a3 1D050000 		.4byte	0x51d
 887 04a7 0E       		.uleb128 0xe
 888 04a8 9B000000 		.4byte	.LASF69
 889 04ac 05       		.byte	0x5
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccubcZxx.s 			page 33


 890 04ad C501     		.2byte	0x1c5
 891 04af 1D050000 		.4byte	0x51d
 892 04b3 00       		.byte	0
 893 04b4 0E       		.uleb128 0xe
 894 04b5 AC060000 		.4byte	.LASF70
 895 04b9 05       		.byte	0x5
 896 04ba CA01     		.2byte	0x1ca
 897 04bc 1D050000 		.4byte	0x51d
 898 04c0 04       		.byte	0x4
 899 04c1 0E       		.uleb128 0xe
 900 04c2 A3050000 		.4byte	.LASF71
 901 04c6 05       		.byte	0x5
 902 04c7 CF01     		.2byte	0x1cf
 903 04c9 1D050000 		.4byte	0x51d
 904 04cd 08       		.byte	0x8
 905 04ce 0E       		.uleb128 0xe
 906 04cf 6E050000 		.4byte	.LASF72
 907 04d3 05       		.byte	0x5
 908 04d4 D401     		.2byte	0x1d4
 909 04d6 1D050000 		.4byte	0x51d
 910 04da 0C       		.byte	0xc
 911 04db 0E       		.uleb128 0xe
 912 04dc E1060000 		.4byte	.LASF73
 913 04e0 05       		.byte	0x5
 914 04e1 D901     		.2byte	0x1d9
 915 04e3 83000000 		.4byte	0x83
 916 04e7 10       		.byte	0x10
 917 04e8 0E       		.uleb128 0xe
 918 04e9 F4010000 		.4byte	.LASF74
 919 04ed 05       		.byte	0x5
 920 04ee DE01     		.2byte	0x1de
 921 04f0 83000000 		.4byte	0x83
 922 04f4 14       		.byte	0x14
 923 04f5 0E       		.uleb128 0xe
 924 04f6 63050000 		.4byte	.LASF75
 925 04fa 05       		.byte	0x5
 926 04fb E301     		.2byte	0x1e3
 927 04fd 6B000000 		.4byte	0x6b
 928 0501 18       		.byte	0x18
 929 0502 0E       		.uleb128 0xe
 930 0503 C3010000 		.4byte	.LASF76
 931 0507 05       		.byte	0x5
 932 0508 E801     		.2byte	0x1e8
 933 050a 6B000000 		.4byte	0x6b
 934 050e 19       		.byte	0x19
 935 050f 0E       		.uleb128 0xe
 936 0510 9F010000 		.4byte	.LASF77
 937 0514 05       		.byte	0x5
 938 0515 ED01     		.2byte	0x1ed
 939 0517 6B000000 		.4byte	0x6b
 940 051b 1A       		.byte	0x1a
 941 051c 00       		.byte	0
 942 051d 09       		.uleb128 0x9
 943 051e 04       		.byte	0x4
 944 051f A9000000 		.4byte	0xa9
 945 0523 04       		.uleb128 0x4
 946 0524 59060000 		.4byte	.LASF78
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccubcZxx.s 			page 34


 947 0528 05       		.byte	0x5
 948 0529 EE01     		.2byte	0x1ee
 949 052b 9E040000 		.4byte	0x49e
 950 052f 0F       		.uleb128 0xf
 951 0530 20       		.byte	0x20
 952 0531 05       		.byte	0x5
 953 0532 1902     		.2byte	0x219
 954 0534 BB050000 		.4byte	0x5bb
 955 0538 0E       		.uleb128 0xe
 956 0539 6E000000 		.4byte	.LASF79
 957 053d 05       		.byte	0x5
 958 053e 2202     		.2byte	0x222
 959 0540 BB050000 		.4byte	0x5bb
 960 0544 00       		.byte	0
 961 0545 0E       		.uleb128 0xe
 962 0546 8E030000 		.4byte	.LASF80
 963 054a 05       		.byte	0x5
 964 054b 2802     		.2byte	0x228
 965 054d D7000000 		.4byte	0xd7
 966 0551 04       		.byte	0x4
 967 0552 0E       		.uleb128 0xe
 968 0553 6B010000 		.4byte	.LASF81
 969 0557 05       		.byte	0x5
 970 0558 2E02     		.2byte	0x22e
 971 055a C2050000 		.4byte	0x5c2
 972 055e 08       		.byte	0x8
 973 055f 0E       		.uleb128 0xe
 974 0560 53050000 		.4byte	.LASF82
 975 0564 05       		.byte	0x5
 976 0565 3302     		.2byte	0x233
 977 0567 D7000000 		.4byte	0xd7
 978 056b 0C       		.byte	0xc
 979 056c 0E       		.uleb128 0xe
 980 056d 33060000 		.4byte	.LASF83
 981 0571 05       		.byte	0x5
 982 0572 3A02     		.2byte	0x23a
 983 0574 DE000000 		.4byte	0xde
 984 0578 10       		.byte	0x10
 985 0579 0E       		.uleb128 0xe
 986 057a 02040000 		.4byte	.LASF84
 987 057e 05       		.byte	0x5
 988 057f 3F02     		.2byte	0x23f
 989 0581 77000000 		.4byte	0x77
 990 0585 14       		.byte	0x14
 991 0586 0E       		.uleb128 0xe
 992 0587 27060000 		.4byte	.LASF85
 993 058b 05       		.byte	0x5
 994 058c 4602     		.2byte	0x246
 995 058e 77000000 		.4byte	0x77
 996 0592 16       		.byte	0x16
 997 0593 0E       		.uleb128 0xe
 998 0594 1F040000 		.4byte	.LASF86
 999 0598 05       		.byte	0x5
 1000 0599 5102     		.2byte	0x251
 1001 059b 6B000000 		.4byte	0x6b
 1002 059f 18       		.byte	0x18
 1003 05a0 0E       		.uleb128 0xe
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccubcZxx.s 			page 35


 1004 05a1 F1030000 		.4byte	.LASF87
 1005 05a5 05       		.byte	0x5
 1006 05a6 5902     		.2byte	0x259
 1007 05a8 6B000000 		.4byte	0x6b
 1008 05ac 19       		.byte	0x19
 1009 05ad 0E       		.uleb128 0xe
 1010 05ae 69020000 		.4byte	.LASF88
 1011 05b2 05       		.byte	0x5
 1012 05b3 6102     		.2byte	0x261
 1013 05b5 C8050000 		.4byte	0x5c8
 1014 05b9 1C       		.byte	0x1c
 1015 05ba 00       		.byte	0
 1016 05bb 09       		.uleb128 0x9
 1017 05bc 04       		.byte	0x4
 1018 05bd C1050000 		.4byte	0x5c1
 1019 05c1 11       		.uleb128 0x11
 1020 05c2 09       		.uleb128 0x9
 1021 05c3 04       		.byte	0x4
 1022 05c4 69030000 		.4byte	0x369
 1023 05c8 09       		.uleb128 0x9
 1024 05c9 04       		.byte	0x4
 1025 05ca 41010000 		.4byte	0x141
 1026 05ce 04       		.uleb128 0x4
 1027 05cf 07000000 		.4byte	.LASF89
 1028 05d3 05       		.byte	0x5
 1029 05d4 6202     		.2byte	0x262
 1030 05d6 2F050000 		.4byte	0x52f
 1031 05da 0F       		.uleb128 0xf
 1032 05db 20       		.byte	0x20
 1033 05dc 05       		.byte	0x5
 1034 05dd 6802     		.2byte	0x268
 1035 05df F1050000 		.4byte	0x5f1
 1036 05e3 0E       		.uleb128 0xe
 1037 05e4 79060000 		.4byte	.LASF90
 1038 05e8 05       		.byte	0x5
 1039 05e9 6D02     		.2byte	0x26d
 1040 05eb F1050000 		.4byte	0x5f1
 1041 05ef 00       		.byte	0
 1042 05f0 00       		.byte	0
 1043 05f1 0C       		.uleb128 0xc
 1044 05f2 CE050000 		.4byte	0x5ce
 1045 05f6 01060000 		.4byte	0x601
 1046 05fa 0D       		.uleb128 0xd
 1047 05fb D0000000 		.4byte	0xd0
 1048 05ff 00       		.byte	0
 1049 0600 00       		.byte	0
 1050 0601 04       		.uleb128 0x4
 1051 0602 43060000 		.4byte	.LASF91
 1052 0606 05       		.byte	0x5
 1053 0607 6E02     		.2byte	0x26e
 1054 0609 DA050000 		.4byte	0x5da
 1055 060d 12       		.uleb128 0x12
 1056 060e DD010000 		.4byte	.LASF112
 1057 0612 01       		.byte	0x1
 1058 0613 E202     		.2byte	0x2e2
 1059 0615 00000000 		.4byte	.LFB3
 1060 0619 48000000 		.4byte	.LFE3-.LFB3
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccubcZxx.s 			page 36


 1061 061d 01       		.uleb128 0x1
 1062 061e 9C       		.byte	0x9c
 1063 061f 50060000 		.4byte	0x650
 1064 0623 13       		.uleb128 0x13
 1065 0624 95020000 		.4byte	.LASF92
 1066 0628 01       		.byte	0x1
 1067 0629 E602     		.2byte	0x2e6
 1068 062b 83000000 		.4byte	0x83
 1069 062f 00000000 		.4byte	.LLST0
 1070 0633 13       		.uleb128 0x13
 1071 0634 EB060000 		.4byte	.LASF93
 1072 0638 01       		.byte	0x1
 1073 0639 E702     		.2byte	0x2e7
 1074 063b 83000000 		.4byte	0x83
 1075 063f 13000000 		.4byte	.LLST1
 1076 0643 14       		.uleb128 0x14
 1077 0644 AB020000 		.4byte	.LASF94
 1078 0648 01       		.byte	0x1
 1079 0649 E802     		.2byte	0x2e8
 1080 064b 50060000 		.4byte	0x650
 1081 064f 00       		.byte	0
 1082 0650 09       		.uleb128 0x9
 1083 0651 04       		.byte	0x4
 1084 0652 56060000 		.4byte	0x656
 1085 0656 08       		.uleb128 0x8
 1086 0657 01020000 		.4byte	0x201
 1087 065b 15       		.uleb128 0x15
 1088 065c CC050000 		.4byte	.LASF95
 1089 0660 01       		.byte	0x1
 1090 0661 7F       		.byte	0x7f
 1091 0662 00000000 		.4byte	.LFB1
 1092 0666 2C000000 		.4byte	.LFE1-.LFB1
 1093 066a 01       		.uleb128 0x1
 1094 066b 9C       		.byte	0x9c
 1095 066c 7A060000 		.4byte	0x67a
 1096 0670 16       		.uleb128 0x16
 1097 0671 0E000000 		.4byte	.LVL8
 1098 0675 0D060000 		.4byte	0x60d
 1099 0679 00       		.byte	0
 1100 067a 17       		.uleb128 0x17
 1101 067b 33010000 		.4byte	.LASF113
 1102 067f 01       		.byte	0x1
 1103 0680 2203     		.2byte	0x322
 1104 0682 03       		.byte	0x3
 1105 0683 94060000 		.4byte	0x694
 1106 0687 14       		.uleb128 0x14
 1107 0688 AB020000 		.4byte	.LASF94
 1108 068c 01       		.byte	0x1
 1109 068d 2A03     		.2byte	0x32a
 1110 068f 94060000 		.4byte	0x694
 1111 0693 00       		.byte	0
 1112 0694 09       		.uleb128 0x9
 1113 0695 04       		.byte	0x4
 1114 0696 01020000 		.4byte	0x201
 1115 069a 15       		.uleb128 0x15
 1116 069b DD000000 		.4byte	.LASF96
 1117 069f 01       		.byte	0x1
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccubcZxx.s 			page 37


 1118 06a0 EE       		.byte	0xee
 1119 06a1 00000000 		.4byte	.LFB2
 1120 06a5 C0000000 		.4byte	.LFE2-.LFB2
 1121 06a9 01       		.uleb128 0x1
 1122 06aa 9C       		.byte	0x9c
 1123 06ab 24070000 		.4byte	0x724
 1124 06af 18       		.uleb128 0x18
 1125 06b0 83060000 		.4byte	.LASF97
 1126 06b4 01       		.byte	0x1
 1127 06b5 F1       		.byte	0xf1
 1128 06b6 24070000 		.4byte	0x724
 1129 06ba 31000000 		.4byte	.LLST2
 1130 06be 19       		.uleb128 0x19
 1131 06bf 7A060000 		.4byte	0x67a
 1132 06c3 28000000 		.4byte	.LBB4
 1133 06c7 72000000 		.4byte	.LBE4-.LBB4
 1134 06cb 01       		.byte	0x1
 1135 06cc 2D01     		.2byte	0x12d
 1136 06ce 0A070000 		.4byte	0x70a
 1137 06d2 1A       		.uleb128 0x1a
 1138 06d3 28000000 		.4byte	.LBB5
 1139 06d7 72000000 		.4byte	.LBE5-.LBB5
 1140 06db 1B       		.uleb128 0x1b
 1141 06dc 87060000 		.4byte	0x687
 1142 06e0 44000000 		.4byte	.LLST3
 1143 06e4 16       		.uleb128 0x16
 1144 06e5 60000000 		.4byte	.LVL13
 1145 06e9 88070000 		.4byte	0x788
 1146 06ed 16       		.uleb128 0x16
 1147 06ee 6C000000 		.4byte	.LVL14
 1148 06f2 99070000 		.4byte	0x799
 1149 06f6 16       		.uleb128 0x16
 1150 06f7 70000000 		.4byte	.LVL15
 1151 06fb AF070000 		.4byte	0x7af
 1152 06ff 16       		.uleb128 0x16
 1153 0700 8C000000 		.4byte	.LVL18
 1154 0704 B6070000 		.4byte	0x7b6
 1155 0708 00       		.byte	0
 1156 0709 00       		.byte	0
 1157 070a 16       		.uleb128 0x16
 1158 070b 22000000 		.4byte	.LVL10
 1159 070f 0D060000 		.4byte	0x60d
 1160 0713 1C       		.uleb128 0x1c
 1161 0714 28000000 		.4byte	.LVL11
 1162 0718 BD070000 		.4byte	0x7bd
 1163 071c 1D       		.uleb128 0x1d
 1164 071d 01       		.uleb128 0x1
 1165 071e 50       		.byte	0x50
 1166 071f 02       		.uleb128 0x2
 1167 0720 77       		.byte	0x77
 1168 0721 00       		.sleb128 0
 1169 0722 00       		.byte	0
 1170 0723 00       		.byte	0
 1171 0724 09       		.uleb128 0x9
 1172 0725 04       		.byte	0x4
 1173 0726 2A070000 		.4byte	0x72a
 1174 072a 08       		.uleb128 0x8
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccubcZxx.s 			page 38


 1175 072b 23050000 		.4byte	0x523
 1176 072f 1E       		.uleb128 0x1e
 1177 0730 34040000 		.4byte	.LASF98
 1178 0734 05       		.byte	0x5
 1179 0735 C303     		.2byte	0x3c3
 1180 0737 92040000 		.4byte	0x492
 1181 073b 1E       		.uleb128 0x1e
 1182 073c B4000000 		.4byte	.LASF99
 1183 0740 05       		.byte	0x5
 1184 0741 C403     		.2byte	0x3c4
 1185 0743 47070000 		.4byte	0x747
 1186 0747 08       		.uleb128 0x8
 1187 0748 01060000 		.4byte	0x601
 1188 074c 1E       		.uleb128 0x1e
 1189 074d 02010000 		.4byte	.LASF100
 1190 0751 06       		.byte	0x6
 1191 0752 4905     		.2byte	0x549
 1192 0754 D9000000 		.4byte	0xd9
 1193 0758 1E       		.uleb128 0x1e
 1194 0759 20000000 		.4byte	.LASF101
 1195 075d 06       		.byte	0x6
 1196 075e 5105     		.2byte	0x551
 1197 0760 A4000000 		.4byte	0xa4
 1198 0764 1E       		.uleb128 0x1e
 1199 0765 0C020000 		.4byte	.LASF102
 1200 0769 06       		.byte	0x6
 1201 076a 5205     		.2byte	0x552
 1202 076c A4000000 		.4byte	0xa4
 1203 0770 1E       		.uleb128 0x1e
 1204 0771 A5010000 		.4byte	.LASF103
 1205 0775 06       		.byte	0x6
 1206 0776 5405     		.2byte	0x554
 1207 0778 6B000000 		.4byte	0x6b
 1208 077c 1E       		.uleb128 0x1e
 1209 077d 88050000 		.4byte	.LASF104
 1210 0781 06       		.byte	0x6
 1211 0782 5905     		.2byte	0x559
 1212 0784 C2050000 		.4byte	0x5c2
 1213 0788 1F       		.uleb128 0x1f
 1214 0789 52040000 		.4byte	.LASF105
 1215 078d 07       		.byte	0x7
 1216 078e 54       		.byte	0x54
 1217 078f 99070000 		.4byte	0x799
 1218 0793 20       		.uleb128 0x20
 1219 0794 50060000 		.4byte	0x650
 1220 0798 00       		.byte	0
 1221 0799 1F       		.uleb128 0x1f
 1222 079a D2030000 		.4byte	.LASF106
 1223 079e 07       		.byte	0x7
 1224 079f 60       		.byte	0x60
 1225 07a0 AF070000 		.4byte	0x7af
 1226 07a4 20       		.uleb128 0x20
 1227 07a5 83000000 		.4byte	0x83
 1228 07a9 20       		.uleb128 0x20
 1229 07aa 83000000 		.4byte	0x83
 1230 07ae 00       		.byte	0
 1231 07af 21       		.uleb128 0x21
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccubcZxx.s 			page 39


 1232 07b0 F7040000 		.4byte	.LASF107
 1233 07b4 07       		.byte	0x7
 1234 07b5 53       		.byte	0x53
 1235 07b6 21       		.uleb128 0x21
 1236 07b7 F2050000 		.4byte	.LASF108
 1237 07bb 06       		.byte	0x6
 1238 07bc 7E       		.byte	0x7e
 1239 07bd 22       		.uleb128 0x22
 1240 07be C6020000 		.4byte	.LASF114
 1241 07c2 07       		.byte	0x7
 1242 07c3 44       		.byte	0x44
 1243 07c4 20       		.uleb128 0x20
 1244 07c5 24070000 		.4byte	0x724
 1245 07c9 00       		.byte	0
 1246 07ca 00       		.byte	0
 1247              		.section	.debug_abbrev,"",%progbits
 1248              	.Ldebug_abbrev0:
 1249 0000 01       		.uleb128 0x1
 1250 0001 11       		.uleb128 0x11
 1251 0002 01       		.byte	0x1
 1252 0003 25       		.uleb128 0x25
 1253 0004 0E       		.uleb128 0xe
 1254 0005 13       		.uleb128 0x13
 1255 0006 0B       		.uleb128 0xb
 1256 0007 03       		.uleb128 0x3
 1257 0008 0E       		.uleb128 0xe
 1258 0009 1B       		.uleb128 0x1b
 1259 000a 0E       		.uleb128 0xe
 1260 000b 55       		.uleb128 0x55
 1261 000c 17       		.uleb128 0x17
 1262 000d 11       		.uleb128 0x11
 1263 000e 01       		.uleb128 0x1
 1264 000f 10       		.uleb128 0x10
 1265 0010 17       		.uleb128 0x17
 1266 0011 00       		.byte	0
 1267 0012 00       		.byte	0
 1268 0013 02       		.uleb128 0x2
 1269 0014 24       		.uleb128 0x24
 1270 0015 00       		.byte	0
 1271 0016 0B       		.uleb128 0xb
 1272 0017 0B       		.uleb128 0xb
 1273 0018 3E       		.uleb128 0x3e
 1274 0019 0B       		.uleb128 0xb
 1275 001a 03       		.uleb128 0x3
 1276 001b 0E       		.uleb128 0xe
 1277 001c 00       		.byte	0
 1278 001d 00       		.byte	0
 1279 001e 03       		.uleb128 0x3
 1280 001f 24       		.uleb128 0x24
 1281 0020 00       		.byte	0
 1282 0021 0B       		.uleb128 0xb
 1283 0022 0B       		.uleb128 0xb
 1284 0023 3E       		.uleb128 0x3e
 1285 0024 0B       		.uleb128 0xb
 1286 0025 03       		.uleb128 0x3
 1287 0026 08       		.uleb128 0x8
 1288 0027 00       		.byte	0
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccubcZxx.s 			page 40


 1289 0028 00       		.byte	0
 1290 0029 04       		.uleb128 0x4
 1291 002a 16       		.uleb128 0x16
 1292 002b 00       		.byte	0
 1293 002c 03       		.uleb128 0x3
 1294 002d 0E       		.uleb128 0xe
 1295 002e 3A       		.uleb128 0x3a
 1296 002f 0B       		.uleb128 0xb
 1297 0030 3B       		.uleb128 0x3b
 1298 0031 05       		.uleb128 0x5
 1299 0032 49       		.uleb128 0x49
 1300 0033 13       		.uleb128 0x13
 1301 0034 00       		.byte	0
 1302 0035 00       		.byte	0
 1303 0036 05       		.uleb128 0x5
 1304 0037 35       		.uleb128 0x35
 1305 0038 00       		.byte	0
 1306 0039 49       		.uleb128 0x49
 1307 003a 13       		.uleb128 0x13
 1308 003b 00       		.byte	0
 1309 003c 00       		.byte	0
 1310 003d 06       		.uleb128 0x6
 1311 003e 16       		.uleb128 0x16
 1312 003f 00       		.byte	0
 1313 0040 03       		.uleb128 0x3
 1314 0041 0E       		.uleb128 0xe
 1315 0042 3A       		.uleb128 0x3a
 1316 0043 0B       		.uleb128 0xb
 1317 0044 3B       		.uleb128 0x3b
 1318 0045 0B       		.uleb128 0xb
 1319 0046 49       		.uleb128 0x49
 1320 0047 13       		.uleb128 0x13
 1321 0048 00       		.byte	0
 1322 0049 00       		.byte	0
 1323 004a 07       		.uleb128 0x7
 1324 004b 0F       		.uleb128 0xf
 1325 004c 00       		.byte	0
 1326 004d 0B       		.uleb128 0xb
 1327 004e 0B       		.uleb128 0xb
 1328 004f 00       		.byte	0
 1329 0050 00       		.byte	0
 1330 0051 08       		.uleb128 0x8
 1331 0052 26       		.uleb128 0x26
 1332 0053 00       		.byte	0
 1333 0054 49       		.uleb128 0x49
 1334 0055 13       		.uleb128 0x13
 1335 0056 00       		.byte	0
 1336 0057 00       		.byte	0
 1337 0058 09       		.uleb128 0x9
 1338 0059 0F       		.uleb128 0xf
 1339 005a 00       		.byte	0
 1340 005b 0B       		.uleb128 0xb
 1341 005c 0B       		.uleb128 0xb
 1342 005d 49       		.uleb128 0x49
 1343 005e 13       		.uleb128 0x13
 1344 005f 00       		.byte	0
 1345 0060 00       		.byte	0
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccubcZxx.s 			page 41


 1346 0061 0A       		.uleb128 0xa
 1347 0062 13       		.uleb128 0x13
 1348 0063 01       		.byte	0x1
 1349 0064 0B       		.uleb128 0xb
 1350 0065 0B       		.uleb128 0xb
 1351 0066 3A       		.uleb128 0x3a
 1352 0067 0B       		.uleb128 0xb
 1353 0068 3B       		.uleb128 0x3b
 1354 0069 0B       		.uleb128 0xb
 1355 006a 01       		.uleb128 0x1
 1356 006b 13       		.uleb128 0x13
 1357 006c 00       		.byte	0
 1358 006d 00       		.byte	0
 1359 006e 0B       		.uleb128 0xb
 1360 006f 0D       		.uleb128 0xd
 1361 0070 00       		.byte	0
 1362 0071 03       		.uleb128 0x3
 1363 0072 0E       		.uleb128 0xe
 1364 0073 3A       		.uleb128 0x3a
 1365 0074 0B       		.uleb128 0xb
 1366 0075 3B       		.uleb128 0x3b
 1367 0076 0B       		.uleb128 0xb
 1368 0077 49       		.uleb128 0x49
 1369 0078 13       		.uleb128 0x13
 1370 0079 38       		.uleb128 0x38
 1371 007a 0B       		.uleb128 0xb
 1372 007b 00       		.byte	0
 1373 007c 00       		.byte	0
 1374 007d 0C       		.uleb128 0xc
 1375 007e 01       		.uleb128 0x1
 1376 007f 01       		.byte	0x1
 1377 0080 49       		.uleb128 0x49
 1378 0081 13       		.uleb128 0x13
 1379 0082 01       		.uleb128 0x1
 1380 0083 13       		.uleb128 0x13
 1381 0084 00       		.byte	0
 1382 0085 00       		.byte	0
 1383 0086 0D       		.uleb128 0xd
 1384 0087 21       		.uleb128 0x21
 1385 0088 00       		.byte	0
 1386 0089 49       		.uleb128 0x49
 1387 008a 13       		.uleb128 0x13
 1388 008b 2F       		.uleb128 0x2f
 1389 008c 0B       		.uleb128 0xb
 1390 008d 00       		.byte	0
 1391 008e 00       		.byte	0
 1392 008f 0E       		.uleb128 0xe
 1393 0090 0D       		.uleb128 0xd
 1394 0091 00       		.byte	0
 1395 0092 03       		.uleb128 0x3
 1396 0093 0E       		.uleb128 0xe
 1397 0094 3A       		.uleb128 0x3a
 1398 0095 0B       		.uleb128 0xb
 1399 0096 3B       		.uleb128 0x3b
 1400 0097 05       		.uleb128 0x5
 1401 0098 49       		.uleb128 0x49
 1402 0099 13       		.uleb128 0x13
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccubcZxx.s 			page 42


 1403 009a 38       		.uleb128 0x38
 1404 009b 0B       		.uleb128 0xb
 1405 009c 00       		.byte	0
 1406 009d 00       		.byte	0
 1407 009e 0F       		.uleb128 0xf
 1408 009f 13       		.uleb128 0x13
 1409 00a0 01       		.byte	0x1
 1410 00a1 0B       		.uleb128 0xb
 1411 00a2 0B       		.uleb128 0xb
 1412 00a3 3A       		.uleb128 0x3a
 1413 00a4 0B       		.uleb128 0xb
 1414 00a5 3B       		.uleb128 0x3b
 1415 00a6 05       		.uleb128 0x5
 1416 00a7 01       		.uleb128 0x1
 1417 00a8 13       		.uleb128 0x13
 1418 00a9 00       		.byte	0
 1419 00aa 00       		.byte	0
 1420 00ab 10       		.uleb128 0x10
 1421 00ac 0D       		.uleb128 0xd
 1422 00ad 00       		.byte	0
 1423 00ae 03       		.uleb128 0x3
 1424 00af 08       		.uleb128 0x8
 1425 00b0 3A       		.uleb128 0x3a
 1426 00b1 0B       		.uleb128 0xb
 1427 00b2 3B       		.uleb128 0x3b
 1428 00b3 05       		.uleb128 0x5
 1429 00b4 49       		.uleb128 0x49
 1430 00b5 13       		.uleb128 0x13
 1431 00b6 38       		.uleb128 0x38
 1432 00b7 0B       		.uleb128 0xb
 1433 00b8 00       		.byte	0
 1434 00b9 00       		.byte	0
 1435 00ba 11       		.uleb128 0x11
 1436 00bb 26       		.uleb128 0x26
 1437 00bc 00       		.byte	0
 1438 00bd 00       		.byte	0
 1439 00be 00       		.byte	0
 1440 00bf 12       		.uleb128 0x12
 1441 00c0 2E       		.uleb128 0x2e
 1442 00c1 01       		.byte	0x1
 1443 00c2 03       		.uleb128 0x3
 1444 00c3 0E       		.uleb128 0xe
 1445 00c4 3A       		.uleb128 0x3a
 1446 00c5 0B       		.uleb128 0xb
 1447 00c6 3B       		.uleb128 0x3b
 1448 00c7 05       		.uleb128 0x5
 1449 00c8 27       		.uleb128 0x27
 1450 00c9 19       		.uleb128 0x19
 1451 00ca 11       		.uleb128 0x11
 1452 00cb 01       		.uleb128 0x1
 1453 00cc 12       		.uleb128 0x12
 1454 00cd 06       		.uleb128 0x6
 1455 00ce 40       		.uleb128 0x40
 1456 00cf 18       		.uleb128 0x18
 1457 00d0 9742     		.uleb128 0x2117
 1458 00d2 19       		.uleb128 0x19
 1459 00d3 01       		.uleb128 0x1
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccubcZxx.s 			page 43


 1460 00d4 13       		.uleb128 0x13
 1461 00d5 00       		.byte	0
 1462 00d6 00       		.byte	0
 1463 00d7 13       		.uleb128 0x13
 1464 00d8 34       		.uleb128 0x34
 1465 00d9 00       		.byte	0
 1466 00da 03       		.uleb128 0x3
 1467 00db 0E       		.uleb128 0xe
 1468 00dc 3A       		.uleb128 0x3a
 1469 00dd 0B       		.uleb128 0xb
 1470 00de 3B       		.uleb128 0x3b
 1471 00df 05       		.uleb128 0x5
 1472 00e0 49       		.uleb128 0x49
 1473 00e1 13       		.uleb128 0x13
 1474 00e2 02       		.uleb128 0x2
 1475 00e3 17       		.uleb128 0x17
 1476 00e4 00       		.byte	0
 1477 00e5 00       		.byte	0
 1478 00e6 14       		.uleb128 0x14
 1479 00e7 34       		.uleb128 0x34
 1480 00e8 00       		.byte	0
 1481 00e9 03       		.uleb128 0x3
 1482 00ea 0E       		.uleb128 0xe
 1483 00eb 3A       		.uleb128 0x3a
 1484 00ec 0B       		.uleb128 0xb
 1485 00ed 3B       		.uleb128 0x3b
 1486 00ee 05       		.uleb128 0x5
 1487 00ef 49       		.uleb128 0x49
 1488 00f0 13       		.uleb128 0x13
 1489 00f1 00       		.byte	0
 1490 00f2 00       		.byte	0
 1491 00f3 15       		.uleb128 0x15
 1492 00f4 2E       		.uleb128 0x2e
 1493 00f5 01       		.byte	0x1
 1494 00f6 3F       		.uleb128 0x3f
 1495 00f7 19       		.uleb128 0x19
 1496 00f8 03       		.uleb128 0x3
 1497 00f9 0E       		.uleb128 0xe
 1498 00fa 3A       		.uleb128 0x3a
 1499 00fb 0B       		.uleb128 0xb
 1500 00fc 3B       		.uleb128 0x3b
 1501 00fd 0B       		.uleb128 0xb
 1502 00fe 27       		.uleb128 0x27
 1503 00ff 19       		.uleb128 0x19
 1504 0100 11       		.uleb128 0x11
 1505 0101 01       		.uleb128 0x1
 1506 0102 12       		.uleb128 0x12
 1507 0103 06       		.uleb128 0x6
 1508 0104 40       		.uleb128 0x40
 1509 0105 18       		.uleb128 0x18
 1510 0106 9742     		.uleb128 0x2117
 1511 0108 19       		.uleb128 0x19
 1512 0109 01       		.uleb128 0x1
 1513 010a 13       		.uleb128 0x13
 1514 010b 00       		.byte	0
 1515 010c 00       		.byte	0
 1516 010d 16       		.uleb128 0x16
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccubcZxx.s 			page 44


 1517 010e 898201   		.uleb128 0x4109
 1518 0111 00       		.byte	0
 1519 0112 11       		.uleb128 0x11
 1520 0113 01       		.uleb128 0x1
 1521 0114 31       		.uleb128 0x31
 1522 0115 13       		.uleb128 0x13
 1523 0116 00       		.byte	0
 1524 0117 00       		.byte	0
 1525 0118 17       		.uleb128 0x17
 1526 0119 2E       		.uleb128 0x2e
 1527 011a 01       		.byte	0x1
 1528 011b 03       		.uleb128 0x3
 1529 011c 0E       		.uleb128 0xe
 1530 011d 3A       		.uleb128 0x3a
 1531 011e 0B       		.uleb128 0xb
 1532 011f 3B       		.uleb128 0x3b
 1533 0120 05       		.uleb128 0x5
 1534 0121 27       		.uleb128 0x27
 1535 0122 19       		.uleb128 0x19
 1536 0123 20       		.uleb128 0x20
 1537 0124 0B       		.uleb128 0xb
 1538 0125 01       		.uleb128 0x1
 1539 0126 13       		.uleb128 0x13
 1540 0127 00       		.byte	0
 1541 0128 00       		.byte	0
 1542 0129 18       		.uleb128 0x18
 1543 012a 34       		.uleb128 0x34
 1544 012b 00       		.byte	0
 1545 012c 03       		.uleb128 0x3
 1546 012d 0E       		.uleb128 0xe
 1547 012e 3A       		.uleb128 0x3a
 1548 012f 0B       		.uleb128 0xb
 1549 0130 3B       		.uleb128 0x3b
 1550 0131 0B       		.uleb128 0xb
 1551 0132 49       		.uleb128 0x49
 1552 0133 13       		.uleb128 0x13
 1553 0134 02       		.uleb128 0x2
 1554 0135 17       		.uleb128 0x17
 1555 0136 00       		.byte	0
 1556 0137 00       		.byte	0
 1557 0138 19       		.uleb128 0x19
 1558 0139 1D       		.uleb128 0x1d
 1559 013a 01       		.byte	0x1
 1560 013b 31       		.uleb128 0x31
 1561 013c 13       		.uleb128 0x13
 1562 013d 11       		.uleb128 0x11
 1563 013e 01       		.uleb128 0x1
 1564 013f 12       		.uleb128 0x12
 1565 0140 06       		.uleb128 0x6
 1566 0141 58       		.uleb128 0x58
 1567 0142 0B       		.uleb128 0xb
 1568 0143 59       		.uleb128 0x59
 1569 0144 05       		.uleb128 0x5
 1570 0145 01       		.uleb128 0x1
 1571 0146 13       		.uleb128 0x13
 1572 0147 00       		.byte	0
 1573 0148 00       		.byte	0
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccubcZxx.s 			page 45


 1574 0149 1A       		.uleb128 0x1a
 1575 014a 0B       		.uleb128 0xb
 1576 014b 01       		.byte	0x1
 1577 014c 11       		.uleb128 0x11
 1578 014d 01       		.uleb128 0x1
 1579 014e 12       		.uleb128 0x12
 1580 014f 06       		.uleb128 0x6
 1581 0150 00       		.byte	0
 1582 0151 00       		.byte	0
 1583 0152 1B       		.uleb128 0x1b
 1584 0153 34       		.uleb128 0x34
 1585 0154 00       		.byte	0
 1586 0155 31       		.uleb128 0x31
 1587 0156 13       		.uleb128 0x13
 1588 0157 02       		.uleb128 0x2
 1589 0158 17       		.uleb128 0x17
 1590 0159 00       		.byte	0
 1591 015a 00       		.byte	0
 1592 015b 1C       		.uleb128 0x1c
 1593 015c 898201   		.uleb128 0x4109
 1594 015f 01       		.byte	0x1
 1595 0160 11       		.uleb128 0x11
 1596 0161 01       		.uleb128 0x1
 1597 0162 31       		.uleb128 0x31
 1598 0163 13       		.uleb128 0x13
 1599 0164 00       		.byte	0
 1600 0165 00       		.byte	0
 1601 0166 1D       		.uleb128 0x1d
 1602 0167 8A8201   		.uleb128 0x410a
 1603 016a 00       		.byte	0
 1604 016b 02       		.uleb128 0x2
 1605 016c 18       		.uleb128 0x18
 1606 016d 9142     		.uleb128 0x2111
 1607 016f 18       		.uleb128 0x18
 1608 0170 00       		.byte	0
 1609 0171 00       		.byte	0
 1610 0172 1E       		.uleb128 0x1e
 1611 0173 34       		.uleb128 0x34
 1612 0174 00       		.byte	0
 1613 0175 03       		.uleb128 0x3
 1614 0176 0E       		.uleb128 0xe
 1615 0177 3A       		.uleb128 0x3a
 1616 0178 0B       		.uleb128 0xb
 1617 0179 3B       		.uleb128 0x3b
 1618 017a 05       		.uleb128 0x5
 1619 017b 49       		.uleb128 0x49
 1620 017c 13       		.uleb128 0x13
 1621 017d 3F       		.uleb128 0x3f
 1622 017e 19       		.uleb128 0x19
 1623 017f 3C       		.uleb128 0x3c
 1624 0180 19       		.uleb128 0x19
 1625 0181 00       		.byte	0
 1626 0182 00       		.byte	0
 1627 0183 1F       		.uleb128 0x1f
 1628 0184 2E       		.uleb128 0x2e
 1629 0185 01       		.byte	0x1
 1630 0186 3F       		.uleb128 0x3f
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccubcZxx.s 			page 46


 1631 0187 19       		.uleb128 0x19
 1632 0188 03       		.uleb128 0x3
 1633 0189 0E       		.uleb128 0xe
 1634 018a 3A       		.uleb128 0x3a
 1635 018b 0B       		.uleb128 0xb
 1636 018c 3B       		.uleb128 0x3b
 1637 018d 0B       		.uleb128 0xb
 1638 018e 27       		.uleb128 0x27
 1639 018f 19       		.uleb128 0x19
 1640 0190 3C       		.uleb128 0x3c
 1641 0191 19       		.uleb128 0x19
 1642 0192 01       		.uleb128 0x1
 1643 0193 13       		.uleb128 0x13
 1644 0194 00       		.byte	0
 1645 0195 00       		.byte	0
 1646 0196 20       		.uleb128 0x20
 1647 0197 05       		.uleb128 0x5
 1648 0198 00       		.byte	0
 1649 0199 49       		.uleb128 0x49
 1650 019a 13       		.uleb128 0x13
 1651 019b 00       		.byte	0
 1652 019c 00       		.byte	0
 1653 019d 21       		.uleb128 0x21
 1654 019e 2E       		.uleb128 0x2e
 1655 019f 00       		.byte	0
 1656 01a0 3F       		.uleb128 0x3f
 1657 01a1 19       		.uleb128 0x19
 1658 01a2 03       		.uleb128 0x3
 1659 01a3 0E       		.uleb128 0xe
 1660 01a4 3A       		.uleb128 0x3a
 1661 01a5 0B       		.uleb128 0xb
 1662 01a6 3B       		.uleb128 0x3b
 1663 01a7 0B       		.uleb128 0xb
 1664 01a8 27       		.uleb128 0x27
 1665 01a9 19       		.uleb128 0x19
 1666 01aa 3C       		.uleb128 0x3c
 1667 01ab 19       		.uleb128 0x19
 1668 01ac 00       		.byte	0
 1669 01ad 00       		.byte	0
 1670 01ae 22       		.uleb128 0x22
 1671 01af 2E       		.uleb128 0x2e
 1672 01b0 01       		.byte	0x1
 1673 01b1 3F       		.uleb128 0x3f
 1674 01b2 19       		.uleb128 0x19
 1675 01b3 03       		.uleb128 0x3
 1676 01b4 0E       		.uleb128 0xe
 1677 01b5 3A       		.uleb128 0x3a
 1678 01b6 0B       		.uleb128 0xb
 1679 01b7 3B       		.uleb128 0x3b
 1680 01b8 0B       		.uleb128 0xb
 1681 01b9 27       		.uleb128 0x27
 1682 01ba 19       		.uleb128 0x19
 1683 01bb 3C       		.uleb128 0x3c
 1684 01bc 19       		.uleb128 0x19
 1685 01bd 00       		.byte	0
 1686 01be 00       		.byte	0
 1687 01bf 00       		.byte	0
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccubcZxx.s 			page 47


 1688              		.section	.debug_loc,"",%progbits
 1689              	.Ldebug_loc0:
 1690              	.LLST0:
 1691 0000 1A000000 		.4byte	.LVL2
 1692 0004 2E000000 		.4byte	.LVL6
 1693 0008 0100     		.2byte	0x1
 1694 000a 52       		.byte	0x52
 1695 000b 00000000 		.4byte	0
 1696 000f 00000000 		.4byte	0
 1697              	.LLST1:
 1698 0013 1C000000 		.4byte	.LVL3
 1699 0017 26000000 		.4byte	.LVL4
 1700 001b 0100     		.2byte	0x1
 1701 001d 53       		.byte	0x53
 1702 001e 2C000000 		.4byte	.LVL5
 1703 0022 32000000 		.4byte	.LVL7
 1704 0026 0100     		.2byte	0x1
 1705 0028 53       		.byte	0x53
 1706 0029 00000000 		.4byte	0
 1707 002d 00000000 		.4byte	0
 1708              	.LLST2:
 1709 0031 18000000 		.4byte	.LVL9
 1710 0035 9A000000 		.4byte	.LVL19
 1711 0039 0100     		.2byte	0x1
 1712 003b 57       		.byte	0x57
 1713 003c 00000000 		.4byte	0
 1714 0040 00000000 		.4byte	0
 1715              	.LLST3:
 1716 0044 30000000 		.4byte	.LVL12
 1717 0048 5F000000 		.4byte	.LVL13-1
 1718 004c 0100     		.2byte	0x1
 1719 004e 50       		.byte	0x50
 1720 004f 72000000 		.4byte	.LVL16
 1721 0053 7C000000 		.4byte	.LVL17
 1722 0057 0100     		.2byte	0x1
 1723 0059 50       		.byte	0x50
 1724 005a 00000000 		.4byte	0
 1725 005e 00000000 		.4byte	0
 1726              		.section	.debug_aranges,"",%progbits
 1727 0000 2C000000 		.4byte	0x2c
 1728 0004 0200     		.2byte	0x2
 1729 0006 00000000 		.4byte	.Ldebug_info0
 1730 000a 04       		.byte	0x4
 1731 000b 00       		.byte	0
 1732 000c 0000     		.2byte	0
 1733 000e 0000     		.2byte	0
 1734 0010 00000000 		.4byte	.LFB3
 1735 0014 48000000 		.4byte	.LFE3-.LFB3
 1736 0018 00000000 		.4byte	.LFB1
 1737 001c 2C000000 		.4byte	.LFE1-.LFB1
 1738 0020 00000000 		.4byte	.LFB2
 1739 0024 C0000000 		.4byte	.LFE2-.LFB2
 1740 0028 00000000 		.4byte	0
 1741 002c 00000000 		.4byte	0
 1742              		.section	.debug_ranges,"",%progbits
 1743              	.Ldebug_ranges0:
 1744 0000 00000000 		.4byte	.LFB3
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccubcZxx.s 			page 48


 1745 0004 48000000 		.4byte	.LFE3
 1746 0008 00000000 		.4byte	.LFB1
 1747 000c 2C000000 		.4byte	.LFE1
 1748 0010 00000000 		.4byte	.LFB2
 1749 0014 C0000000 		.4byte	.LFE2
 1750 0018 00000000 		.4byte	0
 1751 001c 00000000 		.4byte	0
 1752              		.section	.debug_line,"",%progbits
 1753              	.Ldebug_line0:
 1754 0000 67010000 		.section	.debug_str,"MS",%progbits,1
 1754      0200CB00 
 1754      00000201 
 1754      FB0E0D00 
 1754      01010101 
 1755              	.LASF10:
 1756 0000 75696E74 		.ascii	"uint16\000"
 1756      313600
 1757              	.LASF89:
 1758 0007 43617053 		.ascii	"CapSense_FLASH_WD_STRUCT\000"
 1758      656E7365 
 1758      5F464C41 
 1758      53485F57 
 1758      445F5354 
 1759              	.LASF101:
 1760 0020 43617053 		.ascii	"CapSense_widgetIndex\000"
 1760      656E7365 
 1760      5F776964 
 1760      67657449 
 1760      6E646578 
 1761              	.LASF38:
 1762 0035 66696E67 		.ascii	"fingerCap\000"
 1762      65724361 
 1762      7000
 1763              	.LASF50:
 1764 003f 43617053 		.ascii	"CapSense_RAM_SNS_STRUCT\000"
 1764      656E7365 
 1764      5F52414D 
 1764      5F534E53 
 1764      5F535452 
 1765              	.LASF7:
 1766 0057 6C6F6E67 		.ascii	"long long unsigned int\000"
 1766      206C6F6E 
 1766      6720756E 
 1766      7369676E 
 1766      65642069 
 1767              	.LASF79:
 1768 006e 70747232 		.ascii	"ptr2SnsFlash\000"
 1768      536E7346 
 1768      6C617368 
 1768      00
 1769              	.LASF47:
 1770 007b 64696666 		.ascii	"diff\000"
 1770      00
 1771              	.LASF17:
 1772 0080 43617053 		.ascii	"CapSense_LOW_BSLN_RST_TYPE\000"
 1772      656E7365 
 1772      5F4C4F57 
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccubcZxx.s 			page 49


 1772      5F42534C 
 1772      4E5F5253 
 1773              	.LASF69:
 1774 009b 6873696F 		.ascii	"hsiomPtr\000"
 1774      6D507472 
 1774      00
 1775              	.LASF65:
 1776 00a4 736E7254 		.ascii	"snrTestSensorId\000"
 1776      65737453 
 1776      656E736F 
 1776      72496400 
 1777              	.LASF99:
 1778 00b4 43617053 		.ascii	"CapSense_dsFlash\000"
 1778      656E7365 
 1778      5F647346 
 1778      6C617368 
 1778      00
 1779              	.LASF16:
 1780 00c5 43617053 		.ascii	"CapSense_THRESHOLD_TYPE\000"
 1780      656E7365 
 1780      5F544852 
 1780      4553484F 
 1780      4C445F54 
 1781              	.LASF96:
 1782 00dd 43617053 		.ascii	"CapSense_CSDPostMultiScan\000"
 1782      656E7365 
 1782      5F435344 
 1782      506F7374 
 1782      4D756C74 
 1783              	.LASF43:
 1784 00f7 70726F78 		.ascii	"proximity0\000"
 1784      696D6974 
 1784      793000
 1785              	.LASF100:
 1786 0102 43617053 		.ascii	"CapSense_scanFreqIndex\000"
 1786      656E7365 
 1786      5F736361 
 1786      6E467265 
 1786      71496E64 
 1787              	.LASF6:
 1788 0119 6C6F6E67 		.ascii	"long long int\000"
 1788      206C6F6E 
 1788      6720696E 
 1788      7400
 1789              	.LASF0:
 1790 0127 7369676E 		.ascii	"signed char\000"
 1790      65642063 
 1790      68617200 
 1791              	.LASF113:
 1792 0133 43617053 		.ascii	"CapSense_SsCSDInitNextScan\000"
 1792      656E7365 
 1792      5F537343 
 1792      5344496E 
 1792      69744E65 
 1793              	.LASF59:
 1794 014e 736E7353 		.ascii	"snsStatus\000"
 1794      74617475 
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccubcZxx.s 			page 50


 1794      7300
 1795              	.LASF4:
 1796 0158 6C6F6E67 		.ascii	"long int\000"
 1796      20696E74 
 1796      00
 1797              	.LASF61:
 1798 0161 6D6F6443 		.ascii	"modCsdClk\000"
 1798      7364436C 
 1798      6B00
 1799              	.LASF81:
 1800 016b 70747232 		.ascii	"ptr2SnsRam\000"
 1800      536E7352 
 1800      616D00
 1801              	.LASF41:
 1802 0176 70726F78 		.ascii	"proxTouchTh\000"
 1802      546F7563 
 1802      68546800 
 1803              	.LASF9:
 1804 0182 75696E74 		.ascii	"uint8\000"
 1804      3800
 1805              	.LASF13:
 1806 0188 646F7562 		.ascii	"double\000"
 1806      6C6500
 1807              	.LASF67:
 1808 018f 736E7254 		.ascii	"snrTestRawCount\000"
 1808      65737452 
 1808      6177436F 
 1808      756E7400 
 1809              	.LASF77:
 1810 019f 73686966 		.ascii	"shift\000"
 1810      7400
 1811              	.LASF103:
 1812 01a5 43617053 		.ascii	"CapSense_requestScanAllWidget\000"
 1812      656E7365 
 1812      5F726571 
 1812      75657374 
 1812      5363616E 
 1813              	.LASF76:
 1814 01c3 64725368 		.ascii	"drShift\000"
 1814      69667400 
 1815              	.LASF11:
 1816 01cb 75696E74 		.ascii	"uint32\000"
 1816      333200
 1817              	.LASF31:
 1818 01d2 68797374 		.ascii	"hysteresis\000"
 1818      65726573 
 1818      697300
 1819              	.LASF112:
 1820 01dd 43617053 		.ascii	"CapSense_SsCSDPostScan\000"
 1820      656E7365 
 1820      5F537343 
 1820      5344506F 
 1820      73745363 
 1821              	.LASF74:
 1822 01f4 6D61736B 		.ascii	"mask\000"
 1822      00
 1823              	.LASF46:
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccubcZxx.s 			page 51


 1824 01f9 62736C6E 		.ascii	"bslnExt\000"
 1824      45787400 
 1825              	.LASF58:
 1826 0201 77646774 		.ascii	"wdgtStatus\000"
 1826      53746174 
 1826      757300
 1827              	.LASF102:
 1828 020c 43617053 		.ascii	"CapSense_sensorIndex\000"
 1828      656E7365 
 1828      5F73656E 
 1828      736F7249 
 1828      6E646578 
 1829              	.LASF110:
 1830 0221 47656E65 		.ascii	"Generated_Source\\PSoC4\\CapSense_INT.c\000"
 1830      72617465 
 1830      645F536F 
 1830      75726365 
 1830      5C50536F 
 1831              	.LASF45:
 1832 0247 62736C6E 		.ascii	"bsln\000"
 1832      00
 1833              	.LASF8:
 1834 024c 756E7369 		.ascii	"unsigned int\000"
 1834      676E6564 
 1834      20696E74 
 1834      00
 1835              	.LASF64:
 1836 0259 736E7254 		.ascii	"snrTestWidgetId\000"
 1836      65737457 
 1836      69646765 
 1836      74496400 
 1837              	.LASF88:
 1838 0269 70747232 		.ascii	"ptr2NoiseEnvlp\000"
 1838      4E6F6973 
 1838      65456E76 
 1838      6C7000
 1839              	.LASF5:
 1840 0278 6C6F6E67 		.ascii	"long unsigned int\000"
 1840      20756E73 
 1840      69676E65 
 1840      6420696E 
 1840      7400
 1841              	.LASF57:
 1842 028a 77646774 		.ascii	"wdgtEnable\000"
 1842      456E6162 
 1842      6C6500
 1843              	.LASF92:
 1844 0295 746D7052 		.ascii	"tmpRawData\000"
 1844      61774461 
 1844      746100
 1845              	.LASF33:
 1846 02a0 6C6F7742 		.ascii	"lowBslnRst\000"
 1846      736C6E52 
 1846      737400
 1847              	.LASF94:
 1848 02ab 70747257 		.ascii	"ptrWdgt\000"
 1848      64677400 
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccubcZxx.s 			page 52


 1849              	.LASF3:
 1850 02b3 73686F72 		.ascii	"short unsigned int\000"
 1850      7420756E 
 1850      7369676E 
 1850      65642069 
 1850      6E7400
 1851              	.LASF114:
 1852 02c6 43617053 		.ascii	"CapSense_CSDDisconnectSns\000"
 1852      656E7365 
 1852      5F435344 
 1852      44697363 
 1852      6F6E6E65 
 1853              	.LASF63:
 1854 02e0 736E734C 		.ascii	"snsList\000"
 1854      69737400 
 1855              	.LASF52:
 1856 02e8 636F6E66 		.ascii	"configId\000"
 1856      69674964 
 1856      00
 1857              	.LASF109:
 1858 02f1 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 1858      4320342E 
 1858      392E3320 
 1858      32303135 
 1858      30333033 
 1859 0324 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m0plus -mthumb -"
 1859      20726576 
 1859      6973696F 
 1859      6E203232 
 1859      31323230 
 1860 0357 67202D4F 		.ascii	"g -Os -ffunction-sections -ffat-lto-objects\000"
 1860      73202D66 
 1860      66756E63 
 1860      74696F6E 
 1860      2D736563 
 1861              	.LASF60:
 1862 0383 63736430 		.ascii	"csd0Config\000"
 1862      436F6E66 
 1862      696700
 1863              	.LASF80:
 1864 038e 70747232 		.ascii	"ptr2WdgtRam\000"
 1864      57646774 
 1864      52616D00 
 1865              	.LASF42:
 1866 039a 43617053 		.ascii	"CapSense_RAM_WD_PROXIMITY_STRUCT\000"
 1866      656E7365 
 1866      5F52414D 
 1866      5F57445F 
 1866      50524F58 
 1867              	.LASF53:
 1868 03bb 64657669 		.ascii	"deviceId\000"
 1868      63654964 
 1868      00
 1869              	.LASF15:
 1870 03c4 72656733 		.ascii	"reg32\000"
 1870      3200
 1871              	.LASF35:
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccubcZxx.s 			page 53


 1872 03ca 69646163 		.ascii	"idacMod\000"
 1872      4D6F6400 
 1873              	.LASF106:
 1874 03d2 43617053 		.ascii	"CapSense_SsCSDConnectSensorExt\000"
 1874      656E7365 
 1874      5F537343 
 1874      5344436F 
 1874      6E6E6563 
 1875              	.LASF87:
 1876 03f1 6E756D43 		.ascii	"numCols\000"
 1876      6F6C7300 
 1877              	.LASF18:
 1878 03f9 73697A65 		.ascii	"sizetype\000"
 1878      74797065 
 1878      00
 1879              	.LASF84:
 1880 0402 73746174 		.ascii	"staticConfig\000"
 1880      6963436F 
 1880      6E666967 
 1880      00
 1881              	.LASF30:
 1882 040f 6E4E6F69 		.ascii	"nNoiseTh\000"
 1882      73655468 
 1882      00
 1883              	.LASF39:
 1884 0418 73696750 		.ascii	"sigPFC\000"
 1884      464300
 1885              	.LASF86:
 1886 041f 77646774 		.ascii	"wdgtType\000"
 1886      54797065 
 1886      00
 1887              	.LASF55:
 1888 0428 7363616E 		.ascii	"scanCounter\000"
 1888      436F756E 
 1888      74657200 
 1889              	.LASF98:
 1890 0434 43617053 		.ascii	"CapSense_dsRam\000"
 1890      656E7365 
 1890      5F647352 
 1890      616D00
 1891              	.LASF54:
 1892 0443 74756E65 		.ascii	"tunerCmd\000"
 1892      72436D64 
 1892      00
 1893              	.LASF12:
 1894 044c 666C6F61 		.ascii	"float\000"
 1894      7400
 1895              	.LASF105:
 1896 0452 43617053 		.ascii	"CapSense_SsCSDSetUpIdacs\000"
 1896      656E7365 
 1896      5F537343 
 1896      53445365 
 1896      74557049 
 1897              	.LASF26:
 1898 046b 534D4152 		.ascii	"SMARTSENSE_CSD_NOISE_ENVELOPE_STRUCT\000"
 1898      5453454E 
 1898      53455F43 
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccubcZxx.s 			page 54


 1898      53445F4E 
 1898      4F495345 
 1899              	.LASF34:
 1900 0490 62736C6E 		.ascii	"bslnCoeff\000"
 1900      436F6566 
 1900      6600
 1901              	.LASF51:
 1902 049a 43617053 		.ascii	"CapSense_RAM_SNS_LIST_STRUCT\000"
 1902      656E7365 
 1902      5F52414D 
 1902      5F534E53 
 1902      5F4C4953 
 1903              	.LASF68:
 1904 04b7 43617053 		.ascii	"CapSense_RAM_STRUCT\000"
 1904      656E7365 
 1904      5F52414D 
 1904      5F535452 
 1904      55435400 
 1905              	.LASF111:
 1906 04cb 433A5C63 		.ascii	"C:\\cypress\\TalkingClock\\Talking_Clock.cydsn\000"
 1906      79707265 
 1906      73735C54 
 1906      616C6B69 
 1906      6E67436C 
 1907              	.LASF107:
 1908 04f7 43617053 		.ascii	"CapSense_SsCSDStartSample\000"
 1908      656E7365 
 1908      5F537343 
 1908      53445374 
 1908      61727453 
 1909              	.LASF1:
 1910 0511 756E7369 		.ascii	"unsigned char\000"
 1910      676E6564 
 1910      20636861 
 1910      7200
 1911              	.LASF20:
 1912 051f 70617261 		.ascii	"param1\000"
 1912      6D3100
 1913              	.LASF21:
 1914 0526 70617261 		.ascii	"param2\000"
 1914      6D3200
 1915              	.LASF22:
 1916 052d 70617261 		.ascii	"param3\000"
 1916      6D3300
 1917              	.LASF23:
 1918 0534 70617261 		.ascii	"param4\000"
 1918      6D3400
 1919              	.LASF24:
 1920 053b 70617261 		.ascii	"param5\000"
 1920      6D3500
 1921              	.LASF25:
 1922 0542 70617261 		.ascii	"param6\000"
 1922      6D3600
 1923              	.LASF2:
 1924 0549 73686F72 		.ascii	"short int\000"
 1924      7420696E 
 1924      7400
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccubcZxx.s 			page 55


 1925              	.LASF82:
 1926 0553 70747232 		.ascii	"ptr2FltrHistory\000"
 1926      466C7472 
 1926      48697374 
 1926      6F727900 
 1927              	.LASF75:
 1928 0563 6873696F 		.ascii	"hsiomShift\000"
 1928      6D536869 
 1928      667400
 1929              	.LASF72:
 1930 056e 70735074 		.ascii	"psPtr\000"
 1930      7200
 1931              	.LASF27:
 1932 0574 7265736F 		.ascii	"resolution\000"
 1932      6C757469 
 1932      6F6E00
 1933              	.LASF62:
 1934 057f 77646774 		.ascii	"wdgtList\000"
 1934      4C697374 
 1934      00
 1935              	.LASF104:
 1936 0588 43617053 		.ascii	"CapSense_curRamSnsPtr\000"
 1936      656E7365 
 1936      5F637572 
 1936      52616D53 
 1936      6E735074 
 1937              	.LASF14:
 1938 059e 63686172 		.ascii	"char\000"
 1938      00
 1939              	.LASF71:
 1940 05a3 64725074 		.ascii	"drPtr\000"
 1940      7200
 1941              	.LASF36:
 1942 05a9 736E7343 		.ascii	"snsClk\000"
 1942      6C6B00
 1943              	.LASF40:
 1944 05b0 43617053 		.ascii	"CapSense_RAM_WD_BASE_STRUCT\000"
 1944      656E7365 
 1944      5F52414D 
 1944      5F57445F 
 1944      42415345 
 1945              	.LASF95:
 1946 05cc 43617053 		.ascii	"CapSense_CSDPostSingleScan\000"
 1946      656E7365 
 1946      5F435344 
 1946      506F7374 
 1946      53696E67 
 1947              	.LASF32:
 1948 05e7 6F6E4465 		.ascii	"onDebounce\000"
 1948      626F756E 
 1948      636500
 1949              	.LASF108:
 1950 05f2 43617053 		.ascii	"CapSense_SsPostAllWidgetsScan\000"
 1950      656E7365 
 1950      5F537350 
 1950      6F737441 
 1950      6C6C5769 
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccubcZxx.s 			page 56


 1951              	.LASF49:
 1952 0610 69646163 		.ascii	"idacComp\000"
 1952      436F6D70 
 1952      00
 1953              	.LASF48:
 1954 0619 6E656742 		.ascii	"negBslnRstCnt\000"
 1954      736C6E52 
 1954      7374436E 
 1954      7400
 1955              	.LASF85:
 1956 0627 746F7461 		.ascii	"totalNumSns\000"
 1956      6C4E756D 
 1956      536E7300 
 1957              	.LASF83:
 1958 0633 70747232 		.ascii	"ptr2DebounceArr\000"
 1958      4465626F 
 1958      756E6365 
 1958      41727200 
 1959              	.LASF91:
 1960 0643 43617053 		.ascii	"CapSense_FLASH_STRUCT\000"
 1960      656E7365 
 1960      5F464C41 
 1960      53485F53 
 1960      54525543 
 1961              	.LASF78:
 1962 0659 43617053 		.ascii	"CapSense_FLASH_IO_STRUCT\000"
 1962      656E7365 
 1962      5F464C41 
 1962      53485F49 
 1962      4F5F5354 
 1963              	.LASF56:
 1964 0672 73746174 		.ascii	"status\000"
 1964      757300
 1965              	.LASF90:
 1966 0679 77646774 		.ascii	"wdgtArray\000"
 1966      41727261 
 1966      7900
 1967              	.LASF97:
 1968 0683 63757253 		.ascii	"curSnsIOPtr\000"
 1968      6E73494F 
 1968      50747200 
 1969              	.LASF37:
 1970 068f 736E7343 		.ascii	"snsClkSource\000"
 1970      6C6B536F 
 1970      75726365 
 1970      00
 1971              	.LASF28:
 1972 069c 66696E67 		.ascii	"fingerTh\000"
 1972      65725468 
 1972      00
 1973              	.LASF19:
 1974 06a5 70617261 		.ascii	"param0\000"
 1974      6D3000
 1975              	.LASF70:
 1976 06ac 70635074 		.ascii	"pcPtr\000"
 1976      7200
 1977              	.LASF44:
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccubcZxx.s 			page 57


 1978 06b2 43617053 		.ascii	"CapSense_RAM_WD_LIST_STRUCT\000"
 1978      656E7365 
 1978      5F52414D 
 1978      5F57445F 
 1978      4C495354 
 1979              	.LASF66:
 1980 06ce 736E7254 		.ascii	"snrTestScanCounter\000"
 1980      65737453 
 1980      63616E43 
 1980      6F756E74 
 1980      657200
 1981              	.LASF73:
 1982 06e1 6873696F 		.ascii	"hsiomMask\000"
 1982      6D4D6173 
 1982      6B00
 1983              	.LASF93:
 1984 06eb 746D704D 		.ascii	"tmpMaxCount\000"
 1984      6178436F 
 1984      756E7400 
 1985              	.LASF29:
 1986 06f7 6E6F6973 		.ascii	"noiseTh\000"
 1986      65546800 
 1987              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
