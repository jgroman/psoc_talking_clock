ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccw66xHk.s 			page 1


   1              		.cpu cortex-m0plus
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 4
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"CyLFClk.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.CySysClkWcoSetHighPowerMode,"ax",%progbits
  18              		.align	1
  19              		.code	16
  20              		.thumb_func
  21              		.type	CySysClkWcoSetHighPowerMode, %function
  22              	CySysClkWcoSetHighPowerMode:
  23              	.LFB0:
  24              		.file 1 "Generated_Source\\PSoC4\\CyLFClk.h"
   1:Generated_Source\PSoC4/CyLFClk.h **** /***************************************************************************//**
   2:Generated_Source\PSoC4/CyLFClk.h **** * \file .h
   3:Generated_Source\PSoC4/CyLFClk.h **** * \version 1.10
   4:Generated_Source\PSoC4/CyLFClk.h **** *
   5:Generated_Source\PSoC4/CyLFClk.h **** * \brief
   6:Generated_Source\PSoC4/CyLFClk.h **** *  This file provides the source code to API for the lfclk and wdt.
   7:Generated_Source\PSoC4/CyLFClk.h **** *
   8:Generated_Source\PSoC4/CyLFClk.h **** ********************************************************************************
   9:Generated_Source\PSoC4/CyLFClk.h **** * \copyright
  10:Generated_Source\PSoC4/CyLFClk.h **** * Copyright 2008-2016, Cypress Semiconductor Corporation.  All rights reserved.
  11:Generated_Source\PSoC4/CyLFClk.h **** * You may use this file only in accordance with the license, terms, conditions,
  12:Generated_Source\PSoC4/CyLFClk.h **** * disclaimers, and limitations in the end user license agreement accompanying
  13:Generated_Source\PSoC4/CyLFClk.h **** * the software package with which this file was provided.
  14:Generated_Source\PSoC4/CyLFClk.h **** *******************************************************************************/
  15:Generated_Source\PSoC4/CyLFClk.h **** 
  16:Generated_Source\PSoC4/CyLFClk.h **** 
  17:Generated_Source\PSoC4/CyLFClk.h **** #if !defined(CY_LFCLK_CYLIB_H)
  18:Generated_Source\PSoC4/CyLFClk.h **** #define CY_LFCLK_CYLIB_H
  19:Generated_Source\PSoC4/CyLFClk.h **** 
  20:Generated_Source\PSoC4/CyLFClk.h **** #include "cytypes.h"
  21:Generated_Source\PSoC4/CyLFClk.h **** #include "cydevice_trm.h"
  22:Generated_Source\PSoC4/CyLFClk.h **** 
  23:Generated_Source\PSoC4/CyLFClk.h **** #define CY_IP_WCO_WDT_EN           (1 == 1)
  24:Generated_Source\PSoC4/CyLFClk.h **** 
  25:Generated_Source\PSoC4/CyLFClk.h **** 
  26:Generated_Source\PSoC4/CyLFClk.h **** typedef enum
  27:Generated_Source\PSoC4/CyLFClk.h **** {
  28:Generated_Source\PSoC4/CyLFClk.h ****     CY_SYS_TIMER_WAIT = 0u,
  29:Generated_Source\PSoC4/CyLFClk.h ****     CY_SYS_TIMER_INTERRUPT = 1u
  30:Generated_Source\PSoC4/CyLFClk.h **** } cy_sys_timer_delaytype_enum;
  31:Generated_Source\PSoC4/CyLFClk.h **** 
  32:Generated_Source\PSoC4/CyLFClk.h **** 
  33:Generated_Source\PSoC4/CyLFClk.h **** /***************************************
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccw66xHk.s 			page 2


  34:Generated_Source\PSoC4/CyLFClk.h **** *    Function Prototypes
  35:Generated_Source\PSoC4/CyLFClk.h **** ***************************************/
  36:Generated_Source\PSoC4/CyLFClk.h **** /**
  37:Generated_Source\PSoC4/CyLFClk.h **** * \addtogroup group_general
  38:Generated_Source\PSoC4/CyLFClk.h **** * @{
  39:Generated_Source\PSoC4/CyLFClk.h **** */
  40:Generated_Source\PSoC4/CyLFClk.h **** /* Clocks API */
  41:Generated_Source\PSoC4/CyLFClk.h **** void CySysClkIloStart(void);
  42:Generated_Source\PSoC4/CyLFClk.h **** void CySysClkIloStop(void);
  43:Generated_Source\PSoC4/CyLFClk.h **** /** @} general */
  44:Generated_Source\PSoC4/CyLFClk.h **** 
  45:Generated_Source\PSoC4/CyLFClk.h **** /**
  46:Generated_Source\PSoC4/CyLFClk.h **** * \addtogroup group_compensate
  47:Generated_Source\PSoC4/CyLFClk.h **** * @{
  48:Generated_Source\PSoC4/CyLFClk.h **** */
  49:Generated_Source\PSoC4/CyLFClk.h **** cystatus CySysClkIloCompensate(uint32 desiredDelay, uint32 *compensatedCycles);
  50:Generated_Source\PSoC4/CyLFClk.h **** void CySysClkIloStartMeasurement(void);
  51:Generated_Source\PSoC4/CyLFClk.h **** void CySysClkIloStopMeasurement(void);
  52:Generated_Source\PSoC4/CyLFClk.h **** /** @} compensate */
  53:Generated_Source\PSoC4/CyLFClk.h **** 
  54:Generated_Source\PSoC4/CyLFClk.h **** #if(CY_IP_SRSSV2 && (!(CY_PSOC4_4100 || CY_PSOC4_4200)))
  55:Generated_Source\PSoC4/CyLFClk.h **** /**
  56:Generated_Source\PSoC4/CyLFClk.h **** * \addtogroup group_compensate
  57:Generated_Source\PSoC4/CyLFClk.h **** * @{
  58:Generated_Source\PSoC4/CyLFClk.h **** */
  59:Generated_Source\PSoC4/CyLFClk.h ****     cystatus CySysClkIloTrim(uint32 mode, int32 *iloAccuracyInPPT);
  60:Generated_Source\PSoC4/CyLFClk.h ****     cystatus CySysClkIloRestoreFactoryTrim(void);
  61:Generated_Source\PSoC4/CyLFClk.h **** /** @} compensate */
  62:Generated_Source\PSoC4/CyLFClk.h ****     cystatus CySysClkIloUpdateTrimReg(int32* iloAccuracyInPPT);
  63:Generated_Source\PSoC4/CyLFClk.h **** #endif /* (CY_IP_SRSSV2 && (!(CY_PSOC4_4100 || CY_PSOC4_4200))) */
  64:Generated_Source\PSoC4/CyLFClk.h **** 
  65:Generated_Source\PSoC4/CyLFClk.h **** #if(CY_IP_SRSSV2 && CY_IP_WCO)
  66:Generated_Source\PSoC4/CyLFClk.h **** /**
  67:Generated_Source\PSoC4/CyLFClk.h **** * \addtogroup group_general
  68:Generated_Source\PSoC4/CyLFClk.h **** * @{
  69:Generated_Source\PSoC4/CyLFClk.h **** */
  70:Generated_Source\PSoC4/CyLFClk.h ****     void CySysClkSetLfclkSource(uint32 source);
  71:Generated_Source\PSoC4/CyLFClk.h **** /** @} group_general */
  72:Generated_Source\PSoC4/CyLFClk.h **** #endif /* (CY_IP_SRSSV2 && CY_IP_WCO) */
  73:Generated_Source\PSoC4/CyLFClk.h **** 
  74:Generated_Source\PSoC4/CyLFClk.h **** #if (CY_IP_WCO)
  75:Generated_Source\PSoC4/CyLFClk.h **** /**
  76:Generated_Source\PSoC4/CyLFClk.h **** * \addtogroup group_wco
  77:Generated_Source\PSoC4/CyLFClk.h **** * @{
  78:Generated_Source\PSoC4/CyLFClk.h **** */
  79:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysClkWcoStart(void);
  80:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysClkWcoStop(void);
  81:Generated_Source\PSoC4/CyLFClk.h ****     uint32 CySysClkWcoSetPowerMode(uint32 mode);
  82:Generated_Source\PSoC4/CyLFClk.h ****     void CySysClkWcoClockOutSelect(uint32 clockSel);
  83:Generated_Source\PSoC4/CyLFClk.h **** /** @} wco */
  84:Generated_Source\PSoC4/CyLFClk.h ****     uint32 CySysClkWcoEnabled(void);
  85:Generated_Source\PSoC4/CyLFClk.h **** 
  86:Generated_Source\PSoC4/CyLFClk.h **** #endif /* (CY_IP_WCO) */
  87:Generated_Source\PSoC4/CyLFClk.h **** 
  88:Generated_Source\PSoC4/CyLFClk.h **** typedef void (*cyWdtCallback)(void);
  89:Generated_Source\PSoC4/CyLFClk.h **** 
  90:Generated_Source\PSoC4/CyLFClk.h **** #if (CY_IP_SRSSLT && CY_IP_WCO && CY_IP_WCO_WDT_EN)
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccw66xHk.s 			page 3


  91:Generated_Source\PSoC4/CyLFClk.h **** 
  92:Generated_Source\PSoC4/CyLFClk.h ****     typedef void (*cyTimerCallback)(void);
  93:Generated_Source\PSoC4/CyLFClk.h **** #endif /* (CY_IP_SRSSLT && CY_IP_WCO && CY_IP_WCO_WDT_EN) */
  94:Generated_Source\PSoC4/CyLFClk.h **** 
  95:Generated_Source\PSoC4/CyLFClk.h **** #if(CY_IP_SRSSV2)
  96:Generated_Source\PSoC4/CyLFClk.h **** /**
  97:Generated_Source\PSoC4/CyLFClk.h **** * \addtogroup group_wdtsrssv2
  98:Generated_Source\PSoC4/CyLFClk.h **** * @{
  99:Generated_Source\PSoC4/CyLFClk.h **** */
 100:Generated_Source\PSoC4/CyLFClk.h ****     /* WDT API */
 101:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysWdtLock(void);
 102:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysWdtUnlock(void);
 103:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysWdtSetMode(uint32 counterNum, uint32 mode);
 104:Generated_Source\PSoC4/CyLFClk.h ****     uint32 CySysWdtGetMode(uint32 counterNum);
 105:Generated_Source\PSoC4/CyLFClk.h ****     uint32 CySysWdtGetEnabledStatus(uint32 counterNum);
 106:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysWdtSetClearOnMatch(uint32 counterNum, uint32 enable);
 107:Generated_Source\PSoC4/CyLFClk.h ****     uint32 CySysWdtGetClearOnMatch(uint32 counterNum);
 108:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysWdtEnable(uint32 counterMask);
 109:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysWdtDisable(uint32 counterMask);
 110:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysWdtSetCascade(uint32 cascadeMask);
 111:Generated_Source\PSoC4/CyLFClk.h ****     uint32 CySysWdtGetCascade(void);
 112:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysWdtSetMatch(uint32 counterNum, uint32 match);
 113:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysWdtSetToggleBit(uint32 bits);
 114:Generated_Source\PSoC4/CyLFClk.h ****     uint32 CySysWdtGetToggleBit(void);
 115:Generated_Source\PSoC4/CyLFClk.h ****     uint32 CySysWdtGetMatch(uint32 counterNum);
 116:Generated_Source\PSoC4/CyLFClk.h ****     uint32 CySysWdtGetCount(uint32 counterNum);
 117:Generated_Source\PSoC4/CyLFClk.h ****     uint32 CySysWdtGetInterruptSource(void);
 118:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysWdtClearInterrupt(uint32 counterMask);
 119:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysWdtResetCounters(uint32 countersMask);
 120:Generated_Source\PSoC4/CyLFClk.h ****     cyWdtCallback  CySysWdtSetInterruptCallback(uint32 counterNum, cyWdtCallback function);
 121:Generated_Source\PSoC4/CyLFClk.h ****     cyWdtCallback  CySysWdtGetInterruptCallback(uint32 counterNum);
 122:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysTimerDelay(uint32 counterNum, cy_sys_timer_delaytype_enum delayType, uint32 delay);
 123:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysTimerDelayUntilMatch(uint32 counterNum, cy_sys_timer_delaytype_enum delayType, uint
 124:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysWatchdogFeed(uint32 counterNum);
 125:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysWdtEnableCounterIsr(uint32 counterNum);
 126:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysWdtDisableCounterIsr(uint32 counterNum);
 127:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysWdtIsr(void);
 128:Generated_Source\PSoC4/CyLFClk.h **** /** @} wdtsrssv2 */
 129:Generated_Source\PSoC4/CyLFClk.h **** #else
 130:Generated_Source\PSoC4/CyLFClk.h **** /**
 131:Generated_Source\PSoC4/CyLFClk.h **** * \addtogroup group_wdtsrsslite
 132:Generated_Source\PSoC4/CyLFClk.h **** * @{
 133:Generated_Source\PSoC4/CyLFClk.h **** */
 134:Generated_Source\PSoC4/CyLFClk.h ****     /* WDT API */
 135:Generated_Source\PSoC4/CyLFClk.h ****     uint32 CySysWdtGetEnabledStatus(void);
 136:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysWdtEnable(void);
 137:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysWdtDisable(void);
 138:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysWdtSetMatch(uint32 match);
 139:Generated_Source\PSoC4/CyLFClk.h ****     uint32 CySysWdtGetMatch(void);
 140:Generated_Source\PSoC4/CyLFClk.h ****     uint32 CySysWdtGetCount(void);
 141:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysWdtSetIgnoreBits(uint32 bitsNum);
 142:Generated_Source\PSoC4/CyLFClk.h ****     uint32 CySysWdtGetIgnoreBits(void);
 143:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysWdtClearInterrupt(void);
 144:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysWdtMaskInterrupt(void);
 145:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysWdtUnmaskInterrupt(void);
 146:Generated_Source\PSoC4/CyLFClk.h ****     cyWdtCallback CySysWdtSetInterruptCallback(cyWdtCallback function);
 147:Generated_Source\PSoC4/CyLFClk.h ****     cyWdtCallback CySysWdtGetInterruptCallback(void);
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccw66xHk.s 			page 4


 148:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysWdtIsr(void);
 149:Generated_Source\PSoC4/CyLFClk.h **** /** @} wdtsrsslite*/
 150:Generated_Source\PSoC4/CyLFClk.h **** #endif  /* (CY_IP_SRSSV2) */
 151:Generated_Source\PSoC4/CyLFClk.h **** 
 152:Generated_Source\PSoC4/CyLFClk.h **** 
 153:Generated_Source\PSoC4/CyLFClk.h **** #if(CY_IP_SRSSLT && CY_IP_WCO && CY_IP_WCO_WDT_EN)
 154:Generated_Source\PSoC4/CyLFClk.h **** /**
 155:Generated_Source\PSoC4/CyLFClk.h **** * \addtogroup group_deepsleepwdt
 156:Generated_Source\PSoC4/CyLFClk.h **** * @{
 157:Generated_Source\PSoC4/CyLFClk.h **** */
 158:Generated_Source\PSoC4/CyLFClk.h ****     /* WCO WDT APIs */
 159:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysClkSetTimerSource(uint32 source);
 160:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysTimerSetMode(uint32 counterNum, uint32 mode);
 161:Generated_Source\PSoC4/CyLFClk.h ****     uint32 CySysTimerGetMode(uint32 counterNum);
 162:Generated_Source\PSoC4/CyLFClk.h ****     uint32 CySysTimerGetEnabledStatus(uint32 counterNum);
 163:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysTimerSetClearOnMatch(uint32 counterNum, uint32 enable);
 164:Generated_Source\PSoC4/CyLFClk.h ****     uint32 CySysTimerGetClearOnMatch(uint32 counterNum);
 165:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysTimerEnable(uint32 counterMask);
 166:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysTimerDisable(uint32 counterMask);
 167:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysTimerSetCascade(uint32 cascadeMask);
 168:Generated_Source\PSoC4/CyLFClk.h ****     uint32 CySysTimerGetCascade(void);
 169:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysTimerSetMatch(uint32 counterNum, uint32 match);
 170:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysTimerSetToggleBit(uint32 bits);
 171:Generated_Source\PSoC4/CyLFClk.h ****     uint32 CySysTimerGetToggleBit(void);
 172:Generated_Source\PSoC4/CyLFClk.h ****     uint32 CySysTimerGetMatch(uint32 counterNum);
 173:Generated_Source\PSoC4/CyLFClk.h ****     uint32 CySysTimerGetCount(uint32 counterNum);
 174:Generated_Source\PSoC4/CyLFClk.h ****     uint32 CySysTimerGetInterruptSource(void);
 175:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysTimerClearInterrupt(uint32 counterMask);
 176:Generated_Source\PSoC4/CyLFClk.h ****     cyTimerCallback CySysTimerSetInterruptCallback(uint32 counterNum, cyTimerCallback function);
 177:Generated_Source\PSoC4/CyLFClk.h ****     cyTimerCallback CySysTimerGetInterruptCallback(uint32 counterNum);
 178:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysTimerDelay(uint32 counterNum, cy_sys_timer_delaytype_enum delayType, uint32 delay);
 179:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysTimerDelayUntilMatch(uint32 counterNum, cy_sys_timer_delaytype_enum delayType, uint
 180:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysTimerResetCounters(uint32 countersMask);
 181:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysTimerEnableIsr(uint32 counterNum);
 182:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysTimerDisableIsr(uint32 counterNum);
 183:Generated_Source\PSoC4/CyLFClk.h ****     void   CySysTimerIsr(void);
 184:Generated_Source\PSoC4/CyLFClk.h **** /** @} deepsleepwdt */
 185:Generated_Source\PSoC4/CyLFClk.h **** #endif /* (CY_IP_SRSSLT && CY_IP_WCO && CY_IP_WCO_WDT_EN) */
 186:Generated_Source\PSoC4/CyLFClk.h **** 
 187:Generated_Source\PSoC4/CyLFClk.h **** 
 188:Generated_Source\PSoC4/CyLFClk.h **** /*******************************************************************************
 189:Generated_Source\PSoC4/CyLFClk.h **** * API Constants
 190:Generated_Source\PSoC4/CyLFClk.h **** *******************************************************************************/
 191:Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_UINT16_MAX_VAL    (0xFFFFu)
 192:Generated_Source\PSoC4/CyLFClk.h **** 
 193:Generated_Source\PSoC4/CyLFClk.h **** 
 194:Generated_Source\PSoC4/CyLFClk.h **** /*******************************************************************************
 195:Generated_Source\PSoC4/CyLFClk.h **** * Clock API Constants
 196:Generated_Source\PSoC4/CyLFClk.h **** *******************************************************************************/
 197:Generated_Source\PSoC4/CyLFClk.h **** 
 198:Generated_Source\PSoC4/CyLFClk.h **** /* CySysClkIloStart()/CySysClkIloStop() - implementation definitions */
 199:Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_CLK_ILO_CONFIG_ENABLE                    ((uint32)(( uint32 )0x01u << 31u))
 200:Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_CLK_DFT_SELECT_DEFAULT_MASK              ((uint32)(( uint32 )0x0fu << 8u ))
 201:Generated_Source\PSoC4/CyLFClk.h **** 
 202:Generated_Source\PSoC4/CyLFClk.h **** /* CySysClkIloCompensate() - one ILO clock in uS multiplied on thousand */
 203:Generated_Source\PSoC4/CyLFClk.h **** #if (CY_IP_SRSSV2)
 204:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_ILO_PERIOD_PPH                   ((uint32) (0x0C35u))
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccw66xHk.s 			page 5


 205:Generated_Source\PSoC4/CyLFClk.h **** #else
 206:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_ILO_PERIOD_PPH                   ((uint32) (0x09C4u))
 207:Generated_Source\PSoC4/CyLFClk.h **** #endif /* (CY_IP_SRSSV2) */
 208:Generated_Source\PSoC4/CyLFClk.h **** 
 209:Generated_Source\PSoC4/CyLFClk.h **** /* CySysClkIloCompensate() - implementation definitions */
 210:Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_CLK_ILO_CALIBR_COMPLETE_MASK             ((uint32)(( uint32 )0x01u << 31u))
 211:Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_CLK_ILO_DFT_LSB_MASK                     ((uint32)(0x00000FFFu))
 212:Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_CLK_TRIM_OR_COMP_STARTED                 (1u)
 213:Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_CLK_TRIM_OR_COMP_FINISHED                (0u)
 214:Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_CLK_COEF_PHUNDRED                        ((uint32) (0x64u))
 215:Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_CLK_HALF_OF_CLOCK                        ((uint32) ((uint32) CY_SYS_CLK_ILO_PERIOD_P
 216:Generated_Source\PSoC4/CyLFClk.h **** 
 217:Generated_Source\PSoC4/CyLFClk.h **** /* CySysClkIloCompensate() - maximum value of desiredDelay argument */
 218:Generated_Source\PSoC4/CyLFClk.h **** #if (CY_IP_SRSSV2)
 219:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_MAX_DELAY_US                     ((uint32) (0xEE6B2800u))
 220:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_ILO_PERIOD                       ((uint32) (0x1Fu))
 221:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_ILO_FREQ_2MSB                    ((uint32) 5u)
 222:Generated_Source\PSoC4/CyLFClk.h **** #else
 223:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_MAX_DELAY_US                     ((uint32) (0x1E8480u))
 224:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_ILO_FREQ_2MSB                    ((uint32) (0x28u ))
 225:Generated_Source\PSoC4/CyLFClk.h **** 
 226:Generated_Source\PSoC4/CyLFClk.h **** 
 227:Generated_Source\PSoC4/CyLFClk.h **** /**********************************************************************************
 228:Generated_Source\PSoC4/CyLFClk.h **** * CySysClkIloCompensate() - value to walk over oversamling in calculations with srsslite.
 229:Generated_Source\PSoC4/CyLFClk.h **** * The oversample can be obtained when ilo frequency in equal 80 KHz and desired clocks 
 230:Generated_Source\PSoC4/CyLFClk.h **** * are 80 000 clocks.
 231:Generated_Source\PSoC4/CyLFClk.h **** **********************************************************************************/
 232:Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_CLK_MAX_LITE_NUMBER                     ((uint32) 53600u)
 233:Generated_Source\PSoC4/CyLFClk.h **** #endif /* (CY_IP_SRSSV2) */
 234:Generated_Source\PSoC4/CyLFClk.h **** 
 235:Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_CLK_ILO_FREQ_3LSB                       ((uint32) (0x3E8u))
 236:Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_CLK_DELAY_COUNTS_LIMIT                  ((uint32) (0xD160u))
 237:Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_CLK_MIN_DELAY_US                        ((uint32) (0x64u))
 238:Generated_Source\PSoC4/CyLFClk.h **** 
 239:Generated_Source\PSoC4/CyLFClk.h **** /* CySysClkSetLfclkSource() - parameter definitions */
 240:Generated_Source\PSoC4/CyLFClk.h **** #if (CY_IP_SRSSV2 && CY_IP_WCO)
 241:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_LFCLK_SRC_ILO                    (0u)                                  /**< 
 242:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_LFCLK_SRC_WCO                    ((uint32)(( uint32 )0x01u << 30u))    /**< 
 243:Generated_Source\PSoC4/CyLFClk.h **** #endif /* (CY_IP_SRSSV2 && CY_IP_WCO) */
 244:Generated_Source\PSoC4/CyLFClk.h **** 
 245:Generated_Source\PSoC4/CyLFClk.h **** /* CySysClkSetLfclkSource() - implementation definitions */
 246:Generated_Source\PSoC4/CyLFClk.h **** #if (CY_IP_WCO)
 247:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_LFCLK_SEL_MASK                   ((uint32)(( uint32 )0x03u << 30u))
 248:Generated_Source\PSoC4/CyLFClk.h **** #endif /* (CY_IP_WCO) */
 249:Generated_Source\PSoC4/CyLFClk.h **** 
 250:Generated_Source\PSoC4/CyLFClk.h **** /* CySysClkSetTimerSource() - implementation definitions */
 251:Generated_Source\PSoC4/CyLFClk.h **** #if (CY_IP_SRSSLT && CY_IP_WCO && CY_IP_WCO_WDT_EN)
 252:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_TIMER_SEL_MASK                   ((uint32)(( uint32 )0x03u << 30u))
 253:Generated_Source\PSoC4/CyLFClk.h **** #endif /* (CY_IP_SRSSLT && CY_IP_WCO && CY_IP_WCO_WDT_EN) */
 254:Generated_Source\PSoC4/CyLFClk.h **** 
 255:Generated_Source\PSoC4/CyLFClk.h **** /* CySysClkSetTimerSource() - parameter definitions */
 256:Generated_Source\PSoC4/CyLFClk.h **** #if (CY_IP_SRSSLT && CY_IP_WCO && CY_IP_WCO_WDT_EN)
 257:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_TIMER_SRC_ILO                (0u)                                  /**< Inte
 258:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_TIMER_SRC_WCO                ((uint32)(( uint32 )0x01u << 30u))    /**< Low 
 259:Generated_Source\PSoC4/CyLFClk.h **** #endif /* (CY_IP_SRSSLT && CY_IP_WCO && CY_IP_WCO_WDT_EN) */
 260:Generated_Source\PSoC4/CyLFClk.h **** 
 261:Generated_Source\PSoC4/CyLFClk.h **** /* CySysClkWcoClockOutSelect() - parameter definitions */
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccw66xHk.s 			page 6


 262:Generated_Source\PSoC4/CyLFClk.h **** #if (CY_IP_WCO)
 263:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_WCO_SEL_CRYSTAL                  (1u)    /**< Selects External crystal as WC
 264:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_WCO_SEL_PIN                      (0u)    /**<Selects External clock input on
 265:Generated_Source\PSoC4/CyLFClk.h **** #endif /* (CY_IP_WCO) */
 266:Generated_Source\PSoC4/CyLFClk.h **** 
 267:Generated_Source\PSoC4/CyLFClk.h **** /* CySysClkWcoClockOutSelect() - implementation definitions */
 268:Generated_Source\PSoC4/CyLFClk.h **** #if (CY_IP_WCO)
 269:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_WCO_SELECT_PIN_MASK              ((uint32)(( uint32 )0x01u << 2u))
 270:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_WCO_SELECT_PIN_OFFSET            ((uint32) 0x02u)
 271:Generated_Source\PSoC4/CyLFClk.h **** #endif /* (CY_IP_WCO) */
 272:Generated_Source\PSoC4/CyLFClk.h **** 
 273:Generated_Source\PSoC4/CyLFClk.h **** /* CySysClkIloRestoreFactoryTrim() - implementation definitions */
 274:Generated_Source\PSoC4/CyLFClk.h **** #if (CY_IP_SRSSV2 && CY_IP_WCO && (!(CY_PSOC4_4100 || CY_PSOC4_4200)))
 275:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_ILO_TRIM_DEFAULT_VALUE           ((uint8 )(0xF0u))
 276:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_ILO_TRIM_DEFAULT_MASK            ((uint32)((uint32)0x01u << 3u))
 277:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_ILO_TRIM_MASK                    ((uint32)(0x0Fu))
 278:Generated_Source\PSoC4/CyLFClk.h **** #endif /* (CY_IP_SRSSV2 && CY_IP_WCO && (!(CY_PSOC4_4100 || CY_PSOC4_4200))) */
 279:Generated_Source\PSoC4/CyLFClk.h **** 
 280:Generated_Source\PSoC4/CyLFClk.h **** /* CySysIloTrim() - parameter definitions and macros*/
 281:Generated_Source\PSoC4/CyLFClk.h **** #if (CY_IP_SRSSV2 && CY_IP_WCO && (!(CY_PSOC4_4100 || CY_PSOC4_4200)))
 282:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_BLOCKING                         (0u)
 283:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_NON_BLOCKING                     (1u)
 284:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_PERTHOUSAND                      ((uint32) 0x000003E8u )
 285:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_ABS_MACRO(x)                     ((0 > (x)) ? (-(x)) : (x))
 286:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_ERROR_RANGE                      ((uint32) 0x38u)
 287:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_TIMEOUT                          ((uint8 ) 0x05u)
 288:Generated_Source\PSoC4/CyLFClk.h **** 
 289:Generated_Source\PSoC4/CyLFClk.h ****     /* ILO error step is 7,37 % error range */
 290:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_ERROR_STEP                       (( int32) 0x02E1u)
 291:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_ERROR_COEF                       ((uint32) 0x0Au)
 292:Generated_Source\PSoC4/CyLFClk.h **** #endif /* (CY_IP_SRSSV2 && CY_IP_WCO && (!(CY_PSOC4_4100 || CY_PSOC4_4200))) */
 293:Generated_Source\PSoC4/CyLFClk.h **** 
 294:Generated_Source\PSoC4/CyLFClk.h **** #if (CY_IP_WCO)
 295:Generated_Source\PSoC4/CyLFClk.h ****     /* WCO Configuration Register */
 296:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_WCO_CONFIG_LPM_EN                (( uint32 )(( uint32 )0x01u <<  0u))
 297:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_WCO_CONFIG_LPM_AUTO              (( uint32 )(( uint32 )0x01u <<  1u))
 298:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_WCO_CONFIG_LPM_ENABLE            (( uint32 )(( uint32 )0x01u << 31u))
 299:Generated_Source\PSoC4/CyLFClk.h **** 
 300:Generated_Source\PSoC4/CyLFClk.h ****     /* WCO Status Register */
 301:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_WCO_STATUS_OUT_BLNK_A            (( uint32 )(( uint32 )0x01u <<  0u))
 302:Generated_Source\PSoC4/CyLFClk.h **** 
 303:Generated_Source\PSoC4/CyLFClk.h ****     /* WCO Trim Register */
 304:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_WCO_TRIM_XGM_MASK                (( uint32 ) 0x07u)
 305:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_WCO_TRIM_XGM_SHIFT               (( uint32 ) 0x00u)
 306:Generated_Source\PSoC4/CyLFClk.h **** 
 307:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_WCO_TRIM_XGM_3370NA              (( uint32 ) 0x00u)
 308:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_WCO_TRIM_XGM_2620NA              (( uint32 ) 0x01u)
 309:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_WCO_TRIM_XGM_2250NA              (( uint32 ) 0x02u)
 310:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_WCO_TRIM_XGM_1500NA              (( uint32 ) 0x03u)
 311:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_WCO_TRIM_XGM_1870NA              (( uint32 ) 0x04u)
 312:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_WCO_TRIM_XGM_1120NA              (( uint32 ) 0x05u)
 313:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_WCO_TRIM_XGM_750NA               (( uint32 ) 0x06u)
 314:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_WCO_TRIM_XGM_0NA                 (( uint32 ) 0x07u)
 315:Generated_Source\PSoC4/CyLFClk.h **** 
 316:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_WCO_TRIM_GM_MASK                 (( uint32 )(( uint32 )0x03u << 4u))
 317:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_WCO_TRIM_GM_SHIFT                (( uint32 ) 0x04u)
 318:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_WCO_TRIM_GM_HPM                  (( uint32 ) 0x01u)
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccw66xHk.s 			page 7


 319:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_WCO_TRIM_GM_LPM                  (( uint32 ) 0x02u)
 320:Generated_Source\PSoC4/CyLFClk.h **** #endif  /* (CY_IP_WCO) */
 321:Generated_Source\PSoC4/CyLFClk.h **** 
 322:Generated_Source\PSoC4/CyLFClk.h **** 
 323:Generated_Source\PSoC4/CyLFClk.h **** /*******************************************************************************
 324:Generated_Source\PSoC4/CyLFClk.h **** * WDT API Constants
 325:Generated_Source\PSoC4/CyLFClk.h **** *******************************************************************************/
 326:Generated_Source\PSoC4/CyLFClk.h **** #if(CY_IP_SRSSV2)
 327:Generated_Source\PSoC4/CyLFClk.h **** 
 328:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_MODE_NONE                (0u)
 329:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_MODE_INT                 (1u)
 330:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_MODE_RESET               (2u)
 331:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_MODE_INT_RESET           (3u)
 332:Generated_Source\PSoC4/CyLFClk.h **** 
 333:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_COUNTER0_MASK            ((uint32)((uint32)0x01u))           /**< Counter 0 
 334:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_COUNTER1_MASK            ((uint32)((uint32)0x01u << 8u))     /**< Counter 1 
 335:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_COUNTER2_MASK            ((uint32)((uint32)0x01u << 16u))    /**< Counter 2 
 336:Generated_Source\PSoC4/CyLFClk.h **** 
 337:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_CASCADE_NONE             ((uint32)0x00u)             /**< Neither */
 338:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_CASCADE_01               ((uint32)0x01u << 3u)       /**< Cascade 01 */
 339:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_CASCADE_12               ((uint32)0x01u << 11u)      /**< Cascade 12 */
 340:Generated_Source\PSoC4/CyLFClk.h **** 
 341:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_COUNTER0_INT             ((uint32)0x01u << 2u)
 342:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_COUNTER1_INT             ((uint32)0x01u << 10u)
 343:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_COUNTER2_INT             ((uint32)0x01u << 18u)
 344:Generated_Source\PSoC4/CyLFClk.h **** 
 345:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_COUNTER0_RESET           ((uint32)0x01u << 3u)       /**< Counter 0 */
 346:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_COUNTER1_RESET           ((uint32)0x01u << 11u)      /**< Counter 1 */
 347:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_COUNTER2_RESET           ((uint32)0x01u << 19u)      /**< Counter 2 */
 348:Generated_Source\PSoC4/CyLFClk.h **** 
 349:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_COUNTERS_RESET           (CY_SYS_WDT_COUNTER0_RESET |\
 350:Generated_Source\PSoC4/CyLFClk.h ****                                                  CY_SYS_WDT_COUNTER1_RESET |\
 351:Generated_Source\PSoC4/CyLFClk.h ****                                                  CY_SYS_WDT_COUNTER2_RESET)
 352:Generated_Source\PSoC4/CyLFClk.h **** 
 353:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_COUNTER0                 (0x00u)
 354:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_COUNTER1                 (0x01u)
 355:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_COUNTER2                 (0x02u)
 356:Generated_Source\PSoC4/CyLFClk.h **** 
 357:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_COUNTER0_OFFSET          (0x00u)
 358:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_COUNTER1_OFFSET          (0x02u)
 359:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_COUNTER2_OFFSET          (0x04u)
 360:Generated_Source\PSoC4/CyLFClk.h **** 
 361:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_MODE_MASK                ((uint32)(0x03u))
 362:Generated_Source\PSoC4/CyLFClk.h **** 
 363:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_CONFIG_BITS2_MASK        (uint32)(0x1Fu)
 364:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_CONFIG_BITS2_POS         (uint32)(24u)
 365:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_LOWER_16BITS_MASK        (uint32)(0x0000FFFFu)
 366:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_HIGHER_16BITS_MASK       (uint32)(0xFFFF0000u)
 367:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_COUNTERS_MAX             (0x03u)
 368:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_CNT_SHIFT                (0x08u)
 369:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_CNT_MATCH_CLR_SHIFT      (0x02u)
 370:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_CNT_STTS_SHIFT           (0x01u)
 371:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_CNT_MATCH_SHIFT          (0x10u)
 372:Generated_Source\PSoC4/CyLFClk.h **** 
 373:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_CLK_LOCK_BITS_MASK       ((uint32)0x03u << 14u)
 374:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_CLK_LOCK_BIT0            ((uint32)0x01u << 14u)
 375:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_CLK_LOCK_BIT1            ((uint32)0x01u << 15u)
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccw66xHk.s 			page 8


 376:Generated_Source\PSoC4/CyLFClk.h **** 
 377:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_WDT_NUM_OF_WDT                   (3u)
 378:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_WDT_NUM_OF_CALLBACKS             (3u)
 379:Generated_Source\PSoC4/CyLFClk.h **** 
 380:Generated_Source\PSoC4/CyLFClk.h ****     #else
 381:Generated_Source\PSoC4/CyLFClk.h ****         #define CY_WDT_NUM_OF_WDT               (1u)
 382:Generated_Source\PSoC4/CyLFClk.h ****         #define CY_WDT_NUM_OF_CALLBACKS         (3u)
 383:Generated_Source\PSoC4/CyLFClk.h ****         #define CY_SYS_WDT_KEY                  ((uint32)(0xACED8865u))
 384:Generated_Source\PSoC4/CyLFClk.h ****         #define CY_SYS_WDT_MATCH_MASK           ((uint32)(0x0000FFFFu))
 385:Generated_Source\PSoC4/CyLFClk.h ****         #define CY_SYS_WDT_IGNORE_BITS_MASK     ((uint32)(0x000F0000u))
 386:Generated_Source\PSoC4/CyLFClk.h ****         #define CY_SYS_WDT_IGNORE_BITS_SHIFT    ((uint32)(16u))
 387:Generated_Source\PSoC4/CyLFClk.h ****         #define CY_SYS_WDT_LOWER_BIT_MASK       ((uint32)(0x00000001u))
 388:Generated_Source\PSoC4/CyLFClk.h **** 
 389:Generated_Source\PSoC4/CyLFClk.h ****         #define CY_SYS_WDT_COUNTER0             (0x00u)
 390:Generated_Source\PSoC4/CyLFClk.h **** 
 391:Generated_Source\PSoC4/CyLFClk.h **** #endif /* (CY_IP_SRSSV2) */
 392:Generated_Source\PSoC4/CyLFClk.h **** 
 393:Generated_Source\PSoC4/CyLFClk.h **** #if (CY_IP_SRSSV2 && CY_IP_WCO)
 394:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_1LFCLK_ILO_DELAY_US    ((uint16)( 67u))
 395:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_3LFCLK_ILO_DELAY_US    ((uint16)(201u))
 396:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_1LFCLK_WCO_DELAY_US    ((uint16)( 31u))
 397:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_3LFCLK_WCO_DELAY_US    ((uint16)( 93u))
 398:Generated_Source\PSoC4/CyLFClk.h **** 
 399:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_1LFCLK_DELAY_US      \
 400:Generated_Source\PSoC4/CyLFClk.h ****         ((CY_SYS_CLK_LFCLK_SRC_ILO == (CY_SYS_WDT_CONFIG_REG & CY_SYS_CLK_LFCLK_SEL_MASK)) ? \
 401:Generated_Source\PSoC4/CyLFClk.h ****                                             (CY_SYS_WDT_1LFCLK_ILO_DELAY_US) : \
 402:Generated_Source\PSoC4/CyLFClk.h ****                                             (CY_SYS_WDT_1LFCLK_WCO_DELAY_US))
 403:Generated_Source\PSoC4/CyLFClk.h **** 
 404:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_3LFCLK_DELAY_US      \
 405:Generated_Source\PSoC4/CyLFClk.h ****         ((CY_SYS_CLK_LFCLK_SRC_ILO == (CY_SYS_WDT_CONFIG_REG & CY_SYS_CLK_LFCLK_SEL_MASK)) ? \
 406:Generated_Source\PSoC4/CyLFClk.h ****                                             (CY_SYS_WDT_3LFCLK_ILO_DELAY_US) : \
 407:Generated_Source\PSoC4/CyLFClk.h ****                                             (CY_SYS_WDT_3LFCLK_WCO_DELAY_US))
 408:Generated_Source\PSoC4/CyLFClk.h ****     #else
 409:Generated_Source\PSoC4/CyLFClk.h ****         #define CY_SYS_WDT_1LFCLK_DELAY_US      ((uint16)  (67u))
 410:Generated_Source\PSoC4/CyLFClk.h ****         #define CY_SYS_WDT_3LFCLK_DELAY_US      ((uint16) (201u))
 411:Generated_Source\PSoC4/CyLFClk.h **** #endif /* (CY_IP_SRSSV2 && !CY_IP_WCO) */
 412:Generated_Source\PSoC4/CyLFClk.h **** 
 413:Generated_Source\PSoC4/CyLFClk.h **** #if (CY_IP_SRSSLT && CY_IP_WCO && CY_IP_WCO_WDT_EN)
 414:Generated_Source\PSoC4/CyLFClk.h **** 
 415:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER_MODE_NONE              (0u)
 416:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER_MODE_INT               (1u)
 417:Generated_Source\PSoC4/CyLFClk.h **** 
 418:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER0_MASK                  ((uint32)((uint32)0x01u))           /**< Counter 0 
 419:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER1_MASK                  ((uint32)((uint32)0x01u << 8u))     /**< Counter 1 
 420:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER2_MASK                  ((uint32)((uint32)0x01u << 16u))    /**< Counter 2 
 421:Generated_Source\PSoC4/CyLFClk.h **** 
 422:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER0_RESET                 ((uint32)0x01u << 3u)       /**< Counter 0 */
 423:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER1_RESET                 ((uint32)0x01u << 11u)      /**< Counter 1 */
 424:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER2_RESET                 ((uint32)0x01u << 19u)      /**< Counter 2 */
 425:Generated_Source\PSoC4/CyLFClk.h **** 
 426:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER_RESET                  (CY_SYS_TIMER0_RESET |\
 427:Generated_Source\PSoC4/CyLFClk.h ****                                                  CY_SYS_TIMER1_RESET |\
 428:Generated_Source\PSoC4/CyLFClk.h ****                                                  CY_SYS_TIMER2_RESET)
 429:Generated_Source\PSoC4/CyLFClk.h **** 
 430:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER_CASCADE_NONE           ((uint32)0x00u)             /**< Neither */
 431:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER_CASCADE_01             ((uint32)0x01u << 3u)       /**< Cascade 01 */
 432:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER_CASCADE_12             ((uint32)0x01u << 11u)      /**< Cascade 12 */
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccw66xHk.s 			page 9


 433:Generated_Source\PSoC4/CyLFClk.h **** 
 434:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER0_INT                   ((uint32)0x01u << 2u)
 435:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER1_INT                   ((uint32)0x01u << 10u)
 436:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER2_INT                   ((uint32)0x01u << 18u)
 437:Generated_Source\PSoC4/CyLFClk.h **** 
 438:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER0                       (0x00u)
 439:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER1                       (0x01u)
 440:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER2                       (0x02u)
 441:Generated_Source\PSoC4/CyLFClk.h **** 
 442:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER_MODE_MASK              ((uint32)(0x01u))
 443:Generated_Source\PSoC4/CyLFClk.h **** 
 444:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER_CONFIG_BITS2_MASK      (uint32)(0x1Fu)
 445:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER_CONFIG_BITS2_POS       (uint32)(24u)
 446:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER_LOWER_16BITS_MASK      (uint32)(0x0000FFFFu)
 447:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER_HIGHER_16BITS_MASK     (uint32)(0xFFFF0000u)
 448:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER_COUNTERS_MAX           (0x03u)
 449:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER_CNT_SHIFT              (0x08u)
 450:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER_CNT_MATCH_CLR_SHIFT    (0x02u)
 451:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER_CNT_STTS_SHIFT         (0x01u)
 452:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER_CNT_MATCH_SHIFT        (0x10u)
 453:Generated_Source\PSoC4/CyLFClk.h **** 
 454:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_NUM_OF_TIMERS                (3u)
 455:Generated_Source\PSoC4/CyLFClk.h **** 
 456:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_SET_NEW_TIMER_SOURCE_ILO     ((uint16)(0x02u))
 457:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_SET_NEW_TIMER_SOURCE_WCO     ((uint16)(0x01u))
 458:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WCO_WDT_CLKEN_RESET_MASK     ((uint32)(0x03u))
 459:Generated_Source\PSoC4/CyLFClk.h **** 
 460:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER_1ILO_DELAY_US          ((uint16)( 67u))
 461:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER_4ILO_DELAY_US          ((uint16)(268u))
 462:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER_3ILO_DELAY_US          ((uint16)(201u))
 463:Generated_Source\PSoC4/CyLFClk.h **** 
 464:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER_1WCO_DELAY_US          ((uint16)( 31u))
 465:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER_4WCO_DELAY_US          ((uint16)(124u))
 466:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_TIMER_3WCO_DELAY_US          ((uint16)( 93u))
 467:Generated_Source\PSoC4/CyLFClk.h **** 
 468:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_1TIMER_DELAY_US      \
 469:Generated_Source\PSoC4/CyLFClk.h ****         ((CY_SYS_CLK_TIMER_SRC_ILO == (CY_SYS_WCO_WDT_CONFIG_REG & CY_SYS_CLK_TIMER_SEL_MASK)) ? \
 470:Generated_Source\PSoC4/CyLFClk.h ****                                             (CY_SYS_TIMER_1ILO_DELAY_US) : \
 471:Generated_Source\PSoC4/CyLFClk.h ****                                             (CY_SYS_TIMER_1WCO_DELAY_US))
 472:Generated_Source\PSoC4/CyLFClk.h **** 
 473:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_4TIMER_DELAY_US      \
 474:Generated_Source\PSoC4/CyLFClk.h ****         ((CY_SYS_CLK_TIMER_SRC_ILO == (CY_SYS_WCO_WDT_CONFIG_REG & CY_SYS_CLK_TIMER_SEL_MASK)) ? \
 475:Generated_Source\PSoC4/CyLFClk.h ****                                             (CY_SYS_TIMER_4WCO_DELAY_US) : \
 476:Generated_Source\PSoC4/CyLFClk.h ****                                             (CY_SYS_TIMER_4ILO_DELAY_US))
 477:Generated_Source\PSoC4/CyLFClk.h **** 
 478:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_3TIMER_DELAY_US      \
 479:Generated_Source\PSoC4/CyLFClk.h ****         ((CY_SYS_CLK_TIMER_SRC_ILO == (CY_SYS_WCO_WDT_CONFIG_REG & CY_SYS_CLK_TIMER_SEL_MASK)) ? \
 480:Generated_Source\PSoC4/CyLFClk.h ****                                             (CY_SYS_TIMER_3ILO_DELAY_US) : \
 481:Generated_Source\PSoC4/CyLFClk.h ****                                             (CY_SYS_TIMER_3WCO_DELAY_US))
 482:Generated_Source\PSoC4/CyLFClk.h **** 
 483:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_SET_CURRENT_TIMER_SOURCE_BIT      \
 484:Generated_Source\PSoC4/CyLFClk.h ****         ((CY_SYS_CLK_TIMER_SRC_ILO == (CY_SYS_WCO_WDT_CONFIG_REG & CY_SYS_CLK_TIMER_SEL_MASK)) ? \
 485:Generated_Source\PSoC4/CyLFClk.h ****                                             (CY_SYS_SET_NEW_TIMER_SOURCE_ILO) : \
 486:Generated_Source\PSoC4/CyLFClk.h ****                                             (CY_SYS_SET_NEW_TIMER_SOURCE_WCO))
 487:Generated_Source\PSoC4/CyLFClk.h **** 
 488:Generated_Source\PSoC4/CyLFClk.h **** #endif /* (CY_IP_SRSSLT && CY_IP_WCO && CY_IP_WCO_WDT_EN) */
 489:Generated_Source\PSoC4/CyLFClk.h **** 
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccw66xHk.s 			page 10


 490:Generated_Source\PSoC4/CyLFClk.h **** /* CySysClkWcoSetPowerMode() */
 491:Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_CLK_WCO_HPM                              (0x0u)     /**< High power mode */
 492:Generated_Source\PSoC4/CyLFClk.h **** #if(CY_PSOC4_4100BL || CY_PSOC4_4200BL)
 493:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_WCO_LPM                          (0x1u)     /**< Low power mode */
 494:Generated_Source\PSoC4/CyLFClk.h **** #endif /* (CY_PSOC4_4100BL || CY_PSOC4_4200BL) */
 495:Generated_Source\PSoC4/CyLFClk.h **** 
 496:Generated_Source\PSoC4/CyLFClk.h **** 
 497:Generated_Source\PSoC4/CyLFClk.h **** /*******************************************************************************
 498:Generated_Source\PSoC4/CyLFClk.h **** *       Trim Registers Constants 
 499:Generated_Source\PSoC4/CyLFClk.h **** ********************************************************************************/
 500:Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_CLK_SYS_CLK_DEVIDER                      ((uint32)0x0Au)
 501:Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_CLK_SEL_ILO_DFT_SOURCE                   ((uint32)0x00000100u)
 502:Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_CLK_FOURBITS_MAX                         (( int32)0x0f)
 503:Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_CLK_HALF_OF_STEP                         (( int32)((uint32) CY_SYS_CLK_ERROR_STEP >>
 504:Generated_Source\PSoC4/CyLFClk.h **** 
 505:Generated_Source\PSoC4/CyLFClk.h **** #if(CY_IP_SRSSV2)
 506:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_ILO_DESIRED_FREQ_HZ              (32000u)
 507:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_DFT_SELSIZE                      ((uint32) 0x3F)
 508:Generated_Source\PSoC4/CyLFClk.h ****     #else
 509:Generated_Source\PSoC4/CyLFClk.h ****         #define CY_SYS_CLK_ILO_DESIRED_FREQ_HZ          (40000u)
 510:Generated_Source\PSoC4/CyLFClk.h ****         #define CY_SYS_TST_DDFT_CTRL_REG_SEL2_CLK1      ((uint32)0x00000908u)
 511:Generated_Source\PSoC4/CyLFClk.h ****         #define CY_SYS_CLK_DFT_SELSIZE                  ((uint32) 0x0F)
 512:Generated_Source\PSoC4/CyLFClk.h **** #endif /* (CY_IP_SRSSV2) */
 513:Generated_Source\PSoC4/CyLFClk.h **** 
 514:Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_TST_DDFT_CTRL_REG_DEFAULT_MASK    ((uint32)((CY_SYS_CLK_DFT_SELSIZE << 8u) | (CY_SYS
 515:Generated_Source\PSoC4/CyLFClk.h **** 
 516:Generated_Source\PSoC4/CyLFClk.h **** #if (0u != (CY_PSOC4_4100 || CY_PSOC4_4200))
 517:Generated_Source\PSoC4/CyLFClk.h ****     #define  CY_SYS_TST_DDFT_CTRL_REG_SEL2_CLK1              ((uint32)0x00000201u)
 518:Generated_Source\PSoC4/CyLFClk.h **** #endif /* (0u != (CY_PSOC4_4100 || CY_PSOC4_4200)) */
 519:Generated_Source\PSoC4/CyLFClk.h **** 
 520:Generated_Source\PSoC4/CyLFClk.h **** #if (0u != (CY_PSOC4_4200L))
 521:Generated_Source\PSoC4/CyLFClk.h ****     #define  CY_SYS_TST_DDFT_CTRL_REG_SEL2_CLK1              ((uint32)0x00000908u)
 522:Generated_Source\PSoC4/CyLFClk.h **** #endif /* (0u != (CY_PSOC4_4200L)) */
 523:Generated_Source\PSoC4/CyLFClk.h **** 
 524:Generated_Source\PSoC4/CyLFClk.h **** #if (CY_IP_SRSSV2 && (!CY_PSOC4_4200L) && (!(CY_PSOC4_4100 || CY_PSOC4_4200)))
 525:Generated_Source\PSoC4/CyLFClk.h ****     #define  CY_SYS_TST_DDFT_CTRL_REG_SEL2_CLK1               ((uint32)0x00000B0Au)
 526:Generated_Source\PSoC4/CyLFClk.h **** #endif /* (CY_IP_SRSSV2 && (!CY_PSOC4_4200L) && (!(CY_PSOC4_4100 || CY_PSOC4_4200))) */
 527:Generated_Source\PSoC4/CyLFClk.h **** 
 528:Generated_Source\PSoC4/CyLFClk.h **** 
 529:Generated_Source\PSoC4/CyLFClk.h **** /*******************************************************************************
 530:Generated_Source\PSoC4/CyLFClk.h **** *       Trim Registers 
 531:Generated_Source\PSoC4/CyLFClk.h **** ********************************************************************************/
 532:Generated_Source\PSoC4/CyLFClk.h ****     /* DFT TST Control Register*/
 533:Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_TST_DDFT_CTRL_REG                         (*(reg32*) CYREG_TST_DDFT_CTRL)
 534:Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_CNT_CTRL_PTR                              ( (reg32*) CYREG_TST_DDFT_CTRL)
 535:Generated_Source\PSoC4/CyLFClk.h **** 
 536:Generated_Source\PSoC4/CyLFClk.h ****     /* DFT TST Counter 1 Register*/
 537:Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_CNT_REG1_REG                              (*(reg32*) CYREG_TST_TRIM_CNTR1)
 538:Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_CNT_REG1_PTR                              ( (reg32*) CYREG_TST_TRIM_CNTR1)
 539:Generated_Source\PSoC4/CyLFClk.h **** 
 540:Generated_Source\PSoC4/CyLFClk.h ****     /* DFT TST Counter 2 Register*/
 541:Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_CNT_REG2_REG                              (*(reg32*) CYREG_TST_TRIM_CNTR2)
 542:Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_CNT_REG2_PTR                              ( (reg32*) CYREG_TST_TRIM_CNTR2)
 543:Generated_Source\PSoC4/CyLFClk.h **** 
 544:Generated_Source\PSoC4/CyLFClk.h ****     /* DFT Muxes Configuration Register*/
 545:Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_CLK_DFT_REG                               (*(reg32*) CYREG_CLK_DFT_SELECT)
 546:Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_CLK_DFT_PTR                               ( (reg32*) CYREG_CLK_DFT_SELECT)
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccw66xHk.s 			page 11


 547:Generated_Source\PSoC4/CyLFClk.h **** 
 548:Generated_Source\PSoC4/CyLFClk.h ****     /* ILO Configuration Register*/
 549:Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_CLK_ILO_CONFIG_REG                        (*(reg32 *) CYREG_CLK_ILO_CONFIG)
 550:Generated_Source\PSoC4/CyLFClk.h **** #define CY_SYS_CLK_ILO_CONFIG_PTR                        ( (reg32 *) CYREG_CLK_ILO_CONFIG)
 551:Generated_Source\PSoC4/CyLFClk.h **** 
 552:Generated_Source\PSoC4/CyLFClk.h ****     /* ILO Trim Register*/
 553:Generated_Source\PSoC4/CyLFClk.h **** #if(CY_IP_SRSSV2 && CY_IP_WCO)
 554:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_ILO_TRIM_REG                      (*(reg32 *) CYREG_CLK_ILO_TRIM)
 555:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_CLK_ILO_TRIM_PTR                      ( (reg32 *) CYREG_CLK_ILO_TRIM)
 556:Generated_Source\PSoC4/CyLFClk.h **** #endif  /* (CY_IP_SRSSV2) && CY_IP_WCO*/
 557:Generated_Source\PSoC4/CyLFClk.h **** 
 558:Generated_Source\PSoC4/CyLFClk.h **** #if (CY_IP_WCO)
 559:Generated_Source\PSoC4/CyLFClk.h ****     #if (CY_PSOC4_4100BL || CY_PSOC4_4200BL)
 560:Generated_Source\PSoC4/CyLFClk.h **** 
 561:Generated_Source\PSoC4/CyLFClk.h ****         /* WCO Status Register */
 562:Generated_Source\PSoC4/CyLFClk.h ****         #define CY_SYS_CLK_WCO_STATUS_REG               (*(reg32 *) CYREG_BLE_BLESS_WCO_STATUS)
 563:Generated_Source\PSoC4/CyLFClk.h ****         #define CY_SYS_CLK_WCO_STATUS_PTR               ( (reg32 *) CYREG_BLE_BLESS_WCO_STATUS)
 564:Generated_Source\PSoC4/CyLFClk.h **** 
 565:Generated_Source\PSoC4/CyLFClk.h ****         /* WCO Configuration Register */
 566:Generated_Source\PSoC4/CyLFClk.h ****         #define CY_SYS_CLK_WCO_CONFIG_REG               (*(reg32 *) CYREG_BLE_BLESS_WCO_CONFIG)
 567:Generated_Source\PSoC4/CyLFClk.h ****         #define CY_SYS_CLK_WCO_CONFIG_PTR               ( (reg32 *) CYREG_BLE_BLESS_WCO_CONFIG)
 568:Generated_Source\PSoC4/CyLFClk.h **** 
 569:Generated_Source\PSoC4/CyLFClk.h ****         /* WCO Trim Register */
 570:Generated_Source\PSoC4/CyLFClk.h ****         #define CY_SYS_CLK_WCO_TRIM_REG                 (*(reg32 *) CYREG_BLE_BLESS_WCO_TRIM)
 571:Generated_Source\PSoC4/CyLFClk.h ****         #define CY_SYS_CLK_WCO_TRIM_PTR                 ( (reg32 *) CYREG_BLE_BLESS_WCO_TRIM)
 572:Generated_Source\PSoC4/CyLFClk.h ****     #else   /* (CY_PSOC4_4100M || CY_PSOC4_4200M) && (CY_PSOC4_4100L || CY_PSOC4_4200L) */
 573:Generated_Source\PSoC4/CyLFClk.h **** 
 574:Generated_Source\PSoC4/CyLFClk.h ****         /* WCO Status Register */
 575:Generated_Source\PSoC4/CyLFClk.h ****         #define CY_SYS_CLK_WCO_STATUS_REG               (*(reg32 *) CYREG_WCO_STATUS)
 576:Generated_Source\PSoC4/CyLFClk.h ****         #define CY_SYS_CLK_WCO_STATUS_PTR               ( (reg32 *) CYREG_WCO_STATUS)
 577:Generated_Source\PSoC4/CyLFClk.h **** 
 578:Generated_Source\PSoC4/CyLFClk.h ****         /* WCO Configuration Register */
 579:Generated_Source\PSoC4/CyLFClk.h ****         #define CY_SYS_CLK_WCO_CONFIG_REG               (*(reg32 *) CYREG_WCO_CONFIG)
 580:Generated_Source\PSoC4/CyLFClk.h ****         #define CY_SYS_CLK_WCO_CONFIG_PTR               ( (reg32 *) CYREG_WCO_CONFIG)
 581:Generated_Source\PSoC4/CyLFClk.h **** 
 582:Generated_Source\PSoC4/CyLFClk.h ****         /* WCO Trim Register */
 583:Generated_Source\PSoC4/CyLFClk.h ****         #define CY_SYS_CLK_WCO_TRIM_REG                 (*(reg32 *) CYREG_WCO_TRIM)
 584:Generated_Source\PSoC4/CyLFClk.h ****         #define CY_SYS_CLK_WCO_TRIM_PTR                 ( (reg32 *) CYREG_WCO_TRIM)
 585:Generated_Source\PSoC4/CyLFClk.h ****     #endif /* (CY_PSOC4_4100BL || CY_PSOC4_4200BL) */
 586:Generated_Source\PSoC4/CyLFClk.h **** 
 587:Generated_Source\PSoC4/CyLFClk.h **** #endif  /* (CY_IP_WCO) */
 588:Generated_Source\PSoC4/CyLFClk.h **** 
 589:Generated_Source\PSoC4/CyLFClk.h **** 
 590:Generated_Source\PSoC4/CyLFClk.h **** /*******************************************************************************
 591:Generated_Source\PSoC4/CyLFClk.h **** * WDT API Registers
 592:Generated_Source\PSoC4/CyLFClk.h **** *******************************************************************************/
 593:Generated_Source\PSoC4/CyLFClk.h **** #if(CY_IP_SRSSV2)
 594:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_CTRLOW_REG               (*(reg32 *) CYREG_WDT_CTRLOW)
 595:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_CTRLOW_PTR               ( (reg32 *) CYREG_WDT_CTRLOW)
 596:Generated_Source\PSoC4/CyLFClk.h **** 
 597:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_CTRHIGH_REG              (*(reg32 *) CYREG_WDT_CTRHIGH)
 598:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_CTRHIGH_PTR              ( (reg32 *) CYREG_WDT_CTRHIGH)
 599:Generated_Source\PSoC4/CyLFClk.h **** 
 600:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_MATCH_REG                (*(reg32 *) CYREG_WDT_MATCH)
 601:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_MATCH_PTR                ( (reg32 *) CYREG_WDT_MATCH)
 602:Generated_Source\PSoC4/CyLFClk.h **** 
 603:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_CONFIG_REG               (*(reg32 *) CYREG_WDT_CONFIG)
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccw66xHk.s 			page 12


 604:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_CONFIG_PTR               ( (reg32 *) CYREG_WDT_CONFIG)
 605:Generated_Source\PSoC4/CyLFClk.h **** 
 606:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_CONTROL_REG              (*(reg32 *) CYREG_WDT_CONTROL)
 607:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_CONTROL_PTR              ( (reg32 *) CYREG_WDT_CONTROL)
 608:Generated_Source\PSoC4/CyLFClk.h **** #else
 609:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_DISABLE_KEY_REG          (*(reg32 *) CYREG_WDT_DISABLE_KEY)
 610:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_DISABLE_KEY_PTR          ( (reg32 *) CYREG_WDT_DISABLE_KEY)
 611:Generated_Source\PSoC4/CyLFClk.h **** 
 612:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_MATCH_REG                (*(reg32 *) CYREG_WDT_MATCH)
 613:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_MATCH_PTR                ( (reg32 *) CYREG_WDT_MATCH)
 614:Generated_Source\PSoC4/CyLFClk.h **** 
 615:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_COUNTER_REG              (*(reg32 *) CYREG_WDT_COUNTER)
 616:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WDT_COUNTER_PTR              ( (reg32 *) CYREG_WDT_COUNTER)
 617:Generated_Source\PSoC4/CyLFClk.h **** 
 618:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_SRSS_INTR_REG                (*(reg32 *) CYREG_SRSS_INTR)
 619:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_SRSS_INTR_PTR                ( (reg32 *) CYREG_SRSS_INTR)
 620:Generated_Source\PSoC4/CyLFClk.h **** 
 621:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_SRSS_INTR_MASK_REG           (*(reg32 *) CYREG_SRSS_INTR_MASK)
 622:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_SRSS_INTR_MASK_PTR           ( (reg32 *) CYREG_SRSS_INTR_MASK)
 623:Generated_Source\PSoC4/CyLFClk.h **** #endif  /* (CY_IP_SRSSV2) */
 624:Generated_Source\PSoC4/CyLFClk.h **** 
 625:Generated_Source\PSoC4/CyLFClk.h **** #if (CY_IP_SRSSLT && CY_IP_WCO && CY_IP_WCO_WDT_EN)
 626:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WCO_WDT_CTRLOW_REG           (*(reg32 *) CYREG_WCO_WDT_CTRLOW)
 627:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WCO_WDT_CTRLOW_PTR           ( (reg32 *) CYREG_WCO_WDT_CTRLOW)
 628:Generated_Source\PSoC4/CyLFClk.h **** 
 629:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WCO_WDT_CTRHIGH_REG          (*(reg32 *) CYREG_WCO_WDT_CTRHIGH)
 630:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WCO_WDT_CTRHIGH_PTR          ( (reg32 *) CYREG_WCO_WDT_CTRHIGH)
 631:Generated_Source\PSoC4/CyLFClk.h **** 
 632:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WCO_WDT_MATCH_REG            (*(reg32 *) CYREG_WCO_WDT_MATCH)
 633:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WCO_WDT_MATCH_PTR            ( (reg32 *) CYREG_WCO_WDT_MATCH)
 634:Generated_Source\PSoC4/CyLFClk.h **** 
 635:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WCO_WDT_CONFIG_REG           (*(reg32 *) CYREG_WCO_WDT_CONFIG)
 636:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WCO_WDT_CONFIG_PTR           ( (reg32 *) CYREG_WCO_WDT_CONFIG)
 637:Generated_Source\PSoC4/CyLFClk.h **** 
 638:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WCO_WDT_CONTROL_REG          (*(reg32 *) CYREG_WCO_WDT_CONTROL)
 639:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WCO_WDT_CONTROL_PTR          ( (reg32 *) CYREG_WCO_WDT_CONTROL)
 640:Generated_Source\PSoC4/CyLFClk.h **** 
 641:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WCO_WDT_CLKEN_REG            (*(reg32 *) CYREG_WCO_WDT_CLKEN)
 642:Generated_Source\PSoC4/CyLFClk.h ****     #define CY_SYS_WCO_WDT_CLKEN_PTR            ( (reg32 *) CYREG_WCO_WDT_CLKEN)
 643:Generated_Source\PSoC4/CyLFClk.h **** #endif /* (CY_IP_SRSSLT && CY_IP_WCO && CY_IP_WCO_WDT_EN) */
 644:Generated_Source\PSoC4/CyLFClk.h **** 
 645:Generated_Source\PSoC4/CyLFClk.h **** #if (CY_IP_WCO)
 646:Generated_Source\PSoC4/CyLFClk.h **** 
 647:Generated_Source\PSoC4/CyLFClk.h **** 
 648:Generated_Source\PSoC4/CyLFClk.h ****     /*******************************************************************************
 649:Generated_Source\PSoC4/CyLFClk.h ****     * Function Name: CySysClkWcoSetHighPowerMode
 650:Generated_Source\PSoC4/CyLFClk.h ****     ********************************************************************************
 651:Generated_Source\PSoC4/CyLFClk.h ****     *
 652:Generated_Source\PSoC4/CyLFClk.h ****     * Summary:
 653:Generated_Source\PSoC4/CyLFClk.h ****     *  Sets the high power mode for the 32 KHz WCO.
 654:Generated_Source\PSoC4/CyLFClk.h ****     *
 655:Generated_Source\PSoC4/CyLFClk.h ****     *******************************************************************************/
 656:Generated_Source\PSoC4/CyLFClk.h ****     static CY_INLINE void CySysClkWcoSetHighPowerMode(void)
 657:Generated_Source\PSoC4/CyLFClk.h ****     {
  25              		.loc 1 657 0
  26              		.cfi_startproc
 658:Generated_Source\PSoC4/CyLFClk.h ****         /* Switch off low power mode for WCO */
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccw66xHk.s 			page 13


 659:Generated_Source\PSoC4/CyLFClk.h ****         CY_SYS_CLK_WCO_CONFIG_REG &= (uint32) ~CY_SYS_CLK_WCO_CONFIG_LPM_EN;
  27              		.loc 1 659 0
  28 0000 0120     		mov	r0, #1
  29 0002 0A4A     		ldr	r2, .L2
 660:Generated_Source\PSoC4/CyLFClk.h **** 
 661:Generated_Source\PSoC4/CyLFClk.h ****         /* Switch off auto low power mode in WCO */
 662:Generated_Source\PSoC4/CyLFClk.h ****         CY_SYS_CLK_WCO_CONFIG_REG &= ((uint32)~CY_SYS_CLK_WCO_CONFIG_LPM_AUTO);
 663:Generated_Source\PSoC4/CyLFClk.h **** 
 664:Generated_Source\PSoC4/CyLFClk.h ****         /* Restore WCO trim register HPM settings */
 665:Generated_Source\PSoC4/CyLFClk.h ****         CY_SYS_CLK_WCO_TRIM_REG = (CY_SYS_CLK_WCO_TRIM_REG & (uint32)(~CY_SYS_CLK_WCO_TRIM_GM_MASK)
 666:Generated_Source\PSoC4/CyLFClk.h ****                     | (uint32)(CY_SYS_CLK_WCO_TRIM_GM_HPM << CY_SYS_CLK_WCO_TRIM_GM_SHIFT);
 667:Generated_Source\PSoC4/CyLFClk.h ****         CY_SYS_CLK_WCO_TRIM_REG = (CY_SYS_CLK_WCO_TRIM_REG & (uint32)(~CY_SYS_CLK_WCO_TRIM_XGM_MASK
 668:Generated_Source\PSoC4/CyLFClk.h ****                     | (uint32)(CY_SYS_CLK_WCO_TRIM_XGM_2620NA << CY_SYS_CLK_WCO_TRIM_XGM_SHIFT);
 669:Generated_Source\PSoC4/CyLFClk.h ****     }
  30              		.loc 1 669 0
  31              		@ sp needed
 659:Generated_Source\PSoC4/CyLFClk.h **** 
  32              		.loc 1 659 0
  33 0004 1368     		ldr	r3, [r2]
  34 0006 8343     		bic	r3, r0
  35 0008 1360     		str	r3, [r2]
 662:Generated_Source\PSoC4/CyLFClk.h **** 
  36              		.loc 1 662 0
  37 000a 0223     		mov	r3, #2
  38 000c 1168     		ldr	r1, [r2]
  39 000e 9943     		bic	r1, r3
  40 0010 1160     		str	r1, [r2]
 665:Generated_Source\PSoC4/CyLFClk.h ****                     | (uint32)(CY_SYS_CLK_WCO_TRIM_GM_HPM << CY_SYS_CLK_WCO_TRIM_GM_SHIFT);
  41              		.loc 1 665 0
  42 0012 0749     		ldr	r1, .L2+4
  43 0014 2E33     		add	r3, r3, #46
  44 0016 0A68     		ldr	r2, [r1]
  45 0018 9A43     		bic	r2, r3
 666:Generated_Source\PSoC4/CyLFClk.h ****         CY_SYS_CLK_WCO_TRIM_REG = (CY_SYS_CLK_WCO_TRIM_REG & (uint32)(~CY_SYS_CLK_WCO_TRIM_XGM_MASK
  46              		.loc 1 666 0
  47 001a 203B     		sub	r3, r3, #32
  48 001c 1A43     		orr	r2, r3
 665:Generated_Source\PSoC4/CyLFClk.h ****                     | (uint32)(CY_SYS_CLK_WCO_TRIM_GM_HPM << CY_SYS_CLK_WCO_TRIM_GM_SHIFT);
  49              		.loc 1 665 0
  50 001e 0A60     		str	r2, [r1]
 667:Generated_Source\PSoC4/CyLFClk.h ****                     | (uint32)(CY_SYS_CLK_WCO_TRIM_XGM_2620NA << CY_SYS_CLK_WCO_TRIM_XGM_SHIFT);
  51              		.loc 1 667 0
  52 0020 0722     		mov	r2, #7
  53 0022 0B68     		ldr	r3, [r1]
  54 0024 9343     		bic	r3, r2
 668:Generated_Source\PSoC4/CyLFClk.h ****     }
  55              		.loc 1 668 0
  56 0026 0343     		orr	r3, r0
 667:Generated_Source\PSoC4/CyLFClk.h ****                     | (uint32)(CY_SYS_CLK_WCO_TRIM_XGM_2620NA << CY_SYS_CLK_WCO_TRIM_XGM_SHIFT);
  57              		.loc 1 667 0
  58 0028 0B60     		str	r3, [r1]
  59              		.loc 1 669 0
  60 002a 7047     		bx	lr
  61              	.L3:
  62              		.align	2
  63              	.L2:
  64 002c 00000640 		.word	1074135040
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccw66xHk.s 			page 14


  65 0030 000F0640 		.word	1074138880
  66              		.cfi_endproc
  67              	.LFE0:
  68              		.size	CySysClkWcoSetHighPowerMode, .-CySysClkWcoSetHighPowerMode
  69              		.section	.text.CySysClkIloStart,"ax",%progbits
  70              		.align	1
  71              		.global	CySysClkIloStart
  72              		.code	16
  73              		.thumb_func
  74              		.type	CySysClkIloStart, %function
  75              	CySysClkIloStart:
  76              	.LFB1:
  77              		.file 2 "Generated_Source\\PSoC4\\CyLFClk.c"
   1:Generated_Source\PSoC4/CyLFClk.c **** /***************************************************************************//**
   2:Generated_Source\PSoC4/CyLFClk.c **** * \file .c
   3:Generated_Source\PSoC4/CyLFClk.c **** * \version 1.10
   4:Generated_Source\PSoC4/CyLFClk.c **** *
   5:Generated_Source\PSoC4/CyLFClk.c **** * \brief
   6:Generated_Source\PSoC4/CyLFClk.c **** *  This file provides the source code for configuring watchdog timers WDTs, 
   7:Generated_Source\PSoC4/CyLFClk.c **** *  low frequency clocks (LFCLK) and the Real-time Clock (RTC) component in
   8:Generated_Source\PSoC4/CyLFClk.c **** *  PSoC Creator for the PSoC 4 families.
   9:Generated_Source\PSoC4/CyLFClk.c **** *
  10:Generated_Source\PSoC4/CyLFClk.c **** ********************************************************************************
  11:Generated_Source\PSoC4/CyLFClk.c **** * \copyright
  12:Generated_Source\PSoC4/CyLFClk.c **** * Copyright 2008-2016, Cypress Semiconductor Corporation.  All rights reserved.
  13:Generated_Source\PSoC4/CyLFClk.c **** * You may use this file only in accordance with the license, terms, conditions,
  14:Generated_Source\PSoC4/CyLFClk.c **** * disclaimers, and limitations in the end user license agreement accompanying
  15:Generated_Source\PSoC4/CyLFClk.c **** * the software package with which this file was provided.
  16:Generated_Source\PSoC4/CyLFClk.c **** *******************************************************************************/
  17:Generated_Source\PSoC4/CyLFClk.c **** 
  18:Generated_Source\PSoC4/CyLFClk.c **** 
  19:Generated_Source\PSoC4/CyLFClk.c **** #include "CyLFClk.h"
  20:Generated_Source\PSoC4/CyLFClk.c **** #include "CyLib.h"
  21:Generated_Source\PSoC4/CyLFClk.c **** 
  22:Generated_Source\PSoC4/CyLFClk.c **** #if (CY_IP_WCO && CY_IP_SRSSV2)
  23:Generated_Source\PSoC4/CyLFClk.c ****     static uint32 CySysClkGetLfclkSource(void);
  24:Generated_Source\PSoC4/CyLFClk.c **** #endif /* (CY_IP_WCO && CY_IP_SRSSV2) */
  25:Generated_Source\PSoC4/CyLFClk.c **** 
  26:Generated_Source\PSoC4/CyLFClk.c **** 
  27:Generated_Source\PSoC4/CyLFClk.c **** #if(CY_IP_SRSSV2 && (!(CY_PSOC4_4100 || CY_PSOC4_4200)))
  28:Generated_Source\PSoC4/CyLFClk.c ****     /* Default Ilo Trim Register value for ILO trimming*/
  29:Generated_Source\PSoC4/CyLFClk.c ****     static volatile uint16 defaultIloTrimRegValue = CY_SYS_CLK_ILO_TRIM_DEFAULT_VALUE;
  30:Generated_Source\PSoC4/CyLFClk.c **** #endif /* (CY_IP_SRSSV2 && (!(CY_PSOC4_4100 || CY_PSOC4_4200))) */
  31:Generated_Source\PSoC4/CyLFClk.c **** 
  32:Generated_Source\PSoC4/CyLFClk.c **** #if(CY_IP_SRSSV2)
  33:Generated_Source\PSoC4/CyLFClk.c ****     /* CySysClkLfclkPosedgeCatch() / CySysClkLfclkPosedgeRestore() */
  34:Generated_Source\PSoC4/CyLFClk.c ****     static uint32 lfclkPosedgeWdtCounter0Enabled = 0u;
  35:Generated_Source\PSoC4/CyLFClk.c ****     static uint32 lfclkPosedgeWdtCounter0Mode    = CY_SYS_WDT_MODE_NONE;
  36:Generated_Source\PSoC4/CyLFClk.c **** 
  37:Generated_Source\PSoC4/CyLFClk.c ****     static volatile uint32 disableServicedIsr = 0uL;
  38:Generated_Source\PSoC4/CyLFClk.c ****     static volatile uint32 wdtIsrMask = CY_SYS_WDT_COUNTER0_INT |\
  39:Generated_Source\PSoC4/CyLFClk.c ****                                         CY_SYS_WDT_COUNTER1_INT |\
  40:Generated_Source\PSoC4/CyLFClk.c ****                                         CY_SYS_WDT_COUNTER2_INT;
  41:Generated_Source\PSoC4/CyLFClk.c **** 
  42:Generated_Source\PSoC4/CyLFClk.c ****     static const uint32 counterIntMaskTbl[CY_WDT_NUM_OF_WDT] = {CY_SYS_WDT_COUNTER0_INT,
  43:Generated_Source\PSoC4/CyLFClk.c ****                                                                 CY_SYS_WDT_COUNTER1_INT,
  44:Generated_Source\PSoC4/CyLFClk.c ****                                                                 CY_SYS_WDT_COUNTER2_INT};
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccw66xHk.s 			page 15


  45:Generated_Source\PSoC4/CyLFClk.c **** 
  46:Generated_Source\PSoC4/CyLFClk.c ****     static void CySysClkLfclkPosedgeCatch(void);
  47:Generated_Source\PSoC4/CyLFClk.c ****     static void CySysClkLfclkPosedgeRestore(void);
  48:Generated_Source\PSoC4/CyLFClk.c **** 
  49:Generated_Source\PSoC4/CyLFClk.c ****     static uint32 CySysWdtLocked(void);
  50:Generated_Source\PSoC4/CyLFClk.c ****     static uint32 CySysClkIloEnabled(void);
  51:Generated_Source\PSoC4/CyLFClk.c **** #endif /* (CY_IP_SRSSV2) */
  52:Generated_Source\PSoC4/CyLFClk.c **** 
  53:Generated_Source\PSoC4/CyLFClk.c **** #if (CY_IP_SRSSLT && CY_IP_WCO && CY_IP_WCO_WDT_EN)
  54:Generated_Source\PSoC4/CyLFClk.c ****     static uint32 CySysClkGetTimerSource(void);
  55:Generated_Source\PSoC4/CyLFClk.c ****     static volatile uint32 disableTimerServicedIsr = 0uL;
  56:Generated_Source\PSoC4/CyLFClk.c ****     static volatile uint32 timerIsrMask = CY_SYS_TIMER0_INT |\
  57:Generated_Source\PSoC4/CyLFClk.c ****                                           CY_SYS_TIMER1_INT |\
  58:Generated_Source\PSoC4/CyLFClk.c ****                                           CY_SYS_TIMER2_INT;
  59:Generated_Source\PSoC4/CyLFClk.c **** 
  60:Generated_Source\PSoC4/CyLFClk.c ****     static const uint32 counterTimerIntMaskTbl[CY_SYS_NUM_OF_TIMERS] = {CY_SYS_TIMER0_INT,
  61:Generated_Source\PSoC4/CyLFClk.c ****                                                                         CY_SYS_TIMER1_INT,
  62:Generated_Source\PSoC4/CyLFClk.c ****                                                                         CY_SYS_TIMER2_INT};
  63:Generated_Source\PSoC4/CyLFClk.c **** 
  64:Generated_Source\PSoC4/CyLFClk.c ****     static cyTimerCallback cySysTimerCallback[CY_SYS_NUM_OF_TIMERS] = {(void *)0, (void *)0, (void 
  65:Generated_Source\PSoC4/CyLFClk.c **** #endif /* (CY_IP_SRSSLT && CY_IP_WCO && CY_IP_WCO_DWT_EN) */
  66:Generated_Source\PSoC4/CyLFClk.c **** 
  67:Generated_Source\PSoC4/CyLFClk.c **** #if(CY_IP_SRSSV2)
  68:Generated_Source\PSoC4/CyLFClk.c ****     static cyWdtCallback cySysWdtCallback[CY_WDT_NUM_OF_WDT] = {(void *)0, (void *)0, (void *)0};
  69:Generated_Source\PSoC4/CyLFClk.c **** #else
  70:Generated_Source\PSoC4/CyLFClk.c ****     static cyWdtCallback cySysWdtCallback = (void *)0;
  71:Generated_Source\PSoC4/CyLFClk.c **** #endif /* (CY_IP_SRSSV2) */
  72:Generated_Source\PSoC4/CyLFClk.c **** 
  73:Generated_Source\PSoC4/CyLFClk.c **** 
  74:Generated_Source\PSoC4/CyLFClk.c **** /*******************************************************************************
  75:Generated_Source\PSoC4/CyLFClk.c **** * Function Name: CySysClkIloStart
  76:Generated_Source\PSoC4/CyLFClk.c **** ****************************************************************************//**
  77:Generated_Source\PSoC4/CyLFClk.c **** * \brief
  78:Generated_Source\PSoC4/CyLFClk.c **** *  Enables ILO.
  79:Generated_Source\PSoC4/CyLFClk.c **** *
  80:Generated_Source\PSoC4/CyLFClk.c **** *  Refer to the device datasheet for the ILO startup time.
  81:Generated_Source\PSoC4/CyLFClk.c **** *
  82:Generated_Source\PSoC4/CyLFClk.c **** *******************************************************************************/
  83:Generated_Source\PSoC4/CyLFClk.c **** void CySysClkIloStart(void)
  84:Generated_Source\PSoC4/CyLFClk.c **** {
  78              		.loc 2 84 0
  79              		.cfi_startproc
  85:Generated_Source\PSoC4/CyLFClk.c ****     CY_SYS_CLK_ILO_CONFIG_REG |= CY_SYS_CLK_ILO_CONFIG_ENABLE;
  80              		.loc 2 85 0
  81 0000 8021     		mov	r1, #128
  82 0002 034A     		ldr	r2, .L5
  83 0004 0906     		lsl	r1, r1, #24
  84 0006 1368     		ldr	r3, [r2]
  86:Generated_Source\PSoC4/CyLFClk.c **** }
  85              		.loc 2 86 0
  86              		@ sp needed
  85:Generated_Source\PSoC4/CyLFClk.c ****     CY_SYS_CLK_ILO_CONFIG_REG |= CY_SYS_CLK_ILO_CONFIG_ENABLE;
  87              		.loc 2 85 0
  88 0008 0B43     		orr	r3, r1
  89 000a 1360     		str	r3, [r2]
  90              		.loc 2 86 0
  91 000c 7047     		bx	lr
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccw66xHk.s 			page 16


  92              	.L6:
  93 000e C046     		.align	2
  94              	.L5:
  95 0010 2C000340 		.word	1073938476
  96              		.cfi_endproc
  97              	.LFE1:
  98              		.size	CySysClkIloStart, .-CySysClkIloStart
  99              		.section	.text.CySysClkIloStop,"ax",%progbits
 100              		.align	1
 101              		.global	CySysClkIloStop
 102              		.code	16
 103              		.thumb_func
 104              		.type	CySysClkIloStop, %function
 105              	CySysClkIloStop:
 106              	.LFB2:
  87:Generated_Source\PSoC4/CyLFClk.c **** 
  88:Generated_Source\PSoC4/CyLFClk.c **** 
  89:Generated_Source\PSoC4/CyLFClk.c **** /*******************************************************************************
  90:Generated_Source\PSoC4/CyLFClk.c **** * Function Name: CySysClkIloStop
  91:Generated_Source\PSoC4/CyLFClk.c **** ****************************************************************************//**
  92:Generated_Source\PSoC4/CyLFClk.c **** * \brief
  93:Generated_Source\PSoC4/CyLFClk.c **** *  Disables the ILO.
  94:Generated_Source\PSoC4/CyLFClk.c **** *
  95:Generated_Source\PSoC4/CyLFClk.c **** *  This function has no effect if WDT is locked (CySysWdtLock() is
  96:Generated_Source\PSoC4/CyLFClk.c **** *  called). Call CySysWdtUnlock() to unlock WDT and stop ILO.
  97:Generated_Source\PSoC4/CyLFClk.c **** *
  98:Generated_Source\PSoC4/CyLFClk.c **** *  PSoC 4100 / PSoC 4200: Note that ILO is required for WDT's operation.
  99:Generated_Source\PSoC4/CyLFClk.c **** *
 100:Generated_Source\PSoC4/CyLFClk.c **** *  PSoC 4100 BLE / PSoC 4200 BLE / PSoC 4200L / PSoC 4100M / 
 101:Generated_Source\PSoC4/CyLFClk.c **** *  PSoC 4200M:
 102:Generated_Source\PSoC4/CyLFClk.c **** *  Stopping ILO affects the peripheral clocked by LFCLK, if
 103:Generated_Source\PSoC4/CyLFClk.c **** *  LFCLK is configured to be sourced by ILO.
 104:Generated_Source\PSoC4/CyLFClk.c **** *
 105:Generated_Source\PSoC4/CyLFClk.c **** *  If the ILO is disabled, all blocks run by ILO will stop functioning.
 106:Generated_Source\PSoC4/CyLFClk.c **** *
 107:Generated_Source\PSoC4/CyLFClk.c **** *******************************************************************************/
 108:Generated_Source\PSoC4/CyLFClk.c **** void CySysClkIloStop(void)
 109:Generated_Source\PSoC4/CyLFClk.c **** {
 107              		.loc 2 109 0
 108              		.cfi_startproc
 110:Generated_Source\PSoC4/CyLFClk.c ****     #if(CY_IP_SRSSV2)
 111:Generated_Source\PSoC4/CyLFClk.c ****         uint8  interruptState;
 112:Generated_Source\PSoC4/CyLFClk.c **** 
 113:Generated_Source\PSoC4/CyLFClk.c ****         /* Do nothing if WDT is locked or ILO is disabled */
 114:Generated_Source\PSoC4/CyLFClk.c ****         if (0u == CySysWdtLocked())
 115:Generated_Source\PSoC4/CyLFClk.c ****         {
 116:Generated_Source\PSoC4/CyLFClk.c ****             if (0u != CySysClkIloEnabled())
 117:Generated_Source\PSoC4/CyLFClk.c ****             {
 118:Generated_Source\PSoC4/CyLFClk.c **** 
 119:Generated_Source\PSoC4/CyLFClk.c ****             #if (CY_IP_WCO)
 120:Generated_Source\PSoC4/CyLFClk.c ****                 if (CY_SYS_CLK_LFCLK_SRC_ILO == CySysClkGetLfclkSource())
 121:Generated_Source\PSoC4/CyLFClk.c ****                 {
 122:Generated_Source\PSoC4/CyLFClk.c ****             #endif /* (CY_IP_WCO) */
 123:Generated_Source\PSoC4/CyLFClk.c **** 
 124:Generated_Source\PSoC4/CyLFClk.c ****                 interruptState = CyEnterCriticalSection();
 125:Generated_Source\PSoC4/CyLFClk.c ****                 CySysClkLfclkPosedgeCatch();
 126:Generated_Source\PSoC4/CyLFClk.c ****                 CY_SYS_CLK_ILO_CONFIG_REG &= (uint32) ( ~(uint32)CY_SYS_CLK_ILO_CONFIG_ENABLE);
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccw66xHk.s 			page 17


 127:Generated_Source\PSoC4/CyLFClk.c ****                 CySysClkLfclkPosedgeRestore();
 128:Generated_Source\PSoC4/CyLFClk.c ****                 CyExitCriticalSection(interruptState);
 129:Generated_Source\PSoC4/CyLFClk.c **** 
 130:Generated_Source\PSoC4/CyLFClk.c ****             #if (CY_IP_WCO)
 131:Generated_Source\PSoC4/CyLFClk.c ****                 }
 132:Generated_Source\PSoC4/CyLFClk.c ****                 else /* Safe to disable - shortened pulse does not impact peripheral */
 133:Generated_Source\PSoC4/CyLFClk.c ****                 {
 134:Generated_Source\PSoC4/CyLFClk.c ****                     CY_SYS_CLK_ILO_CONFIG_REG &= (uint32) ( ~(uint32)CY_SYS_CLK_ILO_CONFIG_ENABLE);
 135:Generated_Source\PSoC4/CyLFClk.c ****                 }
 136:Generated_Source\PSoC4/CyLFClk.c ****             #endif /* (CY_IP_WCO) */
 137:Generated_Source\PSoC4/CyLFClk.c **** 
 138:Generated_Source\PSoC4/CyLFClk.c ****             }
 139:Generated_Source\PSoC4/CyLFClk.c ****         }
 140:Generated_Source\PSoC4/CyLFClk.c ****     #else
 141:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_CLK_ILO_CONFIG_REG &= ( uint32 ) ( ~( uint32 )CY_SYS_CLK_ILO_CONFIG_ENABLE);
 109              		.loc 2 141 0
 110 0000 024A     		ldr	r2, .L8
 142:Generated_Source\PSoC4/CyLFClk.c ****     #endif /* (CY_IP_SRSSV2) */
 143:Generated_Source\PSoC4/CyLFClk.c **** }
 111              		.loc 2 143 0
 112              		@ sp needed
 141:Generated_Source\PSoC4/CyLFClk.c ****     #endif /* (CY_IP_SRSSV2) */
 113              		.loc 2 141 0
 114 0002 1368     		ldr	r3, [r2]
 115 0004 5B00     		lsl	r3, r3, #1
 116 0006 5B08     		lsr	r3, r3, #1
 117 0008 1360     		str	r3, [r2]
 118              		.loc 2 143 0
 119 000a 7047     		bx	lr
 120              	.L9:
 121              		.align	2
 122              	.L8:
 123 000c 2C000340 		.word	1073938476
 124              		.cfi_endproc
 125              	.LFE2:
 126              		.size	CySysClkIloStop, .-CySysClkIloStop
 127              		.section	.text.CySysClkIloStartMeasurement,"ax",%progbits
 128              		.align	1
 129              		.global	CySysClkIloStartMeasurement
 130              		.code	16
 131              		.thumb_func
 132              		.type	CySysClkIloStartMeasurement, %function
 133              	CySysClkIloStartMeasurement:
 134              	.LFB3:
 144:Generated_Source\PSoC4/CyLFClk.c **** 
 145:Generated_Source\PSoC4/CyLFClk.c **** 
 146:Generated_Source\PSoC4/CyLFClk.c **** /******************************************************************************
 147:Generated_Source\PSoC4/CyLFClk.c **** * Function Name: CySysClkIloStartMeasurement
 148:Generated_Source\PSoC4/CyLFClk.c **** ***************************************************************************//**
 149:Generated_Source\PSoC4/CyLFClk.c **** * \brief
 150:Generated_Source\PSoC4/CyLFClk.c **** * Starts the ILO accuracy measurement.
 151:Generated_Source\PSoC4/CyLFClk.c **** *
 152:Generated_Source\PSoC4/CyLFClk.c **** * This function is non-blocking and needs to be called before using the 
 153:Generated_Source\PSoC4/CyLFClk.c **** * CySysClkIloTrim() and CySysClkIloCompensate() API.
 154:Generated_Source\PSoC4/CyLFClk.c **** *
 155:Generated_Source\PSoC4/CyLFClk.c **** * This API configures measurement counters to be sourced by SysClk (Counter 1)
 156:Generated_Source\PSoC4/CyLFClk.c **** * and ILO (Counter 2). 
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccw66xHk.s 			page 18


 157:Generated_Source\PSoC4/CyLFClk.c **** *
 158:Generated_Source\PSoC4/CyLFClk.c **** * \note SysClk should be sourced by IMO. Otherwise CySysClkIloTrim() and 
 159:Generated_Source\PSoC4/CyLFClk.c **** * CySysClkIloCompensate() API can give incorrect results.
 160:Generated_Source\PSoC4/CyLFClk.c **** *
 161:Generated_Source\PSoC4/CyLFClk.c **** * In addition, this API stores the factory ILO trim settings on the first call 
 162:Generated_Source\PSoC4/CyLFClk.c **** * after reset. This stored factory setting is used by the 
 163:Generated_Source\PSoC4/CyLFClk.c **** * CySysClkIloRestoreFactoryTrim() API to restore the ILO factory trim. 
 164:Generated_Source\PSoC4/CyLFClk.c **** * Hence, it is important to call this API before restoring the ILO 
 165:Generated_Source\PSoC4/CyLFClk.c **** * factory trim settings.
 166:Generated_Source\PSoC4/CyLFClk.c **** *
 167:Generated_Source\PSoC4/CyLFClk.c **** ******************************************************************************/
 168:Generated_Source\PSoC4/CyLFClk.c **** void CySysClkIloStartMeasurement(void)
 169:Generated_Source\PSoC4/CyLFClk.c **** {
 135              		.loc 2 169 0
 136              		.cfi_startproc
 170:Generated_Source\PSoC4/CyLFClk.c **** #if(CY_IP_SRSSV2 && (!(CY_PSOC4_4100 || CY_PSOC4_4200)))
 171:Generated_Source\PSoC4/CyLFClk.c ****     static uint8 iloTrimTrig = 0u;
 172:Generated_Source\PSoC4/CyLFClk.c **** 
 173:Generated_Source\PSoC4/CyLFClk.c ****     /* Write default ILO trim value while ILO starting ( Cypress ID 225244 )*/
 174:Generated_Source\PSoC4/CyLFClk.c ****     if (0u == iloTrimTrig)
 175:Generated_Source\PSoC4/CyLFClk.c ****     {
 176:Generated_Source\PSoC4/CyLFClk.c ****         defaultIloTrimRegValue = ((uint8)(CY_SYS_CLK_ILO_TRIM_REG & CY_SYS_CLK_ILO_TRIM_MASK));
 177:Generated_Source\PSoC4/CyLFClk.c ****         iloTrimTrig = 1u;
 178:Generated_Source\PSoC4/CyLFClk.c ****     }
 179:Generated_Source\PSoC4/CyLFClk.c **** #endif /* (CY_IP_SRSSV2 && (!(CY_PSOC4_4100 || CY_PSOC4_4200))) */
 180:Generated_Source\PSoC4/CyLFClk.c **** 
 181:Generated_Source\PSoC4/CyLFClk.c ****     /* Configure measurement counters to source by SysClk (Counter 1) and ILO (Counter 2)*/
 182:Generated_Source\PSoC4/CyLFClk.c ****     CY_SYS_CLK_DFT_REG = (CY_SYS_CLK_DFT_REG & (uint32) ~CY_SYS_CLK_DFT_SELECT_DEFAULT_MASK) |
 137              		.loc 2 182 0
 138 0000 074A     		ldr	r2, .L11
 139 0002 084B     		ldr	r3, .L11+4
 140 0004 1168     		ldr	r1, [r2]
 183:Generated_Source\PSoC4/CyLFClk.c ****                             CY_SYS_CLK_SEL_ILO_DFT_SOURCE; 
 184:Generated_Source\PSoC4/CyLFClk.c **** 
 185:Generated_Source\PSoC4/CyLFClk.c ****     CY_SYS_TST_DDFT_CTRL_REG = (CY_SYS_TST_DDFT_CTRL_REG & (uint32) ~ CY_SYS_TST_DDFT_CTRL_REG_DEFA
 186:Generated_Source\PSoC4/CyLFClk.c ****                             CY_SYS_TST_DDFT_CTRL_REG_SEL2_CLK1;
 187:Generated_Source\PSoC4/CyLFClk.c **** }
 141              		.loc 2 187 0
 142              		@ sp needed
 182:Generated_Source\PSoC4/CyLFClk.c ****                             CY_SYS_CLK_SEL_ILO_DFT_SOURCE; 
 143              		.loc 2 182 0
 144 0006 0B40     		and	r3, r1
 145 0008 8021     		mov	r1, #128
 146 000a 4900     		lsl	r1, r1, #1
 147 000c 0B43     		orr	r3, r1
 148 000e 1360     		str	r3, [r2]
 185:Generated_Source\PSoC4/CyLFClk.c ****                             CY_SYS_TST_DDFT_CTRL_REG_SEL2_CLK1;
 149              		.loc 2 185 0
 150 0010 054A     		ldr	r2, .L11+8
 151 0012 064B     		ldr	r3, .L11+12
 152 0014 1168     		ldr	r1, [r2]
 153 0016 0B40     		and	r3, r1
 154 0018 0549     		ldr	r1, .L11+16
 155 001a 0B43     		orr	r3, r1
 156 001c 1360     		str	r3, [r2]
 157              		.loc 2 187 0
 158 001e 7047     		bx	lr
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccw66xHk.s 			page 19


 159              	.L12:
 160              		.align	2
 161              	.L11:
 162 0020 34000340 		.word	1073938484
 163 0024 FFF0FFFF 		.word	-3841
 164 0028 18000340 		.word	1073938456
 165 002c F0F0FFFF 		.word	-3856
 166 0030 08090000 		.word	2312
 167              		.cfi_endproc
 168              	.LFE3:
 169              		.size	CySysClkIloStartMeasurement, .-CySysClkIloStartMeasurement
 170              		.section	.text.CySysClkIloStopMeasurement,"ax",%progbits
 171              		.align	1
 172              		.global	CySysClkIloStopMeasurement
 173              		.code	16
 174              		.thumb_func
 175              		.type	CySysClkIloStopMeasurement, %function
 176              	CySysClkIloStopMeasurement:
 177              	.LFB4:
 188:Generated_Source\PSoC4/CyLFClk.c **** 
 189:Generated_Source\PSoC4/CyLFClk.c **** 
 190:Generated_Source\PSoC4/CyLFClk.c **** /******************************************************************************
 191:Generated_Source\PSoC4/CyLFClk.c **** * Function Name: CySysClkIloStopMeasurement
 192:Generated_Source\PSoC4/CyLFClk.c **** ***************************************************************************//**
 193:Generated_Source\PSoC4/CyLFClk.c **** * \brief
 194:Generated_Source\PSoC4/CyLFClk.c **** * Stops the ILO accuracy measurement.
 195:Generated_Source\PSoC4/CyLFClk.c **** *
 196:Generated_Source\PSoC4/CyLFClk.c **** * Calling this function immediately stops the the ILO frequency measurement.
 197:Generated_Source\PSoC4/CyLFClk.c **** * This function should be called before placing the device to deepsleep, if 
 198:Generated_Source\PSoC4/CyLFClk.c **** * CySysClkIloStartMeasurement() API was called before. 
 199:Generated_Source\PSoC4/CyLFClk.c **** *
 200:Generated_Source\PSoC4/CyLFClk.c **** ******************************************************************************/
 201:Generated_Source\PSoC4/CyLFClk.c **** void CySysClkIloStopMeasurement(void)
 202:Generated_Source\PSoC4/CyLFClk.c **** {
 178              		.loc 2 202 0
 179              		.cfi_startproc
 203:Generated_Source\PSoC4/CyLFClk.c ****     /* Set default configurations in 11...8 DFT register bits to zero */
 204:Generated_Source\PSoC4/CyLFClk.c ****     CY_SYS_CLK_DFT_REG &= ~CY_SYS_CLK_DFT_SELECT_DEFAULT_MASK;
 180              		.loc 2 204 0
 181 0000 054A     		ldr	r2, .L14
 182 0002 064B     		ldr	r3, .L14+4
 183 0004 1168     		ldr	r1, [r2]
 205:Generated_Source\PSoC4/CyLFClk.c ****     #if(CY_IP_SRSSLT)
 206:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_TST_DDFT_CTRL_REG &= ((uint32) CY_SYS_TST_DDFT_CTRL_REG_DEFAULT_MASK);
 207:Generated_Source\PSoC4/CyLFClk.c ****     #endif /* (CY_IP_SRSSLT) */
 208:Generated_Source\PSoC4/CyLFClk.c **** }
 184              		.loc 2 208 0
 185              		@ sp needed
 204:Generated_Source\PSoC4/CyLFClk.c ****     #if(CY_IP_SRSSLT)
 186              		.loc 2 204 0
 187 0006 0B40     		and	r3, r1
 188 0008 1360     		str	r3, [r2]
 206:Generated_Source\PSoC4/CyLFClk.c ****     #endif /* (CY_IP_SRSSLT) */
 189              		.loc 2 206 0
 190 000a 054A     		ldr	r2, .L14+8
 191 000c 054B     		ldr	r3, .L14+12
 192 000e 1168     		ldr	r1, [r2]
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccw66xHk.s 			page 20


 193 0010 0B40     		and	r3, r1
 194 0012 1360     		str	r3, [r2]
 195              		.loc 2 208 0
 196 0014 7047     		bx	lr
 197              	.L15:
 198 0016 C046     		.align	2
 199              	.L14:
 200 0018 34000340 		.word	1073938484
 201 001c FFF0FFFF 		.word	-3841
 202 0020 18000340 		.word	1073938456
 203 0024 0F0F0000 		.word	3855
 204              		.cfi_endproc
 205              	.LFE4:
 206              		.size	CySysClkIloStopMeasurement, .-CySysClkIloStopMeasurement
 207              		.global	__aeabi_uidiv
 208              		.section	.text.CySysClkIloCompensate,"ax",%progbits
 209              		.align	1
 210              		.global	CySysClkIloCompensate
 211              		.code	16
 212              		.thumb_func
 213              		.type	CySysClkIloCompensate, %function
 214              	CySysClkIloCompensate:
 215              	.LFB5:
 209:Generated_Source\PSoC4/CyLFClk.c **** 
 210:Generated_Source\PSoC4/CyLFClk.c **** 
 211:Generated_Source\PSoC4/CyLFClk.c **** /******************************************************************************
 212:Generated_Source\PSoC4/CyLFClk.c **** * Function Name: CySysClkIloCompensate
 213:Generated_Source\PSoC4/CyLFClk.c **** ***************************************************************************//**
 214:Generated_Source\PSoC4/CyLFClk.c **** * \brief
 215:Generated_Source\PSoC4/CyLFClk.c **** * This API measures the current ILO accuracy.
 216:Generated_Source\PSoC4/CyLFClk.c **** *
 217:Generated_Source\PSoC4/CyLFClk.c **** * Basing on the measured frequency the required number of ILO cycles for a 
 218:Generated_Source\PSoC4/CyLFClk.c **** * given delay (in microseconds) is obtained. The desired delay that needs to 
 219:Generated_Source\PSoC4/CyLFClk.c **** * be compensated is passed through the desiredDelay parameter. The compensated 
 220:Generated_Source\PSoC4/CyLFClk.c **** * cycle count is returned through the compesatedCycles pointer.
 221:Generated_Source\PSoC4/CyLFClk.c **** * The compensated ILO cycles can then be used to define the WDT period value, 
 222:Generated_Source\PSoC4/CyLFClk.c **** * effectively compensating for the ILO inaccuracy and allowing a more 
 223:Generated_Source\PSoC4/CyLFClk.c **** * accurate WDT interrupt generation.
 224:Generated_Source\PSoC4/CyLFClk.c **** *
 225:Generated_Source\PSoC4/CyLFClk.c **** * CySysClkIloStartMeasurement() API should be called prior to calling this API. 
 226:Generated_Source\PSoC4/CyLFClk.c **** *
 227:Generated_Source\PSoC4/CyLFClk.c **** * \note SysClk should be sourced by IMO. Otherwise CySysClkIloTrim() and 
 228:Generated_Source\PSoC4/CyLFClk.c **** * CySysClkIloCompensate() API can give incorrect results.
 229:Generated_Source\PSoC4/CyLFClk.c **** *
 230:Generated_Source\PSoC4/CyLFClk.c **** * \note If the System clock frequency is changed in runtime, the CyDelayFreq() 
 231:Generated_Source\PSoC4/CyLFClk.c **** * with the appropriate parameter (Frequency of bus clock in Hertz) should be 
 232:Generated_Source\PSoC4/CyLFClk.c **** * called before calling a next CySysClkIloCompensate().
 233:Generated_Source\PSoC4/CyLFClk.c **** *
 234:Generated_Source\PSoC4/CyLFClk.c **** * \warning Do not enter deep sleep mode until the function returns CYRET_SUCCESS.
 235:Generated_Source\PSoC4/CyLFClk.c **** *
 236:Generated_Source\PSoC4/CyLFClk.c **** * \param desiredDelay Required delay in microseconds.
 237:Generated_Source\PSoC4/CyLFClk.c **** *
 238:Generated_Source\PSoC4/CyLFClk.c **** * \param *compensatedCycles The pointer to the variable in which the required
 239:Generated_Source\PSoC4/CyLFClk.c **** * number of ILO cycles for the given delay will be returned.
 240:Generated_Source\PSoC4/CyLFClk.c **** *
 241:Generated_Source\PSoC4/CyLFClk.c **** * \details
 242:Generated_Source\PSoC4/CyLFClk.c **** * The value returned in *compensatedCycles pointer is not valid until the 
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccw66xHk.s 			page 21


 243:Generated_Source\PSoC4/CyLFClk.c **** * function returns CYRET_SUCCESS.
 244:Generated_Source\PSoC4/CyLFClk.c **** *
 245:Generated_Source\PSoC4/CyLFClk.c **** * The desiredDelay parameter value should be in next range: <br>From 100 to 
 246:Generated_Source\PSoC4/CyLFClk.c **** * 2 000 000 microseconds for PSoC 4000 / PSoC 4000S / PSoC 4100S / PSoC Analog 
 247:Generated_Source\PSoC4/CyLFClk.c **** * Coprocessor devices.<br>From 100 to 4 000 000 000 microseconds for 
 248:Generated_Source\PSoC4/CyLFClk.c **** * PSoC 4100 / PSoC 4200 / PSoC 4100 BLE / PSoC 4200 BLE / PRoC BLE /
 249:Generated_Source\PSoC4/CyLFClk.c **** * PSoC 4200L / PSoC 4100M /PSoC 4200M devices.
 250:Generated_Source\PSoC4/CyLFClk.c **** *
 251:Generated_Source\PSoC4/CyLFClk.c **** * \return CYRET_SUCCESS - The compensation process is complete and the 
 252:Generated_Source\PSoC4/CyLFClk.c **** * compensated cycles value is returned in the compensatedCycles pointer.
 253:Generated_Source\PSoC4/CyLFClk.c **** *
 254:Generated_Source\PSoC4/CyLFClk.c **** * \return CYRET_STARTED - Indicates measurement is in progress. It is 
 255:Generated_Source\PSoC4/CyLFClk.c **** * strongly recommended to do not make pauses between API calling. The 
 256:Generated_Source\PSoC4/CyLFClk.c **** * function should be called repeatedly until the API returns CYRET_SUCCESS.
 257:Generated_Source\PSoC4/CyLFClk.c **** *
 258:Generated_Source\PSoC4/CyLFClk.c **** * \return CYRET_INVALID_STATE - Indicates that measurement not started. 
 259:Generated_Source\PSoC4/CyLFClk.c **** * The user should call CySysClkIloStartMeasurement() API before calling 
 260:Generated_Source\PSoC4/CyLFClk.c **** * this API.
 261:Generated_Source\PSoC4/CyLFClk.c **** *
 262:Generated_Source\PSoC4/CyLFClk.c **** * \note For a correct WDT or DeepSleep Timers functioning with ILO compensating 
 263:Generated_Source\PSoC4/CyLFClk.c **** * the CySysClkIloCompensate() should be called before WDT or DeepSleep Timers 
 264:Generated_Source\PSoC4/CyLFClk.c **** * enabling.
 265:Generated_Source\PSoC4/CyLFClk.c **** *
 266:Generated_Source\PSoC4/CyLFClk.c **** *******************************************************************************/
 267:Generated_Source\PSoC4/CyLFClk.c **** cystatus CySysClkIloCompensate(uint32 desiredDelay , uint32* compensatedCycles)
 268:Generated_Source\PSoC4/CyLFClk.c **** {
 216              		.loc 2 268 0
 217              		.cfi_startproc
 218              	.LVL0:
 219 0000 F7B5     		push	{r0, r1, r2, r4, r5, r6, r7, lr}
 220              		.cfi_def_cfa_offset 32
 221              		.cfi_offset 0, -32
 222              		.cfi_offset 1, -28
 223              		.cfi_offset 2, -24
 224              		.cfi_offset 4, -20
 225              		.cfi_offset 5, -16
 226              		.cfi_offset 6, -12
 227              		.cfi_offset 7, -8
 228              		.cfi_offset 14, -4
 269:Generated_Source\PSoC4/CyLFClk.c ****     uint32 iloCompensatedCycles;
 270:Generated_Source\PSoC4/CyLFClk.c ****     uint32 desiredDelayInCounts;
 271:Generated_Source\PSoC4/CyLFClk.c ****     static uint32 compensateRunningStatus = CY_SYS_CLK_TRIM_OR_COMP_FINISHED;
 272:Generated_Source\PSoC4/CyLFClk.c ****     uint32 checkStatus;
 273:Generated_Source\PSoC4/CyLFClk.c ****     cystatus returnStatus;
 274:Generated_Source\PSoC4/CyLFClk.c **** 
 275:Generated_Source\PSoC4/CyLFClk.c ****     checkStatus = (uint32) (CY_SYS_CLK_DFT_REG & (uint32) CY_SYS_TST_DDFT_CTRL_REG_DEFAULT_MASK);
 276:Generated_Source\PSoC4/CyLFClk.c **** 
 277:Generated_Source\PSoC4/CyLFClk.c ****     /* Check if CySysStartMeasurement was called before */
 278:Generated_Source\PSoC4/CyLFClk.c ****     if((checkStatus == CY_SYS_CLK_SEL_ILO_DFT_SOURCE) && 
 229              		.loc 2 278 0
 230 0002 8024     		mov	r4, #128
 275:Generated_Source\PSoC4/CyLFClk.c **** 
 231              		.loc 2 275 0
 232 0004 2C4B     		ldr	r3, .L29
 233              		.loc 2 278 0
 234 0006 6400     		lsl	r4, r4, #1
 275:Generated_Source\PSoC4/CyLFClk.c **** 
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccw66xHk.s 			page 22


 235              		.loc 2 275 0
 236 0008 1A68     		ldr	r2, [r3]
 237              	.LVL1:
 238 000a 2C4B     		ldr	r3, .L29+4
 239 000c 1A40     		and	r2, r3
 240              	.LVL2:
 279:Generated_Source\PSoC4/CyLFClk.c ****        (CY_SYS_TST_DDFT_CTRL_REG == CY_SYS_TST_DDFT_CTRL_REG_SEL2_CLK1) &&
 280:Generated_Source\PSoC4/CyLFClk.c ****        (CY_SYS_CLK_MAX_DELAY_US >= desiredDelay) &&
 281:Generated_Source\PSoC4/CyLFClk.c ****        (CY_SYS_CLK_MIN_DELAY_US <= desiredDelay) &&
 282:Generated_Source\PSoC4/CyLFClk.c ****        (compensatedCycles !=  NULL))
 283:Generated_Source\PSoC4/CyLFClk.c ****     {
 284:Generated_Source\PSoC4/CyLFClk.c ****         if(CY_SYS_CLK_TRIM_OR_COMP_FINISHED != compensateRunningStatus)
 285:Generated_Source\PSoC4/CyLFClk.c ****         {
 286:Generated_Source\PSoC4/CyLFClk.c ****             /* Wait until counter 1 stopped counting and after it calculate compensated cycles */
 287:Generated_Source\PSoC4/CyLFClk.c ****             if(0u != (CY_SYS_CNT_REG1_REG & CY_SYS_CLK_ILO_CALIBR_COMPLETE_MASK))
 288:Generated_Source\PSoC4/CyLFClk.c ****             {
 289:Generated_Source\PSoC4/CyLFClk.c ****                 if (0u != CY_SYS_CNT_REG2_REG)
 290:Generated_Source\PSoC4/CyLFClk.c ****                 {
 291:Generated_Source\PSoC4/CyLFClk.c ****                     /* Calculate required number of ILO cycles for given delay */
 292:Generated_Source\PSoC4/CyLFClk.c ****                     #if(CY_IP_SRSSV2)
 293:Generated_Source\PSoC4/CyLFClk.c ****                         if (CY_SYS_CLK_DELAY_COUNTS_LIMIT < desiredDelay)
 294:Generated_Source\PSoC4/CyLFClk.c ****                         {
 295:Generated_Source\PSoC4/CyLFClk.c ****                             desiredDelayInCounts = (desiredDelay / CY_SYS_CLK_ILO_PERIOD);
 296:Generated_Source\PSoC4/CyLFClk.c ****                             iloCompensatedCycles = 
 297:Generated_Source\PSoC4/CyLFClk.c ****                             (((CY_SYS_CNT_REG2_REG * cydelayFreqHz) / (cydelayFreqHz >> CY_SYS_CLK_
 298:Generated_Source\PSoC4/CyLFClk.c ****                                 CY_SYS_CLK_ILO_FREQ_2MSB) * (desiredDelayInCounts / CY_SYS_CLK_ILO_
 299:Generated_Source\PSoC4/CyLFClk.c ****                         }
 300:Generated_Source\PSoC4/CyLFClk.c ****                         else
 301:Generated_Source\PSoC4/CyLFClk.c ****                         {
 302:Generated_Source\PSoC4/CyLFClk.c ****                             desiredDelayInCounts = ((desiredDelay * CY_SYS_CLK_COEF_PHUNDRED) + 
 303:Generated_Source\PSoC4/CyLFClk.c ****                                                      CY_SYS_CLK_HALF_OF_CLOCK) / CY_SYS_CLK_ILO_PER
 304:Generated_Source\PSoC4/CyLFClk.c **** 
 305:Generated_Source\PSoC4/CyLFClk.c ****                             iloCompensatedCycles = (((CY_SYS_CNT_REG2_REG * cydelayFreqHz) / 
 306:Generated_Source\PSoC4/CyLFClk.c ****                                                      (cydelayFreqHz >> CY_SYS_CLK_SYS_CLK_DEVIDER))
 307:Generated_Source\PSoC4/CyLFClk.c ****                                                      desiredDelayInCounts) / CY_SYS_CLK_ILO_DESIRED
 308:Generated_Source\PSoC4/CyLFClk.c ****                         }
 309:Generated_Source\PSoC4/CyLFClk.c ****                     #else /* (CY_IP_SRSSLT) */
 310:Generated_Source\PSoC4/CyLFClk.c ****                         desiredDelayInCounts = ((desiredDelay * CY_SYS_CLK_COEF_PHUNDRED) + CY_SYS_
 311:Generated_Source\PSoC4/CyLFClk.c ****                                                                                            CY_SYS_C
 312:Generated_Source\PSoC4/CyLFClk.c ****                         if(CY_SYS_CLK_MAX_LITE_NUMBER < desiredDelayInCounts)
 313:Generated_Source\PSoC4/CyLFClk.c ****                         {
 314:Generated_Source\PSoC4/CyLFClk.c ****                             iloCompensatedCycles = (((CY_SYS_CNT_REG2_REG * cydelayFreqHz) / (cydel
 315:Generated_Source\PSoC4/CyLFClk.c ****                                                    CY_SYS_CLK_SYS_CLK_DEVIDER)) / CY_SYS_CLK_ILO_FR
 316:Generated_Source\PSoC4/CyLFClk.c ****                                                    (desiredDelayInCounts / CY_SYS_CLK_ILO_FREQ_3LSB
 317:Generated_Source\PSoC4/CyLFClk.c ****                         }
 318:Generated_Source\PSoC4/CyLFClk.c ****                         else
 319:Generated_Source\PSoC4/CyLFClk.c ****                         {
 320:Generated_Source\PSoC4/CyLFClk.c ****                             iloCompensatedCycles = (((CY_SYS_CNT_REG2_REG * cydelayFreqHz) / 
 321:Generated_Source\PSoC4/CyLFClk.c ****                                                      (cydelayFreqHz >> CY_SYS_CLK_SYS_CLK_DEVIDER))
 322:Generated_Source\PSoC4/CyLFClk.c ****                                                      desiredDelayInCounts) / CY_SYS_CLK_ILO_DESIRED
 323:Generated_Source\PSoC4/CyLFClk.c ****                         }
 324:Generated_Source\PSoC4/CyLFClk.c ****                     #endif /* (CY_IP_SRSSV2) */
 325:Generated_Source\PSoC4/CyLFClk.c **** 
 326:Generated_Source\PSoC4/CyLFClk.c ****                     *compensatedCycles = iloCompensatedCycles;
 327:Generated_Source\PSoC4/CyLFClk.c ****                     compensateRunningStatus = CY_SYS_CLK_TRIM_OR_COMP_FINISHED;
 328:Generated_Source\PSoC4/CyLFClk.c ****                     returnStatus = CYRET_SUCCESS;
 329:Generated_Source\PSoC4/CyLFClk.c ****                 }
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccw66xHk.s 			page 23


 330:Generated_Source\PSoC4/CyLFClk.c ****                 else
 331:Generated_Source\PSoC4/CyLFClk.c ****                 {
 332:Generated_Source\PSoC4/CyLFClk.c ****                     returnStatus  = CYRET_INVALID_STATE;
 333:Generated_Source\PSoC4/CyLFClk.c ****                 }
 334:Generated_Source\PSoC4/CyLFClk.c ****             }
 335:Generated_Source\PSoC4/CyLFClk.c ****             else
 336:Generated_Source\PSoC4/CyLFClk.c ****             {
 337:Generated_Source\PSoC4/CyLFClk.c ****                 returnStatus = CYRET_STARTED;
 338:Generated_Source\PSoC4/CyLFClk.c ****             }
 339:Generated_Source\PSoC4/CyLFClk.c ****         }
 340:Generated_Source\PSoC4/CyLFClk.c ****         else
 341:Generated_Source\PSoC4/CyLFClk.c ****         {
 342:Generated_Source\PSoC4/CyLFClk.c ****             /* Reload CNTR 1 count value for next measurement cycle*/
 343:Generated_Source\PSoC4/CyLFClk.c ****             CY_SYS_CNT_REG1_REG = (cydelayFreqHz >> CY_SYS_CLK_SYS_CLK_DEVIDER);
 344:Generated_Source\PSoC4/CyLFClk.c ****             compensateRunningStatus = CY_SYS_CLK_TRIM_OR_COMP_STARTED;
 345:Generated_Source\PSoC4/CyLFClk.c ****             returnStatus = CYRET_STARTED;
 346:Generated_Source\PSoC4/CyLFClk.c ****         }
 347:Generated_Source\PSoC4/CyLFClk.c ****     }
 348:Generated_Source\PSoC4/CyLFClk.c ****     else
 349:Generated_Source\PSoC4/CyLFClk.c ****     {
 350:Generated_Source\PSoC4/CyLFClk.c ****         returnStatus = CYRET_INVALID_STATE;
 241              		.loc 2 350 0
 242 000e 1123     		mov	r3, #17
 278:Generated_Source\PSoC4/CyLFClk.c ****        (CY_SYS_TST_DDFT_CTRL_REG == CY_SYS_TST_DDFT_CTRL_REG_SEL2_CLK1) &&
 243              		.loc 2 278 0
 244 0010 A242     		cmp	r2, r4
 245 0012 4ED1     		bne	.L17
 279:Generated_Source\PSoC4/CyLFClk.c ****        (CY_SYS_TST_DDFT_CTRL_REG == CY_SYS_TST_DDFT_CTRL_REG_SEL2_CLK1) &&
 246              		.loc 2 279 0 discriminator 1
 247 0014 2A4A     		ldr	r2, .L29+8
 248              	.LVL3:
 249 0016 1468     		ldr	r4, [r2]
 278:Generated_Source\PSoC4/CyLFClk.c ****        (CY_SYS_TST_DDFT_CTRL_REG == CY_SYS_TST_DDFT_CTRL_REG_SEL2_CLK1) &&
 250              		.loc 2 278 0 discriminator 1
 251 0018 2A4A     		ldr	r2, .L29+12
 252 001a 9442     		cmp	r4, r2
 253 001c 49D1     		bne	.L17
 280:Generated_Source\PSoC4/CyLFClk.c ****        (CY_SYS_CLK_MIN_DELAY_US <= desiredDelay) &&
 254              		.loc 2 280 0
 255 001e 041C     		mov	r4, r0
 256 0020 294A     		ldr	r2, .L29+16
 257 0022 643C     		sub	r4, r4, #100
 258 0024 9442     		cmp	r4, r2
 259 0026 44D8     		bhi	.L17
 281:Generated_Source\PSoC4/CyLFClk.c ****        (compensatedCycles !=  NULL))
 260              		.loc 2 281 0
 261 0028 0029     		cmp	r1, #0
 262 002a 42D0     		beq	.L17
 284:Generated_Source\PSoC4/CyLFClk.c ****         {
 263              		.loc 2 284 0
 264 002c 274B     		ldr	r3, .L29+20
 265 002e 284D     		ldr	r5, .L29+24
 266 0030 1A68     		ldr	r2, [r3]
 267 0032 1F1C     		mov	r7, r3
 268 0034 002A     		cmp	r2, #0
 269 0036 35D0     		beq	.L18
 287:Generated_Source\PSoC4/CyLFClk.c ****             {
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccw66xHk.s 			page 24


 270              		.loc 2 287 0
 271 0038 2A68     		ldr	r2, [r5]
 337:Generated_Source\PSoC4/CyLFClk.c ****             }
 272              		.loc 2 337 0
 273 003a 0723     		mov	r3, #7
 287:Generated_Source\PSoC4/CyLFClk.c ****             {
 274              		.loc 2 287 0
 275 003c 002A     		cmp	r2, #0
 276 003e 38DA     		bge	.L17
 289:Generated_Source\PSoC4/CyLFClk.c ****                 {
 277              		.loc 2 289 0
 278 0040 244D     		ldr	r5, .L29+28
 279              		.loc 2 350 0
 280 0042 0A33     		add	r3, r3, #10
 289:Generated_Source\PSoC4/CyLFClk.c ****                 {
 281              		.loc 2 289 0
 282 0044 2A68     		ldr	r2, [r5]
 283 0046 002A     		cmp	r2, #0
 284 0048 33D0     		beq	.L17
 310:Generated_Source\PSoC4/CyLFClk.c ****                                                                                            CY_SYS_C
 285              		.loc 2 310 0
 286 004a 5333     		add	r3, r3, #83
 287 004c 5843     		mul	r0, r3
 288              	.LVL4:
 289 004e 224B     		ldr	r3, .L29+32
 290 0050 0C1C     		mov	r4, r1
 291              	.LVL5:
 292 0052 C018     		add	r0, r0, r3
 293 0054 2149     		ldr	r1, .L29+36
 294              	.LVL6:
 295 0056 FFF7FEFF 		bl	__aeabi_uidiv
 296              	.LVL7:
 312:Generated_Source\PSoC4/CyLFClk.c ****                         {
 297              		.loc 2 312 0
 298 005a 214A     		ldr	r2, .L29+40
 310:Generated_Source\PSoC4/CyLFClk.c ****                                                                                            CY_SYS_C
 299              		.loc 2 310 0
 300 005c 061E     		sub	r6, r0, #0
 301              	.LVL8:
 302 005e 214B     		ldr	r3, .L29+44
 312:Generated_Source\PSoC4/CyLFClk.c ****                         {
 303              		.loc 2 312 0
 304 0060 9642     		cmp	r6, r2
 305 0062 11D9     		bls	.L19
 316:Generated_Source\PSoC4/CyLFClk.c ****                         }
 306              		.loc 2 316 0
 307 0064 FA21     		mov	r1, #250
 314:Generated_Source\PSoC4/CyLFClk.c ****                                                    CY_SYS_CLK_SYS_CLK_DEVIDER)) / CY_SYS_CLK_ILO_FR
 308              		.loc 2 314 0
 309 0066 2A68     		ldr	r2, [r5]
 316:Generated_Source\PSoC4/CyLFClk.c ****                         }
 310              		.loc 2 316 0
 311 0068 8900     		lsl	r1, r1, #2
 314:Generated_Source\PSoC4/CyLFClk.c ****                                                    CY_SYS_CLK_SYS_CLK_DEVIDER)) / CY_SYS_CLK_ILO_FR
 312              		.loc 2 314 0
 313 006a 1D68     		ldr	r5, [r3]
 314 006c 0192     		str	r2, [sp, #4]
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccw66xHk.s 			page 25


 316:Generated_Source\PSoC4/CyLFClk.c ****                         }
 315              		.loc 2 316 0
 316 006e FFF7FEFF 		bl	__aeabi_uidiv
 317              	.LVL9:
 318 0072 061C     		mov	r6, r0
 319              	.LVL10:
 314:Generated_Source\PSoC4/CyLFClk.c ****                                                    CY_SYS_CLK_SYS_CLK_DEVIDER)) / CY_SYS_CLK_ILO_FR
 320              		.loc 2 314 0
 321 0074 0198     		ldr	r0, [sp, #4]
 322 0076 A90A     		lsr	r1, r5, #10
 323 0078 6843     		mul	r0, r5
 324 007a FFF7FEFF 		bl	__aeabi_uidiv
 325              	.LVL11:
 315:Generated_Source\PSoC4/CyLFClk.c ****                                                    (desiredDelayInCounts / CY_SYS_CLK_ILO_FREQ_3LSB
 326              		.loc 2 315 0
 327 007e 2821     		mov	r1, #40
 328 0080 FFF7FEFF 		bl	__aeabi_uidiv
 329              	.LVL12:
 314:Generated_Source\PSoC4/CyLFClk.c ****                                                    CY_SYS_CLK_SYS_CLK_DEVIDER)) / CY_SYS_CLK_ILO_FR
 330              		.loc 2 314 0
 331 0084 7043     		mul	r0, r6
 332              	.LVL13:
 333 0086 09E0     		b	.L20
 334              	.LVL14:
 335              	.L19:
 320:Generated_Source\PSoC4/CyLFClk.c ****                                                      (cydelayFreqHz >> CY_SYS_CLK_SYS_CLK_DEVIDER))
 336              		.loc 2 320 0
 337 0088 1968     		ldr	r1, [r3]
 338 008a 2868     		ldr	r0, [r5]
 339              	.LVL15:
 340 008c 4843     		mul	r0, r1
 321:Generated_Source\PSoC4/CyLFClk.c ****                                                      desiredDelayInCounts) / CY_SYS_CLK_ILO_DESIRED
 341              		.loc 2 321 0
 342 008e 890A     		lsr	r1, r1, #10
 320:Generated_Source\PSoC4/CyLFClk.c ****                                                      (cydelayFreqHz >> CY_SYS_CLK_SYS_CLK_DEVIDER))
 343              		.loc 2 320 0
 344 0090 FFF7FEFF 		bl	__aeabi_uidiv
 345              	.LVL16:
 346 0094 1449     		ldr	r1, .L29+48
 321:Generated_Source\PSoC4/CyLFClk.c ****                                                      desiredDelayInCounts) / CY_SYS_CLK_ILO_DESIRED
 347              		.loc 2 321 0
 348 0096 7043     		mul	r0, r6
 320:Generated_Source\PSoC4/CyLFClk.c ****                                                      (cydelayFreqHz >> CY_SYS_CLK_SYS_CLK_DEVIDER))
 349              		.loc 2 320 0
 350 0098 FFF7FEFF 		bl	__aeabi_uidiv
 351              	.LVL17:
 352              	.L20:
 327:Generated_Source\PSoC4/CyLFClk.c ****                     returnStatus = CYRET_SUCCESS;
 353              		.loc 2 327 0
 354 009c 0023     		mov	r3, #0
 326:Generated_Source\PSoC4/CyLFClk.c ****                     compensateRunningStatus = CY_SYS_CLK_TRIM_OR_COMP_FINISHED;
 355              		.loc 2 326 0
 356 009e 2060     		str	r0, [r4]
 327:Generated_Source\PSoC4/CyLFClk.c ****                     returnStatus = CYRET_SUCCESS;
 357              		.loc 2 327 0
 358 00a0 3B60     		str	r3, [r7]
 359              	.LVL18:
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccw66xHk.s 			page 26


 360 00a2 06E0     		b	.L17
 361              	.LVL19:
 362              	.L18:
 343:Generated_Source\PSoC4/CyLFClk.c ****             compensateRunningStatus = CY_SYS_CLK_TRIM_OR_COMP_STARTED;
 363              		.loc 2 343 0
 364 00a4 0F4A     		ldr	r2, .L29+44
 365 00a6 1268     		ldr	r2, [r2]
 366 00a8 920A     		lsr	r2, r2, #10
 367 00aa 2A60     		str	r2, [r5]
 344:Generated_Source\PSoC4/CyLFClk.c ****             returnStatus = CYRET_STARTED;
 368              		.loc 2 344 0
 369 00ac 0122     		mov	r2, #1
 370 00ae 1A60     		str	r2, [r3]
 371              	.LVL20:
 345:Generated_Source\PSoC4/CyLFClk.c ****         }
 372              		.loc 2 345 0
 373 00b0 0723     		mov	r3, #7
 374              	.LVL21:
 375              	.L17:
 351:Generated_Source\PSoC4/CyLFClk.c ****     }
 352:Generated_Source\PSoC4/CyLFClk.c **** 
 353:Generated_Source\PSoC4/CyLFClk.c ****     return (returnStatus);
 354:Generated_Source\PSoC4/CyLFClk.c **** }
 376              		.loc 2 354 0
 377 00b2 181C     		mov	r0, r3
 378              		@ sp needed
 379 00b4 FEBD     		pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 380              	.L30:
 381 00b6 C046     		.align	2
 382              	.L29:
 383 00b8 34000340 		.word	1073938484
 384 00bc 0F0F0000 		.word	3855
 385 00c0 18000340 		.word	1073938456
 386 00c4 08090000 		.word	2312
 387 00c8 1C841E00 		.word	1999900
 388 00cc 00000000 		.word	.LANCHOR0
 389 00d0 1C000340 		.word	1073938460
 390 00d4 20000340 		.word	1073938464
 391 00d8 71020000 		.word	625
 392 00dc C4090000 		.word	2500
 393 00e0 60D10000 		.word	53600
 394 00e4 00000000 		.word	cydelayFreqHz
 395 00e8 409C0000 		.word	40000
 396              		.cfi_endproc
 397              	.LFE5:
 398              		.size	CySysClkIloCompensate, .-CySysClkIloCompensate
 399              		.section	.text.CySysClkWcoStart,"ax",%progbits
 400              		.align	1
 401              		.global	CySysClkWcoStart
 402              		.code	16
 403              		.thumb_func
 404              		.type	CySysClkWcoStart, %function
 405              	CySysClkWcoStart:
 406              	.LFB6:
 355:Generated_Source\PSoC4/CyLFClk.c **** 
 356:Generated_Source\PSoC4/CyLFClk.c **** 
 357:Generated_Source\PSoC4/CyLFClk.c **** #if(CY_IP_SRSSV2)
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccw66xHk.s 			page 27


 358:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
 359:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysClkIloEnabled
 360:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
 361:Generated_Source\PSoC4/CyLFClk.c ****     *
 362:Generated_Source\PSoC4/CyLFClk.c ****     * \internal
 363:Generated_Source\PSoC4/CyLFClk.c ****     * Reports the ILO enable state.
 364:Generated_Source\PSoC4/CyLFClk.c ****     *
 365:Generated_Source\PSoC4/CyLFClk.c ****     * \return
 366:Generated_Source\PSoC4/CyLFClk.c ****     * 1 if ILO is enabled, and 0 if ILO is disabled.
 367:Generated_Source\PSoC4/CyLFClk.c ****     *
 368:Generated_Source\PSoC4/CyLFClk.c ****     * \endinternal
 369:Generated_Source\PSoC4/CyLFClk.c ****     ********************************************************************************/
 370:Generated_Source\PSoC4/CyLFClk.c ****     static uint32 CySysClkIloEnabled(void)
 371:Generated_Source\PSoC4/CyLFClk.c ****     {
 372:Generated_Source\PSoC4/CyLFClk.c ****         /* Prohibits writing to WDT registers and ILO/WCO registers when not equal to 0 */
 373:Generated_Source\PSoC4/CyLFClk.c ****         return ((0u != (CY_SYS_CLK_ILO_CONFIG_REG & (uint32)(CY_SYS_CLK_ILO_CONFIG_ENABLE))) ?
 374:Generated_Source\PSoC4/CyLFClk.c ****             (uint32) 1u :
 375:Generated_Source\PSoC4/CyLFClk.c ****             (uint32) 0u);
 376:Generated_Source\PSoC4/CyLFClk.c ****     }
 377:Generated_Source\PSoC4/CyLFClk.c **** #endif /* (CY_IP_SRSSV2) */
 378:Generated_Source\PSoC4/CyLFClk.c **** 
 379:Generated_Source\PSoC4/CyLFClk.c **** 
 380:Generated_Source\PSoC4/CyLFClk.c **** #if(CY_IP_SRSSV2 && (!(CY_PSOC4_4100 || CY_PSOC4_4200)))
 381:Generated_Source\PSoC4/CyLFClk.c **** /********************************************************************************
 382:Generated_Source\PSoC4/CyLFClk.c **** * Function Name: CySysClkIloTrim
 383:Generated_Source\PSoC4/CyLFClk.c **** *****************************************************************************//**
 384:Generated_Source\PSoC4/CyLFClk.c **** * \brief
 385:Generated_Source\PSoC4/CyLFClk.c **** * The API trims the ILO frequency to +/- 10% accuracy range using accurate 
 386:Generated_Source\PSoC4/CyLFClk.c **** * SysClk.
 387:Generated_Source\PSoC4/CyLFClk.c **** *
 388:Generated_Source\PSoC4/CyLFClk.c **** * The API can be blocking or non-blocking depending on the value of the mode 
 389:Generated_Source\PSoC4/CyLFClk.c **** * parameter passed. The accuracy of ILO after trimming in parts per thousand 
 390:Generated_Source\PSoC4/CyLFClk.c **** * is returned through the iloAccuracyInPPT pointer. A positive number indicates 
 391:Generated_Source\PSoC4/CyLFClk.c **** * that the ILO is running fast and a negative number indicates that the ILO is 
 392:Generated_Source\PSoC4/CyLFClk.c **** * running slowly. This error is relative to the error in the reference clock 
 393:Generated_Source\PSoC4/CyLFClk.c **** * (SysClk), so the absolute error will be higher and depends on the accuracy 
 394:Generated_Source\PSoC4/CyLFClk.c **** * of the reference.
 395:Generated_Source\PSoC4/CyLFClk.c **** *
 396:Generated_Source\PSoC4/CyLFClk.c **** * The CySysClkIloStartMeasurement() API should be called prior to calling this 
 397:Generated_Source\PSoC4/CyLFClk.c **** * API. Otherwise it will return CYRET_INVALID_STATE as the measurement was not 
 398:Generated_Source\PSoC4/CyLFClk.c **** * started.
 399:Generated_Source\PSoC4/CyLFClk.c **** *
 400:Generated_Source\PSoC4/CyLFClk.c **** * \note SysClk should be sourced by IMO. Otherwise CySysClkIloTrim() and 
 401:Generated_Source\PSoC4/CyLFClk.c **** * CySysClkIloCompensate() API can give incorrect results.
 402:Generated_Source\PSoC4/CyLFClk.c **** *
 403:Generated_Source\PSoC4/CyLFClk.c **** * \note If System clock frequency is changed in runtime, the CyDelayFreq() 
 404:Generated_Source\PSoC4/CyLFClk.c **** * with the appropriate parameter (Frequency of bus clock in Hertz) should be 
 405:Generated_Source\PSoC4/CyLFClk.c **** * called before next CySysClkIloCompensate() usage.
 406:Generated_Source\PSoC4/CyLFClk.c **** *
 407:Generated_Source\PSoC4/CyLFClk.c **** * \warning Do not enter deep sleep mode until the function returns CYRET_SUCCESS
 408:Generated_Source\PSoC4/CyLFClk.c **** * or CYRET_TIMEOUT.
 409:Generated_Source\PSoC4/CyLFClk.c **** *
 410:Generated_Source\PSoC4/CyLFClk.c **** * Available for all PSoC 4 devices with ILO trim capability. This excludes 
 411:Generated_Source\PSoC4/CyLFClk.c **** * PSoC 4000 / PSoC 4100 / PSoC 4200 / PSoC 4000S / PSoC 4100S / PSoC
 412:Generated_Source\PSoC4/CyLFClk.c **** * Analog Coprocessor devices.
 413:Generated_Source\PSoC4/CyLFClk.c **** *
 414:Generated_Source\PSoC4/CyLFClk.c **** * \param mode
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccw66xHk.s 			page 28


 415:Generated_Source\PSoC4/CyLFClk.c **** *  CY_SYS_CLK_BLOCKING -  The function does not return until the ILO is 
 416:Generated_Source\PSoC4/CyLFClk.c **** * within +/-10% accuracy range or time out has occurred.<br>
 417:Generated_Source\PSoC4/CyLFClk.c **** * CY_SYS_CLK_NON_BLOCKING - The function returns immediately after 
 418:Generated_Source\PSoC4/CyLFClk.c **** * performing a single iteration of the trim process. The function should be 
 419:Generated_Source\PSoC4/CyLFClk.c **** * called repeatedly until the trimming is completed successfully.
 420:Generated_Source\PSoC4/CyLFClk.c **** *
 421:Generated_Source\PSoC4/CyLFClk.c **** * \param *iloAccuracyInPPT Pointer to an integer in which the trimmed ILO 
 422:Generated_Source\PSoC4/CyLFClk.c **** * accuracy will be returned.
 423:Generated_Source\PSoC4/CyLFClk.c **** *
 424:Generated_Source\PSoC4/CyLFClk.c **** * \details The value returned in *iloAccuracyInPPT pointer is not valid 
 425:Generated_Source\PSoC4/CyLFClk.c **** * until the function returns CYRET_SUCCESS. ILO accuracy in PPT is given by:
 426:Generated_Source\PSoC4/CyLFClk.c **** *
 427:Generated_Source\PSoC4/CyLFClk.c **** * IloAccuracyInPPT = ((MeasuredIloFreq - DesiredIloFreq) * 
 428:Generated_Source\PSoC4/CyLFClk.c **** * CY_SYS_CLK_PERTHOUSAND) / DesiredIloFreq);
 429:Generated_Source\PSoC4/CyLFClk.c **** *
 430:Generated_Source\PSoC4/CyLFClk.c **** * DesiredIloFreq  = 32000, CY_SYS_CLK_PERTHOUSAND = 1000;
 431:Generated_Source\PSoC4/CyLFClk.c **** *
 432:Generated_Source\PSoC4/CyLFClk.c **** * \return CYRET_SUCCESS - Indicates trimming is complete. This value indicates 
 433:Generated_Source\PSoC4/CyLFClk.c **** * trimming is successful and iloAccuracyInPPT is within +/- 10%.
 434:Generated_Source\PSoC4/CyLFClk.c **** *
 435:Generated_Source\PSoC4/CyLFClk.c **** * \return CYRET_STARTED - Indicates measurement is in progress. This is applicable 
 436:Generated_Source\PSoC4/CyLFClk.c **** * only for non-blocking mode.
 437:Generated_Source\PSoC4/CyLFClk.c **** *
 438:Generated_Source\PSoC4/CyLFClk.c **** * \return CYRET_INVALID_STATE - Indicates trimming was unsuccessful. You should 
 439:Generated_Source\PSoC4/CyLFClk.c **** * call CySysClkIloStartMeasurement() before calling this API.
 440:Generated_Source\PSoC4/CyLFClk.c **** *
 441:Generated_Source\PSoC4/CyLFClk.c **** * \return CYRET_TIMEOUT - Indicates trimming was unsuccessful. This is applicable 
 442:Generated_Source\PSoC4/CyLFClk.c **** * only for blocking mode. Timeout means the trimming was tried 5 times without 
 443:Generated_Source\PSoC4/CyLFClk.c **** * success (i.e. ILO accuracy > +/- 10%). The user can call the API again for 
 444:Generated_Source\PSoC4/CyLFClk.c **** * another try or wait for some time before calling it again (to let the system 
 445:Generated_Source\PSoC4/CyLFClk.c **** * to settle to another operating point change in temperature etc.) and continue 
 446:Generated_Source\PSoC4/CyLFClk.c **** * using the previous trim value till the next call.
 447:Generated_Source\PSoC4/CyLFClk.c **** *
 448:Generated_Source\PSoC4/CyLFClk.c **** **********************************************************************************/
 449:Generated_Source\PSoC4/CyLFClk.c **** cystatus CySysClkIloTrim(uint32 mode, int32* iloAccuracyInPPT)
 450:Generated_Source\PSoC4/CyLFClk.c **** {
 451:Generated_Source\PSoC4/CyLFClk.c ****     uint32 timeOutClocks = CY_SYS_CLK_TIMEOUT;
 452:Generated_Source\PSoC4/CyLFClk.c ****     uint32 waitUntilCntr1Stops;
 453:Generated_Source\PSoC4/CyLFClk.c ****     static uint32 trimRunningStatus = CY_SYS_CLK_TRIM_OR_COMP_FINISHED;
 454:Generated_Source\PSoC4/CyLFClk.c ****     uint32 checkStatus;
 455:Generated_Source\PSoC4/CyLFClk.c ****     cystatus returnStatus;
 456:Generated_Source\PSoC4/CyLFClk.c **** 
 457:Generated_Source\PSoC4/CyLFClk.c ****     checkStatus = (uint32) (CY_SYS_CLK_DFT_REG & (uint32) CY_SYS_TST_DDFT_CTRL_REG_DEFAULT_MASK);
 458:Generated_Source\PSoC4/CyLFClk.c **** 
 459:Generated_Source\PSoC4/CyLFClk.c ****     /* Check if DFT and CTRL registers were configures in CySysStartMeasurement*/
 460:Generated_Source\PSoC4/CyLFClk.c ****     if((checkStatus == CY_SYS_CLK_SEL_ILO_DFT_SOURCE) &&
 461:Generated_Source\PSoC4/CyLFClk.c ****        (CY_SYS_TST_DDFT_CTRL_REG == CY_SYS_TST_DDFT_CTRL_REG_SEL2_CLK1) &&
 462:Generated_Source\PSoC4/CyLFClk.c ****        (iloAccuracyInPPT != NULL))
 463:Generated_Source\PSoC4/CyLFClk.c ****     {
 464:Generated_Source\PSoC4/CyLFClk.c ****         if(CY_SYS_CLK_BLOCKING == mode)
 465:Generated_Source\PSoC4/CyLFClk.c ****         {
 466:Generated_Source\PSoC4/CyLFClk.c ****             waitUntilCntr1Stops = cydelayFreqHz >> CY_SYS_CLK_SYS_CLK_DEVIDER;
 467:Generated_Source\PSoC4/CyLFClk.c ****             do
 468:Generated_Source\PSoC4/CyLFClk.c ****             {
 469:Generated_Source\PSoC4/CyLFClk.c ****                 /* Reload CNTR 1 count value for measuring cycle*/
 470:Generated_Source\PSoC4/CyLFClk.c ****                 CY_SYS_CNT_REG1_REG = cydelayFreqHz >> CY_SYS_CLK_SYS_CLK_DEVIDER; 
 471:Generated_Source\PSoC4/CyLFClk.c **** 
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccw66xHk.s 			page 29


 472:Generated_Source\PSoC4/CyLFClk.c ****                 /* Wait until counter CNTR 1 will finish down-counting */
 473:Generated_Source\PSoC4/CyLFClk.c ****                 while (0u == (CY_SYS_CNT_REG1_REG & CY_SYS_CLK_ILO_CALIBR_COMPLETE_MASK))
 474:Generated_Source\PSoC4/CyLFClk.c ****                 {
 475:Generated_Source\PSoC4/CyLFClk.c ****                     waitUntilCntr1Stops--;
 476:Generated_Source\PSoC4/CyLFClk.c ****                     if (0u == waitUntilCntr1Stops)
 477:Generated_Source\PSoC4/CyLFClk.c ****                     {
 478:Generated_Source\PSoC4/CyLFClk.c ****                         break;
 479:Generated_Source\PSoC4/CyLFClk.c ****                     }
 480:Generated_Source\PSoC4/CyLFClk.c ****                 }
 481:Generated_Source\PSoC4/CyLFClk.c ****                 trimRunningStatus = CySysClkIloUpdateTrimReg(iloAccuracyInPPT);
 482:Generated_Source\PSoC4/CyLFClk.c ****                 timeOutClocks--;
 483:Generated_Source\PSoC4/CyLFClk.c **** 
 484:Generated_Source\PSoC4/CyLFClk.c ****             /* Untill ILO accuracy will be in range less than +/- 10% or timeout occurs*/
 485:Generated_Source\PSoC4/CyLFClk.c ****             } while((CYRET_SUCCESS != trimRunningStatus) && 
 486:Generated_Source\PSoC4/CyLFClk.c ****               (CYRET_INVALID_STATE != trimRunningStatus) && 
 487:Generated_Source\PSoC4/CyLFClk.c ****                                (0u != timeOutClocks));
 488:Generated_Source\PSoC4/CyLFClk.c **** 
 489:Generated_Source\PSoC4/CyLFClk.c ****             if (CYRET_SUCCESS == trimRunningStatus)
 490:Generated_Source\PSoC4/CyLFClk.c ****             {
 491:Generated_Source\PSoC4/CyLFClk.c ****                 returnStatus = CYRET_SUCCESS;
 492:Generated_Source\PSoC4/CyLFClk.c ****             }
 493:Generated_Source\PSoC4/CyLFClk.c ****             else
 494:Generated_Source\PSoC4/CyLFClk.c ****             {
 495:Generated_Source\PSoC4/CyLFClk.c ****                 if(0u == timeOutClocks)
 496:Generated_Source\PSoC4/CyLFClk.c ****                 {
 497:Generated_Source\PSoC4/CyLFClk.c ****                     trimRunningStatus = CY_SYS_CLK_TRIM_OR_COMP_FINISHED;
 498:Generated_Source\PSoC4/CyLFClk.c ****                     returnStatus = CYRET_TIMEOUT;
 499:Generated_Source\PSoC4/CyLFClk.c ****                 }
 500:Generated_Source\PSoC4/CyLFClk.c ****                 else
 501:Generated_Source\PSoC4/CyLFClk.c ****                 {
 502:Generated_Source\PSoC4/CyLFClk.c ****                     returnStatus = CYRET_INVALID_STATE;
 503:Generated_Source\PSoC4/CyLFClk.c ****                 }
 504:Generated_Source\PSoC4/CyLFClk.c ****             }
 505:Generated_Source\PSoC4/CyLFClk.c ****         }
 506:Generated_Source\PSoC4/CyLFClk.c ****         /* Non - blocking mode */
 507:Generated_Source\PSoC4/CyLFClk.c ****         else
 508:Generated_Source\PSoC4/CyLFClk.c ****         {
 509:Generated_Source\PSoC4/CyLFClk.c ****             if (CY_SYS_CLK_TRIM_OR_COMP_FINISHED != trimRunningStatus)
 510:Generated_Source\PSoC4/CyLFClk.c ****             {
 511:Generated_Source\PSoC4/CyLFClk.c ****                 /* Checking if the counter CNTR 1 finished down-counting */
 512:Generated_Source\PSoC4/CyLFClk.c ****                 if(0u != (CY_SYS_CNT_REG1_REG & CY_SYS_CLK_ILO_CALIBR_COMPLETE_MASK))
 513:Generated_Source\PSoC4/CyLFClk.c ****                 {
 514:Generated_Source\PSoC4/CyLFClk.c ****                     returnStatus = CySysClkIloUpdateTrimReg(iloAccuracyInPPT);
 515:Generated_Source\PSoC4/CyLFClk.c ****                     trimRunningStatus = CY_SYS_CLK_TRIM_OR_COMP_FINISHED;
 516:Generated_Source\PSoC4/CyLFClk.c ****                 }
 517:Generated_Source\PSoC4/CyLFClk.c ****                 else
 518:Generated_Source\PSoC4/CyLFClk.c ****                 {
 519:Generated_Source\PSoC4/CyLFClk.c ****                     returnStatus = CYRET_STARTED;
 520:Generated_Source\PSoC4/CyLFClk.c ****                 }
 521:Generated_Source\PSoC4/CyLFClk.c ****             }
 522:Generated_Source\PSoC4/CyLFClk.c ****             else
 523:Generated_Source\PSoC4/CyLFClk.c ****             {
 524:Generated_Source\PSoC4/CyLFClk.c ****                 /* Reload CNTR 1 count value for next measuring */
 525:Generated_Source\PSoC4/CyLFClk.c ****                 CY_SYS_CNT_REG1_REG = cydelayFreqHz >> CY_SYS_CLK_SYS_CLK_DEVIDER;
 526:Generated_Source\PSoC4/CyLFClk.c ****                 trimRunningStatus = CY_SYS_CLK_TRIM_OR_COMP_STARTED;
 527:Generated_Source\PSoC4/CyLFClk.c ****                 returnStatus = CYRET_STARTED;
 528:Generated_Source\PSoC4/CyLFClk.c ****             }
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccw66xHk.s 			page 30


 529:Generated_Source\PSoC4/CyLFClk.c ****         }
 530:Generated_Source\PSoC4/CyLFClk.c ****     }
 531:Generated_Source\PSoC4/CyLFClk.c ****     else
 532:Generated_Source\PSoC4/CyLFClk.c ****     {
 533:Generated_Source\PSoC4/CyLFClk.c ****         returnStatus = CYRET_INVALID_STATE;
 534:Generated_Source\PSoC4/CyLFClk.c ****     }
 535:Generated_Source\PSoC4/CyLFClk.c **** 
 536:Generated_Source\PSoC4/CyLFClk.c ****     return (returnStatus);
 537:Generated_Source\PSoC4/CyLFClk.c **** }
 538:Generated_Source\PSoC4/CyLFClk.c **** 
 539:Generated_Source\PSoC4/CyLFClk.c **** 
 540:Generated_Source\PSoC4/CyLFClk.c **** /********************************************************************************
 541:Generated_Source\PSoC4/CyLFClk.c **** * Function Name: CySysClkIloUpdateTrimReg
 542:Generated_Source\PSoC4/CyLFClk.c **** *********************************************************************************
 543:Generated_Source\PSoC4/CyLFClk.c **** *
 544:Generated_Source\PSoC4/CyLFClk.c **** * \internal
 545:Generated_Source\PSoC4/CyLFClk.c **** * Function calculates ILO accuracy and check is error range is higher than 
 546:Generated_Source\PSoC4/CyLFClk.c **** * +/- 10%. If Measured frequency is higher than +/- 10% function updates 
 547:Generated_Source\PSoC4/CyLFClk.c **** * ILO Trim register.
 548:Generated_Source\PSoC4/CyLFClk.c **** *
 549:Generated_Source\PSoC4/CyLFClk.c **** * \param
 550:Generated_Source\PSoC4/CyLFClk.c **** * iloAccuracyInPPT Pointer to an integer in which the trimmed ILO 
 551:Generated_Source\PSoC4/CyLFClk.c **** * accuracy will be returned. The value returned in this pointer is not valid 
 552:Generated_Source\PSoC4/CyLFClk.c **** * until the function returns CYRET_SUCCESS. If ILO frequency error is lower 
 553:Generated_Source\PSoC4/CyLFClk.c **** * than +/- 10% then the value returned in this pointer will be updated.
 554:Generated_Source\PSoC4/CyLFClk.c **** *
 555:Generated_Source\PSoC4/CyLFClk.c **** * \return CYRET_SUCCESS - Indicates that ILO frequency error is lower than 
 556:Generated_Source\PSoC4/CyLFClk.c **** * +/- 10% and no actions are required.
 557:Generated_Source\PSoC4/CyLFClk.c **** *
 558:Generated_Source\PSoC4/CyLFClk.c **** * \return  CYRET_STARTED - Indicates that ILO frequency error is higher than 
 559:Generated_Source\PSoC4/CyLFClk.c **** * +/- 10% and ILO Trim register was updated.
 560:Generated_Source\PSoC4/CyLFClk.c **** *
 561:Generated_Source\PSoC4/CyLFClk.c **** * \return CYRET_INVALID_STATE - Indicates trimming was unsuccessful.
 562:Generated_Source\PSoC4/CyLFClk.c **** *
 563:Generated_Source\PSoC4/CyLFClk.c **** * Post #1 - To obtain 10% ILO accuracy the calculated accuracy should be equal 
 564:Generated_Source\PSoC4/CyLFClk.c **** * CY_SYS_CLK_ERROR_RANGE = 5.6%. Error value should take to account IMO error of 
 565:Generated_Source\PSoC4/CyLFClk.c **** * +/-2% (+/-0.64kHz), trim step of 2.36kHz (+/-1.18kHz) and error while ILO 
 566:Generated_Source\PSoC4/CyLFClk.c **** * frequency measuring.
 567:Generated_Source\PSoC4/CyLFClk.c **** *
 568:Generated_Source\PSoC4/CyLFClk.c **** * \endinternal
 569:Generated_Source\PSoC4/CyLFClk.c **** *
 570:Generated_Source\PSoC4/CyLFClk.c **** **********************************************************************************/
 571:Generated_Source\PSoC4/CyLFClk.c **** cystatus CySysClkIloUpdateTrimReg(int32* iloAccuracyInPPT)
 572:Generated_Source\PSoC4/CyLFClk.c **** {
 573:Generated_Source\PSoC4/CyLFClk.c ****     uint32 measuredIloFreq;
 574:Generated_Source\PSoC4/CyLFClk.c ****     uint32 currentIloTrimValue;
 575:Generated_Source\PSoC4/CyLFClk.c ****     int32 iloAccuracyValue;
 576:Generated_Source\PSoC4/CyLFClk.c ****     int32 trimStep;
 577:Generated_Source\PSoC4/CyLFClk.c ****     cystatus errorRangeStatus;
 578:Generated_Source\PSoC4/CyLFClk.c **** 
 579:Generated_Source\PSoC4/CyLFClk.c ****     if(0u != CY_SYS_CNT_REG2_REG)
 580:Generated_Source\PSoC4/CyLFClk.c ****     {
 581:Generated_Source\PSoC4/CyLFClk.c ****         measuredIloFreq = (CY_SYS_CNT_REG2_REG * cydelayFreqHz) / (cydelayFreqHz >> CY_SYS_CLK_SYS_
 582:Generated_Source\PSoC4/CyLFClk.c **** 
 583:Generated_Source\PSoC4/CyLFClk.c ****         /* Calculate value of error in PPT according to formula - 
 584:Generated_Source\PSoC4/CyLFClk.c ****         *       ((measuredIlofrequency - iloDesired freaquency) * 1000 / iloDesired freaquency) */
 585:Generated_Source\PSoC4/CyLFClk.c ****         iloAccuracyValue = (((int32) measuredIloFreq - (int32) CY_SYS_CLK_ILO_DESIRED_FREQ_HZ) * \
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccw66xHk.s 			page 31


 586:Generated_Source\PSoC4/CyLFClk.c ****                             ((int32) CY_SYS_CLK_PERTHOUSAND)) / ((int32) CY_SYS_CLK_ILO_DESIRED_FRE
 587:Generated_Source\PSoC4/CyLFClk.c **** 
 588:Generated_Source\PSoC4/CyLFClk.c ****         /* Check if ILO accuracy is more than +/- CY_SYS_CLK_ERROR_RANGE. See post #1 of API descri
 589:Generated_Source\PSoC4/CyLFClk.c ****         if(CY_SYS_CLK_ERROR_RANGE < (uint32) (CY_SYS_CLK_ABS_MACRO(iloAccuracyValue)))
 590:Generated_Source\PSoC4/CyLFClk.c ****         {
 591:Generated_Source\PSoC4/CyLFClk.c ****             if (0 < iloAccuracyValue)
 592:Generated_Source\PSoC4/CyLFClk.c ****             {
 593:Generated_Source\PSoC4/CyLFClk.c ****                 trimStep = (int32) (((iloAccuracyValue * (int32) CY_SYS_CLK_ERROR_COEF) + 
 594:Generated_Source\PSoC4/CyLFClk.c ****                 CY_SYS_CLK_HALF_OF_STEP) / CY_SYS_CLK_ERROR_STEP);
 595:Generated_Source\PSoC4/CyLFClk.c ****             }
 596:Generated_Source\PSoC4/CyLFClk.c ****             else
 597:Generated_Source\PSoC4/CyLFClk.c ****             {
 598:Generated_Source\PSoC4/CyLFClk.c ****                 trimStep = (int32) (((iloAccuracyValue * (int32) CY_SYS_CLK_ERROR_COEF) - 
 599:Generated_Source\PSoC4/CyLFClk.c ****                 CY_SYS_CLK_HALF_OF_STEP) / CY_SYS_CLK_ERROR_STEP);
 600:Generated_Source\PSoC4/CyLFClk.c ****             }
 601:Generated_Source\PSoC4/CyLFClk.c ****             currentIloTrimValue = (CY_SYS_CLK_ILO_TRIM_REG & CY_SYS_CLK_ILO_TRIM_MASK);
 602:Generated_Source\PSoC4/CyLFClk.c ****             trimStep = (int32) currentIloTrimValue - trimStep;
 603:Generated_Source\PSoC4/CyLFClk.c **** 
 604:Generated_Source\PSoC4/CyLFClk.c ****             if(trimStep > CY_SYS_CLK_FOURBITS_MAX)
 605:Generated_Source\PSoC4/CyLFClk.c ****             {
 606:Generated_Source\PSoC4/CyLFClk.c ****                 trimStep = CY_SYS_CLK_FOURBITS_MAX;
 607:Generated_Source\PSoC4/CyLFClk.c ****             }
 608:Generated_Source\PSoC4/CyLFClk.c ****             if(trimStep < 0)
 609:Generated_Source\PSoC4/CyLFClk.c ****             {
 610:Generated_Source\PSoC4/CyLFClk.c ****                 trimStep = 0;
 611:Generated_Source\PSoC4/CyLFClk.c ****             }
 612:Generated_Source\PSoC4/CyLFClk.c ****             CY_SYS_CLK_ILO_TRIM_REG = (CY_SYS_CLK_ILO_TRIM_REG & (uint32)(~CY_SYS_CLK_ILO_TRIM_MASK
 613:Generated_Source\PSoC4/CyLFClk.c ****                                                                  ((uint32) trimStep);
 614:Generated_Source\PSoC4/CyLFClk.c ****             errorRangeStatus = CYRET_STARTED;
 615:Generated_Source\PSoC4/CyLFClk.c ****         } /* Else return success because error is in +/- 10% range*/
 616:Generated_Source\PSoC4/CyLFClk.c ****         else
 617:Generated_Source\PSoC4/CyLFClk.c ****         {
 618:Generated_Source\PSoC4/CyLFClk.c ****             /* Write trimmed ILO accuracy through pointer. */
 619:Generated_Source\PSoC4/CyLFClk.c ****             *iloAccuracyInPPT = iloAccuracyValue;
 620:Generated_Source\PSoC4/CyLFClk.c ****             errorRangeStatus = CYRET_SUCCESS;
 621:Generated_Source\PSoC4/CyLFClk.c ****         }
 622:Generated_Source\PSoC4/CyLFClk.c ****     }
 623:Generated_Source\PSoC4/CyLFClk.c ****     else
 624:Generated_Source\PSoC4/CyLFClk.c ****     {
 625:Generated_Source\PSoC4/CyLFClk.c ****         errorRangeStatus = CYRET_INVALID_STATE;
 626:Generated_Source\PSoC4/CyLFClk.c ****     }
 627:Generated_Source\PSoC4/CyLFClk.c **** return (errorRangeStatus);
 628:Generated_Source\PSoC4/CyLFClk.c **** }
 629:Generated_Source\PSoC4/CyLFClk.c **** 
 630:Generated_Source\PSoC4/CyLFClk.c **** 
 631:Generated_Source\PSoC4/CyLFClk.c **** /*******************************************************************************
 632:Generated_Source\PSoC4/CyLFClk.c **** * Function Name: CySysClkIloRestoreFactoryTrim
 633:Generated_Source\PSoC4/CyLFClk.c **** ****************************************************************************//**
 634:Generated_Source\PSoC4/CyLFClk.c **** * \brief
 635:Generated_Source\PSoC4/CyLFClk.c **** * Restores the ILO Trim Register to factory value.
 636:Generated_Source\PSoC4/CyLFClk.c **** *
 637:Generated_Source\PSoC4/CyLFClk.c **** * The CySysClkIloStartMeasurement() API should be called prior to 
 638:Generated_Source\PSoC4/CyLFClk.c **** * calling this API. Otherwise CYRET_UNKNOWN will be returned.
 639:Generated_Source\PSoC4/CyLFClk.c **** *
 640:Generated_Source\PSoC4/CyLFClk.c **** * Available for all PSoC 4 devices except for PSoC 4000 / PSoC 4100 / PSoC 4200 
 641:Generated_Source\PSoC4/CyLFClk.c **** * / PSoC 4000S / PSoC 4100S / PSoC Analog Coprocessor devices.
 642:Generated_Source\PSoC4/CyLFClk.c **** *
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccw66xHk.s 			page 32


 643:Generated_Source\PSoC4/CyLFClk.c **** * \return CYRET_SUCCESS - Operation was successful. 
 644:Generated_Source\PSoC4/CyLFClk.c **** * \return CYRET_UNKNOWN - CySysClkIloStartMeasurement() was not called 
 645:Generated_Source\PSoC4/CyLFClk.c **** * before this API. Hence the trim value cannot be updated.
 646:Generated_Source\PSoC4/CyLFClk.c **** *
 647:Generated_Source\PSoC4/CyLFClk.c **** ******************************************************************************/
 648:Generated_Source\PSoC4/CyLFClk.c **** cystatus CySysClkIloRestoreFactoryTrim(void)
 649:Generated_Source\PSoC4/CyLFClk.c **** {
 650:Generated_Source\PSoC4/CyLFClk.c ****     cystatus returnStatus = CYRET_SUCCESS;
 651:Generated_Source\PSoC4/CyLFClk.c **** 
 652:Generated_Source\PSoC4/CyLFClk.c ****     /* Check was defaultIloTrimRegValue modified in CySysClkIloStartMeasurement */
 653:Generated_Source\PSoC4/CyLFClk.c ****     if(CY_SYS_CLK_ILO_TRIM_DEFAULT_VALUE != defaultIloTrimRegValue)
 654:Generated_Source\PSoC4/CyLFClk.c ****         {
 655:Generated_Source\PSoC4/CyLFClk.c ****             CY_SYS_CLK_ILO_TRIM_REG = ((CY_SYS_CLK_ILO_TRIM_REG & (uint32)(~CY_SYS_CLK_ILO_TRIM_MAS
 656:Generated_Source\PSoC4/CyLFClk.c ****                                        (defaultIloTrimRegValue & CY_SYS_CLK_ILO_TRIM_MASK));
 657:Generated_Source\PSoC4/CyLFClk.c ****         }
 658:Generated_Source\PSoC4/CyLFClk.c ****         else
 659:Generated_Source\PSoC4/CyLFClk.c ****         {
 660:Generated_Source\PSoC4/CyLFClk.c ****             returnStatus = CYRET_UNKNOWN;
 661:Generated_Source\PSoC4/CyLFClk.c ****         }
 662:Generated_Source\PSoC4/CyLFClk.c **** 
 663:Generated_Source\PSoC4/CyLFClk.c ****         return (returnStatus);
 664:Generated_Source\PSoC4/CyLFClk.c **** }
 665:Generated_Source\PSoC4/CyLFClk.c **** #endif /* (CY_IP_SRSSV2 && (!(CY_PSOC4_4100 || CY_PSOC4_4200))) */
 666:Generated_Source\PSoC4/CyLFClk.c **** 
 667:Generated_Source\PSoC4/CyLFClk.c **** 
 668:Generated_Source\PSoC4/CyLFClk.c **** #if (CY_IP_WCO && CY_IP_SRSSV2)
 669:Generated_Source\PSoC4/CyLFClk.c **** /*******************************************************************************
 670:Generated_Source\PSoC4/CyLFClk.c **** * Function Name: CySysClkGetLfclkSource
 671:Generated_Source\PSoC4/CyLFClk.c **** ********************************************************************************
 672:Generated_Source\PSoC4/CyLFClk.c **** *
 673:Generated_Source\PSoC4/CyLFClk.c **** * \internal
 674:Generated_Source\PSoC4/CyLFClk.c **** *  Gets the clock source for the LFCLK clock.
 675:Generated_Source\PSoC4/CyLFClk.c **** *  The function is applicable only for PSoC 4100 BLE / PSoC 4200 BLE / PSoC 4100M /
 676:Generated_Source\PSoC4/CyLFClk.c **** *  PSoC 4200M / PSoC 4200L.
 677:Generated_Source\PSoC4/CyLFClk.c **** *
 678:Generated_Source\PSoC4/CyLFClk.c **** * \return The LFCLK source:
 679:Generated_Source\PSoC4/CyLFClk.c **** * CY_SYS_CLK_LFCLK_SRC_ILO Internal Low Frequency (32 kHz) Oscillator (ILO)
 680:Generated_Source\PSoC4/CyLFClk.c **** * CY_SYS_CLK_LFCLK_SRC_WCO Low Frequency Watch Crystal Oscillator (WCO)
 681:Generated_Source\PSoC4/CyLFClk.c **** *
 682:Generated_Source\PSoC4/CyLFClk.c **** * \endinternal
 683:Generated_Source\PSoC4/CyLFClk.c **** *
 684:Generated_Source\PSoC4/CyLFClk.c **** *******************************************************************************/
 685:Generated_Source\PSoC4/CyLFClk.c ****     static uint32 CySysClkGetLfclkSource(void)
 686:Generated_Source\PSoC4/CyLFClk.c ****     {
 687:Generated_Source\PSoC4/CyLFClk.c ****         uint32 lfclkSource;
 688:Generated_Source\PSoC4/CyLFClk.c ****         lfclkSource = CY_SYS_WDT_CONFIG_REG & CY_SYS_CLK_LFCLK_SEL_MASK;
 689:Generated_Source\PSoC4/CyLFClk.c ****         return (lfclkSource);
 690:Generated_Source\PSoC4/CyLFClk.c ****     }
 691:Generated_Source\PSoC4/CyLFClk.c **** 
 692:Generated_Source\PSoC4/CyLFClk.c ****     
 693:Generated_Source\PSoC4/CyLFClk.c **** /*******************************************************************************
 694:Generated_Source\PSoC4/CyLFClk.c **** * Function Name: CySysClkSetLfclkSource
 695:Generated_Source\PSoC4/CyLFClk.c **** ****************************************************************************//**
 696:Generated_Source\PSoC4/CyLFClk.c **** * \brief
 697:Generated_Source\PSoC4/CyLFClk.c **** *  Sets the clock source for the LFCLK clock.
 698:Generated_Source\PSoC4/CyLFClk.c **** *
 699:Generated_Source\PSoC4/CyLFClk.c **** * The switch between LFCLK sources must be done between the positive edges of
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccw66xHk.s 			page 33


 700:Generated_Source\PSoC4/CyLFClk.c **** * LFCLK, because the glitch risk is around the LFCLK positive edge. To ensure
 701:Generated_Source\PSoC4/CyLFClk.c **** * that the switch can be done safely, the WDT counter value is read until it
 702:Generated_Source\PSoC4/CyLFClk.c **** * changes.
 703:Generated_Source\PSoC4/CyLFClk.c **** *
 704:Generated_Source\PSoC4/CyLFClk.c **** * That means that the positive edge just finished and the switch is performed.
 705:Generated_Source\PSoC4/CyLFClk.c **** * The enabled WDT counter is used for that purpose. If no counters are enabled,
 706:Generated_Source\PSoC4/CyLFClk.c **** * counter 0 is enabled. And after the LFCLK source is switched, counter 0
 707:Generated_Source\PSoC4/CyLFClk.c **** * configuration is restored.
 708:Generated_Source\PSoC4/CyLFClk.c **** *
 709:Generated_Source\PSoC4/CyLFClk.c **** *  The function is applicable only for devices with more than one source for 
 710:Generated_Source\PSoC4/CyLFClk.c **** * LFCLK - PSoC 4100 BLE / PSoC 4200 BLE / PRoC BLE / PSoC 4100M / PSoC 4200M / 
 711:Generated_Source\PSoC4/CyLFClk.c **** * PSoC 4200L.
 712:Generated_Source\PSoC4/CyLFClk.c **** *
 713:Generated_Source\PSoC4/CyLFClk.c **** * \note For PSoC 4000S / PSoC 4100S / PSoC Analog Coprocessor devices LFCLK can
 714:Generated_Source\PSoC4/CyLFClk.c **** * only be sourced from ILO even though WCO is available.
 715:Generated_Source\PSoC4/CyLFClk.c **** *
 716:Generated_Source\PSoC4/CyLFClk.c **** * \param
 717:Generated_Source\PSoC4/CyLFClk.c **** * source
 718:Generated_Source\PSoC4/CyLFClk.c **** * CY_SYS_CLK_LFCLK_SRC_ILO - Internal Low Frequency (32 kHz) 
 719:Generated_Source\PSoC4/CyLFClk.c **** * Oscillator (ILO).<br>
 720:Generated_Source\PSoC4/CyLFClk.c **** * CY_SYS_CLK_LFCLK_SRC_WCO - Low Frequency Watch Crystal Oscillator (WCO).
 721:Generated_Source\PSoC4/CyLFClk.c **** *
 722:Generated_Source\PSoC4/CyLFClk.c **** * \details
 723:Generated_Source\PSoC4/CyLFClk.c **** * This function has no effect if WDT is locked (CySysWdtLock() is called). 
 724:Generated_Source\PSoC4/CyLFClk.c **** * Call CySysWdtUnlock() to unlock WDT.
 725:Generated_Source\PSoC4/CyLFClk.c **** *
 726:Generated_Source\PSoC4/CyLFClk.c **** * Both the current source and the new source must be running and stable before
 727:Generated_Source\PSoC4/CyLFClk.c **** * calling this function.
 728:Generated_Source\PSoC4/CyLFClk.c **** *
 729:Generated_Source\PSoC4/CyLFClk.c **** * Changing the LFCLK clock source may change the LFCLK clock frequency and
 730:Generated_Source\PSoC4/CyLFClk.c **** * affect the functionality that uses this clock. For example, watchdog timer
 731:Generated_Source\PSoC4/CyLFClk.c **** * "uses this clock" or "this clock uses" (WDT) is clocked by LFCLK.
 732:Generated_Source\PSoC4/CyLFClk.c **** *
 733:Generated_Source\PSoC4/CyLFClk.c **** *******************************************************************************/
 734:Generated_Source\PSoC4/CyLFClk.c ****     void CySysClkSetLfclkSource(uint32 source)
 735:Generated_Source\PSoC4/CyLFClk.c ****     {
 736:Generated_Source\PSoC4/CyLFClk.c ****         uint8  interruptState;
 737:Generated_Source\PSoC4/CyLFClk.c **** 
 738:Generated_Source\PSoC4/CyLFClk.c ****         if (CySysClkGetLfclkSource() != source)
 739:Generated_Source\PSoC4/CyLFClk.c ****         {
 740:Generated_Source\PSoC4/CyLFClk.c ****             interruptState = CyEnterCriticalSection();
 741:Generated_Source\PSoC4/CyLFClk.c ****             CySysClkLfclkPosedgeCatch();
 742:Generated_Source\PSoC4/CyLFClk.c ****             CY_SYS_WDT_CONFIG_REG = (CY_SYS_WDT_CONFIG_REG & (uint32)(~CY_SYS_CLK_LFCLK_SEL_MASK)) 
 743:Generated_Source\PSoC4/CyLFClk.c ****                                     (source & CY_SYS_CLK_LFCLK_SEL_MASK);
 744:Generated_Source\PSoC4/CyLFClk.c ****             CySysClkLfclkPosedgeRestore();
 745:Generated_Source\PSoC4/CyLFClk.c ****             CyExitCriticalSection(interruptState);
 746:Generated_Source\PSoC4/CyLFClk.c ****         }
 747:Generated_Source\PSoC4/CyLFClk.c ****     }
 748:Generated_Source\PSoC4/CyLFClk.c **** #endif /* (CY_IP_WCO && CY_IP_SRSSV2) */
 749:Generated_Source\PSoC4/CyLFClk.c **** 
 750:Generated_Source\PSoC4/CyLFClk.c **** 
 751:Generated_Source\PSoC4/CyLFClk.c **** #if (CY_IP_WCO)
 752:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
 753:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysClkWcoStart
 754:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
 755:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
 756:Generated_Source\PSoC4/CyLFClk.c ****     *  Enables Watch Crystal Oscillator (WCO).
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccw66xHk.s 			page 34


 757:Generated_Source\PSoC4/CyLFClk.c ****     * 
 758:Generated_Source\PSoC4/CyLFClk.c ****     * This API enables WCO which is used as a source for LFCLK. Similar to ILO, 
 759:Generated_Source\PSoC4/CyLFClk.c ****     * WCO is also available in all modes except Hibernate and Stop modes.
 760:Generated_Source\PSoC4/CyLFClk.c ****     * \note In PSoC 4000S / PSoC 4100S / PSoC Analog Coprocessor devices
 761:Generated_Source\PSoC4/CyLFClk.c ****     * WCO cannot be a source for the LFCLK. 
 762:Generated_Source\PSoC4/CyLFClk.c ****     *
 763:Generated_Source\PSoC4/CyLFClk.c ****     *  WCO is always enabled in High Power Mode (HPM). Refer to the device
 764:Generated_Source\PSoC4/CyLFClk.c ****     *  datasheet for the  WCO startup time. Once WCO becomes stable it can be
 765:Generated_Source\PSoC4/CyLFClk.c ****     *  switched to Low Power Mode (LPM). Note that oscillator can be unstable
 766:Generated_Source\PSoC4/CyLFClk.c ****     *  during a switch and hence its output should not be used at that moment.
 767:Generated_Source\PSoC4/CyLFClk.c ****     *
 768:Generated_Source\PSoC4/CyLFClk.c ****     *  The CySysClkWcoSetPowerMode() function configures the WCO power mode.
 769:Generated_Source\PSoC4/CyLFClk.c ****     *
 770:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
 771:Generated_Source\PSoC4/CyLFClk.c ****     void CySysClkWcoStart(void)
 772:Generated_Source\PSoC4/CyLFClk.c ****     {
 407              		.loc 2 772 0
 408              		.cfi_startproc
 409 0000 08B5     		push	{r3, lr}
 410              		.cfi_def_cfa_offset 8
 411              		.cfi_offset 3, -8
 412              		.cfi_offset 14, -4
 773:Generated_Source\PSoC4/CyLFClk.c ****         CySysClkWcoSetHighPowerMode();
 413              		.loc 2 773 0
 414 0002 FFF7FEFF 		bl	CySysClkWcoSetHighPowerMode
 415              	.LVL22:
 774:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_CLK_WCO_CONFIG_REG |= CY_SYS_CLK_WCO_CONFIG_LPM_ENABLE;
 416              		.loc 2 774 0
 417 0006 8021     		mov	r1, #128
 418 0008 024A     		ldr	r2, .L32
 419 000a 0906     		lsl	r1, r1, #24
 420 000c 1368     		ldr	r3, [r2]
 775:Generated_Source\PSoC4/CyLFClk.c ****     }
 421              		.loc 2 775 0
 422              		@ sp needed
 774:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_CLK_WCO_CONFIG_REG |= CY_SYS_CLK_WCO_CONFIG_LPM_ENABLE;
 423              		.loc 2 774 0
 424 000e 0B43     		orr	r3, r1
 425 0010 1360     		str	r3, [r2]
 426              		.loc 2 775 0
 427 0012 08BD     		pop	{r3, pc}
 428              	.L33:
 429              		.align	2
 430              	.L32:
 431 0014 00000640 		.word	1074135040
 432              		.cfi_endproc
 433              	.LFE6:
 434              		.size	CySysClkWcoStart, .-CySysClkWcoStart
 435              		.section	.text.CySysClkWcoEnabled,"ax",%progbits
 436              		.align	1
 437              		.global	CySysClkWcoEnabled
 438              		.code	16
 439              		.thumb_func
 440              		.type	CySysClkWcoEnabled, %function
 441              	CySysClkWcoEnabled:
 442              	.LFB8:
 776:Generated_Source\PSoC4/CyLFClk.c **** 
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccw66xHk.s 			page 35


 777:Generated_Source\PSoC4/CyLFClk.c **** 
 778:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
 779:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysClkWcoStop
 780:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
 781:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
 782:Generated_Source\PSoC4/CyLFClk.c ****     * Disables the 32 KHz Crystal Oscillator.
 783:Generated_Source\PSoC4/CyLFClk.c ****     *
 784:Generated_Source\PSoC4/CyLFClk.c ****     * API switch of WCO.
 785:Generated_Source\PSoC4/CyLFClk.c ****     * \note PSoC 4100S / PSoC Analog Coprocessor: WCO is required for DeepSleep 
 786:Generated_Source\PSoC4/CyLFClk.c ****     * Timer's operation.
 787:Generated_Source\PSoC4/CyLFClk.c ****     *
 788:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
 789:Generated_Source\PSoC4/CyLFClk.c ****     void  CySysClkWcoStop(void)
 790:Generated_Source\PSoC4/CyLFClk.c ****     {
 791:Generated_Source\PSoC4/CyLFClk.c ****         #if (CY_IP_SRSSV2)
 792:Generated_Source\PSoC4/CyLFClk.c ****             uint8  interruptState;
 793:Generated_Source\PSoC4/CyLFClk.c ****         #endif /* (CY_IP_SRSSV2) */
 794:Generated_Source\PSoC4/CyLFClk.c **** 
 795:Generated_Source\PSoC4/CyLFClk.c ****         if (0u != CySysClkWcoEnabled())
 796:Generated_Source\PSoC4/CyLFClk.c ****         {
 797:Generated_Source\PSoC4/CyLFClk.c ****             #if (CY_IP_SRSSV2)
 798:Generated_Source\PSoC4/CyLFClk.c ****                 if (CY_SYS_CLK_LFCLK_SRC_WCO == CySysClkGetLfclkSource())
 799:Generated_Source\PSoC4/CyLFClk.c ****                 {
 800:Generated_Source\PSoC4/CyLFClk.c ****                     interruptState = CyEnterCriticalSection();
 801:Generated_Source\PSoC4/CyLFClk.c ****                     CySysClkLfclkPosedgeCatch();
 802:Generated_Source\PSoC4/CyLFClk.c ****                     CY_SYS_CLK_WCO_CONFIG_REG &= (uint32) ~CY_SYS_CLK_WCO_CONFIG_LPM_ENABLE;
 803:Generated_Source\PSoC4/CyLFClk.c ****                     CySysClkLfclkPosedgeRestore();
 804:Generated_Source\PSoC4/CyLFClk.c ****                     CyExitCriticalSection(interruptState);
 805:Generated_Source\PSoC4/CyLFClk.c ****                 }
 806:Generated_Source\PSoC4/CyLFClk.c ****                 else /* Safe to disable - shortened pulse does not impact peripheral */
 807:Generated_Source\PSoC4/CyLFClk.c ****             #endif /* (CY_IP_SRSSV2) */
 808:Generated_Source\PSoC4/CyLFClk.c ****             {
 809:Generated_Source\PSoC4/CyLFClk.c ****                 CY_SYS_CLK_WCO_CONFIG_REG &= (uint32) ~CY_SYS_CLK_WCO_CONFIG_LPM_ENABLE;
 810:Generated_Source\PSoC4/CyLFClk.c ****             }
 811:Generated_Source\PSoC4/CyLFClk.c ****         } /* Otherwise do nothing. WCO configuration cannot be changed. */
 812:Generated_Source\PSoC4/CyLFClk.c ****     }
 813:Generated_Source\PSoC4/CyLFClk.c **** 
 814:Generated_Source\PSoC4/CyLFClk.c **** 
 815:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
 816:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysClkWcoEnabled
 817:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
 818:Generated_Source\PSoC4/CyLFClk.c ****     * \internal Reports the WCO enable state.
 819:Generated_Source\PSoC4/CyLFClk.c ****     *
 820:Generated_Source\PSoC4/CyLFClk.c ****     * \return 1 if WCO is enabled
 821:Generated_Source\PSoC4/CyLFClk.c ****     * \return 0 if WCO is disabled.
 822:Generated_Source\PSoC4/CyLFClk.c ****     * \endinternal
 823:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
 824:Generated_Source\PSoC4/CyLFClk.c ****     uint32 CySysClkWcoEnabled(void)
 825:Generated_Source\PSoC4/CyLFClk.c ****     {
 443              		.loc 2 825 0
 444              		.cfi_startproc
 826:Generated_Source\PSoC4/CyLFClk.c ****         return ((0u != (CY_SYS_CLK_WCO_CONFIG_REG & (uint32)(CY_SYS_CLK_WCO_CONFIG_LPM_ENABLE))) ?
 445              		.loc 2 826 0
 446 0000 014B     		ldr	r3, .L35
 827:Generated_Source\PSoC4/CyLFClk.c ****                 (uint32) 1u :
 828:Generated_Source\PSoC4/CyLFClk.c ****                 (uint32) 0u);
 829:Generated_Source\PSoC4/CyLFClk.c ****     }
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccw66xHk.s 			page 36


 447              		.loc 2 829 0
 448              		@ sp needed
 826:Generated_Source\PSoC4/CyLFClk.c ****         return ((0u != (CY_SYS_CLK_WCO_CONFIG_REG & (uint32)(CY_SYS_CLK_WCO_CONFIG_LPM_ENABLE))) ?
 449              		.loc 2 826 0
 450 0002 1868     		ldr	r0, [r3]
 827:Generated_Source\PSoC4/CyLFClk.c ****                 (uint32) 1u :
 451              		.loc 2 827 0
 452 0004 C00F     		lsr	r0, r0, #31
 453              		.loc 2 829 0
 454 0006 7047     		bx	lr
 455              	.L36:
 456              		.align	2
 457              	.L35:
 458 0008 00000640 		.word	1074135040
 459              		.cfi_endproc
 460              	.LFE8:
 461              		.size	CySysClkWcoEnabled, .-CySysClkWcoEnabled
 462              		.section	.text.CySysClkWcoStop,"ax",%progbits
 463              		.align	1
 464              		.global	CySysClkWcoStop
 465              		.code	16
 466              		.thumb_func
 467              		.type	CySysClkWcoStop, %function
 468              	CySysClkWcoStop:
 469              	.LFB7:
 790:Generated_Source\PSoC4/CyLFClk.c ****         #if (CY_IP_SRSSV2)
 470              		.loc 2 790 0
 471              		.cfi_startproc
 472 0000 08B5     		push	{r3, lr}
 473              		.cfi_def_cfa_offset 8
 474              		.cfi_offset 3, -8
 475              		.cfi_offset 14, -4
 795:Generated_Source\PSoC4/CyLFClk.c ****         {
 476              		.loc 2 795 0
 477 0002 FFF7FEFF 		bl	CySysClkWcoEnabled
 478              	.LVL23:
 479 0006 0028     		cmp	r0, #0
 480 0008 04D0     		beq	.L37
 809:Generated_Source\PSoC4/CyLFClk.c ****             }
 481              		.loc 2 809 0
 482 000a 034A     		ldr	r2, .L42
 483 000c 1368     		ldr	r3, [r2]
 484 000e 5B00     		lsl	r3, r3, #1
 485 0010 5B08     		lsr	r3, r3, #1
 486 0012 1360     		str	r3, [r2]
 487              	.L37:
 812:Generated_Source\PSoC4/CyLFClk.c **** 
 488              		.loc 2 812 0
 489              		@ sp needed
 490 0014 08BD     		pop	{r3, pc}
 491              	.L43:
 492 0016 C046     		.align	2
 493              	.L42:
 494 0018 00000640 		.word	1074135040
 495              		.cfi_endproc
 496              	.LFE7:
 497              		.size	CySysClkWcoStop, .-CySysClkWcoStop
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccw66xHk.s 			page 37


 498              		.section	.text.CySysClkWcoSetPowerMode,"ax",%progbits
 499              		.align	1
 500              		.global	CySysClkWcoSetPowerMode
 501              		.code	16
 502              		.thumb_func
 503              		.type	CySysClkWcoSetPowerMode, %function
 504              	CySysClkWcoSetPowerMode:
 505              	.LFB9:
 830:Generated_Source\PSoC4/CyLFClk.c **** 
 831:Generated_Source\PSoC4/CyLFClk.c **** 
 832:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
 833:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysClkWcoSetPowerMode
 834:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
 835:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
 836:Generated_Source\PSoC4/CyLFClk.c ****     * Sets the power mode for the 32 KHz WCO.
 837:Generated_Source\PSoC4/CyLFClk.c ****     *
 838:Generated_Source\PSoC4/CyLFClk.c ****     * By default (if this function is not called), the WCO is in High power mode 
 839:Generated_Source\PSoC4/CyLFClk.c ****     * during Active and device's low power modes
 840:Generated_Source\PSoC4/CyLFClk.c ****     *
 841:Generated_Source\PSoC4/CyLFClk.c ****     * \param mode
 842:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_CLK_WCO_HPM - The High Power mode.<br>
 843:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_CLK_WCO_LPM - The Low Power mode.
 844:Generated_Source\PSoC4/CyLFClk.c ****     *
 845:Generated_Source\PSoC4/CyLFClk.c ****     * \return A previous power mode. The same as the parameters.
 846:Generated_Source\PSoC4/CyLFClk.c ****     *
 847:Generated_Source\PSoC4/CyLFClk.c ****     * \note
 848:Generated_Source\PSoC4/CyLFClk.c ****     * The WCO Low Power mode is applicable for PSoC 4100 BLE / PSoC 4200 BLE devices.
 849:Generated_Source\PSoC4/CyLFClk.c ****     *
 850:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
 851:Generated_Source\PSoC4/CyLFClk.c ****     uint32 CySysClkWcoSetPowerMode(uint32 mode)
 852:Generated_Source\PSoC4/CyLFClk.c ****     {
 506              		.loc 2 852 0
 507              		.cfi_startproc
 508              	.LVL24:
 853:Generated_Source\PSoC4/CyLFClk.c ****         uint32 powerModeStatus;
 854:Generated_Source\PSoC4/CyLFClk.c **** 
 855:Generated_Source\PSoC4/CyLFClk.c ****         powerModeStatus = CY_SYS_CLK_WCO_CONFIG_REG & CY_SYS_CLK_WCO_CONFIG_LPM_EN;
 509              		.loc 2 855 0
 510 0000 054B     		ldr	r3, .L47
 852:Generated_Source\PSoC4/CyLFClk.c ****         uint32 powerModeStatus;
 511              		.loc 2 852 0
 512 0002 10B5     		push	{r4, lr}
 513              		.cfi_def_cfa_offset 8
 514              		.cfi_offset 4, -8
 515              		.cfi_offset 14, -4
 516              		.loc 2 855 0
 517 0004 1C68     		ldr	r4, [r3]
 518 0006 0123     		mov	r3, #1
 519 0008 1C40     		and	r4, r3
 520              	.LVL25:
 856:Generated_Source\PSoC4/CyLFClk.c **** 
 857:Generated_Source\PSoC4/CyLFClk.c ****         switch(mode)
 521              		.loc 2 857 0
 522 000a 0028     		cmp	r0, #0
 523 000c 01D1     		bne	.L45
 858:Generated_Source\PSoC4/CyLFClk.c ****         {
 859:Generated_Source\PSoC4/CyLFClk.c ****         case CY_SYS_CLK_WCO_HPM:
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccw66xHk.s 			page 38


 860:Generated_Source\PSoC4/CyLFClk.c ****                 CySysClkWcoSetHighPowerMode();
 524              		.loc 2 860 0
 525 000e FFF7FEFF 		bl	CySysClkWcoSetHighPowerMode
 526              	.LVL26:
 527              	.L45:
 861:Generated_Source\PSoC4/CyLFClk.c ****             break;
 862:Generated_Source\PSoC4/CyLFClk.c **** 
 863:Generated_Source\PSoC4/CyLFClk.c ****         #if(CY_PSOC4_4100BL || CY_PSOC4_4200BL)
 864:Generated_Source\PSoC4/CyLFClk.c ****             case CY_SYS_CLK_WCO_LPM:
 865:Generated_Source\PSoC4/CyLFClk.c ****                     CySysClkWcoSetLowPowerMode();
 866:Generated_Source\PSoC4/CyLFClk.c ****                 break;
 867:Generated_Source\PSoC4/CyLFClk.c ****         #endif /* (CY_PSOC4_4100BL || CY_PSOC4_4200BL) */
 868:Generated_Source\PSoC4/CyLFClk.c **** 
 869:Generated_Source\PSoC4/CyLFClk.c ****         default:
 870:Generated_Source\PSoC4/CyLFClk.c ****             CYASSERT(0u != 0u);
 871:Generated_Source\PSoC4/CyLFClk.c ****             break;
 872:Generated_Source\PSoC4/CyLFClk.c ****         }
 873:Generated_Source\PSoC4/CyLFClk.c **** 
 874:Generated_Source\PSoC4/CyLFClk.c ****         return (powerModeStatus);
 875:Generated_Source\PSoC4/CyLFClk.c ****     }
 528              		.loc 2 875 0
 529 0012 201C     		mov	r0, r4
 530              		@ sp needed
 531              	.LVL27:
 532 0014 10BD     		pop	{r4, pc}
 533              	.L48:
 534 0016 C046     		.align	2
 535              	.L47:
 536 0018 00000640 		.word	1074135040
 537              		.cfi_endproc
 538              	.LFE9:
 539              		.size	CySysClkWcoSetPowerMode, .-CySysClkWcoSetPowerMode
 540              		.section	.text.CySysClkWcoClockOutSelect,"ax",%progbits
 541              		.align	1
 542              		.global	CySysClkWcoClockOutSelect
 543              		.code	16
 544              		.thumb_func
 545              		.type	CySysClkWcoClockOutSelect, %function
 546              	CySysClkWcoClockOutSelect:
 547              	.LFB10:
 876:Generated_Source\PSoC4/CyLFClk.c **** 
 877:Generated_Source\PSoC4/CyLFClk.c **** 
 878:Generated_Source\PSoC4/CyLFClk.c **** /*******************************************************************************
 879:Generated_Source\PSoC4/CyLFClk.c **** * Function Name: CySysClkWcoClockOutSelect
 880:Generated_Source\PSoC4/CyLFClk.c **** ****************************************************************************//**
 881:Generated_Source\PSoC4/CyLFClk.c **** * \brief
 882:Generated_Source\PSoC4/CyLFClk.c **** * Selects the WCO block output source.
 883:Generated_Source\PSoC4/CyLFClk.c **** *
 884:Generated_Source\PSoC4/CyLFClk.c **** * In addition to generating 32.768 kHz clock from external crystals, WCO 
 885:Generated_Source\PSoC4/CyLFClk.c **** * can be sourced by external clock source using wco_out pin. The API help to
 886:Generated_Source\PSoC4/CyLFClk.c **** * lets you select between the sources: External crystal or external pin.
 887:Generated_Source\PSoC4/CyLFClk.c **** *
 888:Generated_Source\PSoC4/CyLFClk.c **** * If you want to use external pin to drive WCO the next procedure is required:
 889:Generated_Source\PSoC4/CyLFClk.c **** * <br> 1) Disable the WCO.
 890:Generated_Source\PSoC4/CyLFClk.c **** * <br> 2) Drive the wco_out pin to an external signal source.
 891:Generated_Source\PSoC4/CyLFClk.c **** * <br> 3) Call CySysClkWcoClockOutSelect(CY_SYS_CLK_WCO_SEL_PIN).
 892:Generated_Source\PSoC4/CyLFClk.c **** * <br> 4) Enable the WCO and wait for 15 us before clocking the XO pad at the high 
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccw66xHk.s 			page 39


 893:Generated_Source\PSoC4/CyLFClk.c **** * potential. Let's assume you are using the 1.6v clock amplitude, then the
 894:Generated_Source\PSoC4/CyLFClk.c **** * sequence would start at 1.6v, then 0v, then 1.6v etc at a chosen frequency.
 895:Generated_Source\PSoC4/CyLFClk.c **** *
 896:Generated_Source\PSoC4/CyLFClk.c **** * If you want to use WCO after using an external pin source:
 897:Generated_Source\PSoC4/CyLFClk.c **** * <br> 1) Disable the WCO.
 898:Generated_Source\PSoC4/CyLFClk.c **** * <br> 2) Drive off wco_out pin with external signal source.
 899:Generated_Source\PSoC4/CyLFClk.c **** * <br> 3) Call CySysClkWcoClockOutSelect(CY_SYS_CLK_WCO_SEL_CRYSTAL).
 900:Generated_Source\PSoC4/CyLFClk.c **** * <br> 4) Enable the WCO.
 901:Generated_Source\PSoC4/CyLFClk.c **** *
 902:Generated_Source\PSoC4/CyLFClk.c **** * \warning 
 903:Generated_Source\PSoC4/CyLFClk.c **** * Do not use the oscillator output clock prior to a 15uS delay in your system.
 904:Generated_Source\PSoC4/CyLFClk.c **** * There are no limitations on the external clock frequency.
 905:Generated_Source\PSoC4/CyLFClk.c **** * \warning 
 906:Generated_Source\PSoC4/CyLFClk.c **** * When external clock source was selected to drive WCO block the IMO can be 
 907:Generated_Source\PSoC4/CyLFClk.c **** * trimmed only when external clock source period is equal to WCO external
 908:Generated_Source\PSoC4/CyLFClk.c **** * crystal period. Also external clock source accuracy should be higher 
 909:Generated_Source\PSoC4/CyLFClk.c **** * or equal to WCO external crystal accuracy.
 910:Generated_Source\PSoC4/CyLFClk.c **** *
 911:Generated_Source\PSoC4/CyLFClk.c **** * \param clockSel
 912:Generated_Source\PSoC4/CyLFClk.c **** * CY_SYS_CLK_WCO_SEL_CRYSTAL - Selects External crystal as clock 
 913:Generated_Source\PSoC4/CyLFClk.c **** * source of WCO.<br>
 914:Generated_Source\PSoC4/CyLFClk.c **** * CY_SYS_CLK_WCO_SEL_PIN - Selects External clock input on wco_in pin as 
 915:Generated_Source\PSoC4/CyLFClk.c **** * clock source of WCO.
 916:Generated_Source\PSoC4/CyLFClk.c **** *
 917:Generated_Source\PSoC4/CyLFClk.c **** *******************************************************************************/
 918:Generated_Source\PSoC4/CyLFClk.c **** void CySysClkWcoClockOutSelect(uint32 clockSel)
 919:Generated_Source\PSoC4/CyLFClk.c ****     {
 548              		.loc 2 919 0
 549              		.cfi_startproc
 550              	.LVL28:
 551 0000 10B5     		push	{r4, lr}
 552              		.cfi_def_cfa_offset 8
 553              		.cfi_offset 4, -8
 554              		.cfi_offset 14, -4
 555              		.loc 2 919 0
 556 0002 041C     		mov	r4, r0
 920:Generated_Source\PSoC4/CyLFClk.c ****         if (0u != CySysClkWcoEnabled())
 557              		.loc 2 920 0
 558 0004 FFF7FEFF 		bl	CySysClkWcoEnabled
 559              	.LVL29:
 560 0008 0028     		cmp	r0, #0
 561 000a 08D0     		beq	.L49
 921:Generated_Source\PSoC4/CyLFClk.c ****         {
 922:Generated_Source\PSoC4/CyLFClk.c ****             if (1u >= clockSel)
 562              		.loc 2 922 0
 563 000c 012C     		cmp	r4, #1
 564 000e 06D8     		bhi	.L49
 923:Generated_Source\PSoC4/CyLFClk.c ****             {
 924:Generated_Source\PSoC4/CyLFClk.c ****                 CY_SYS_CLK_WCO_CONFIG_REG = (CY_SYS_CLK_WCO_CONFIG_REG & (uint32)(~CY_SYS_CLK_WCO_S
 565              		.loc 2 924 0
 566 0010 0421     		mov	r1, #4
 567 0012 034A     		ldr	r2, .L54
 925:Generated_Source\PSoC4/CyLFClk.c ****                                         (clockSel << CY_SYS_CLK_WCO_SELECT_PIN_OFFSET);
 568              		.loc 2 925 0
 569 0014 A000     		lsl	r0, r4, #2
 924:Generated_Source\PSoC4/CyLFClk.c ****                                         (clockSel << CY_SYS_CLK_WCO_SELECT_PIN_OFFSET);
 570              		.loc 2 924 0
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccw66xHk.s 			page 40


 571 0016 1368     		ldr	r3, [r2]
 572 0018 8B43     		bic	r3, r1
 573 001a 1843     		orr	r0, r3
 574 001c 1060     		str	r0, [r2]
 575              	.L49:
 926:Generated_Source\PSoC4/CyLFClk.c ****             }
 927:Generated_Source\PSoC4/CyLFClk.c ****             else
 928:Generated_Source\PSoC4/CyLFClk.c ****             {
 929:Generated_Source\PSoC4/CyLFClk.c ****                 CYASSERT(0u != 0u);
 930:Generated_Source\PSoC4/CyLFClk.c ****             }
 931:Generated_Source\PSoC4/CyLFClk.c ****         }
 932:Generated_Source\PSoC4/CyLFClk.c ****     }
 576              		.loc 2 932 0
 577              		@ sp needed
 578              	.LVL30:
 579 001e 10BD     		pop	{r4, pc}
 580              	.L55:
 581              		.align	2
 582              	.L54:
 583 0020 00000640 		.word	1074135040
 584              		.cfi_endproc
 585              	.LFE10:
 586              		.size	CySysClkWcoClockOutSelect, .-CySysClkWcoClockOutSelect
 587              		.section	.text.CySysWdtGetEnabledStatus,"ax",%progbits
 588              		.align	1
 589              		.global	CySysWdtGetEnabledStatus
 590              		.code	16
 591              		.thumb_func
 592              		.type	CySysWdtGetEnabledStatus, %function
 593              	CySysWdtGetEnabledStatus:
 594              	.LFB11:
 933:Generated_Source\PSoC4/CyLFClk.c **** #endif  /* (CY_IP_WCO) */
 934:Generated_Source\PSoC4/CyLFClk.c **** 
 935:Generated_Source\PSoC4/CyLFClk.c **** 
 936:Generated_Source\PSoC4/CyLFClk.c **** #if(CY_IP_SRSSV2)
 937:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
 938:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtLock
 939:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
 940:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
 941:Generated_Source\PSoC4/CyLFClk.c ****     * Locks out configuration changes to the Watchdog timer registers and ILO
 942:Generated_Source\PSoC4/CyLFClk.c ****     * configuration register.
 943:Generated_Source\PSoC4/CyLFClk.c ****     *
 944:Generated_Source\PSoC4/CyLFClk.c ****     * After this function is called, ILO clock can't be disabled until
 945:Generated_Source\PSoC4/CyLFClk.c ****     * CySysWdtUnlock() is called.
 946:Generated_Source\PSoC4/CyLFClk.c ****     *
 947:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
 948:Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtLock(void)
 949:Generated_Source\PSoC4/CyLFClk.c ****     {
 950:Generated_Source\PSoC4/CyLFClk.c ****         uint8 interruptState;
 951:Generated_Source\PSoC4/CyLFClk.c ****         interruptState = CyEnterCriticalSection();
 952:Generated_Source\PSoC4/CyLFClk.c **** 
 953:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_CLK_SELECT_REG = (CY_SYS_CLK_SELECT_REG & (uint32)(~CY_SYS_WDT_CLK_LOCK_BITS_MASK)) 
 954:Generated_Source\PSoC4/CyLFClk.c ****                  CY_SYS_WDT_CLK_LOCK_BITS_MASK;
 955:Generated_Source\PSoC4/CyLFClk.c **** 
 956:Generated_Source\PSoC4/CyLFClk.c ****         CyExitCriticalSection(interruptState);
 957:Generated_Source\PSoC4/CyLFClk.c ****     }
 958:Generated_Source\PSoC4/CyLFClk.c **** 
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccw66xHk.s 			page 41


 959:Generated_Source\PSoC4/CyLFClk.c **** 
 960:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
 961:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtLocked
 962:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
 963:Generated_Source\PSoC4/CyLFClk.c ****     * \internal
 964:Generated_Source\PSoC4/CyLFClk.c ****     * Reports the WDT lock state.
 965:Generated_Source\PSoC4/CyLFClk.c ****     *
 966:Generated_Source\PSoC4/CyLFClk.c ****     * \return 1 - WDT is locked, and 0 - WDT is unlocked.
 967:Generated_Source\PSoC4/CyLFClk.c ****     * \endinternal
 968:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
 969:Generated_Source\PSoC4/CyLFClk.c ****     static uint32 CySysWdtLocked(void)
 970:Generated_Source\PSoC4/CyLFClk.c ****     {
 971:Generated_Source\PSoC4/CyLFClk.c ****         /* Prohibits writing to WDT registers and ILO/WCO registers when not equal 0 */
 972:Generated_Source\PSoC4/CyLFClk.c ****         return ((0u != (CY_SYS_CLK_SELECT_REG & (uint32)(CY_SYS_WDT_CLK_LOCK_BITS_MASK))) ? (uint32
 973:Generated_Source\PSoC4/CyLFClk.c ****     }
 974:Generated_Source\PSoC4/CyLFClk.c **** 
 975:Generated_Source\PSoC4/CyLFClk.c **** 
 976:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
 977:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtUnlock
 978:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
 979:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
 980:Generated_Source\PSoC4/CyLFClk.c ****     *  Unlocks the Watchdog Timer configuration register.
 981:Generated_Source\PSoC4/CyLFClk.c ****     *
 982:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
 983:Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtUnlock(void)
 984:Generated_Source\PSoC4/CyLFClk.c ****     {
 985:Generated_Source\PSoC4/CyLFClk.c ****         uint8 interruptState;
 986:Generated_Source\PSoC4/CyLFClk.c ****         interruptState = CyEnterCriticalSection();
 987:Generated_Source\PSoC4/CyLFClk.c **** 
 988:Generated_Source\PSoC4/CyLFClk.c ****         /* Removing WDT lock requires two writes */
 989:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_CLK_SELECT_REG = ((CY_SYS_CLK_SELECT_REG & (uint32)(~CY_SYS_WDT_CLK_LOCK_BITS_MASK))
 990:Generated_Source\PSoC4/CyLFClk.c ****                 CY_SYS_WDT_CLK_LOCK_BIT0);
 991:Generated_Source\PSoC4/CyLFClk.c **** 
 992:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_CLK_SELECT_REG = ((CY_SYS_CLK_SELECT_REG & (uint32)(~CY_SYS_WDT_CLK_LOCK_BITS_MASK))
 993:Generated_Source\PSoC4/CyLFClk.c ****                 CY_SYS_WDT_CLK_LOCK_BIT1);
 994:Generated_Source\PSoC4/CyLFClk.c **** 
 995:Generated_Source\PSoC4/CyLFClk.c ****         CyExitCriticalSection(interruptState);
 996:Generated_Source\PSoC4/CyLFClk.c ****     }
 997:Generated_Source\PSoC4/CyLFClk.c **** 
 998:Generated_Source\PSoC4/CyLFClk.c **** 
 999:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1000:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtGetEnabledStatus
1001:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1002:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
1003:Generated_Source\PSoC4/CyLFClk.c ****     *  Reads the enabled status of one of the three WDT counters.
1004:Generated_Source\PSoC4/CyLFClk.c ****     *
1005:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum: Valid range [0-2].  The number of the WDT counter.
1006:Generated_Source\PSoC4/CyLFClk.c ****     *
1007:Generated_Source\PSoC4/CyLFClk.c ****     * \return The status of the WDT counter:
1008:Generated_Source\PSoC4/CyLFClk.c ****     * \return 0 - If the counter is disabled.
1009:Generated_Source\PSoC4/CyLFClk.c ****     * \return 1 - If the counter is enabled.
1010:Generated_Source\PSoC4/CyLFClk.c ****     *
1011:Generated_Source\PSoC4/CyLFClk.c ****     * \details
1012:Generated_Source\PSoC4/CyLFClk.c ****     * This function returns an actual WDT counter status from the status register. It may
1013:Generated_Source\PSoC4/CyLFClk.c ****     * take up to 3 LFCLK cycles for the WDT status register to contain actual data
1014:Generated_Source\PSoC4/CyLFClk.c ****     * after the WDT counter is enabled.
1015:Generated_Source\PSoC4/CyLFClk.c ****     *
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccw66xHk.s 			page 42


1016:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1017:Generated_Source\PSoC4/CyLFClk.c ****     uint32 CySysWdtGetEnabledStatus(uint32 counterNum)
1018:Generated_Source\PSoC4/CyLFClk.c ****     {
1019:Generated_Source\PSoC4/CyLFClk.c ****         CYASSERT(counterNum < CY_SYS_WDT_COUNTERS_MAX);
1020:Generated_Source\PSoC4/CyLFClk.c ****         return ((CY_SYS_WDT_CONTROL_REG >> ((CY_SYS_WDT_CNT_SHIFT * counterNum) + CY_SYS_WDT_CNT_ST
1021:Generated_Source\PSoC4/CyLFClk.c ****     }
1022:Generated_Source\PSoC4/CyLFClk.c **** 
1023:Generated_Source\PSoC4/CyLFClk.c **** 
1024:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1025:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtSetMode
1026:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1027:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
1028:Generated_Source\PSoC4/CyLFClk.c ****     * Writes the mode of one of the three WDT counters.
1029:Generated_Source\PSoC4/CyLFClk.c ****     *
1030:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum: Valid range [0-2].  The number of the WDT counter.
1031:Generated_Source\PSoC4/CyLFClk.c ****     *
1032:Generated_Source\PSoC4/CyLFClk.c ****     * \param mode
1033:Generated_Source\PSoC4/CyLFClk.c ****     *  CY_SYS_WDT_MODE_NONE - Free running.<br>
1034:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_WDT_MODE_INT - The interrupt generated on match for counter 0
1035:Generated_Source\PSoC4/CyLFClk.c ****     * and 1, and on bit toggle for counter 2.<br>
1036:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_WDT_MODE_RESET - Reset on match (valid for counter 0 and 1 only).<br>
1037:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_WDT_MODE_INT_RESET - Generate an interrupt.  Generate a reset on
1038:Generated_Source\PSoC4/CyLFClk.c ****     * the 3rd non-handled interrupt (valid for counter 0 and counter 1 only).
1039:Generated_Source\PSoC4/CyLFClk.c ****     *
1040:Generated_Source\PSoC4/CyLFClk.c ****     * \details
1041:Generated_Source\PSoC4/CyLFClk.c ****     * WDT counter counterNum should be disabled to set a mode. Otherwise, this
1042:Generated_Source\PSoC4/CyLFClk.c ****     * function call has no effect. If the specified counter is enabled,
1043:Generated_Source\PSoC4/CyLFClk.c ****     * call the CySysWdtDisable() function with the corresponding parameter to
1044:Generated_Source\PSoC4/CyLFClk.c ****     * disable the specified counter and wait for it to stop.
1045:Generated_Source\PSoC4/CyLFClk.c ****     *
1046:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1047:Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtSetMode(uint32 counterNum, uint32 mode)
1048:Generated_Source\PSoC4/CyLFClk.c ****     {
1049:Generated_Source\PSoC4/CyLFClk.c ****         uint32 configRegValue;
1050:Generated_Source\PSoC4/CyLFClk.c **** 
1051:Generated_Source\PSoC4/CyLFClk.c ****         CYASSERT(counterNum < CY_SYS_WDT_COUNTERS_MAX);
1052:Generated_Source\PSoC4/CyLFClk.c **** 
1053:Generated_Source\PSoC4/CyLFClk.c ****         if(0u == CySysWdtGetEnabledStatus(counterNum))
1054:Generated_Source\PSoC4/CyLFClk.c ****         {
1055:Generated_Source\PSoC4/CyLFClk.c ****             configRegValue = CY_SYS_WDT_CONFIG_REG &
1056:Generated_Source\PSoC4/CyLFClk.c ****                                 (uint32)~((uint32)(CY_SYS_WDT_MODE_MASK << (counterNum * CY_SYS_WDT
1057:Generated_Source\PSoC4/CyLFClk.c ****             configRegValue |= (uint32)((mode & CY_SYS_WDT_MODE_MASK) << (counterNum * CY_SYS_WDT_CN
1058:Generated_Source\PSoC4/CyLFClk.c ****             CY_SYS_WDT_CONFIG_REG = configRegValue;
1059:Generated_Source\PSoC4/CyLFClk.c ****         }
1060:Generated_Source\PSoC4/CyLFClk.c ****     }
1061:Generated_Source\PSoC4/CyLFClk.c **** 
1062:Generated_Source\PSoC4/CyLFClk.c **** 
1063:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1064:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtGetMode
1065:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1066:Generated_Source\PSoC4/CyLFClk.c ****     * 
1067:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Reads the mode of one of the three WDT counters.
1068:Generated_Source\PSoC4/CyLFClk.c ****     *
1069:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum Valid range [0-2]. The number of the WDT counter.
1070:Generated_Source\PSoC4/CyLFClk.c ****     *
1071:Generated_Source\PSoC4/CyLFClk.c ****     * \return The mode of the counter. The same enumerated values as the mode 
1072:Generated_Source\PSoC4/CyLFClk.c ****     * parameter used in CySysWdtSetMode().
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccw66xHk.s 			page 43


1073:Generated_Source\PSoC4/CyLFClk.c ****     *
1074:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1075:Generated_Source\PSoC4/CyLFClk.c ****     uint32 CySysWdtGetMode(uint32 counterNum)
1076:Generated_Source\PSoC4/CyLFClk.c ****     {
1077:Generated_Source\PSoC4/CyLFClk.c ****         return ((CY_SYS_WDT_CONFIG_REG >> (counterNum * CY_SYS_WDT_CNT_SHIFT)) & CY_SYS_WDT_MODE_MA
1078:Generated_Source\PSoC4/CyLFClk.c ****     }
1079:Generated_Source\PSoC4/CyLFClk.c **** 
1080:Generated_Source\PSoC4/CyLFClk.c **** 
1081:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1082:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtSetClearOnMatch
1083:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1084:Generated_Source\PSoC4/CyLFClk.c ****     * 
1085:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Configures the WDT counter "clear on match" setting.
1086:Generated_Source\PSoC4/CyLFClk.c ****     *
1087:Generated_Source\PSoC4/CyLFClk.c ****     * If configured to "clear on match", the counter counts from 0 to MatchValue
1088:Generated_Source\PSoC4/CyLFClk.c ****     * giving it a period of (MatchValue + 1).
1089:Generated_Source\PSoC4/CyLFClk.c ****     *
1090:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum
1091:Generated_Source\PSoC4/CyLFClk.c ****     * Valid range [0-1]. The number of the WDT counter. The match values are not
1092:Generated_Source\PSoC4/CyLFClk.c ****     * supported by counter 2.
1093:Generated_Source\PSoC4/CyLFClk.c ****     *
1094:Generated_Source\PSoC4/CyLFClk.c ****     * \param enable 0 to disable appropriate counter <br>
1095:Generated_Source\PSoC4/CyLFClk.c ****     *  1 to enable appropriate counter
1096:Generated_Source\PSoC4/CyLFClk.c ****     *
1097:Generated_Source\PSoC4/CyLFClk.c ****     * \details
1098:Generated_Source\PSoC4/CyLFClk.c ****     * WDT counter counterNum should be disabled. Otherwise this function call
1099:Generated_Source\PSoC4/CyLFClk.c ****     * has no effect. If the specified counter is enabled, call the CySysWdtDisable()
1100:Generated_Source\PSoC4/CyLFClk.c ****     * function with the corresponding parameter to disable the specified counter and
1101:Generated_Source\PSoC4/CyLFClk.c ****     * wait for it to stop. This may take up to three LFCLK cycles.
1102:Generated_Source\PSoC4/CyLFClk.c ****     *
1103:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1104:Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtSetClearOnMatch(uint32 counterNum, uint32 enable)
1105:Generated_Source\PSoC4/CyLFClk.c ****     {
1106:Generated_Source\PSoC4/CyLFClk.c ****         uint32 configRegValue;
1107:Generated_Source\PSoC4/CyLFClk.c **** 
1108:Generated_Source\PSoC4/CyLFClk.c ****         CYASSERT((counterNum == CY_SYS_WDT_COUNTER0) ||
1109:Generated_Source\PSoC4/CyLFClk.c ****                  (counterNum == CY_SYS_WDT_COUNTER1));
1110:Generated_Source\PSoC4/CyLFClk.c **** 
1111:Generated_Source\PSoC4/CyLFClk.c ****         if(0u == CySysWdtGetEnabledStatus(counterNum))
1112:Generated_Source\PSoC4/CyLFClk.c ****         {
1113:Generated_Source\PSoC4/CyLFClk.c ****             configRegValue = CY_SYS_WDT_CONFIG_REG & (uint32)~((uint32)((uint32)1u << 
1114:Generated_Source\PSoC4/CyLFClk.c ****                                      ((counterNum * CY_SYS_WDT_CNT_SHIFT) + CY_SYS_WDT_CNT_MATCH_CL
1115:Generated_Source\PSoC4/CyLFClk.c **** 
1116:Generated_Source\PSoC4/CyLFClk.c ****             configRegValue
1117:Generated_Source\PSoC4/CyLFClk.c ****                 |= (uint32)(enable << ((counterNum * CY_SYS_WDT_CNT_SHIFT) + CY_SYS_WDT_CNT_MATCH_C
1118:Generated_Source\PSoC4/CyLFClk.c **** 
1119:Generated_Source\PSoC4/CyLFClk.c ****             CY_SYS_WDT_CONFIG_REG = configRegValue;
1120:Generated_Source\PSoC4/CyLFClk.c ****         }
1121:Generated_Source\PSoC4/CyLFClk.c ****     }
1122:Generated_Source\PSoC4/CyLFClk.c **** 
1123:Generated_Source\PSoC4/CyLFClk.c **** 
1124:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1125:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtGetClearOnMatch
1126:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1127:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
1128:Generated_Source\PSoC4/CyLFClk.c ****     * Reads the "clear on match" setting for the specified counter.
1129:Generated_Source\PSoC4/CyLFClk.c ****     *
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccw66xHk.s 			page 44


1130:Generated_Source\PSoC4/CyLFClk.c ****     * \param
1131:Generated_Source\PSoC4/CyLFClk.c ****     * counterNum Valid range [0-1]. The number of the WDT counter. The match values
1132:Generated_Source\PSoC4/CyLFClk.c ****     * are not supported by counter 2.
1133:Generated_Source\PSoC4/CyLFClk.c ****     *
1134:Generated_Source\PSoC4/CyLFClk.c ****     * \return The "clear on match" status: <br>1 if enabled <br>0 if disabled
1135:Generated_Source\PSoC4/CyLFClk.c ****     *
1136:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1137:Generated_Source\PSoC4/CyLFClk.c ****     uint32 CySysWdtGetClearOnMatch(uint32 counterNum)
1138:Generated_Source\PSoC4/CyLFClk.c ****     {
1139:Generated_Source\PSoC4/CyLFClk.c ****         CYASSERT((counterNum == CY_SYS_WDT_COUNTER0) ||
1140:Generated_Source\PSoC4/CyLFClk.c ****                  (counterNum == CY_SYS_WDT_COUNTER1));
1141:Generated_Source\PSoC4/CyLFClk.c **** 
1142:Generated_Source\PSoC4/CyLFClk.c ****         return (uint32)((CY_SYS_WDT_CONFIG_REG >>
1143:Generated_Source\PSoC4/CyLFClk.c ****                         ((counterNum * CY_SYS_WDT_CNT_SHIFT) + CY_SYS_WDT_CNT_MATCH_CLR_SHIFT)) & 0
1144:Generated_Source\PSoC4/CyLFClk.c ****     }
1145:Generated_Source\PSoC4/CyLFClk.c **** 
1146:Generated_Source\PSoC4/CyLFClk.c **** 
1147:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1148:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtEnable
1149:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1150:Generated_Source\PSoC4/CyLFClk.c ****     *
1151:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Enables the specified WDT counters.
1152:Generated_Source\PSoC4/CyLFClk.c ****     *
1153:Generated_Source\PSoC4/CyLFClk.c ****     * All the counters specified in the mask are enabled.
1154:Generated_Source\PSoC4/CyLFClk.c ****     *
1155:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterMask
1156:Generated_Source\PSoC4/CyLFClk.c ****     *  CY_SYS_WDT_COUNTER0_MASK - The mask for counter 0 to enable.<br>
1157:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_WDT_COUNTER1_MASK - The mask for counter 1 to enable.<br>
1158:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_WDT_COUNTER2_MASK - The mask for counter 2 to enable.
1159:Generated_Source\PSoC4/CyLFClk.c ****     *
1160:Generated_Source\PSoC4/CyLFClk.c ****     * \details
1161:Generated_Source\PSoC4/CyLFClk.c ****     * Enabling or disabling WDT requires 3 LFCLK cycles to come into effect.
1162:Generated_Source\PSoC4/CyLFClk.c ****     * Therefore, the WDT enable state must not be changed more than once in
1163:Generated_Source\PSoC4/CyLFClk.c ****     * that period.
1164:Generated_Source\PSoC4/CyLFClk.c ****     *
1165:Generated_Source\PSoC4/CyLFClk.c ****     * After WDT is enabled, it is illegal to write WDT configuration (WDT_CONFIG)
1166:Generated_Source\PSoC4/CyLFClk.c ****     * and control (WDT_CONTROL) registers. This means that all WDT functions that
1167:Generated_Source\PSoC4/CyLFClk.c ****     * contain 'write' in the name (with the exception of CySysWdtSetMatch()
1168:Generated_Source\PSoC4/CyLFClk.c ****     * function) are illegal to call if WDT is enabled.
1169:Generated_Source\PSoC4/CyLFClk.c ****     *
1170:Generated_Source\PSoC4/CyLFClk.c ****     * PSoC 4100 / PSoC 4200: This function enables ILO.
1171:Generated_Source\PSoC4/CyLFClk.c ****     *
1172:Generated_Source\PSoC4/CyLFClk.c ****     * PSoC 4100 BLE / PSoC 4200 BLE / PSoC4200L / PSoC 4100M 
1173:Generated_Source\PSoC4/CyLFClk.c ****     * / PSoC 4200M:
1174:Generated_Source\PSoC4/CyLFClk.c ****     * LFLCK should be configured before calling this function. The desired
1175:Generated_Source\PSoC4/CyLFClk.c ****     * source should be enabled and configured to be the source for LFCLK.
1176:Generated_Source\PSoC4/CyLFClk.c ****     *
1177:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1178:Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtEnable(uint32 counterMask)
1179:Generated_Source\PSoC4/CyLFClk.c ****     {
1180:Generated_Source\PSoC4/CyLFClk.c ****         #if (!CY_IP_WCO)
1181:Generated_Source\PSoC4/CyLFClk.c ****             CySysClkIloStart();
1182:Generated_Source\PSoC4/CyLFClk.c ****         #endif /* (!CY_IP_WCO) */
1183:Generated_Source\PSoC4/CyLFClk.c **** 
1184:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_WDT_CONTROL_REG |= counterMask;
1185:Generated_Source\PSoC4/CyLFClk.c **** 
1186:Generated_Source\PSoC4/CyLFClk.c ****         if(0u != (counterMask & CY_SYS_WDT_COUNTER0_MASK))
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccw66xHk.s 			page 45


1187:Generated_Source\PSoC4/CyLFClk.c ****         {
1188:Generated_Source\PSoC4/CyLFClk.c ****             while (0u == CySysWdtGetEnabledStatus(CY_SYS_WDT_COUNTER0))
1189:Generated_Source\PSoC4/CyLFClk.c ****             {
1190:Generated_Source\PSoC4/CyLFClk.c ****                 /* Wait for changes to come into effect */
1191:Generated_Source\PSoC4/CyLFClk.c ****             }
1192:Generated_Source\PSoC4/CyLFClk.c ****         }
1193:Generated_Source\PSoC4/CyLFClk.c **** 
1194:Generated_Source\PSoC4/CyLFClk.c ****         if(0u != (counterMask & CY_SYS_WDT_COUNTER1_MASK))
1195:Generated_Source\PSoC4/CyLFClk.c ****         {
1196:Generated_Source\PSoC4/CyLFClk.c ****             while (0u == CySysWdtGetEnabledStatus(CY_SYS_WDT_COUNTER1))
1197:Generated_Source\PSoC4/CyLFClk.c ****             {
1198:Generated_Source\PSoC4/CyLFClk.c ****                 /* Wait for changes to come into effect */
1199:Generated_Source\PSoC4/CyLFClk.c ****             }
1200:Generated_Source\PSoC4/CyLFClk.c ****         }
1201:Generated_Source\PSoC4/CyLFClk.c **** 
1202:Generated_Source\PSoC4/CyLFClk.c ****         if(0u != (counterMask & CY_SYS_WDT_COUNTER2_MASK))
1203:Generated_Source\PSoC4/CyLFClk.c ****         {
1204:Generated_Source\PSoC4/CyLFClk.c ****             while (0u == CySysWdtGetEnabledStatus(CY_SYS_WDT_COUNTER2))
1205:Generated_Source\PSoC4/CyLFClk.c ****             {
1206:Generated_Source\PSoC4/CyLFClk.c ****                 /* Wait for changes to come into effect */
1207:Generated_Source\PSoC4/CyLFClk.c ****             }
1208:Generated_Source\PSoC4/CyLFClk.c ****         }
1209:Generated_Source\PSoC4/CyLFClk.c ****     }
1210:Generated_Source\PSoC4/CyLFClk.c **** 
1211:Generated_Source\PSoC4/CyLFClk.c **** 
1212:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1213:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtDisable
1214:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1215:Generated_Source\PSoC4/CyLFClk.c ****     *
1216:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Disables the specified WDT counters.
1217:Generated_Source\PSoC4/CyLFClk.c ****     * All the counters specified in the mask are disabled. The function waits for 
1218:Generated_Source\PSoC4/CyLFClk.c ****     * the changes to come into effect.
1219:Generated_Source\PSoC4/CyLFClk.c ****     *
1220:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterMask
1221:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_WDT_COUNTER0_MASK - The mask for counter 0 to disable. <br>
1222:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_WDT_COUNTER1_MASK - The mask for counter 1 to disable. <br>
1223:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_WDT_COUNTER2_MASK - The mask for counter 2 to disable.
1224:Generated_Source\PSoC4/CyLFClk.c ****     *
1225:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1226:Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtDisable(uint32 counterMask)
1227:Generated_Source\PSoC4/CyLFClk.c ****     {
1228:Generated_Source\PSoC4/CyLFClk.c ****         if (0uL == CySysWdtLocked())
1229:Generated_Source\PSoC4/CyLFClk.c ****         {
1230:Generated_Source\PSoC4/CyLFClk.c ****             CY_SYS_WDT_CONTROL_REG &= ~counterMask;
1231:Generated_Source\PSoC4/CyLFClk.c **** 
1232:Generated_Source\PSoC4/CyLFClk.c ****             if(0u != (counterMask & CY_SYS_WDT_COUNTER0_MASK))
1233:Generated_Source\PSoC4/CyLFClk.c ****             {
1234:Generated_Source\PSoC4/CyLFClk.c ****                 while (0u != CySysWdtGetEnabledStatus(CY_SYS_WDT_COUNTER0))
1235:Generated_Source\PSoC4/CyLFClk.c ****                 {
1236:Generated_Source\PSoC4/CyLFClk.c ****                     /* Wait for changes to come into effect */
1237:Generated_Source\PSoC4/CyLFClk.c ****                 }
1238:Generated_Source\PSoC4/CyLFClk.c ****             }
1239:Generated_Source\PSoC4/CyLFClk.c **** 
1240:Generated_Source\PSoC4/CyLFClk.c ****             if(0u != (counterMask & CY_SYS_WDT_COUNTER1_MASK))
1241:Generated_Source\PSoC4/CyLFClk.c ****             {
1242:Generated_Source\PSoC4/CyLFClk.c ****                 while (0u != CySysWdtGetEnabledStatus(CY_SYS_WDT_COUNTER1))
1243:Generated_Source\PSoC4/CyLFClk.c ****                 {
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccw66xHk.s 			page 46


1244:Generated_Source\PSoC4/CyLFClk.c ****                     /* Wait for changes to come into effect */
1245:Generated_Source\PSoC4/CyLFClk.c ****                 }
1246:Generated_Source\PSoC4/CyLFClk.c ****             }
1247:Generated_Source\PSoC4/CyLFClk.c **** 
1248:Generated_Source\PSoC4/CyLFClk.c ****             if(0u != (counterMask & CY_SYS_WDT_COUNTER2_MASK))
1249:Generated_Source\PSoC4/CyLFClk.c ****             {
1250:Generated_Source\PSoC4/CyLFClk.c ****                 while (0u != CySysWdtGetEnabledStatus(CY_SYS_WDT_COUNTER2))
1251:Generated_Source\PSoC4/CyLFClk.c ****                 {
1252:Generated_Source\PSoC4/CyLFClk.c ****                     /* Wait for changes to come into effect */
1253:Generated_Source\PSoC4/CyLFClk.c ****                 }
1254:Generated_Source\PSoC4/CyLFClk.c ****             }
1255:Generated_Source\PSoC4/CyLFClk.c ****         }
1256:Generated_Source\PSoC4/CyLFClk.c ****     }
1257:Generated_Source\PSoC4/CyLFClk.c **** 
1258:Generated_Source\PSoC4/CyLFClk.c **** 
1259:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1260:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtSetCascade
1261:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1262:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
1263:Generated_Source\PSoC4/CyLFClk.c ****     * Writes the two WDT cascade values based on the combination of mask values
1264:Generated_Source\PSoC4/CyLFClk.c ****     * specified.
1265:Generated_Source\PSoC4/CyLFClk.c ****     *
1266:Generated_Source\PSoC4/CyLFClk.c ****     * \param cascadeMask The mask value used to set or clear the cascade values:
1267:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_WDT_CASCADE_NONE - Neither <br>
1268:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_WDT_CASCADE_01 - Cascade 01 <br>
1269:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_WDT_CASCADE_12 - Cascade 12
1270:Generated_Source\PSoC4/CyLFClk.c ****     *
1271:Generated_Source\PSoC4/CyLFClk.c ****     * If only one cascade mask is specified, the second cascade is disabled.
1272:Generated_Source\PSoC4/CyLFClk.c ****     * To set both cascade modes, two defines should be ORed:
1273:Generated_Source\PSoC4/CyLFClk.c ****     * (CY_SYS_TIMER_CASCADE_01 | CY_SYS_TIMER_CASCADE_12).
1274:Generated_Source\PSoC4/CyLFClk.c ****     * \note If CySysWdtSetCascade() was called with ORed defines it is necessary 
1275:Generated_Source\PSoC4/CyLFClk.c ****     * to call CySysWdtSetClearOnMatch(1,1). It is needed to make sure that 
1276:Generated_Source\PSoC4/CyLFClk.c ****     * Counter 2 will be updated in the expected way.
1277:Generated_Source\PSoC4/CyLFClk.c ****     *
1278:Generated_Source\PSoC4/CyLFClk.c ****     * WDT counters that are part of the specified cascade should be disabled.
1279:Generated_Source\PSoC4/CyLFClk.c ****     * Otherwise this function call has no effect. If the specified
1280:Generated_Source\PSoC4/CyLFClk.c ****     * counter is enabled, call CySysWdtDisable() function with the corresponding
1281:Generated_Source\PSoC4/CyLFClk.c ****     * parameter to disable the specified counter and wait for it to stop. This may
1282:Generated_Source\PSoC4/CyLFClk.c ****     * take up to 3 LFCLK cycles.
1283:Generated_Source\PSoC4/CyLFClk.c ****     *
1284:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1285:Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtSetCascade(uint32 cascadeMask)
1286:Generated_Source\PSoC4/CyLFClk.c ****     {
1287:Generated_Source\PSoC4/CyLFClk.c ****         uint32 configRegValue;
1288:Generated_Source\PSoC4/CyLFClk.c ****         uint32 countersEnableStatus;
1289:Generated_Source\PSoC4/CyLFClk.c **** 
1290:Generated_Source\PSoC4/CyLFClk.c ****         countersEnableStatus = CySysWdtGetEnabledStatus(CY_SYS_WDT_COUNTER0) |
1291:Generated_Source\PSoC4/CyLFClk.c ****                             CySysWdtGetEnabledStatus(CY_SYS_WDT_COUNTER1) |
1292:Generated_Source\PSoC4/CyLFClk.c ****                             CySysWdtGetEnabledStatus(CY_SYS_WDT_COUNTER2);
1293:Generated_Source\PSoC4/CyLFClk.c **** 
1294:Generated_Source\PSoC4/CyLFClk.c ****         if (0u == countersEnableStatus)
1295:Generated_Source\PSoC4/CyLFClk.c ****         {
1296:Generated_Source\PSoC4/CyLFClk.c ****             configRegValue = CY_SYS_WDT_CONFIG_REG;
1297:Generated_Source\PSoC4/CyLFClk.c ****             configRegValue &= ((uint32)(~(CY_SYS_WDT_CASCADE_01|CY_SYS_WDT_CASCADE_12)));
1298:Generated_Source\PSoC4/CyLFClk.c ****             configRegValue |= cascadeMask;
1299:Generated_Source\PSoC4/CyLFClk.c ****             CY_SYS_WDT_CONFIG_REG = configRegValue;
1300:Generated_Source\PSoC4/CyLFClk.c ****         }
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccw66xHk.s 			page 47


1301:Generated_Source\PSoC4/CyLFClk.c ****     }
1302:Generated_Source\PSoC4/CyLFClk.c **** 
1303:Generated_Source\PSoC4/CyLFClk.c **** 
1304:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1305:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtGetCascade
1306:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1307:Generated_Source\PSoC4/CyLFClk.c ****     *
1308:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Reads the two WDT cascade values returning a mask of the bits set.
1309:Generated_Source\PSoC4/CyLFClk.c ****     *
1310:Generated_Source\PSoC4/CyLFClk.c ****     * \return The mask of the cascade values set.
1311:Generated_Source\PSoC4/CyLFClk.c ****     * \return CY_SYS_WDT_CASCADE_NONE - Neither
1312:Generated_Source\PSoC4/CyLFClk.c ****     * \return CY_SYS_WDT_CASCADE_01 - Cascade 01
1313:Generated_Source\PSoC4/CyLFClk.c ****     * \return CY_SYS_WDT_CASCADE_12 - Cascade 12
1314:Generated_Source\PSoC4/CyLFClk.c ****     *
1315:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1316:Generated_Source\PSoC4/CyLFClk.c ****     uint32 CySysWdtGetCascade(void)
1317:Generated_Source\PSoC4/CyLFClk.c ****     {
1318:Generated_Source\PSoC4/CyLFClk.c ****         return (CY_SYS_WDT_CONFIG_REG & (CY_SYS_WDT_CASCADE_01 | CY_SYS_WDT_CASCADE_12));
1319:Generated_Source\PSoC4/CyLFClk.c ****     }
1320:Generated_Source\PSoC4/CyLFClk.c **** 
1321:Generated_Source\PSoC4/CyLFClk.c **** 
1322:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1323:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtSetMatch
1324:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1325:Generated_Source\PSoC4/CyLFClk.c ****     *
1326:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Configures the WDT counter match comparison value.
1327:Generated_Source\PSoC4/CyLFClk.c ****     *
1328:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum
1329:Generated_Source\PSoC4/CyLFClk.c ****     * Valid range [0-1]. The number of the WDT counter. The match values are not
1330:Generated_Source\PSoC4/CyLFClk.c ****     * supported by counter 2.
1331:Generated_Source\PSoC4/CyLFClk.c ****     *
1332:Generated_Source\PSoC4/CyLFClk.c ****     * \param match
1333:Generated_Source\PSoC4/CyLFClk.c ****     * Valid range [0-65535]. The value to be used to match against the counter.
1334:Generated_Source\PSoC4/CyLFClk.c ****     *
1335:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1336:Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtSetMatch(uint32 counterNum, uint32 match)
1337:Generated_Source\PSoC4/CyLFClk.c ****     {
1338:Generated_Source\PSoC4/CyLFClk.c ****         uint32 regValue;
1339:Generated_Source\PSoC4/CyLFClk.c **** 
1340:Generated_Source\PSoC4/CyLFClk.c ****         CYASSERT((counterNum == CY_SYS_WDT_COUNTER0) ||
1341:Generated_Source\PSoC4/CyLFClk.c ****                  (counterNum == CY_SYS_WDT_COUNTER1));
1342:Generated_Source\PSoC4/CyLFClk.c **** 
1343:Generated_Source\PSoC4/CyLFClk.c ****         /* Wait for previous changes to come into effect */
1344:Generated_Source\PSoC4/CyLFClk.c ****         CyDelayUs(CY_SYS_WDT_3LFCLK_DELAY_US);
1345:Generated_Source\PSoC4/CyLFClk.c **** 
1346:Generated_Source\PSoC4/CyLFClk.c ****         regValue = CY_SYS_WDT_MATCH_REG;
1347:Generated_Source\PSoC4/CyLFClk.c ****         regValue &= (uint32)~((uint32)(CY_SYS_WDT_LOWER_16BITS_MASK << (counterNum * CY_SYS_WDT_CNT
1348:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_WDT_MATCH_REG = (regValue | (match << (counterNum * CY_SYS_WDT_CNT_MATCH_SHIFT)));
1349:Generated_Source\PSoC4/CyLFClk.c **** 
1350:Generated_Source\PSoC4/CyLFClk.c ****         /* Make sure match synchronization has started */
1351:Generated_Source\PSoC4/CyLFClk.c ****         CyDelayUs(CY_SYS_WDT_1LFCLK_DELAY_US);
1352:Generated_Source\PSoC4/CyLFClk.c ****     }
1353:Generated_Source\PSoC4/CyLFClk.c **** 
1354:Generated_Source\PSoC4/CyLFClk.c **** 
1355:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1356:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtSetToggleBit
1357:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccw66xHk.s 			page 48


1358:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
1359:Generated_Source\PSoC4/CyLFClk.c ****     * Configures which bit in WDT counter 2 to monitor for a toggle.
1360:Generated_Source\PSoC4/CyLFClk.c ****     *
1361:Generated_Source\PSoC4/CyLFClk.c ****     * When that bit toggles, an interrupt is generated if the mode for counter 2 has
1362:Generated_Source\PSoC4/CyLFClk.c ****     * enabled interrupts.
1363:Generated_Source\PSoC4/CyLFClk.c ****     *
1364:Generated_Source\PSoC4/CyLFClk.c ****     * \param bits Valid range [0-31].  Counter 2 bit to monitor for a toggle.
1365:Generated_Source\PSoC4/CyLFClk.c ****     *
1366:Generated_Source\PSoC4/CyLFClk.c ****     * \details
1367:Generated_Source\PSoC4/CyLFClk.c ****     * WDT Counter 2 should be disabled. Otherwise this function call has no
1368:Generated_Source\PSoC4/CyLFClk.c ****     * effect.
1369:Generated_Source\PSoC4/CyLFClk.c ****     *
1370:Generated_Source\PSoC4/CyLFClk.c ****     * If the specified counter is enabled, call the CySysWdtDisable() function with
1371:Generated_Source\PSoC4/CyLFClk.c ****     * the corresponding parameter to disable the specified counter and wait for it to
1372:Generated_Source\PSoC4/CyLFClk.c ****     * stop. This may take up to 3 LFCLK cycles.
1373:Generated_Source\PSoC4/CyLFClk.c ****     *
1374:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1375:Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtSetToggleBit(uint32 bits)
1376:Generated_Source\PSoC4/CyLFClk.c ****     {
1377:Generated_Source\PSoC4/CyLFClk.c ****         uint32 configRegValue;
1378:Generated_Source\PSoC4/CyLFClk.c **** 
1379:Generated_Source\PSoC4/CyLFClk.c ****         if (0u == CySysWdtGetEnabledStatus(CY_SYS_WDT_COUNTER2))
1380:Generated_Source\PSoC4/CyLFClk.c ****         {
1381:Generated_Source\PSoC4/CyLFClk.c ****             configRegValue = CY_SYS_WDT_CONFIG_REG;
1382:Generated_Source\PSoC4/CyLFClk.c ****             configRegValue &= (uint32)(~((uint32)(CY_SYS_WDT_CONFIG_BITS2_MASK << CY_SYS_WDT_CONFIG
1383:Generated_Source\PSoC4/CyLFClk.c ****             configRegValue |= ((bits & CY_SYS_WDT_CONFIG_BITS2_MASK) << CY_SYS_WDT_CONFIG_BITS2_POS
1384:Generated_Source\PSoC4/CyLFClk.c ****             CY_SYS_WDT_CONFIG_REG = configRegValue;
1385:Generated_Source\PSoC4/CyLFClk.c ****         }
1386:Generated_Source\PSoC4/CyLFClk.c ****     }
1387:Generated_Source\PSoC4/CyLFClk.c **** 
1388:Generated_Source\PSoC4/CyLFClk.c **** 
1389:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1390:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtGetToggleBit
1391:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1392:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
1393:Generated_Source\PSoC4/CyLFClk.c ****     * Reads which bit in WDT counter 2 is monitored for a toggle.
1394:Generated_Source\PSoC4/CyLFClk.c ****     *
1395:Generated_Source\PSoC4/CyLFClk.c ****     * \return The bit that is monitored (range of 0 to 31)
1396:Generated_Source\PSoC4/CyLFClk.c ****     *
1397:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1398:Generated_Source\PSoC4/CyLFClk.c ****     uint32 CySysWdtGetToggleBit(void)
1399:Generated_Source\PSoC4/CyLFClk.c ****     {
1400:Generated_Source\PSoC4/CyLFClk.c ****         return ((CY_SYS_WDT_CONFIG_REG >> CY_SYS_WDT_CONFIG_BITS2_POS) & CY_SYS_WDT_CONFIG_BITS2_MA
1401:Generated_Source\PSoC4/CyLFClk.c ****     }
1402:Generated_Source\PSoC4/CyLFClk.c **** 
1403:Generated_Source\PSoC4/CyLFClk.c **** 
1404:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1405:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtGetMatch
1406:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1407:Generated_Source\PSoC4/CyLFClk.c ****     *
1408:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Reads the WDT counter match comparison value.
1409:Generated_Source\PSoC4/CyLFClk.c ****     *
1410:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum Valid range [0-1].  The number of the WDT counter. The match
1411:Generated_Source\PSoC4/CyLFClk.c ****     * values are not supported by counter 2.
1412:Generated_Source\PSoC4/CyLFClk.c ****     *
1413:Generated_Source\PSoC4/CyLFClk.c ****     * \return A 16-bit match value.
1414:Generated_Source\PSoC4/CyLFClk.c ****     *
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccw66xHk.s 			page 49


1415:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1416:Generated_Source\PSoC4/CyLFClk.c ****     uint32 CySysWdtGetMatch(uint32 counterNum)
1417:Generated_Source\PSoC4/CyLFClk.c ****     {
1418:Generated_Source\PSoC4/CyLFClk.c ****         CYASSERT((counterNum == CY_SYS_WDT_COUNTER0) ||
1419:Generated_Source\PSoC4/CyLFClk.c ****                  (counterNum == CY_SYS_WDT_COUNTER1));
1420:Generated_Source\PSoC4/CyLFClk.c **** 
1421:Generated_Source\PSoC4/CyLFClk.c ****         return ((uint32)(CY_SYS_WDT_MATCH_REG >> 
1422:Generated_Source\PSoC4/CyLFClk.c ****                                             (counterNum * CY_SYS_WDT_CNT_MATCH_SHIFT)) & CY_SYS_WDT
1423:Generated_Source\PSoC4/CyLFClk.c ****     }
1424:Generated_Source\PSoC4/CyLFClk.c **** 
1425:Generated_Source\PSoC4/CyLFClk.c **** 
1426:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1427:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtGetCount
1428:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1429:Generated_Source\PSoC4/CyLFClk.c ****     *
1430:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Reads the current WDT counter value.
1431:Generated_Source\PSoC4/CyLFClk.c ****     *
1432:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum: Valid range [0-2]. The number of the WDT counter.
1433:Generated_Source\PSoC4/CyLFClk.c ****     *
1434:Generated_Source\PSoC4/CyLFClk.c ****     * \return A live counter value.  Counter 0 and Counter 1 are 16 bit counters 
1435:Generated_Source\PSoC4/CyLFClk.c ****     * and counter 2 is a 32 bit counter.
1436:Generated_Source\PSoC4/CyLFClk.c ****     *
1437:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1438:Generated_Source\PSoC4/CyLFClk.c ****     uint32 CySysWdtGetCount(uint32 counterNum)
1439:Generated_Source\PSoC4/CyLFClk.c ****     {
1440:Generated_Source\PSoC4/CyLFClk.c ****         uint32 regValue = 0u;
1441:Generated_Source\PSoC4/CyLFClk.c **** 
1442:Generated_Source\PSoC4/CyLFClk.c ****         switch(counterNum)
1443:Generated_Source\PSoC4/CyLFClk.c ****         {
1444:Generated_Source\PSoC4/CyLFClk.c ****             /* WDT Counter 0 */
1445:Generated_Source\PSoC4/CyLFClk.c ****             case 0u:
1446:Generated_Source\PSoC4/CyLFClk.c ****                 regValue = CY_SYS_WDT_CTRLOW_REG & CY_SYS_WDT_LOWER_16BITS_MASK;
1447:Generated_Source\PSoC4/CyLFClk.c ****             break;
1448:Generated_Source\PSoC4/CyLFClk.c **** 
1449:Generated_Source\PSoC4/CyLFClk.c ****             /* WDT Counter 1 */
1450:Generated_Source\PSoC4/CyLFClk.c ****             case 1u:
1451:Generated_Source\PSoC4/CyLFClk.c ****                 regValue = (CY_SYS_WDT_CTRLOW_REG >> CY_SYS_WDT_CNT_MATCH_SHIFT) & CY_SYS_WDT_LOWER
1452:Generated_Source\PSoC4/CyLFClk.c ****             break;
1453:Generated_Source\PSoC4/CyLFClk.c **** 
1454:Generated_Source\PSoC4/CyLFClk.c ****             /* WDT Counter 2 */
1455:Generated_Source\PSoC4/CyLFClk.c ****             case 2u:
1456:Generated_Source\PSoC4/CyLFClk.c ****                 regValue = CY_SYS_WDT_CTRHIGH_REG;
1457:Generated_Source\PSoC4/CyLFClk.c ****             break;
1458:Generated_Source\PSoC4/CyLFClk.c **** 
1459:Generated_Source\PSoC4/CyLFClk.c ****             default:
1460:Generated_Source\PSoC4/CyLFClk.c ****                 CYASSERT(0u != 0u);
1461:Generated_Source\PSoC4/CyLFClk.c ****             break;
1462:Generated_Source\PSoC4/CyLFClk.c ****         }
1463:Generated_Source\PSoC4/CyLFClk.c **** 
1464:Generated_Source\PSoC4/CyLFClk.c ****         return (regValue);
1465:Generated_Source\PSoC4/CyLFClk.c ****     }
1466:Generated_Source\PSoC4/CyLFClk.c **** 
1467:Generated_Source\PSoC4/CyLFClk.c **** 
1468:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1469:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtGetInterruptSource
1470:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1471:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccw66xHk.s 			page 50


1472:Generated_Source\PSoC4/CyLFClk.c ****     * Reads a mask containing all the WDT counters interrupts that are currently
1473:Generated_Source\PSoC4/CyLFClk.c ****     * set by the hardware, if a corresponding mode is selected.
1474:Generated_Source\PSoC4/CyLFClk.c ****     *
1475:Generated_Source\PSoC4/CyLFClk.c ****     * \return The mask of interrupts set
1476:Generated_Source\PSoC4/CyLFClk.c ****     * \return CY_SYS_WDT_COUNTER0_INT - Counter 0
1477:Generated_Source\PSoC4/CyLFClk.c ****     * \return CY_SYS_WDT_COUNTER1_INT - Counter 1
1478:Generated_Source\PSoC4/CyLFClk.c ****     * \return CY_SYS_WDT_COUNTER2_INT - Counter 2
1479:Generated_Source\PSoC4/CyLFClk.c ****     *
1480:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1481:Generated_Source\PSoC4/CyLFClk.c ****     uint32 CySysWdtGetInterruptSource(void)
1482:Generated_Source\PSoC4/CyLFClk.c ****     {
1483:Generated_Source\PSoC4/CyLFClk.c ****         return (CY_SYS_WDT_CONTROL_REG & (CY_SYS_WDT_COUNTER0_INT | CY_SYS_WDT_COUNTER1_INT | CY_SY
1484:Generated_Source\PSoC4/CyLFClk.c ****     }
1485:Generated_Source\PSoC4/CyLFClk.c **** 
1486:Generated_Source\PSoC4/CyLFClk.c **** 
1487:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1488:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtClearInterrupt
1489:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1490:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
1491:Generated_Source\PSoC4/CyLFClk.c ****     * Clears all the WDT counter interrupts set in the mask.
1492:Generated_Source\PSoC4/CyLFClk.c ****     *
1493:Generated_Source\PSoC4/CyLFClk.c ****     * Calling this function also prevents from Reset when the counter mode is set 
1494:Generated_Source\PSoC4/CyLFClk.c ****     * to generate 3 interrupts and then the device resets.
1495:Generated_Source\PSoC4/CyLFClk.c ****     *
1496:Generated_Source\PSoC4/CyLFClk.c ****     * All the WDT interrupts are to be cleared by the firmware, otherwise
1497:Generated_Source\PSoC4/CyLFClk.c ****     * interrupts are generated continuously.
1498:Generated_Source\PSoC4/CyLFClk.c ****     *
1499:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterMask
1500:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_WDT_COUNTER0_INT - Clears counter 0 interrupts <br>
1501:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_WDT_COUNTER1_INT - Clears counter 1 interrupts <br>
1502:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_WDT_COUNTER2_INT - Clears counter 2 interrupts
1503:Generated_Source\PSoC4/CyLFClk.c ****     *
1504:Generated_Source\PSoC4/CyLFClk.c ****     * \details
1505:Generated_Source\PSoC4/CyLFClk.c ****     * This function temporary removes the watchdog lock, if it was set, and
1506:Generated_Source\PSoC4/CyLFClk.c ****     * restores the lock state after cleaning the WDT interrupts that are set in
1507:Generated_Source\PSoC4/CyLFClk.c ****     * a mask.
1508:Generated_Source\PSoC4/CyLFClk.c ****     *
1509:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1510:Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtClearInterrupt(uint32 counterMask)
1511:Generated_Source\PSoC4/CyLFClk.c ****     {
1512:Generated_Source\PSoC4/CyLFClk.c ****         uint8 interruptState;
1513:Generated_Source\PSoC4/CyLFClk.c ****         uint32 wdtLockState;
1514:Generated_Source\PSoC4/CyLFClk.c **** 
1515:Generated_Source\PSoC4/CyLFClk.c ****         interruptState = CyEnterCriticalSection();
1516:Generated_Source\PSoC4/CyLFClk.c **** 
1517:Generated_Source\PSoC4/CyLFClk.c ****         if (0u != CySysWdtLocked())
1518:Generated_Source\PSoC4/CyLFClk.c ****         {
1519:Generated_Source\PSoC4/CyLFClk.c ****             wdtLockState = 1u;
1520:Generated_Source\PSoC4/CyLFClk.c ****             CySysWdtUnlock();
1521:Generated_Source\PSoC4/CyLFClk.c ****         }
1522:Generated_Source\PSoC4/CyLFClk.c ****         else
1523:Generated_Source\PSoC4/CyLFClk.c ****         {
1524:Generated_Source\PSoC4/CyLFClk.c ****             wdtLockState = 0u;
1525:Generated_Source\PSoC4/CyLFClk.c ****         }
1526:Generated_Source\PSoC4/CyLFClk.c **** 
1527:Generated_Source\PSoC4/CyLFClk.c ****         /* Set new WDT control register value */
1528:Generated_Source\PSoC4/CyLFClk.c ****         counterMask &= (CY_SYS_WDT_COUNTER0_INT |
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccw66xHk.s 			page 51


1529:Generated_Source\PSoC4/CyLFClk.c ****                         CY_SYS_WDT_COUNTER1_INT |
1530:Generated_Source\PSoC4/CyLFClk.c ****                         CY_SYS_WDT_COUNTER2_INT);
1531:Generated_Source\PSoC4/CyLFClk.c **** 
1532:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_WDT_CONTROL_REG = counterMask | (CY_SYS_WDT_CONTROL_REG & ~(CY_SYS_WDT_COUNTER0_INT 
1533:Generated_Source\PSoC4/CyLFClk.c ****                                                                            CY_SYS_WDT_COUNTER1_INT 
1534:Generated_Source\PSoC4/CyLFClk.c ****                                                                            CY_SYS_WDT_COUNTER2_INT)
1535:Generated_Source\PSoC4/CyLFClk.c **** 
1536:Generated_Source\PSoC4/CyLFClk.c ****         /* Read the CY_SYS_WDT_CONTROL_REG to clear the interrupt request.
1537:Generated_Source\PSoC4/CyLFClk.c ****          * Cypress ID #207093, #206231
1538:Generated_Source\PSoC4/CyLFClk.c ****         */
1539:Generated_Source\PSoC4/CyLFClk.c ****         (void)CY_SYS_WDT_CONTROL_REG;
1540:Generated_Source\PSoC4/CyLFClk.c **** 
1541:Generated_Source\PSoC4/CyLFClk.c ****         if (1u == wdtLockState)
1542:Generated_Source\PSoC4/CyLFClk.c ****         {
1543:Generated_Source\PSoC4/CyLFClk.c ****             CySysWdtLock();
1544:Generated_Source\PSoC4/CyLFClk.c ****         }
1545:Generated_Source\PSoC4/CyLFClk.c **** 
1546:Generated_Source\PSoC4/CyLFClk.c ****         CyExitCriticalSection(interruptState);
1547:Generated_Source\PSoC4/CyLFClk.c ****     }
1548:Generated_Source\PSoC4/CyLFClk.c **** 
1549:Generated_Source\PSoC4/CyLFClk.c **** 
1550:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1551:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtResetCounters
1552:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1553:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
1554:Generated_Source\PSoC4/CyLFClk.c ****     * Resets all the WDT counters set in the mask.
1555:Generated_Source\PSoC4/CyLFClk.c ****     *
1556:Generated_Source\PSoC4/CyLFClk.c ****     * \param countersMask
1557:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_WDT_COUNTER0_RESET - Reset counter 0 <br>
1558:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_WDT_COUNTER1_RESET - Reset counter 1 <br>
1559:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_WDT_COUNTER2_RESET - Reset counter 2
1560:Generated_Source\PSoC4/CyLFClk.c ****     *
1561:Generated_Source\PSoC4/CyLFClk.c ****     * \details
1562:Generated_Source\PSoC4/CyLFClk.c ****     * This function does not reset counter values if the Watchdog is locked.
1563:Generated_Source\PSoC4/CyLFClk.c ****     * This function waits while corresponding counters will be reset. This may
1564:Generated_Source\PSoC4/CyLFClk.c ****     * take up to 3 LFCLK cycles.
1565:Generated_Source\PSoC4/CyLFClk.c ****     * The LFCLK source must be enabled. Otherwise, the function will never exit.
1566:Generated_Source\PSoC4/CyLFClk.c ****     *
1567:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1568:Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtResetCounters(uint32 countersMask)
1569:Generated_Source\PSoC4/CyLFClk.c ****     {
1570:Generated_Source\PSoC4/CyLFClk.c ****         /* Set new WDT reset value */
1571:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_WDT_CONTROL_REG |= (countersMask & CY_SYS_WDT_COUNTERS_RESET);
1572:Generated_Source\PSoC4/CyLFClk.c **** 
1573:Generated_Source\PSoC4/CyLFClk.c ****         while (0uL != (CY_SYS_WDT_CONTROL_REG & CY_SYS_WDT_COUNTERS_RESET))
1574:Generated_Source\PSoC4/CyLFClk.c ****         {
1575:Generated_Source\PSoC4/CyLFClk.c ****             /* Wait for reset to come into effect */
1576:Generated_Source\PSoC4/CyLFClk.c ****         }
1577:Generated_Source\PSoC4/CyLFClk.c ****     }
1578:Generated_Source\PSoC4/CyLFClk.c **** 
1579:Generated_Source\PSoC4/CyLFClk.c **** 
1580:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1581:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtSetInterruptCallback
1582:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1583:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
1584:Generated_Source\PSoC4/CyLFClk.c ****     * Sets the ISR callback function for the particular WDT counter.
1585:Generated_Source\PSoC4/CyLFClk.c ****     * These functions are called on the WDT interrupt.
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccw66xHk.s 			page 52


1586:Generated_Source\PSoC4/CyLFClk.c ****     *
1587:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum The number of the WDT counter.
1588:Generated_Source\PSoC4/CyLFClk.c ****     * \param function The pointer to the callback function.
1589:Generated_Source\PSoC4/CyLFClk.c ****     *
1590:Generated_Source\PSoC4/CyLFClk.c ****     * \return The pointer to the previous callback function.
1591:Generated_Source\PSoC4/CyLFClk.c ****     * \return NULL is returned if the specified address is not set.
1592:Generated_Source\PSoC4/CyLFClk.c ****     *
1593:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1594:Generated_Source\PSoC4/CyLFClk.c ****     cyWdtCallback CySysWdtSetInterruptCallback(uint32 counterNum, cyWdtCallback function)
1595:Generated_Source\PSoC4/CyLFClk.c ****     {
1596:Generated_Source\PSoC4/CyLFClk.c ****         cyWdtCallback prevCallback = (void *)0;
1597:Generated_Source\PSoC4/CyLFClk.c **** 
1598:Generated_Source\PSoC4/CyLFClk.c ****         if(counterNum < CY_WDT_NUM_OF_WDT)
1599:Generated_Source\PSoC4/CyLFClk.c ****         {
1600:Generated_Source\PSoC4/CyLFClk.c ****             prevCallback = cySysWdtCallback[counterNum];
1601:Generated_Source\PSoC4/CyLFClk.c ****             cySysWdtCallback[counterNum] = function;
1602:Generated_Source\PSoC4/CyLFClk.c ****         }
1603:Generated_Source\PSoC4/CyLFClk.c ****         else
1604:Generated_Source\PSoC4/CyLFClk.c ****         {
1605:Generated_Source\PSoC4/CyLFClk.c ****             CYASSERT(0u != 0u);
1606:Generated_Source\PSoC4/CyLFClk.c ****         }
1607:Generated_Source\PSoC4/CyLFClk.c **** 
1608:Generated_Source\PSoC4/CyLFClk.c ****         return((cyWdtCallback)prevCallback);
1609:Generated_Source\PSoC4/CyLFClk.c ****     }
1610:Generated_Source\PSoC4/CyLFClk.c **** 
1611:Generated_Source\PSoC4/CyLFClk.c **** 
1612:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1613:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtGetInterruptCallback
1614:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1615:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
1616:Generated_Source\PSoC4/CyLFClk.c ****     * Gets the ISR callback function for the particular WDT counter.
1617:Generated_Source\PSoC4/CyLFClk.c ****     *
1618:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum The number of the WDT counter.
1619:Generated_Source\PSoC4/CyLFClk.c ****     *
1620:Generated_Source\PSoC4/CyLFClk.c ****     * \return The pointer to the callback function registered for a particular WDT by
1621:Generated_Source\PSoC4/CyLFClk.c ****     * a particular address that are passed through arguments.
1622:Generated_Source\PSoC4/CyLFClk.c ****     *
1623:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1624:Generated_Source\PSoC4/CyLFClk.c ****     cyWdtCallback CySysWdtGetInterruptCallback(uint32 counterNum)
1625:Generated_Source\PSoC4/CyLFClk.c ****     {
1626:Generated_Source\PSoC4/CyLFClk.c ****         cyWdtCallback retCallback = (void *)0;
1627:Generated_Source\PSoC4/CyLFClk.c **** 
1628:Generated_Source\PSoC4/CyLFClk.c ****         if(counterNum < CY_WDT_NUM_OF_WDT)
1629:Generated_Source\PSoC4/CyLFClk.c ****         {
1630:Generated_Source\PSoC4/CyLFClk.c ****             retCallback = (cyWdtCallback)cySysWdtCallback[counterNum];
1631:Generated_Source\PSoC4/CyLFClk.c ****         }
1632:Generated_Source\PSoC4/CyLFClk.c ****         else
1633:Generated_Source\PSoC4/CyLFClk.c ****         {
1634:Generated_Source\PSoC4/CyLFClk.c ****             CYASSERT(0u != 0u);
1635:Generated_Source\PSoC4/CyLFClk.c ****         }
1636:Generated_Source\PSoC4/CyLFClk.c **** 
1637:Generated_Source\PSoC4/CyLFClk.c ****         return(retCallback);
1638:Generated_Source\PSoC4/CyLFClk.c ****     }
1639:Generated_Source\PSoC4/CyLFClk.c **** 
1640:Generated_Source\PSoC4/CyLFClk.c **** 
1641:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1642:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtEnableCounterIsr
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccw66xHk.s 			page 53


1643:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1644:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
1645:Generated_Source\PSoC4/CyLFClk.c ****     * Enables the ISR callback servicing for the particular WDT counter
1646:Generated_Source\PSoC4/CyLFClk.c ****     *
1647:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum Valid range [0-2]. The number of the WDT counter.
1648:Generated_Source\PSoC4/CyLFClk.c ****     *
1649:Generated_Source\PSoC4/CyLFClk.c ****     * Value corresponds to appropriate WDT counter. For example value 1 
1650:Generated_Source\PSoC4/CyLFClk.c ****     * corresponds to second WDT counter.
1651:Generated_Source\PSoC4/CyLFClk.c ****     *
1652:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1653:Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtEnableCounterIsr(uint32 counterNum)
1654:Generated_Source\PSoC4/CyLFClk.c ****     {
1655:Generated_Source\PSoC4/CyLFClk.c ****         if(counterNum <= CY_SYS_WDT_COUNTER2)
1656:Generated_Source\PSoC4/CyLFClk.c ****         {
1657:Generated_Source\PSoC4/CyLFClk.c ****             disableServicedIsr &= ~counterIntMaskTbl[counterNum];
1658:Generated_Source\PSoC4/CyLFClk.c ****             wdtIsrMask |= counterIntMaskTbl[counterNum];
1659:Generated_Source\PSoC4/CyLFClk.c ****         }
1660:Generated_Source\PSoC4/CyLFClk.c ****         else
1661:Generated_Source\PSoC4/CyLFClk.c ****         {
1662:Generated_Source\PSoC4/CyLFClk.c ****             CYASSERT(0u != 0u);
1663:Generated_Source\PSoC4/CyLFClk.c ****         }
1664:Generated_Source\PSoC4/CyLFClk.c ****     }
1665:Generated_Source\PSoC4/CyLFClk.c **** 
1666:Generated_Source\PSoC4/CyLFClk.c **** 
1667:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1668:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtDisableCounterIsr
1669:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1670:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
1671:Generated_Source\PSoC4/CyLFClk.c ****     * Disables the ISR callback servicing for the particular WDT counter
1672:Generated_Source\PSoC4/CyLFClk.c ****     *
1673:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum Valid range [0-2]. The number of the WDT counter.
1674:Generated_Source\PSoC4/CyLFClk.c ****     *
1675:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1676:Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtDisableCounterIsr(uint32 counterNum)
1677:Generated_Source\PSoC4/CyLFClk.c ****     {
1678:Generated_Source\PSoC4/CyLFClk.c ****         if(counterNum <= CY_SYS_WDT_COUNTER2)
1679:Generated_Source\PSoC4/CyLFClk.c ****         {
1680:Generated_Source\PSoC4/CyLFClk.c ****             wdtIsrMask &= ~counterIntMaskTbl[counterNum];
1681:Generated_Source\PSoC4/CyLFClk.c ****         }
1682:Generated_Source\PSoC4/CyLFClk.c ****         else
1683:Generated_Source\PSoC4/CyLFClk.c ****         {
1684:Generated_Source\PSoC4/CyLFClk.c ****             CYASSERT(0u != 0u);
1685:Generated_Source\PSoC4/CyLFClk.c ****         }
1686:Generated_Source\PSoC4/CyLFClk.c ****     }
1687:Generated_Source\PSoC4/CyLFClk.c **** 
1688:Generated_Source\PSoC4/CyLFClk.c **** 
1689:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1690:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtIsr
1691:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1692:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
1693:Generated_Source\PSoC4/CyLFClk.c ****     * This is the handler of the WDT interrupt in CPU NVIC.
1694:Generated_Source\PSoC4/CyLFClk.c ****     *
1695:Generated_Source\PSoC4/CyLFClk.c ****     * The handler checks which WDT triggered in the interrupt and calls the 
1696:Generated_Source\PSoC4/CyLFClk.c ****     * respective callback functions configured by the user by using 
1697:Generated_Source\PSoC4/CyLFClk.c ****     * CySysWdtSetIsrCallback() API.
1698:Generated_Source\PSoC4/CyLFClk.c ****     *
1699:Generated_Source\PSoC4/CyLFClk.c ****     * The order of the callback execution is incremental. Callback-0 is
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccw66xHk.s 			page 54


1700:Generated_Source\PSoC4/CyLFClk.c ****     * run as the first one and callback-2 is called as the last one.
1701:Generated_Source\PSoC4/CyLFClk.c ****     *
1702:Generated_Source\PSoC4/CyLFClk.c ****     * \details
1703:Generated_Source\PSoC4/CyLFClk.c ****     * This function clears the WDT interrupt every time when it is called.
1704:Generated_Source\PSoC4/CyLFClk.c ****     * Reset after the 3rd interrupt does not happen if this function is registered
1705:Generated_Source\PSoC4/CyLFClk.c ****     * as the interrupt handler even if the "Watchdog with Interrupt" mode is
1706:Generated_Source\PSoC4/CyLFClk.c ****     * selected on the "Low Frequency Clocks" tab.
1707:Generated_Source\PSoC4/CyLFClk.c ****     *
1708:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1709:Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtIsr(void)
1710:Generated_Source\PSoC4/CyLFClk.c ****     {
1711:Generated_Source\PSoC4/CyLFClk.c ****         if(0u != (CY_SYS_WDT_COUNTER0_INT & CY_SYS_WDT_CONTROL_REG))
1712:Generated_Source\PSoC4/CyLFClk.c ****         {
1713:Generated_Source\PSoC4/CyLFClk.c ****             if(0u != (CY_SYS_WDT_COUNTER0_INT & wdtIsrMask))
1714:Generated_Source\PSoC4/CyLFClk.c ****             {
1715:Generated_Source\PSoC4/CyLFClk.c ****                 wdtIsrMask &= ~(disableServicedIsr & CY_SYS_WDT_COUNTER0_INT);
1716:Generated_Source\PSoC4/CyLFClk.c ****                 disableServicedIsr  &= ~CY_SYS_WDT_COUNTER0_INT;
1717:Generated_Source\PSoC4/CyLFClk.c ****                 if(cySysWdtCallback[CY_SYS_WDT_COUNTER0] != (void *) 0)
1718:Generated_Source\PSoC4/CyLFClk.c ****                 {
1719:Generated_Source\PSoC4/CyLFClk.c ****                     (void)(cySysWdtCallback[CY_SYS_WDT_COUNTER0])();
1720:Generated_Source\PSoC4/CyLFClk.c ****                 }
1721:Generated_Source\PSoC4/CyLFClk.c ****             }
1722:Generated_Source\PSoC4/CyLFClk.c ****             CySysWdtClearInterrupt(CY_SYS_WDT_COUNTER0_INT);
1723:Generated_Source\PSoC4/CyLFClk.c ****         }
1724:Generated_Source\PSoC4/CyLFClk.c **** 
1725:Generated_Source\PSoC4/CyLFClk.c ****         if(0u != (CY_SYS_WDT_COUNTER1_INT & CY_SYS_WDT_CONTROL_REG))
1726:Generated_Source\PSoC4/CyLFClk.c ****         {
1727:Generated_Source\PSoC4/CyLFClk.c ****             if(0u != (CY_SYS_WDT_COUNTER1_INT & wdtIsrMask))
1728:Generated_Source\PSoC4/CyLFClk.c ****             {
1729:Generated_Source\PSoC4/CyLFClk.c ****                 wdtIsrMask &= ~(disableServicedIsr & CY_SYS_WDT_COUNTER1_INT);
1730:Generated_Source\PSoC4/CyLFClk.c ****                 disableServicedIsr  &= ~CY_SYS_WDT_COUNTER1_INT;
1731:Generated_Source\PSoC4/CyLFClk.c ****                 if(cySysWdtCallback[CY_SYS_WDT_COUNTER1] != (void *) 0)
1732:Generated_Source\PSoC4/CyLFClk.c ****                 {
1733:Generated_Source\PSoC4/CyLFClk.c ****                     (void)(cySysWdtCallback[CY_SYS_WDT_COUNTER1])();
1734:Generated_Source\PSoC4/CyLFClk.c ****                 }
1735:Generated_Source\PSoC4/CyLFClk.c ****             }
1736:Generated_Source\PSoC4/CyLFClk.c ****             CySysWdtClearInterrupt(CY_SYS_WDT_COUNTER1_INT);
1737:Generated_Source\PSoC4/CyLFClk.c ****         }
1738:Generated_Source\PSoC4/CyLFClk.c **** 
1739:Generated_Source\PSoC4/CyLFClk.c ****         if(0u != (CY_SYS_WDT_COUNTER2_INT & CY_SYS_WDT_CONTROL_REG))
1740:Generated_Source\PSoC4/CyLFClk.c ****         {
1741:Generated_Source\PSoC4/CyLFClk.c ****             if(0u != (CY_SYS_WDT_COUNTER2_INT & wdtIsrMask))
1742:Generated_Source\PSoC4/CyLFClk.c ****             {
1743:Generated_Source\PSoC4/CyLFClk.c ****                 if(cySysWdtCallback[CY_SYS_WDT_COUNTER2] != (void *) 0)
1744:Generated_Source\PSoC4/CyLFClk.c ****                 {
1745:Generated_Source\PSoC4/CyLFClk.c ****                     (void)(cySysWdtCallback[CY_SYS_WDT_COUNTER2])();
1746:Generated_Source\PSoC4/CyLFClk.c ****                 }
1747:Generated_Source\PSoC4/CyLFClk.c ****             }
1748:Generated_Source\PSoC4/CyLFClk.c ****             CySysWdtClearInterrupt(CY_SYS_WDT_COUNTER2_INT);
1749:Generated_Source\PSoC4/CyLFClk.c ****         }
1750:Generated_Source\PSoC4/CyLFClk.c ****     }
1751:Generated_Source\PSoC4/CyLFClk.c **** 
1752:Generated_Source\PSoC4/CyLFClk.c **** 
1753:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1754:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWatchdogFeed
1755:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1756:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccw66xHk.s 			page 55


1757:Generated_Source\PSoC4/CyLFClk.c ****     * Feeds the corresponded Watchdog Counter before it causes the device reset.
1758:Generated_Source\PSoC4/CyLFClk.c ****     *
1759:Generated_Source\PSoC4/CyLFClk.c ****     * Supported only for first WDT0 and second WDT1 counters in the "Watchdog" or 
1760:Generated_Source\PSoC4/CyLFClk.c ****     * "Watchdog w/ Interrupts" modes.
1761:Generated_Source\PSoC4/CyLFClk.c ****     *
1762:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum
1763:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_WDT_COUNTER0 - Feeds the Counter 0 <br>
1764:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_WDT_COUNTER1 - Feeds the Counter 1
1765:Generated_Source\PSoC4/CyLFClk.c ****     *
1766:Generated_Source\PSoC4/CyLFClk.c ****     * Value of counterNum corresponds to appropriate counter. For example value 1 
1767:Generated_Source\PSoC4/CyLFClk.c ****     * corresponds to second WDT1 Counter.
1768:Generated_Source\PSoC4/CyLFClk.c ****     *
1769:Generated_Source\PSoC4/CyLFClk.c ****     * \details
1770:Generated_Source\PSoC4/CyLFClk.c ****     * Clears the WDT counter in the "Watchdog" mode or clears the WDT interrupt in
1771:Generated_Source\PSoC4/CyLFClk.c ****     * "Watchdog w/ Interrupts" mode. Does nothing in other modes.
1772:Generated_Source\PSoC4/CyLFClk.c ****     *
1773:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1774:Generated_Source\PSoC4/CyLFClk.c ****     void CySysWatchdogFeed(uint32 counterNum)
1775:Generated_Source\PSoC4/CyLFClk.c ****     {
1776:Generated_Source\PSoC4/CyLFClk.c ****         if(counterNum == CY_SYS_WDT_COUNTER0)
1777:Generated_Source\PSoC4/CyLFClk.c ****         {
1778:Generated_Source\PSoC4/CyLFClk.c ****             if(CY_SYS_WDT_MODE_INT_RESET == CySysWdtGetMode(counterNum))
1779:Generated_Source\PSoC4/CyLFClk.c ****             {
1780:Generated_Source\PSoC4/CyLFClk.c ****                 CySysWdtClearInterrupt(CY_SYS_WDT_COUNTER0_INT);
1781:Generated_Source\PSoC4/CyLFClk.c ****             }
1782:Generated_Source\PSoC4/CyLFClk.c ****             else if(CY_SYS_WDT_MODE_RESET == CySysWdtGetMode(counterNum))
1783:Generated_Source\PSoC4/CyLFClk.c ****             {
1784:Generated_Source\PSoC4/CyLFClk.c ****                 CySysWdtResetCounters(CY_SYS_WDT_COUNTER0_RESET);
1785:Generated_Source\PSoC4/CyLFClk.c ****                 CySysWdtClearInterrupt(CY_SYS_WDT_COUNTER0_INT);
1786:Generated_Source\PSoC4/CyLFClk.c ****             }
1787:Generated_Source\PSoC4/CyLFClk.c ****             else
1788:Generated_Source\PSoC4/CyLFClk.c ****             {
1789:Generated_Source\PSoC4/CyLFClk.c ****                 /* Do nothing. */
1790:Generated_Source\PSoC4/CyLFClk.c ****             }
1791:Generated_Source\PSoC4/CyLFClk.c ****         }
1792:Generated_Source\PSoC4/CyLFClk.c ****         else if(counterNum == CY_SYS_WDT_COUNTER1)
1793:Generated_Source\PSoC4/CyLFClk.c ****         {
1794:Generated_Source\PSoC4/CyLFClk.c ****             if(CY_SYS_WDT_MODE_INT_RESET == CySysWdtGetMode(counterNum))
1795:Generated_Source\PSoC4/CyLFClk.c ****             {
1796:Generated_Source\PSoC4/CyLFClk.c ****                 CySysWdtClearInterrupt(CY_SYS_WDT_COUNTER1_INT);
1797:Generated_Source\PSoC4/CyLFClk.c ****             }
1798:Generated_Source\PSoC4/CyLFClk.c ****             else if(CY_SYS_WDT_MODE_RESET == CySysWdtGetMode(counterNum))
1799:Generated_Source\PSoC4/CyLFClk.c ****             {
1800:Generated_Source\PSoC4/CyLFClk.c ****                 CySysWdtResetCounters(CY_SYS_WDT_COUNTER1_RESET);
1801:Generated_Source\PSoC4/CyLFClk.c ****                 CySysWdtClearInterrupt(CY_SYS_WDT_COUNTER1_INT);
1802:Generated_Source\PSoC4/CyLFClk.c ****             }
1803:Generated_Source\PSoC4/CyLFClk.c ****             else
1804:Generated_Source\PSoC4/CyLFClk.c ****             {
1805:Generated_Source\PSoC4/CyLFClk.c ****                 /* Do nothing. */
1806:Generated_Source\PSoC4/CyLFClk.c ****             }
1807:Generated_Source\PSoC4/CyLFClk.c ****         }
1808:Generated_Source\PSoC4/CyLFClk.c ****         else
1809:Generated_Source\PSoC4/CyLFClk.c ****         {
1810:Generated_Source\PSoC4/CyLFClk.c ****             /* Do nothing. */
1811:Generated_Source\PSoC4/CyLFClk.c ****         }
1812:Generated_Source\PSoC4/CyLFClk.c ****     }
1813:Generated_Source\PSoC4/CyLFClk.c **** 
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccw66xHk.s 			page 56


1814:Generated_Source\PSoC4/CyLFClk.c **** 
1815:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1816:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysClkLfclkPosedgeCatch
1817:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1818:Generated_Source\PSoC4/CyLFClk.c ****     * \internal
1819:Generated_Source\PSoC4/CyLFClk.c ****     * Returns once the LFCLK positive edge occurred.
1820:Generated_Source\PSoC4/CyLFClk.c ****     *
1821:Generated_Source\PSoC4/CyLFClk.c ****     * CySysClkLfclkPosedgeRestore() should be called after this function
1822:Generated_Source\PSoC4/CyLFClk.c ****     * to restore the WDT configuration.
1823:Generated_Source\PSoC4/CyLFClk.c ****     *
1824:Generated_Source\PSoC4/CyLFClk.c ****     * A pair of the CySysClkLfclkPosedgeCatch() and CySysClkLfclkPosedgeRestore()
1825:Generated_Source\PSoC4/CyLFClk.c ****     * functions is expected to be called inside a critical section.
1826:Generated_Source\PSoC4/CyLFClk.c ****     *
1827:Generated_Source\PSoC4/CyLFClk.c ****     * To ensure that the WDT counter value is read until it changes, the enabled
1828:Generated_Source\PSoC4/CyLFClk.c ****     * WDT counter is used. If no counter is enabled, counter 0 is enabled.
1829:Generated_Source\PSoC4/CyLFClk.c ****     * And after the LFCLK source is switched, the counter 0 configuration
1830:Generated_Source\PSoC4/CyLFClk.c ****     * is restored.
1831:Generated_Source\PSoC4/CyLFClk.c ****     *
1832:Generated_Source\PSoC4/CyLFClk.c ****     * Not applicable for the PSoC 4000 / PSoC 4000S / PSoC 4100S / PSoC Analog 
1833:Generated_Source\PSoC4/CyLFClk.c ****     * Coprocessor devices.
1834:Generated_Source\PSoC4/CyLFClk.c ****     *
1835:Generated_Source\PSoC4/CyLFClk.c ****     * \details
1836:Generated_Source\PSoC4/CyLFClk.c ****     * This function has no effect if WDT is locked (CySysWdtLock() is
1837:Generated_Source\PSoC4/CyLFClk.c ****     * called). Call CySysWdtUnlock() to unlock WDT.
1838:Generated_Source\PSoC4/CyLFClk.c ****     * \endinternal
1839:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1840:Generated_Source\PSoC4/CyLFClk.c ****     static void CySysClkLfclkPosedgeCatch(void)
1841:Generated_Source\PSoC4/CyLFClk.c ****     {
1842:Generated_Source\PSoC4/CyLFClk.c ****         uint32 firstCount;
1843:Generated_Source\PSoC4/CyLFClk.c ****         static uint32 lfclkPosedgeEnabledWdtCounter = 0u;
1844:Generated_Source\PSoC4/CyLFClk.c **** 
1845:Generated_Source\PSoC4/CyLFClk.c ****         if (0u != CySysWdtGetEnabledStatus(CY_SYS_WDT_COUNTER0))
1846:Generated_Source\PSoC4/CyLFClk.c ****         {
1847:Generated_Source\PSoC4/CyLFClk.c ****             lfclkPosedgeEnabledWdtCounter = CY_SYS_WDT_COUNTER0;
1848:Generated_Source\PSoC4/CyLFClk.c ****         }
1849:Generated_Source\PSoC4/CyLFClk.c ****         else if (0u != CySysWdtGetEnabledStatus(CY_SYS_WDT_COUNTER1))
1850:Generated_Source\PSoC4/CyLFClk.c ****         {
1851:Generated_Source\PSoC4/CyLFClk.c ****             lfclkPosedgeEnabledWdtCounter = CY_SYS_WDT_COUNTER1;
1852:Generated_Source\PSoC4/CyLFClk.c ****         }
1853:Generated_Source\PSoC4/CyLFClk.c ****         else if (0u != CySysWdtGetEnabledStatus(CY_SYS_WDT_COUNTER2))
1854:Generated_Source\PSoC4/CyLFClk.c ****         {
1855:Generated_Source\PSoC4/CyLFClk.c ****             lfclkPosedgeEnabledWdtCounter = CY_SYS_WDT_COUNTER2;
1856:Generated_Source\PSoC4/CyLFClk.c ****         }
1857:Generated_Source\PSoC4/CyLFClk.c ****         else /* All WDT counters are disabled */
1858:Generated_Source\PSoC4/CyLFClk.c ****         {
1859:Generated_Source\PSoC4/CyLFClk.c ****             /* Configure WDT counter # 0 */
1860:Generated_Source\PSoC4/CyLFClk.c ****             lfclkPosedgeWdtCounter0Enabled = 1u;
1861:Generated_Source\PSoC4/CyLFClk.c ****             lfclkPosedgeEnabledWdtCounter = CY_SYS_WDT_COUNTER0;
1862:Generated_Source\PSoC4/CyLFClk.c **** 
1863:Generated_Source\PSoC4/CyLFClk.c ****             lfclkPosedgeWdtCounter0Mode = CySysWdtGetMode(CY_SYS_WDT_COUNTER0);
1864:Generated_Source\PSoC4/CyLFClk.c ****             CySysWdtSetMode(CY_SYS_WDT_COUNTER0, CY_SYS_WDT_MODE_NONE);
1865:Generated_Source\PSoC4/CyLFClk.c ****             CySysWdtEnable(CY_SYS_WDT_COUNTER0_MASK);
1866:Generated_Source\PSoC4/CyLFClk.c ****         }
1867:Generated_Source\PSoC4/CyLFClk.c **** 
1868:Generated_Source\PSoC4/CyLFClk.c ****         firstCount = CySysWdtGetCount(lfclkPosedgeEnabledWdtCounter);
1869:Generated_Source\PSoC4/CyLFClk.c ****         while (CySysWdtGetCount(lfclkPosedgeEnabledWdtCounter) == firstCount)
1870:Generated_Source\PSoC4/CyLFClk.c ****         {
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccw66xHk.s 			page 57


1871:Generated_Source\PSoC4/CyLFClk.c ****             /* Wait for counter to increment */
1872:Generated_Source\PSoC4/CyLFClk.c ****         }
1873:Generated_Source\PSoC4/CyLFClk.c ****     }
1874:Generated_Source\PSoC4/CyLFClk.c **** 
1875:Generated_Source\PSoC4/CyLFClk.c **** 
1876:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1877:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysClkLfclkPosedgeRestore
1878:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1879:Generated_Source\PSoC4/CyLFClk.c ****     * \internal
1880:Generated_Source\PSoC4/CyLFClk.c ****     *  Restores the WDT configuration after a CySysClkLfclkPosedgeCatch() call.
1881:Generated_Source\PSoC4/CyLFClk.c ****     *
1882:Generated_Source\PSoC4/CyLFClk.c ****     *  A pair of the CySysClkLfclkPosedgeCatch() and CySysClkLfclkPosedgeRestore()
1883:Generated_Source\PSoC4/CyLFClk.c ****     *  functions is expected to be called inside a critical section.
1884:Generated_Source\PSoC4/CyLFClk.c ****     *
1885:Generated_Source\PSoC4/CyLFClk.c ****     * Not applicable for the PSoC 4000/PSoC 4000S / PSoC 4100S / PSoC Analog 
1886:Generated_Source\PSoC4/CyLFClk.c ****     * Coprocessor devices.
1887:Generated_Source\PSoC4/CyLFClk.c ****     *
1888:Generated_Source\PSoC4/CyLFClk.c ****     * \details
1889:Generated_Source\PSoC4/CyLFClk.c ****     *  This function has no effect if WDT is locked (CySysWdtLock() is
1890:Generated_Source\PSoC4/CyLFClk.c ****     *  called). Call CySysWdtUnlock() to unlock WDT.
1891:Generated_Source\PSoC4/CyLFClk.c ****     *
1892:Generated_Source\PSoC4/CyLFClk.c ****     * \endinternal
1893:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1894:Generated_Source\PSoC4/CyLFClk.c ****     static void CySysClkLfclkPosedgeRestore(void)
1895:Generated_Source\PSoC4/CyLFClk.c ****     {
1896:Generated_Source\PSoC4/CyLFClk.c ****         if (lfclkPosedgeWdtCounter0Enabled != 0u)
1897:Generated_Source\PSoC4/CyLFClk.c ****         {
1898:Generated_Source\PSoC4/CyLFClk.c ****             /* Restore counter # 0 configuration and force its shutdown */
1899:Generated_Source\PSoC4/CyLFClk.c ****             CY_SYS_WDT_CONTROL_REG &= (uint32)(~CY_SYS_WDT_COUNTER0_MASK);
1900:Generated_Source\PSoC4/CyLFClk.c ****             CySysWdtSetMode(CY_SYS_WDT_COUNTER0, lfclkPosedgeWdtCounter0Mode);
1901:Generated_Source\PSoC4/CyLFClk.c ****             lfclkPosedgeWdtCounter0Enabled = 0u;
1902:Generated_Source\PSoC4/CyLFClk.c ****         }
1903:Generated_Source\PSoC4/CyLFClk.c ****     }
1904:Generated_Source\PSoC4/CyLFClk.c **** 
1905:Generated_Source\PSoC4/CyLFClk.c **** #else
1906:Generated_Source\PSoC4/CyLFClk.c **** 
1907:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1908:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtGetEnabledStatus
1909:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1910:Generated_Source\PSoC4/CyLFClk.c ****     *
1911:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Reads the enabled status of the WDT counter.
1912:Generated_Source\PSoC4/CyLFClk.c ****     *
1913:Generated_Source\PSoC4/CyLFClk.c ****     * \return The status of the WDT counter:
1914:Generated_Source\PSoC4/CyLFClk.c ****     * \return 0 - Counter is disabled
1915:Generated_Source\PSoC4/CyLFClk.c ****     * \return 1 - Counter is enabled
1916:Generated_Source\PSoC4/CyLFClk.c ****     *
1917:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1918:Generated_Source\PSoC4/CyLFClk.c ****     uint32 CySysWdtGetEnabledStatus(void)
1919:Generated_Source\PSoC4/CyLFClk.c ****     {
 595              		.loc 2 1919 0
 596              		.cfi_startproc
1920:Generated_Source\PSoC4/CyLFClk.c ****         return ((CY_SYS_WDT_DISABLE_KEY_REG == CY_SYS_WDT_KEY) ? (uint32) 0u : (uint32) 1u);
 597              		.loc 2 1920 0
 598 0000 034B     		ldr	r3, .L57
1921:Generated_Source\PSoC4/CyLFClk.c ****     }
 599              		.loc 2 1921 0
 600              		@ sp needed
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccw66xHk.s 			page 58


1920:Generated_Source\PSoC4/CyLFClk.c ****         return ((CY_SYS_WDT_DISABLE_KEY_REG == CY_SYS_WDT_KEY) ? (uint32) 0u : (uint32) 1u);
 601              		.loc 2 1920 0
 602 0002 1868     		ldr	r0, [r3]
 603 0004 034B     		ldr	r3, .L57+4
 604 0006 C018     		add	r0, r0, r3
 605 0008 431E     		sub	r3, r0, #1
 606 000a 9841     		sbc	r0, r0, r3
 607              		.loc 2 1921 0
 608 000c 7047     		bx	lr
 609              	.L58:
 610 000e C046     		.align	2
 611              	.L57:
 612 0010 38000340 		.word	1073938488
 613 0014 9B771253 		.word	1393719195
 614              		.cfi_endproc
 615              	.LFE11:
 616              		.size	CySysWdtGetEnabledStatus, .-CySysWdtGetEnabledStatus
 617              		.section	.text.CySysWdtEnable,"ax",%progbits
 618              		.align	1
 619              		.global	CySysWdtEnable
 620              		.code	16
 621              		.thumb_func
 622              		.type	CySysWdtEnable, %function
 623              	CySysWdtEnable:
 624              	.LFB12:
1922:Generated_Source\PSoC4/CyLFClk.c **** 
1923:Generated_Source\PSoC4/CyLFClk.c **** 
1924:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1925:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtEnable
1926:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1927:Generated_Source\PSoC4/CyLFClk.c ****     *
1928:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
1929:Generated_Source\PSoC4/CyLFClk.c ****     * Enables watchdog timer reset generation.
1930:Generated_Source\PSoC4/CyLFClk.c ****     *
1931:Generated_Source\PSoC4/CyLFClk.c ****     * CySysWdtClearInterrupt() feeds the watchdog. Two unserviced interrupts lead 
1932:Generated_Source\PSoC4/CyLFClk.c ****     * to a system reset (i.e. at the third match).
1933:Generated_Source\PSoC4/CyLFClk.c ****     *
1934:Generated_Source\PSoC4/CyLFClk.c ****     * ILO is enabled by the hardware once WDT is started.
1935:Generated_Source\PSoC4/CyLFClk.c ****     *
1936:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1937:Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtEnable(void)
1938:Generated_Source\PSoC4/CyLFClk.c ****     {
 625              		.loc 2 1938 0
 626              		.cfi_startproc
1939:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_WDT_DISABLE_KEY_REG = 0u;
 627              		.loc 2 1939 0
 628 0000 0022     		mov	r2, #0
 629 0002 014B     		ldr	r3, .L60
1940:Generated_Source\PSoC4/CyLFClk.c ****     }
 630              		.loc 2 1940 0
 631              		@ sp needed
1939:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_WDT_DISABLE_KEY_REG = 0u;
 632              		.loc 2 1939 0
 633 0004 1A60     		str	r2, [r3]
 634              		.loc 2 1940 0
 635 0006 7047     		bx	lr
 636              	.L61:
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccw66xHk.s 			page 59


 637              		.align	2
 638              	.L60:
 639 0008 38000340 		.word	1073938488
 640              		.cfi_endproc
 641              	.LFE12:
 642              		.size	CySysWdtEnable, .-CySysWdtEnable
 643              		.section	.text.CySysWdtDisable,"ax",%progbits
 644              		.align	1
 645              		.global	CySysWdtDisable
 646              		.code	16
 647              		.thumb_func
 648              		.type	CySysWdtDisable, %function
 649              	CySysWdtDisable:
 650              	.LFB13:
1941:Generated_Source\PSoC4/CyLFClk.c **** 
1942:Generated_Source\PSoC4/CyLFClk.c **** 
1943:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1944:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtDisable
1945:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1946:Generated_Source\PSoC4/CyLFClk.c ****     *
1947:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Disables the WDT reset generation.
1948:Generated_Source\PSoC4/CyLFClk.c ****     *
1949:Generated_Source\PSoC4/CyLFClk.c ****     * This function unlocks the ENABLE bit in the CLK_ILO_CONFIG registers and
1950:Generated_Source\PSoC4/CyLFClk.c ****     * enables the user to disable ILO.
1951:Generated_Source\PSoC4/CyLFClk.c ****     *
1952:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1953:Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtDisable(void)
1954:Generated_Source\PSoC4/CyLFClk.c ****     {
 651              		.loc 2 1954 0
 652              		.cfi_startproc
1955:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_WDT_DISABLE_KEY_REG = CY_SYS_WDT_KEY;
 653              		.loc 2 1955 0
 654 0000 014A     		ldr	r2, .L63
 655 0002 024B     		ldr	r3, .L63+4
1956:Generated_Source\PSoC4/CyLFClk.c ****     }
 656              		.loc 2 1956 0
 657              		@ sp needed
1955:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_WDT_DISABLE_KEY_REG = CY_SYS_WDT_KEY;
 658              		.loc 2 1955 0
 659 0004 1A60     		str	r2, [r3]
 660              		.loc 2 1956 0
 661 0006 7047     		bx	lr
 662              	.L64:
 663              		.align	2
 664              	.L63:
 665 0008 6588EDAC 		.word	-1393719195
 666 000c 38000340 		.word	1073938488
 667              		.cfi_endproc
 668              	.LFE13:
 669              		.size	CySysWdtDisable, .-CySysWdtDisable
 670              		.section	.text.CySysWdtSetMatch,"ax",%progbits
 671              		.align	1
 672              		.global	CySysWdtSetMatch
 673              		.code	16
 674              		.thumb_func
 675              		.type	CySysWdtSetMatch, %function
 676              	CySysWdtSetMatch:
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccw66xHk.s 			page 60


 677              	.LFB14:
1957:Generated_Source\PSoC4/CyLFClk.c **** 
1958:Generated_Source\PSoC4/CyLFClk.c **** 
1959:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1960:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtSetMatch
1961:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1962:Generated_Source\PSoC4/CyLFClk.c ****     *
1963:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Configures the WDT counter match comparison value.
1964:Generated_Source\PSoC4/CyLFClk.c ****     *
1965:Generated_Source\PSoC4/CyLFClk.c ****     * \param match Valid range [0-65535]. The value to be used to match against 
1966:Generated_Source\PSoC4/CyLFClk.c ****     * the counter.
1967:Generated_Source\PSoC4/CyLFClk.c ****     *
1968:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1969:Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtSetMatch(uint32 match)
1970:Generated_Source\PSoC4/CyLFClk.c ****     {
 678              		.loc 2 1970 0
 679              		.cfi_startproc
 680              	.LVL31:
1971:Generated_Source\PSoC4/CyLFClk.c ****         match &= CY_SYS_WDT_MATCH_MASK;
1972:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_WDT_MATCH_REG = (CY_SYS_WDT_MATCH_REG & (uint32)(~CY_SYS_WDT_MATCH_MASK)) | match;
 681              		.loc 2 1972 0
 682 0000 034A     		ldr	r2, .L66
1971:Generated_Source\PSoC4/CyLFClk.c ****         match &= CY_SYS_WDT_MATCH_MASK;
 683              		.loc 2 1971 0
 684 0002 80B2     		uxth	r0, r0
 685              	.LVL32:
 686              		.loc 2 1972 0
 687 0004 1368     		ldr	r3, [r2]
1973:Generated_Source\PSoC4/CyLFClk.c ****     }
 688              		.loc 2 1973 0
 689              		@ sp needed
1972:Generated_Source\PSoC4/CyLFClk.c ****     }
 690              		.loc 2 1972 0
 691 0006 1B0C     		lsr	r3, r3, #16
 692 0008 1B04     		lsl	r3, r3, #16
 693 000a 1843     		orr	r0, r3
 694 000c 1060     		str	r0, [r2]
 695              		.loc 2 1973 0
 696 000e 7047     		bx	lr
 697              	.L67:
 698              		.align	2
 699              	.L66:
 700 0010 40000340 		.word	1073938496
 701              		.cfi_endproc
 702              	.LFE14:
 703              		.size	CySysWdtSetMatch, .-CySysWdtSetMatch
 704              		.section	.text.CySysWdtGetMatch,"ax",%progbits
 705              		.align	1
 706              		.global	CySysWdtGetMatch
 707              		.code	16
 708              		.thumb_func
 709              		.type	CySysWdtGetMatch, %function
 710              	CySysWdtGetMatch:
 711              	.LFB15:
1974:Generated_Source\PSoC4/CyLFClk.c **** 
1975:Generated_Source\PSoC4/CyLFClk.c **** 
1976:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccw66xHk.s 			page 61


1977:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtGetMatch
1978:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1979:Generated_Source\PSoC4/CyLFClk.c ****     *
1980:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Reads the WDT counter match comparison value.
1981:Generated_Source\PSoC4/CyLFClk.c ****     *
1982:Generated_Source\PSoC4/CyLFClk.c ****     * \return The counter match value.
1983:Generated_Source\PSoC4/CyLFClk.c ****     *
1984:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
1985:Generated_Source\PSoC4/CyLFClk.c ****     uint32 CySysWdtGetMatch(void)
1986:Generated_Source\PSoC4/CyLFClk.c ****     {
 712              		.loc 2 1986 0
 713              		.cfi_startproc
1987:Generated_Source\PSoC4/CyLFClk.c ****         return (CY_SYS_WDT_MATCH_REG & CY_SYS_WDT_MATCH_MASK);
 714              		.loc 2 1987 0
 715 0000 014B     		ldr	r3, .L69
1988:Generated_Source\PSoC4/CyLFClk.c ****     }
 716              		.loc 2 1988 0
 717              		@ sp needed
1987:Generated_Source\PSoC4/CyLFClk.c ****         return (CY_SYS_WDT_MATCH_REG & CY_SYS_WDT_MATCH_MASK);
 718              		.loc 2 1987 0
 719 0002 1868     		ldr	r0, [r3]
 720 0004 80B2     		uxth	r0, r0
 721              		.loc 2 1988 0
 722 0006 7047     		bx	lr
 723              	.L70:
 724              		.align	2
 725              	.L69:
 726 0008 40000340 		.word	1073938496
 727              		.cfi_endproc
 728              	.LFE15:
 729              		.size	CySysWdtGetMatch, .-CySysWdtGetMatch
 730              		.section	.text.CySysWdtGetCount,"ax",%progbits
 731              		.align	1
 732              		.global	CySysWdtGetCount
 733              		.code	16
 734              		.thumb_func
 735              		.type	CySysWdtGetCount, %function
 736              	CySysWdtGetCount:
 737              	.LFB16:
1989:Generated_Source\PSoC4/CyLFClk.c **** 
1990:Generated_Source\PSoC4/CyLFClk.c **** 
1991:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
1992:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtGetCount
1993:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
1994:Generated_Source\PSoC4/CyLFClk.c ****     *
1995:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Reads the current WDT counter value.
1996:Generated_Source\PSoC4/CyLFClk.c ****     *
1997:Generated_Source\PSoC4/CyLFClk.c ****     * \return A live counter value.
1998:Generated_Source\PSoC4/CyLFClk.c ****     *
1999:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2000:Generated_Source\PSoC4/CyLFClk.c ****     uint32 CySysWdtGetCount(void)
2001:Generated_Source\PSoC4/CyLFClk.c ****     {
 738              		.loc 2 2001 0
 739              		.cfi_startproc
2002:Generated_Source\PSoC4/CyLFClk.c ****         return ((uint32)CY_SYS_WDT_COUNTER_REG);
 740              		.loc 2 2002 0
 741 0000 014B     		ldr	r3, .L72
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccw66xHk.s 			page 62


2003:Generated_Source\PSoC4/CyLFClk.c ****     }
 742              		.loc 2 2003 0
 743              		@ sp needed
2002:Generated_Source\PSoC4/CyLFClk.c ****         return ((uint32)CY_SYS_WDT_COUNTER_REG);
 744              		.loc 2 2002 0
 745 0002 1868     		ldr	r0, [r3]
 746              		.loc 2 2003 0
 747 0004 7047     		bx	lr
 748              	.L73:
 749 0006 C046     		.align	2
 750              	.L72:
 751 0008 3C000340 		.word	1073938492
 752              		.cfi_endproc
 753              	.LFE16:
 754              		.size	CySysWdtGetCount, .-CySysWdtGetCount
 755              		.section	.text.CySysWdtSetIgnoreBits,"ax",%progbits
 756              		.align	1
 757              		.global	CySysWdtSetIgnoreBits
 758              		.code	16
 759              		.thumb_func
 760              		.type	CySysWdtSetIgnoreBits, %function
 761              	CySysWdtSetIgnoreBits:
 762              	.LFB17:
2004:Generated_Source\PSoC4/CyLFClk.c **** 
2005:Generated_Source\PSoC4/CyLFClk.c **** 
2006:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2007:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtSetIgnoreBits
2008:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2009:Generated_Source\PSoC4/CyLFClk.c ****     *
2010:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
2011:Generated_Source\PSoC4/CyLFClk.c ****     * Configures the number of the MSB bits of the watchdog timer that are not
2012:Generated_Source\PSoC4/CyLFClk.c ****     * checked against the match.
2013:Generated_Source\PSoC4/CyLFClk.c ****     *
2014:Generated_Source\PSoC4/CyLFClk.c ****     * \param bitsNum Valid range [0-15]. The number of the MSB bits.
2015:Generated_Source\PSoC4/CyLFClk.c ****     *
2016:Generated_Source\PSoC4/CyLFClk.c ****     * \details The value of bitsNum controls the time-to-reset of the watchdog
2017:Generated_Source\PSoC4/CyLFClk.c ****     * (which happens after 3 successive matches).
2018:Generated_Source\PSoC4/CyLFClk.c ****     *
2019:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2020:Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtSetIgnoreBits(uint32 bitsNum)
2021:Generated_Source\PSoC4/CyLFClk.c ****     {
 763              		.loc 2 2021 0
 764              		.cfi_startproc
 765              	.LVL33:
2022:Generated_Source\PSoC4/CyLFClk.c ****         bitsNum = ((uint32)(bitsNum << CY_SYS_WDT_IGNORE_BITS_SHIFT) & CY_SYS_WDT_IGNORE_BITS_MASK)
 766              		.loc 2 2022 0
 767 0000 F021     		mov	r1, #240
2021:Generated_Source\PSoC4/CyLFClk.c ****         bitsNum = ((uint32)(bitsNum << CY_SYS_WDT_IGNORE_BITS_SHIFT) & CY_SYS_WDT_IGNORE_BITS_MASK)
 768              		.loc 2 2021 0
 769 0002 10B5     		push	{r4, lr}
 770              		.cfi_def_cfa_offset 8
 771              		.cfi_offset 4, -8
 772              		.cfi_offset 14, -4
2023:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_WDT_MATCH_REG = (CY_SYS_WDT_MATCH_REG & (uint32)(~CY_SYS_WDT_IGNORE_BITS_MASK)) | bi
 773              		.loc 2 2023 0
 774 0004 044C     		ldr	r4, .L75
2022:Generated_Source\PSoC4/CyLFClk.c ****         bitsNum = ((uint32)(bitsNum << CY_SYS_WDT_IGNORE_BITS_SHIFT) & CY_SYS_WDT_IGNORE_BITS_MASK)
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccw66xHk.s 			page 63


 775              		.loc 2 2022 0
 776 0006 0204     		lsl	r2, r0, #16
 777              	.LVL34:
 778              		.loc 2 2023 0
 779 0008 044B     		ldr	r3, .L75+4
 780 000a 2068     		ldr	r0, [r4]
2022:Generated_Source\PSoC4/CyLFClk.c ****         bitsNum = ((uint32)(bitsNum << CY_SYS_WDT_IGNORE_BITS_SHIFT) & CY_SYS_WDT_IGNORE_BITS_MASK)
 781              		.loc 2 2022 0
 782 000c 0903     		lsl	r1, r1, #12
 783 000e 0A40     		and	r2, r1
 784              	.LVL35:
 785              		.loc 2 2023 0
 786 0010 0340     		and	r3, r0
 787 0012 1A43     		orr	r2, r3
 788 0014 2260     		str	r2, [r4]
2024:Generated_Source\PSoC4/CyLFClk.c ****     }
 789              		.loc 2 2024 0
 790              		@ sp needed
 791 0016 10BD     		pop	{r4, pc}
 792              	.L76:
 793              		.align	2
 794              	.L75:
 795 0018 40000340 		.word	1073938496
 796 001c FFFFF0FF 		.word	-983041
 797              		.cfi_endproc
 798              	.LFE17:
 799              		.size	CySysWdtSetIgnoreBits, .-CySysWdtSetIgnoreBits
 800              		.section	.text.CySysWdtGetIgnoreBits,"ax",%progbits
 801              		.align	1
 802              		.global	CySysWdtGetIgnoreBits
 803              		.code	16
 804              		.thumb_func
 805              		.type	CySysWdtGetIgnoreBits, %function
 806              	CySysWdtGetIgnoreBits:
 807              	.LFB18:
2025:Generated_Source\PSoC4/CyLFClk.c **** 
2026:Generated_Source\PSoC4/CyLFClk.c **** 
2027:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2028:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtGetIgnoreBits
2029:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2030:Generated_Source\PSoC4/CyLFClk.c ****     *
2031:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
2032:Generated_Source\PSoC4/CyLFClk.c ****     * Reads the number of the  MSB bits of the watchdog timer that are not
2033:Generated_Source\PSoC4/CyLFClk.c ****     * checked against the match.
2034:Generated_Source\PSoC4/CyLFClk.c ****     *
2035:Generated_Source\PSoC4/CyLFClk.c ****     * \return The number of the MSB bits.
2036:Generated_Source\PSoC4/CyLFClk.c ****     *
2037:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2038:Generated_Source\PSoC4/CyLFClk.c ****     uint32 CySysWdtGetIgnoreBits(void)
2039:Generated_Source\PSoC4/CyLFClk.c ****     {
 808              		.loc 2 2039 0
 809              		.cfi_startproc
2040:Generated_Source\PSoC4/CyLFClk.c ****         return((uint32)((CY_SYS_WDT_MATCH_REG & CY_SYS_WDT_IGNORE_BITS_MASK) >> CY_SYS_WDT_IGNORE_B
 810              		.loc 2 2040 0
 811 0000 024B     		ldr	r3, .L78
2041:Generated_Source\PSoC4/CyLFClk.c ****     }
 812              		.loc 2 2041 0
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccw66xHk.s 			page 64


 813              		@ sp needed
2040:Generated_Source\PSoC4/CyLFClk.c ****         return((uint32)((CY_SYS_WDT_MATCH_REG & CY_SYS_WDT_IGNORE_BITS_MASK) >> CY_SYS_WDT_IGNORE_B
 814              		.loc 2 2040 0
 815 0002 1868     		ldr	r0, [r3]
 816 0004 0003     		lsl	r0, r0, #12
 817 0006 000F     		lsr	r0, r0, #28
 818              		.loc 2 2041 0
 819 0008 7047     		bx	lr
 820              	.L79:
 821 000a C046     		.align	2
 822              	.L78:
 823 000c 40000340 		.word	1073938496
 824              		.cfi_endproc
 825              	.LFE18:
 826              		.size	CySysWdtGetIgnoreBits, .-CySysWdtGetIgnoreBits
 827              		.section	.text.CySysWdtClearInterrupt,"ax",%progbits
 828              		.align	1
 829              		.global	CySysWdtClearInterrupt
 830              		.code	16
 831              		.thumb_func
 832              		.type	CySysWdtClearInterrupt, %function
 833              	CySysWdtClearInterrupt:
 834              	.LFB19:
2042:Generated_Source\PSoC4/CyLFClk.c **** 
2043:Generated_Source\PSoC4/CyLFClk.c **** 
2044:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2045:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtClearInterrupt
2046:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2047:Generated_Source\PSoC4/CyLFClk.c ****     *
2048:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
2049:Generated_Source\PSoC4/CyLFClk.c ****     * Feeds the watchdog.
2050:Generated_Source\PSoC4/CyLFClk.c ****     * Cleans the WDT match flag which is set every time the WDT counter reaches a 
2051:Generated_Source\PSoC4/CyLFClk.c ****     * WDT match value. Two unserviced interrupts lead to a system reset 
2052:Generated_Source\PSoC4/CyLFClk.c ****     * (i.e. at the third match).
2053:Generated_Source\PSoC4/CyLFClk.c ****     *
2054:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2055:Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtClearInterrupt(void)
2056:Generated_Source\PSoC4/CyLFClk.c ****     {
 835              		.loc 2 2056 0
 836              		.cfi_startproc
2057:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_SRSS_INTR_REG |= CY_SYS_WDT_LOWER_BIT_MASK;
 837              		.loc 2 2057 0
 838 0000 0121     		mov	r1, #1
 839 0002 024A     		ldr	r2, .L81
2058:Generated_Source\PSoC4/CyLFClk.c ****     }
 840              		.loc 2 2058 0
 841              		@ sp needed
2057:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_SRSS_INTR_REG |= CY_SYS_WDT_LOWER_BIT_MASK;
 842              		.loc 2 2057 0
 843 0004 1368     		ldr	r3, [r2]
 844 0006 0B43     		orr	r3, r1
 845 0008 1360     		str	r3, [r2]
 846              		.loc 2 2058 0
 847 000a 7047     		bx	lr
 848              	.L82:
 849              		.align	2
 850              	.L81:
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccw66xHk.s 			page 65


 851 000c 44000340 		.word	1073938500
 852              		.cfi_endproc
 853              	.LFE19:
 854              		.size	CySysWdtClearInterrupt, .-CySysWdtClearInterrupt
 855              		.section	.text.CySysWdtMaskInterrupt,"ax",%progbits
 856              		.align	1
 857              		.global	CySysWdtMaskInterrupt
 858              		.code	16
 859              		.thumb_func
 860              		.type	CySysWdtMaskInterrupt, %function
 861              	CySysWdtMaskInterrupt:
 862              	.LFB20:
2059:Generated_Source\PSoC4/CyLFClk.c **** 
2060:Generated_Source\PSoC4/CyLFClk.c **** 
2061:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2062:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtMaskInterrupt
2063:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2064:Generated_Source\PSoC4/CyLFClk.c ****     *
2065:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
2066:Generated_Source\PSoC4/CyLFClk.c ****     * After masking interrupts from WDT, they are not passed to CPU.
2067:Generated_Source\PSoC4/CyLFClk.c ****     * This function does not disable WDT reset generation.
2068:Generated_Source\PSoC4/CyLFClk.c ****     *
2069:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2070:Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtMaskInterrupt(void)
2071:Generated_Source\PSoC4/CyLFClk.c ****     {
 863              		.loc 2 2071 0
 864              		.cfi_startproc
2072:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_SRSS_INTR_MASK_REG &= (uint32)(~ (uint32)CY_SYS_WDT_LOWER_BIT_MASK);
 865              		.loc 2 2072 0
 866 0000 0121     		mov	r1, #1
 867 0002 024A     		ldr	r2, .L84
2073:Generated_Source\PSoC4/CyLFClk.c ****     }
 868              		.loc 2 2073 0
 869              		@ sp needed
2072:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_SRSS_INTR_MASK_REG &= (uint32)(~ (uint32)CY_SYS_WDT_LOWER_BIT_MASK);
 870              		.loc 2 2072 0
 871 0004 1368     		ldr	r3, [r2]
 872 0006 8B43     		bic	r3, r1
 873 0008 1360     		str	r3, [r2]
 874              		.loc 2 2073 0
 875 000a 7047     		bx	lr
 876              	.L85:
 877              		.align	2
 878              	.L84:
 879 000c 4C000340 		.word	1073938508
 880              		.cfi_endproc
 881              	.LFE20:
 882              		.size	CySysWdtMaskInterrupt, .-CySysWdtMaskInterrupt
 883              		.section	.text.CySysWdtUnmaskInterrupt,"ax",%progbits
 884              		.align	1
 885              		.global	CySysWdtUnmaskInterrupt
 886              		.code	16
 887              		.thumb_func
 888              		.type	CySysWdtUnmaskInterrupt, %function
 889              	CySysWdtUnmaskInterrupt:
 890              	.LFB21:
2074:Generated_Source\PSoC4/CyLFClk.c **** 
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccw66xHk.s 			page 66


2075:Generated_Source\PSoC4/CyLFClk.c **** 
2076:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2077:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtUnmaskInterrupt
2078:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2079:Generated_Source\PSoC4/CyLFClk.c ****     *
2080:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
2081:Generated_Source\PSoC4/CyLFClk.c ****     * After unmasking interrupts from WDT, they are passed to CPU.
2082:Generated_Source\PSoC4/CyLFClk.c ****     * This function does not impact the reset generation.
2083:Generated_Source\PSoC4/CyLFClk.c ****     *
2084:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2085:Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtUnmaskInterrupt(void)
2086:Generated_Source\PSoC4/CyLFClk.c ****     {
 891              		.loc 2 2086 0
 892              		.cfi_startproc
2087:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_SRSS_INTR_MASK_REG |= CY_SYS_WDT_LOWER_BIT_MASK;
 893              		.loc 2 2087 0
 894 0000 0121     		mov	r1, #1
 895 0002 024A     		ldr	r2, .L87
2088:Generated_Source\PSoC4/CyLFClk.c ****     }
 896              		.loc 2 2088 0
 897              		@ sp needed
2087:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_SRSS_INTR_MASK_REG |= CY_SYS_WDT_LOWER_BIT_MASK;
 898              		.loc 2 2087 0
 899 0004 1368     		ldr	r3, [r2]
 900 0006 0B43     		orr	r3, r1
 901 0008 1360     		str	r3, [r2]
 902              		.loc 2 2088 0
 903 000a 7047     		bx	lr
 904              	.L88:
 905              		.align	2
 906              	.L87:
 907 000c 4C000340 		.word	1073938508
 908              		.cfi_endproc
 909              	.LFE21:
 910              		.size	CySysWdtUnmaskInterrupt, .-CySysWdtUnmaskInterrupt
 911              		.section	.text.CySysWdtSetInterruptCallback,"ax",%progbits
 912              		.align	1
 913              		.global	CySysWdtSetInterruptCallback
 914              		.code	16
 915              		.thumb_func
 916              		.type	CySysWdtSetInterruptCallback, %function
 917              	CySysWdtSetInterruptCallback:
 918              	.LFB22:
2089:Generated_Source\PSoC4/CyLFClk.c **** 
2090:Generated_Source\PSoC4/CyLFClk.c **** 
2091:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2092:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtSetIsrCallback
2093:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2094:Generated_Source\PSoC4/CyLFClk.c ****     *
2095:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
2096:Generated_Source\PSoC4/CyLFClk.c ****     * Sets the ISR callback function for the WDT counter
2097:Generated_Source\PSoC4/CyLFClk.c ****     *
2098:Generated_Source\PSoC4/CyLFClk.c ****     * \param function The pointer to the callback function.
2099:Generated_Source\PSoC4/CyLFClk.c ****     *
2100:Generated_Source\PSoC4/CyLFClk.c ****     * \return The pointer to a previous callback function.
2101:Generated_Source\PSoC4/CyLFClk.c ****     *
2102:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccw66xHk.s 			page 67


2103:Generated_Source\PSoC4/CyLFClk.c ****     cyWdtCallback CySysWdtSetInterruptCallback(cyWdtCallback function)
2104:Generated_Source\PSoC4/CyLFClk.c ****     {
 919              		.loc 2 2104 0
 920              		.cfi_startproc
 921              	.LVL36:
2105:Generated_Source\PSoC4/CyLFClk.c ****         cyWdtCallback prevCallback = (void *)0;
2106:Generated_Source\PSoC4/CyLFClk.c **** 
2107:Generated_Source\PSoC4/CyLFClk.c ****         prevCallback = cySysWdtCallback;
 922              		.loc 2 2107 0
 923 0000 024B     		ldr	r3, .L90
2108:Generated_Source\PSoC4/CyLFClk.c ****         cySysWdtCallback = function;
2109:Generated_Source\PSoC4/CyLFClk.c **** 
2110:Generated_Source\PSoC4/CyLFClk.c ****         return(prevCallback);
2111:Generated_Source\PSoC4/CyLFClk.c ****     }
 924              		.loc 2 2111 0
 925              		@ sp needed
2107:Generated_Source\PSoC4/CyLFClk.c ****         cySysWdtCallback = function;
 926              		.loc 2 2107 0
 927 0002 5A68     		ldr	r2, [r3, #4]
 928              	.LVL37:
2108:Generated_Source\PSoC4/CyLFClk.c ****         cySysWdtCallback = function;
 929              		.loc 2 2108 0
 930 0004 5860     		str	r0, [r3, #4]
 931              		.loc 2 2111 0
 932 0006 101C     		mov	r0, r2
 933              	.LVL38:
 934 0008 7047     		bx	lr
 935              	.L91:
 936 000a C046     		.align	2
 937              	.L90:
 938 000c 00000000 		.word	.LANCHOR0
 939              		.cfi_endproc
 940              	.LFE22:
 941              		.size	CySysWdtSetInterruptCallback, .-CySysWdtSetInterruptCallback
 942              		.section	.text.CySysWdtGetInterruptCallback,"ax",%progbits
 943              		.align	1
 944              		.global	CySysWdtGetInterruptCallback
 945              		.code	16
 946              		.thumb_func
 947              		.type	CySysWdtGetInterruptCallback, %function
 948              	CySysWdtGetInterruptCallback:
 949              	.LFB23:
2112:Generated_Source\PSoC4/CyLFClk.c **** 
2113:Generated_Source\PSoC4/CyLFClk.c **** 
2114:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2115:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtGetIsrCallback
2116:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2117:Generated_Source\PSoC4/CyLFClk.c ****     *
2118:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
2119:Generated_Source\PSoC4/CyLFClk.c ****     * Gets the ISR callback function for the WDT counter
2120:Generated_Source\PSoC4/CyLFClk.c ****     *
2121:Generated_Source\PSoC4/CyLFClk.c ****     * \return The pointer to the callback function registered for WDT.
2122:Generated_Source\PSoC4/CyLFClk.c ****     *
2123:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2124:Generated_Source\PSoC4/CyLFClk.c ****     cyWdtCallback CySysWdtGetInterruptCallback(void)
2125:Generated_Source\PSoC4/CyLFClk.c ****     {
 950              		.loc 2 2125 0
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccw66xHk.s 			page 68


 951              		.cfi_startproc
2126:Generated_Source\PSoC4/CyLFClk.c ****         return(cySysWdtCallback);
 952              		.loc 2 2126 0
 953 0000 014B     		ldr	r3, .L93
2127:Generated_Source\PSoC4/CyLFClk.c ****     }
 954              		.loc 2 2127 0
 955              		@ sp needed
2126:Generated_Source\PSoC4/CyLFClk.c ****         return(cySysWdtCallback);
 956              		.loc 2 2126 0
 957 0002 5868     		ldr	r0, [r3, #4]
 958              		.loc 2 2127 0
 959 0004 7047     		bx	lr
 960              	.L94:
 961 0006 C046     		.align	2
 962              	.L93:
 963 0008 00000000 		.word	.LANCHOR0
 964              		.cfi_endproc
 965              	.LFE23:
 966              		.size	CySysWdtGetInterruptCallback, .-CySysWdtGetInterruptCallback
 967              		.section	.text.CySysWdtIsr,"ax",%progbits
 968              		.align	1
 969              		.global	CySysWdtIsr
 970              		.code	16
 971              		.thumb_func
 972              		.type	CySysWdtIsr, %function
 973              	CySysWdtIsr:
 974              	.LFB24:
2128:Generated_Source\PSoC4/CyLFClk.c **** 
2129:Generated_Source\PSoC4/CyLFClk.c **** 
2130:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2131:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysWdtIsr
2132:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2133:Generated_Source\PSoC4/CyLFClk.c ****     *
2134:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
2135:Generated_Source\PSoC4/CyLFClk.c ****     * This is the handler of the WDT interrupt in CPU NVIC.
2136:Generated_Source\PSoC4/CyLFClk.c ****     *
2137:Generated_Source\PSoC4/CyLFClk.c ****     * The handler calls the respective callback functions configured by the user 
2138:Generated_Source\PSoC4/CyLFClk.c ****     * by using CySysWdtSetIsrCallback() API.
2139:Generated_Source\PSoC4/CyLFClk.c ****     *
2140:Generated_Source\PSoC4/CyLFClk.c ****     *
2141:Generated_Source\PSoC4/CyLFClk.c ****     * \details
2142:Generated_Source\PSoC4/CyLFClk.c ****     * This function clears the WDT interrupt every time when it is called.
2143:Generated_Source\PSoC4/CyLFClk.c ****     * Reset after the 3rd interrupt does not happen if this function is registered
2144:Generated_Source\PSoC4/CyLFClk.c ****     * as the interrupt handler even if the "Watchdog with Interrupt" mode is
2145:Generated_Source\PSoC4/CyLFClk.c ****     * selected on the "Low Frequency Clocks" tab.
2146:Generated_Source\PSoC4/CyLFClk.c ****     *
2147:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2148:Generated_Source\PSoC4/CyLFClk.c ****     void CySysWdtIsr(void)
2149:Generated_Source\PSoC4/CyLFClk.c ****     {
 975              		.loc 2 2149 0
 976              		.cfi_startproc
 977 0000 08B5     		push	{r3, lr}
 978              		.cfi_def_cfa_offset 8
 979              		.cfi_offset 3, -8
 980              		.cfi_offset 14, -4
2150:Generated_Source\PSoC4/CyLFClk.c ****         if(cySysWdtCallback != (void *) 0)
 981              		.loc 2 2150 0
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccw66xHk.s 			page 69


 982 0002 044B     		ldr	r3, .L100
 983 0004 5B68     		ldr	r3, [r3, #4]
 984 0006 002B     		cmp	r3, #0
 985 0008 00D0     		beq	.L96
2151:Generated_Source\PSoC4/CyLFClk.c ****         {
2152:Generated_Source\PSoC4/CyLFClk.c ****             (void)(cySysWdtCallback)();
 986              		.loc 2 2152 0
 987 000a 9847     		blx	r3
 988              	.LVL39:
 989              	.L96:
2153:Generated_Source\PSoC4/CyLFClk.c ****         }
2154:Generated_Source\PSoC4/CyLFClk.c **** 
2155:Generated_Source\PSoC4/CyLFClk.c ****         CySysWdtClearInterrupt();
 990              		.loc 2 2155 0
 991 000c FFF7FEFF 		bl	CySysWdtClearInterrupt
 992              	.LVL40:
2156:Generated_Source\PSoC4/CyLFClk.c ****     }
 993              		.loc 2 2156 0
 994              		@ sp needed
 995 0010 08BD     		pop	{r3, pc}
 996              	.L101:
 997 0012 C046     		.align	2
 998              	.L100:
 999 0014 00000000 		.word	.LANCHOR0
 1000              		.cfi_endproc
 1001              	.LFE24:
 1002              		.size	CySysWdtIsr, .-CySysWdtIsr
 1003              		.section	.text.CySysClkSetTimerSource,"ax",%progbits
 1004              		.align	1
 1005              		.global	CySysClkSetTimerSource
 1006              		.code	16
 1007              		.thumb_func
 1008              		.type	CySysClkSetTimerSource, %function
 1009              	CySysClkSetTimerSource:
 1010              	.LFB26:
2157:Generated_Source\PSoC4/CyLFClk.c **** 
2158:Generated_Source\PSoC4/CyLFClk.c **** #endif /* (CY_IP_SRSSV2) */
2159:Generated_Source\PSoC4/CyLFClk.c **** 
2160:Generated_Source\PSoC4/CyLFClk.c **** 
2161:Generated_Source\PSoC4/CyLFClk.c **** #if(CY_IP_SRSSLT && CY_IP_WCO && CY_IP_WCO_WDT_EN)
2162:Generated_Source\PSoC4/CyLFClk.c **** 
2163:Generated_Source\PSoC4/CyLFClk.c **** /*******************************************************************************
2164:Generated_Source\PSoC4/CyLFClk.c **** * Function Name: CySysClkGetTimerSource
2165:Generated_Source\PSoC4/CyLFClk.c **** ********************************************************************************
2166:Generated_Source\PSoC4/CyLFClk.c **** *
2167:Generated_Source\PSoC4/CyLFClk.c **** * \brief Gets the clock source for the DeepSleep Timers.
2168:Generated_Source\PSoC4/CyLFClk.c **** *
2169:Generated_Source\PSoC4/CyLFClk.c **** * The function is applicable only for PSoC 4100S / PSoC Analog Coprocessor.
2170:Generated_Source\PSoC4/CyLFClk.c **** *
2171:Generated_Source\PSoC4/CyLFClk.c **** * \return The DeepSleep Timer source
2172:Generated_Source\PSoC4/CyLFClk.c **** * CY_SYS_CLK_TIMER_SRC_ILO Internal Low Frequency (32 kHz) Oscillator (ILO)
2173:Generated_Source\PSoC4/CyLFClk.c **** * CY_SYS_CLK_TIMER_SRC_WCO Low Frequency Watch Crystal Oscillator (WCO)
2174:Generated_Source\PSoC4/CyLFClk.c **** *
2175:Generated_Source\PSoC4/CyLFClk.c **** *******************************************************************************/
2176:Generated_Source\PSoC4/CyLFClk.c ****     static uint32 CySysClkGetTimerSource(void)
2177:Generated_Source\PSoC4/CyLFClk.c ****     {
2178:Generated_Source\PSoC4/CyLFClk.c ****         uint32 timerSource;
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccw66xHk.s 			page 70


2179:Generated_Source\PSoC4/CyLFClk.c ****         timerSource = CY_SYS_WCO_WDT_CONFIG_REG & CY_SYS_CLK_TIMER_SEL_MASK;
2180:Generated_Source\PSoC4/CyLFClk.c ****         return (timerSource);
2181:Generated_Source\PSoC4/CyLFClk.c ****     }    
2182:Generated_Source\PSoC4/CyLFClk.c **** 
2183:Generated_Source\PSoC4/CyLFClk.c **** 
2184:Generated_Source\PSoC4/CyLFClk.c **** /*******************************************************************************
2185:Generated_Source\PSoC4/CyLFClk.c **** * Function Name: CySysClkSetTimerSource
2186:Generated_Source\PSoC4/CyLFClk.c **** ****************************************************************************//**
2187:Generated_Source\PSoC4/CyLFClk.c **** *
2188:Generated_Source\PSoC4/CyLFClk.c **** * \brief Sets the clock source for the DeepSleep Timers.
2189:Generated_Source\PSoC4/CyLFClk.c **** *
2190:Generated_Source\PSoC4/CyLFClk.c **** * The function is applicable only for PSoC 4100S / PSoC Analog Coprocessor 
2191:Generated_Source\PSoC4/CyLFClk.c **** * devices.
2192:Generated_Source\PSoC4/CyLFClk.c **** *
2193:Generated_Source\PSoC4/CyLFClk.c **** * \param source
2194:Generated_Source\PSoC4/CyLFClk.c **** *  CY_SYS_CLK_TIMER_SRC_ILO - Internal Low Frequency (32 kHz) Oscillator 
2195:Generated_Source\PSoC4/CyLFClk.c **** * (ILO).<br>
2196:Generated_Source\PSoC4/CyLFClk.c **** * CY_SYS_CLK_TIMER_SRC_WCO - Low Frequency Watch Crystal Oscillator 
2197:Generated_Source\PSoC4/CyLFClk.c **** * (WCO).
2198:Generated_Source\PSoC4/CyLFClk.c **** *
2199:Generated_Source\PSoC4/CyLFClk.c **** * \details Both the current source and the new source must be running and stable 
2200:Generated_Source\PSoC4/CyLFClk.c **** * before calling this function.
2201:Generated_Source\PSoC4/CyLFClk.c **** *
2202:Generated_Source\PSoC4/CyLFClk.c **** * \warning DeepSleep Timer reset is required if Timer source was switched while 
2203:Generated_Source\PSoC4/CyLFClk.c **** * DeepSleep Timers were running. Call CySysTimerResetCounters() API after 
2204:Generated_Source\PSoC4/CyLFClk.c **** * Timer source switching.
2205:Generated_Source\PSoC4/CyLFClk.c **** * It is highly recommended to disable DeepSleep Timers before Timer source 
2206:Generated_Source\PSoC4/CyLFClk.c **** * switching. Changing the Timer source may change the functionality that uses 
2207:Generated_Source\PSoC4/CyLFClk.c **** * this Timers as clock source.
2208:Generated_Source\PSoC4/CyLFClk.c **** *******************************************************************************/
2209:Generated_Source\PSoC4/CyLFClk.c ****     void CySysClkSetTimerSource(uint32 source)
2210:Generated_Source\PSoC4/CyLFClk.c ****     {
 1011              		.loc 2 2210 0
 1012              		.cfi_startproc
 1013              	.LVL41:
 1014 0000 70B5     		push	{r4, r5, r6, lr}
 1015              		.cfi_def_cfa_offset 16
 1016              		.cfi_offset 4, -16
 1017              		.cfi_offset 5, -12
 1018              		.cfi_offset 6, -8
 1019              		.cfi_offset 14, -4
 1020              	.LBB4:
 1021              	.LBB5:
2179:Generated_Source\PSoC4/CyLFClk.c ****         return (timerSource);
 1022              		.loc 2 2179 0
 1023 0002 154E     		ldr	r6, .L109
 1024              	.LBE5:
 1025              	.LBE4:
 1026              		.loc 2 2210 0
 1027 0004 041C     		mov	r4, r0
 1028              	.LBB7:
 1029              	.LBB6:
2179:Generated_Source\PSoC4/CyLFClk.c ****         return (timerSource);
 1030              		.loc 2 2179 0
 1031 0006 3368     		ldr	r3, [r6]
 1032              	.LVL42:
 1033 0008 144D     		ldr	r5, .L109+4
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccw66xHk.s 			page 71


 1034 000a 9B0F     		lsr	r3, r3, #30
 1035              	.LVL43:
 1036 000c 9B07     		lsl	r3, r3, #30
 1037              	.LBE6:
 1038              	.LBE7:
2211:Generated_Source\PSoC4/CyLFClk.c ****         uint8  interruptState;
2212:Generated_Source\PSoC4/CyLFClk.c **** 
2213:Generated_Source\PSoC4/CyLFClk.c ****         if (CySysClkGetTimerSource() != source)
 1039              		.loc 2 2213 0
 1040 000e 8342     		cmp	r3, r0
 1041 0010 15D0     		beq	.L103
2214:Generated_Source\PSoC4/CyLFClk.c ****         {
2215:Generated_Source\PSoC4/CyLFClk.c **** 
2216:Generated_Source\PSoC4/CyLFClk.c ****             /* Reset both _EN bits in WCO_WDT_CLKEN register */
2217:Generated_Source\PSoC4/CyLFClk.c ****             CY_SYS_WCO_WDT_CLKEN_REG &= ~CY_SYS_WCO_WDT_CLKEN_RESET_MASK;
 1042              		.loc 2 2217 0
 1043 0012 0322     		mov	r2, #3
 1044 0014 2B68     		ldr	r3, [r5]
2218:Generated_Source\PSoC4/CyLFClk.c ****             
2219:Generated_Source\PSoC4/CyLFClk.c ****             /* Wait 4 new clock source-cycles for change to come into effect */
2220:Generated_Source\PSoC4/CyLFClk.c ****             CyDelayUs(CY_SYS_4TIMER_DELAY_US);
 1045              		.loc 2 2220 0
 1046 0016 7C20     		mov	r0, #124
 1047              	.LVL44:
2217:Generated_Source\PSoC4/CyLFClk.c ****             
 1048              		.loc 2 2217 0
 1049 0018 9343     		bic	r3, r2
 1050 001a 2B60     		str	r3, [r5]
 1051              		.loc 2 2220 0
 1052 001c 3368     		ldr	r3, [r6]
 1053 001e 9B0F     		lsr	r3, r3, #30
 1054 0020 00D0     		beq	.L104
 1055 0022 9030     		add	r0, r0, #144
 1056              	.L104:
 1057              		.loc 2 2220 0 is_stmt 0 discriminator 4
 1058 0024 FFF7FEFF 		bl	CyDelayUs
 1059              	.LVL45:
2221:Generated_Source\PSoC4/CyLFClk.c **** 
2222:Generated_Source\PSoC4/CyLFClk.c ****             interruptState = CyEnterCriticalSection();
 1060              		.loc 2 2222 0 is_stmt 1 discriminator 4
 1061 0028 FFF7FEFF 		bl	CyEnterCriticalSection
 1062              	.LVL46:
2223:Generated_Source\PSoC4/CyLFClk.c ****             CY_SYS_WCO_WDT_CONFIG_REG = (CY_SYS_WCO_WDT_CONFIG_REG & (uint32)(~CY_SYS_CLK_TIMER_SEL
 1063              		.loc 2 2223 0 discriminator 4
 1064 002c 3368     		ldr	r3, [r6]
2224:Generated_Source\PSoC4/CyLFClk.c ****                                     (source & CY_SYS_CLK_TIMER_SEL_MASK);
 1065              		.loc 2 2224 0 discriminator 4
 1066 002e A40F     		lsr	r4, r4, #30
 1067              	.LVL47:
2223:Generated_Source\PSoC4/CyLFClk.c ****             CY_SYS_WCO_WDT_CONFIG_REG = (CY_SYS_WCO_WDT_CONFIG_REG & (uint32)(~CY_SYS_CLK_TIMER_SEL
 1068              		.loc 2 2223 0 discriminator 4
 1069 0030 9B00     		lsl	r3, r3, #2
 1070              		.loc 2 2224 0 discriminator 4
 1071 0032 A407     		lsl	r4, r4, #30
2223:Generated_Source\PSoC4/CyLFClk.c ****             CY_SYS_WCO_WDT_CONFIG_REG = (CY_SYS_WCO_WDT_CONFIG_REG & (uint32)(~CY_SYS_CLK_TIMER_SEL
 1072              		.loc 2 2223 0 discriminator 4
 1073 0034 9B08     		lsr	r3, r3, #2
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccw66xHk.s 			page 72


 1074 0036 1C43     		orr	r4, r3
 1075 0038 3460     		str	r4, [r6]
2225:Generated_Source\PSoC4/CyLFClk.c ****             CyExitCriticalSection(interruptState);
 1076              		.loc 2 2225 0 discriminator 4
 1077 003a FFF7FEFF 		bl	CyExitCriticalSection
 1078              	.LVL48:
 1079              	.L103:
2226:Generated_Source\PSoC4/CyLFClk.c ****         }
2227:Generated_Source\PSoC4/CyLFClk.c **** 
2228:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_WCO_WDT_CLKEN_REG = (CY_SYS_WCO_WDT_CLKEN_REG & (uint32)(~CY_SYS_WCO_WDT_CLKEN_RESET
 1080              		.loc 2 2228 0
 1081 003e 0322     		mov	r2, #3
 1082 0040 2B68     		ldr	r3, [r5]
2229:Generated_Source\PSoC4/CyLFClk.c ****                                     CY_SYS_SET_CURRENT_TIMER_SOURCE_BIT;
2230:Generated_Source\PSoC4/CyLFClk.c ****     }
 1083              		.loc 2 2230 0
 1084              		@ sp needed
2228:Generated_Source\PSoC4/CyLFClk.c ****                                     CY_SYS_SET_CURRENT_TIMER_SOURCE_BIT;
 1085              		.loc 2 2228 0
 1086 0042 9343     		bic	r3, r2
 1087 0044 191C     		mov	r1, r3
2229:Generated_Source\PSoC4/CyLFClk.c ****                                     CY_SYS_SET_CURRENT_TIMER_SOURCE_BIT;
 1088              		.loc 2 2229 0
 1089 0046 3368     		ldr	r3, [r6]
 1090 0048 9A0F     		lsr	r2, r3, #30
2228:Generated_Source\PSoC4/CyLFClk.c ****                                     CY_SYS_SET_CURRENT_TIMER_SOURCE_BIT;
 1091              		.loc 2 2228 0
 1092 004a 5342     		neg	r3, r2
 1093 004c 5341     		adc	r3, r3, r2
 1094 004e 0133     		add	r3, r3, #1
 1095 0050 0B43     		orr	r3, r1
 1096 0052 2B60     		str	r3, [r5]
 1097              		.loc 2 2230 0
 1098 0054 70BD     		pop	{r4, r5, r6, pc}
 1099              	.L110:
 1100 0056 C046     		.align	2
 1101              	.L109:
 1102 0058 0C020640 		.word	1074135564
 1103 005c 14020640 		.word	1074135572
 1104              		.cfi_endproc
 1105              	.LFE26:
 1106              		.size	CySysClkSetTimerSource, .-CySysClkSetTimerSource
 1107              		.section	.text.CySysTimerGetEnabledStatus,"ax",%progbits
 1108              		.align	1
 1109              		.global	CySysTimerGetEnabledStatus
 1110              		.code	16
 1111              		.thumb_func
 1112              		.type	CySysTimerGetEnabledStatus, %function
 1113              	CySysTimerGetEnabledStatus:
 1114              	.LFB27:
2231:Generated_Source\PSoC4/CyLFClk.c **** 
2232:Generated_Source\PSoC4/CyLFClk.c **** 
2233:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2234:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysTimerGetEnabledStatus
2235:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2236:Generated_Source\PSoC4/CyLFClk.c ****     *
2237:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Reads the enabled status of one of the three DeepSleep Timer 
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccw66xHk.s 			page 73


2238:Generated_Source\PSoC4/CyLFClk.c ****     * counters.
2239:Generated_Source\PSoC4/CyLFClk.c ****     *
2240:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum: Valid range [0-2]. The number of the DeepSleep Timer 
2241:Generated_Source\PSoC4/CyLFClk.c ****     * counter.
2242:Generated_Source\PSoC4/CyLFClk.c ****     *
2243:Generated_Source\PSoC4/CyLFClk.c ****     * \return The status of the Timers counter:
2244:Generated_Source\PSoC4/CyLFClk.c ****     * \return 0 - If the Counter is disabled.
2245:Generated_Source\PSoC4/CyLFClk.c ****     * \return 1 - If the Counter is enabled.
2246:Generated_Source\PSoC4/CyLFClk.c ****     *
2247:Generated_Source\PSoC4/CyLFClk.c ****     * \details
2248:Generated_Source\PSoC4/CyLFClk.c ****     * This function returns an actual DeepSleep Timer counter status from the 
2249:Generated_Source\PSoC4/CyLFClk.c ****     * status register. It may take up to 3 LFCLK cycles for the Timer status 
2250:Generated_Source\PSoC4/CyLFClk.c ****     * register to contain actual data after the Timer counter is enabled.
2251:Generated_Source\PSoC4/CyLFClk.c ****     *
2252:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2253:Generated_Source\PSoC4/CyLFClk.c ****     uint32 CySysTimerGetEnabledStatus(uint32 counterNum)
2254:Generated_Source\PSoC4/CyLFClk.c ****     {
 1115              		.loc 2 2254 0
 1116              		.cfi_startproc
 1117              	.LVL49:
2255:Generated_Source\PSoC4/CyLFClk.c ****         CYASSERT(counterNum < CY_SYS_TIMER_COUNTERS_MAX);
2256:Generated_Source\PSoC4/CyLFClk.c ****         return ((CY_SYS_WCO_WDT_CONTROL_REG >> ((CY_SYS_TIMER_CNT_SHIFT * counterNum) + 
 1118              		.loc 2 2256 0
 1119 0000 044B     		ldr	r3, .L112
 1120 0002 C000     		lsl	r0, r0, #3
 1121              	.LVL50:
 1122 0004 1B68     		ldr	r3, [r3]
 1123 0006 0130     		add	r0, r0, #1
 1124 0008 C340     		lsr	r3, r3, r0
 1125 000a 181C     		mov	r0, r3
 1126 000c 0123     		mov	r3, #1
2257:Generated_Source\PSoC4/CyLFClk.c ****                                                  CY_SYS_TIMER_CNT_STTS_SHIFT)) & 0x01u);
2258:Generated_Source\PSoC4/CyLFClk.c ****     }
 1127              		.loc 2 2258 0
 1128              		@ sp needed
2256:Generated_Source\PSoC4/CyLFClk.c ****                                                  CY_SYS_TIMER_CNT_STTS_SHIFT)) & 0x01u);
 1129              		.loc 2 2256 0
 1130 000e 1840     		and	r0, r3
 1131              		.loc 2 2258 0
 1132 0010 7047     		bx	lr
 1133              	.L113:
 1134 0012 C046     		.align	2
 1135              	.L112:
 1136 0014 10020640 		.word	1074135568
 1137              		.cfi_endproc
 1138              	.LFE27:
 1139              		.size	CySysTimerGetEnabledStatus, .-CySysTimerGetEnabledStatus
 1140              		.section	.text.CySysTimerSetMode,"ax",%progbits
 1141              		.align	1
 1142              		.global	CySysTimerSetMode
 1143              		.code	16
 1144              		.thumb_func
 1145              		.type	CySysTimerSetMode, %function
 1146              	CySysTimerSetMode:
 1147              	.LFB28:
2259:Generated_Source\PSoC4/CyLFClk.c **** 
2260:Generated_Source\PSoC4/CyLFClk.c **** 
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccw66xHk.s 			page 74


2261:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2262:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysTimerSetMode
2263:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2264:Generated_Source\PSoC4/CyLFClk.c ****     *
2265:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Writes the mode of one of the three DeepSleep Timer counters.
2266:Generated_Source\PSoC4/CyLFClk.c ****     *
2267:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum: Valid range [0-2]. The number of the DeepSleep Timer 
2268:Generated_Source\PSoC4/CyLFClk.c ****     * counter.
2269:Generated_Source\PSoC4/CyLFClk.c ****     *
2270:Generated_Source\PSoC4/CyLFClk.c ****     * \param mode
2271:Generated_Source\PSoC4/CyLFClk.c ****     *  CY_SYS_TIMER_MODE_NONE - Free running.<br>
2272:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_TIMER_MODE_INT - The interrupt generated on match for counter 0
2273:Generated_Source\PSoC4/CyLFClk.c ****     * and 1, and on bit toggle for counter 2.
2274:Generated_Source\PSoC4/CyLFClk.c ****     *
2275:Generated_Source\PSoC4/CyLFClk.c ****     * \details
2276:Generated_Source\PSoC4/CyLFClk.c ****     * DeepSleep Timer counter counterNum should be disabled to set a mode. 
2277:Generated_Source\PSoC4/CyLFClk.c ****     * Otherwise, this function call has no effect. If the specified counter is 
2278:Generated_Source\PSoC4/CyLFClk.c ****     * enabled, call the CySysTimerDisable() function with the corresponding 
2279:Generated_Source\PSoC4/CyLFClk.c ****     * parameter to disable the specified counter and wait for it to stop.
2280:Generated_Source\PSoC4/CyLFClk.c ****     *
2281:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2282:Generated_Source\PSoC4/CyLFClk.c ****     void CySysTimerSetMode(uint32 counterNum, uint32 mode)
2283:Generated_Source\PSoC4/CyLFClk.c ****     {
 1148              		.loc 2 2283 0
 1149              		.cfi_startproc
 1150              	.LVL51:
 1151 0000 38B5     		push	{r3, r4, r5, lr}
 1152              		.cfi_def_cfa_offset 16
 1153              		.cfi_offset 3, -16
 1154              		.cfi_offset 4, -12
 1155              		.cfi_offset 5, -8
 1156              		.cfi_offset 14, -4
 1157              		.loc 2 2283 0
 1158 0002 041C     		mov	r4, r0
 1159 0004 0D1C     		mov	r5, r1
2284:Generated_Source\PSoC4/CyLFClk.c ****         uint32 configRegValue;
2285:Generated_Source\PSoC4/CyLFClk.c **** 
2286:Generated_Source\PSoC4/CyLFClk.c ****         CYASSERT(counterNum < CY_SYS_TIMER_COUNTERS_MAX);
2287:Generated_Source\PSoC4/CyLFClk.c **** 
2288:Generated_Source\PSoC4/CyLFClk.c ****         CYASSERT(mode <= CY_SYS_TIMER_MODE_MASK);
2289:Generated_Source\PSoC4/CyLFClk.c **** 
2290:Generated_Source\PSoC4/CyLFClk.c ****         if(0u == CySysTimerGetEnabledStatus(counterNum))
 1160              		.loc 2 2290 0
 1161 0006 FFF7FEFF 		bl	CySysTimerGetEnabledStatus
 1162              	.LVL52:
 1163 000a 0028     		cmp	r0, #0
 1164 000c 0AD1     		bne	.L114
2291:Generated_Source\PSoC4/CyLFClk.c ****         {
2292:Generated_Source\PSoC4/CyLFClk.c ****             configRegValue = CY_SYS_WCO_WDT_CONFIG_REG &
2293:Generated_Source\PSoC4/CyLFClk.c ****                                 (uint32)~((uint32)(CY_SYS_TIMER_MODE_MASK << (counterNum * CY_SYS_T
 1165              		.loc 2 2293 0
 1166 000e 0121     		mov	r1, #1
 1167 0010 081C     		mov	r0, r1
 1168 0012 E400     		lsl	r4, r4, #3
 1169              	.LVL53:
 1170 0014 A040     		lsl	r0, r0, r4
2294:Generated_Source\PSoC4/CyLFClk.c ****             configRegValue |= (uint32)((mode & CY_SYS_TIMER_MODE_MASK) << (counterNum * CY_SYS_TIME
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccw66xHk.s 			page 75


 1171              		.loc 2 2294 0
 1172 0016 2940     		and	r1, r5
 1173 0018 A140     		lsl	r1, r1, r4
2292:Generated_Source\PSoC4/CyLFClk.c ****                                 (uint32)~((uint32)(CY_SYS_TIMER_MODE_MASK << (counterNum * CY_SYS_T
 1174              		.loc 2 2292 0
 1175 001a 034A     		ldr	r2, .L116
 1176 001c 1368     		ldr	r3, [r2]
 1177 001e 8343     		bic	r3, r0
 1178              	.LVL54:
 1179              		.loc 2 2294 0
 1180 0020 1943     		orr	r1, r3
 1181              	.LVL55:
2295:Generated_Source\PSoC4/CyLFClk.c ****             CY_SYS_WCO_WDT_CONFIG_REG = configRegValue;
 1182              		.loc 2 2295 0
 1183 0022 1160     		str	r1, [r2]
 1184              	.LVL56:
 1185              	.L114:
2296:Generated_Source\PSoC4/CyLFClk.c ****         }
2297:Generated_Source\PSoC4/CyLFClk.c ****     }
 1186              		.loc 2 2297 0
 1187              		@ sp needed
 1188              	.LVL57:
 1189 0024 38BD     		pop	{r3, r4, r5, pc}
 1190              	.L117:
 1191 0026 C046     		.align	2
 1192              	.L116:
 1193 0028 0C020640 		.word	1074135564
 1194              		.cfi_endproc
 1195              	.LFE28:
 1196              		.size	CySysTimerSetMode, .-CySysTimerSetMode
 1197              		.section	.text.CySysTimerGetMode,"ax",%progbits
 1198              		.align	1
 1199              		.global	CySysTimerGetMode
 1200              		.code	16
 1201              		.thumb_func
 1202              		.type	CySysTimerGetMode, %function
 1203              	CySysTimerGetMode:
 1204              	.LFB29:
2298:Generated_Source\PSoC4/CyLFClk.c **** 
2299:Generated_Source\PSoC4/CyLFClk.c **** 
2300:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2301:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysTimerGetMode
2302:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2303:Generated_Source\PSoC4/CyLFClk.c ****     *
2304:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Reads the mode of one of the three DeepSleep Timer counters.
2305:Generated_Source\PSoC4/CyLFClk.c ****     *
2306:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum Valid range [0-2]. The number of the Timer counter.
2307:Generated_Source\PSoC4/CyLFClk.c ****     *
2308:Generated_Source\PSoC4/CyLFClk.c ****     * \return The mode of the counter. The same enumerated values as the mode 
2309:Generated_Source\PSoC4/CyLFClk.c ****     * parameter used in CySysTimerSetMode().
2310:Generated_Source\PSoC4/CyLFClk.c ****     *
2311:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2312:Generated_Source\PSoC4/CyLFClk.c ****     uint32 CySysTimerGetMode(uint32 counterNum)
2313:Generated_Source\PSoC4/CyLFClk.c ****     {
 1205              		.loc 2 2313 0
 1206              		.cfi_startproc
 1207              	.LVL58:
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccw66xHk.s 			page 76


2314:Generated_Source\PSoC4/CyLFClk.c ****         return ((CY_SYS_WCO_WDT_CONFIG_REG >> (counterNum * CY_SYS_TIMER_CNT_SHIFT)) & CY_SYS_TIMER
 1208              		.loc 2 2314 0
 1209 0000 034B     		ldr	r3, .L119
 1210 0002 C000     		lsl	r0, r0, #3
 1211              	.LVL59:
 1212 0004 1B68     		ldr	r3, [r3]
2315:Generated_Source\PSoC4/CyLFClk.c ****     }
 1213              		.loc 2 2315 0
 1214              		@ sp needed
2314:Generated_Source\PSoC4/CyLFClk.c ****         return ((CY_SYS_WCO_WDT_CONFIG_REG >> (counterNum * CY_SYS_TIMER_CNT_SHIFT)) & CY_SYS_TIMER
 1215              		.loc 2 2314 0
 1216 0006 C340     		lsr	r3, r3, r0
 1217 0008 181C     		mov	r0, r3
 1218 000a 0123     		mov	r3, #1
 1219 000c 1840     		and	r0, r3
 1220              		.loc 2 2315 0
 1221 000e 7047     		bx	lr
 1222              	.L120:
 1223              		.align	2
 1224              	.L119:
 1225 0010 0C020640 		.word	1074135564
 1226              		.cfi_endproc
 1227              	.LFE29:
 1228              		.size	CySysTimerGetMode, .-CySysTimerGetMode
 1229              		.section	.text.CySysTimerSetClearOnMatch,"ax",%progbits
 1230              		.align	1
 1231              		.global	CySysTimerSetClearOnMatch
 1232              		.code	16
 1233              		.thumb_func
 1234              		.type	CySysTimerSetClearOnMatch, %function
 1235              	CySysTimerSetClearOnMatch:
 1236              	.LFB30:
2316:Generated_Source\PSoC4/CyLFClk.c **** 
2317:Generated_Source\PSoC4/CyLFClk.c **** 
2318:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2319:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysTimerSetClearOnMatch
2320:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2321:Generated_Source\PSoC4/CyLFClk.c ****     *
2322:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Configures the DeepSleep Timer counter "clear on match" setting.
2323:Generated_Source\PSoC4/CyLFClk.c ****     *
2324:Generated_Source\PSoC4/CyLFClk.c ****     * If configured to "clear on match", the counter counts from 0 to MatchValue 
2325:Generated_Source\PSoC4/CyLFClk.c ****     * giving it a period of (MatchValue + 1).
2326:Generated_Source\PSoC4/CyLFClk.c ****     *
2327:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum
2328:Generated_Source\PSoC4/CyLFClk.c ****     * Valid range [0-1]. The number of the Timer counter. The match values are not
2329:Generated_Source\PSoC4/CyLFClk.c ****     * supported by counter 2.
2330:Generated_Source\PSoC4/CyLFClk.c ****     * \param enable 0 to disable appropriate counter <br>
2331:Generated_Source\PSoC4/CyLFClk.c ****     * 1 to enable appropriate counter
2332:Generated_Source\PSoC4/CyLFClk.c ****     *
2333:Generated_Source\PSoC4/CyLFClk.c ****     * \details
2334:Generated_Source\PSoC4/CyLFClk.c ****     * Timer counter counterNum should be disabled. Otherwise this function call
2335:Generated_Source\PSoC4/CyLFClk.c ****     * has no effect. If the specified counter is enabled, call the CySysTimerDisable()
2336:Generated_Source\PSoC4/CyLFClk.c ****     * function with the corresponding parameter to disable the specified counter and
2337:Generated_Source\PSoC4/CyLFClk.c ****     * wait for it to stop. This may take up to three Timer source-cycles.
2338:Generated_Source\PSoC4/CyLFClk.c ****     *
2339:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2340:Generated_Source\PSoC4/CyLFClk.c ****     void CySysTimerSetClearOnMatch(uint32 counterNum, uint32 enable)
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccw66xHk.s 			page 77


2341:Generated_Source\PSoC4/CyLFClk.c ****     {
 1237              		.loc 2 2341 0
 1238              		.cfi_startproc
 1239              	.LVL60:
 1240 0000 38B5     		push	{r3, r4, r5, lr}
 1241              		.cfi_def_cfa_offset 16
 1242              		.cfi_offset 3, -16
 1243              		.cfi_offset 4, -12
 1244              		.cfi_offset 5, -8
 1245              		.cfi_offset 14, -4
 1246              		.loc 2 2341 0
 1247 0002 041C     		mov	r4, r0
 1248 0004 0D1C     		mov	r5, r1
2342:Generated_Source\PSoC4/CyLFClk.c ****         uint32 configRegValue;
2343:Generated_Source\PSoC4/CyLFClk.c **** 
2344:Generated_Source\PSoC4/CyLFClk.c ****         CYASSERT((counterNum == CY_SYS_TIMER0) ||
2345:Generated_Source\PSoC4/CyLFClk.c ****                  (counterNum == CY_SYS_TIMER1));
2346:Generated_Source\PSoC4/CyLFClk.c **** 
2347:Generated_Source\PSoC4/CyLFClk.c ****         if(0u == CySysTimerGetEnabledStatus(counterNum))
 1249              		.loc 2 2347 0
 1250 0006 FFF7FEFF 		bl	CySysTimerGetEnabledStatus
 1251              	.LVL61:
 1252 000a 0028     		cmp	r0, #0
 1253 000c 0AD1     		bne	.L121
2348:Generated_Source\PSoC4/CyLFClk.c ****         {
2349:Generated_Source\PSoC4/CyLFClk.c ****             configRegValue = CY_SYS_WCO_WDT_CONFIG_REG & (uint32)~((uint32)((uint32)1u << 
2350:Generated_Source\PSoC4/CyLFClk.c ****              ((counterNum * CY_SYS_TIMER_CNT_SHIFT) + CY_SYS_TIMER_CNT_MATCH_CLR_SHIFT)));
 1254              		.loc 2 2350 0
 1255 000e E400     		lsl	r4, r4, #3
 1256              	.LVL62:
 1257 0010 0234     		add	r4, r4, #2
2349:Generated_Source\PSoC4/CyLFClk.c ****              ((counterNum * CY_SYS_TIMER_CNT_SHIFT) + CY_SYS_TIMER_CNT_MATCH_CLR_SHIFT)));
 1258              		.loc 2 2349 0
 1259 0012 0121     		mov	r1, #1
2351:Generated_Source\PSoC4/CyLFClk.c **** 
2352:Generated_Source\PSoC4/CyLFClk.c ****             configRegValue
2353:Generated_Source\PSoC4/CyLFClk.c ****                 |= (uint32)(enable << ((counterNum * CY_SYS_TIMER_CNT_SHIFT) + CY_SYS_TIMER_CNT_MAT
 1260              		.loc 2 2353 0
 1261 0014 A540     		lsl	r5, r5, r4
 1262              	.LVL63:
2349:Generated_Source\PSoC4/CyLFClk.c ****              ((counterNum * CY_SYS_TIMER_CNT_SHIFT) + CY_SYS_TIMER_CNT_MATCH_CLR_SHIFT)));
 1263              		.loc 2 2349 0
 1264 0016 A140     		lsl	r1, r1, r4
 1265              		.loc 2 2353 0
 1266 0018 2C1C     		mov	r4, r5
2349:Generated_Source\PSoC4/CyLFClk.c ****              ((counterNum * CY_SYS_TIMER_CNT_SHIFT) + CY_SYS_TIMER_CNT_MATCH_CLR_SHIFT)));
 1267              		.loc 2 2349 0
 1268 001a 034A     		ldr	r2, .L123
 1269 001c 1368     		ldr	r3, [r2]
 1270 001e 8B43     		bic	r3, r1
 1271              	.LVL64:
 1272              		.loc 2 2353 0
 1273 0020 1C43     		orr	r4, r3
 1274              	.LVL65:
2354:Generated_Source\PSoC4/CyLFClk.c **** 
2355:Generated_Source\PSoC4/CyLFClk.c ****             CY_SYS_WCO_WDT_CONFIG_REG = configRegValue;
 1275              		.loc 2 2355 0
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccw66xHk.s 			page 78


 1276 0022 1460     		str	r4, [r2]
 1277              	.LVL66:
 1278              	.L121:
2356:Generated_Source\PSoC4/CyLFClk.c ****         }
2357:Generated_Source\PSoC4/CyLFClk.c ****     }
 1279              		.loc 2 2357 0
 1280              		@ sp needed
 1281 0024 38BD     		pop	{r3, r4, r5, pc}
 1282              	.L124:
 1283 0026 C046     		.align	2
 1284              	.L123:
 1285 0028 0C020640 		.word	1074135564
 1286              		.cfi_endproc
 1287              	.LFE30:
 1288              		.size	CySysTimerSetClearOnMatch, .-CySysTimerSetClearOnMatch
 1289              		.section	.text.CySysTimerGetClearOnMatch,"ax",%progbits
 1290              		.align	1
 1291              		.global	CySysTimerGetClearOnMatch
 1292              		.code	16
 1293              		.thumb_func
 1294              		.type	CySysTimerGetClearOnMatch, %function
 1295              	CySysTimerGetClearOnMatch:
 1296              	.LFB31:
2358:Generated_Source\PSoC4/CyLFClk.c **** 
2359:Generated_Source\PSoC4/CyLFClk.c **** 
2360:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2361:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysTimerGetClearOnMatch
2362:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2363:Generated_Source\PSoC4/CyLFClk.c ****     *
2364:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Reads the "clear on match" setting for the specified DeepSleep Timer 
2365:Generated_Source\PSoC4/CyLFClk.c ****     * counter.
2366:Generated_Source\PSoC4/CyLFClk.c ****     *
2367:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum Valid range [0-1].  The number of the Timer counter. The 
2368:Generated_Source\PSoC4/CyLFClk.c ****     * match values are not supported by counter 2.
2369:Generated_Source\PSoC4/CyLFClk.c ****     *
2370:Generated_Source\PSoC4/CyLFClk.c ****     * \return The "clear on match" status: <br>1 if enabled <br>0 if disabled
2371:Generated_Source\PSoC4/CyLFClk.c ****     *
2372:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2373:Generated_Source\PSoC4/CyLFClk.c ****     uint32 CySysTimerGetClearOnMatch(uint32 counterNum)
2374:Generated_Source\PSoC4/CyLFClk.c ****     {
 1297              		.loc 2 2374 0
 1298              		.cfi_startproc
 1299              	.LVL67:
2375:Generated_Source\PSoC4/CyLFClk.c ****         CYASSERT((counterNum == CY_SYS_TIMER0) ||
2376:Generated_Source\PSoC4/CyLFClk.c ****                  (counterNum == CY_SYS_TIMER1));
2377:Generated_Source\PSoC4/CyLFClk.c **** 
2378:Generated_Source\PSoC4/CyLFClk.c ****         return (uint32)((CY_SYS_WCO_WDT_CONFIG_REG >>
 1300              		.loc 2 2378 0
 1301 0000 044B     		ldr	r3, .L126
2379:Generated_Source\PSoC4/CyLFClk.c ****                         ((counterNum * CY_SYS_TIMER_CNT_SHIFT) + CY_SYS_TIMER_CNT_MATCH_CLR_SHIFT))
 1302              		.loc 2 2379 0
 1303 0002 C000     		lsl	r0, r0, #3
 1304              	.LVL68:
2378:Generated_Source\PSoC4/CyLFClk.c ****                         ((counterNum * CY_SYS_TIMER_CNT_SHIFT) + CY_SYS_TIMER_CNT_MATCH_CLR_SHIFT))
 1305              		.loc 2 2378 0
 1306 0004 1B68     		ldr	r3, [r3]
 1307              		.loc 2 2379 0
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccw66xHk.s 			page 79


 1308 0006 0230     		add	r0, r0, #2
2378:Generated_Source\PSoC4/CyLFClk.c ****                         ((counterNum * CY_SYS_TIMER_CNT_SHIFT) + CY_SYS_TIMER_CNT_MATCH_CLR_SHIFT))
 1309              		.loc 2 2378 0
 1310 0008 C340     		lsr	r3, r3, r0
 1311 000a 181C     		mov	r0, r3
 1312 000c 0123     		mov	r3, #1
2380:Generated_Source\PSoC4/CyLFClk.c ****     }
 1313              		.loc 2 2380 0
 1314              		@ sp needed
2378:Generated_Source\PSoC4/CyLFClk.c ****                         ((counterNum * CY_SYS_TIMER_CNT_SHIFT) + CY_SYS_TIMER_CNT_MATCH_CLR_SHIFT))
 1315              		.loc 2 2378 0
 1316 000e 1840     		and	r0, r3
 1317              		.loc 2 2380 0
 1318 0010 7047     		bx	lr
 1319              	.L127:
 1320 0012 C046     		.align	2
 1321              	.L126:
 1322 0014 0C020640 		.word	1074135564
 1323              		.cfi_endproc
 1324              	.LFE31:
 1325              		.size	CySysTimerGetClearOnMatch, .-CySysTimerGetClearOnMatch
 1326              		.section	.text.CySysTimerEnable,"ax",%progbits
 1327              		.align	1
 1328              		.global	CySysTimerEnable
 1329              		.code	16
 1330              		.thumb_func
 1331              		.type	CySysTimerEnable, %function
 1332              	CySysTimerEnable:
 1333              	.LFB32:
2381:Generated_Source\PSoC4/CyLFClk.c **** 
2382:Generated_Source\PSoC4/CyLFClk.c **** 
2383:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2384:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysTimerEnable
2385:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2386:Generated_Source\PSoC4/CyLFClk.c ****     *
2387:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Enables the specified DeepSleep Timer counters. All the counters 
2388:Generated_Source\PSoC4/CyLFClk.c ****     * specified in the mask are enabled.
2389:Generated_Source\PSoC4/CyLFClk.c ****     *
2390:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterMask  CY_SYS_TIMER0_MASK - The mask for counter 0 to enable.<br>
2391:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_TIMER1_MASK - The mask for counter 1 to enable.<br>
2392:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_TIMER2_MASK - The mask for counter 2 to enable.
2393:Generated_Source\PSoC4/CyLFClk.c ****     *
2394:Generated_Source\PSoC4/CyLFClk.c ****     * \details
2395:Generated_Source\PSoC4/CyLFClk.c ****     * Enabling or disabling Timer requires 3 Timer source-cycles to come into effect.
2396:Generated_Source\PSoC4/CyLFClk.c ****     * Therefore, the Timer enable state must not be changed more than once in
2397:Generated_Source\PSoC4/CyLFClk.c ****     * that period.
2398:Generated_Source\PSoC4/CyLFClk.c ****     *
2399:Generated_Source\PSoC4/CyLFClk.c ****     * After Timer is enabled, it is illegal to write Timer configuration 
2400:Generated_Source\PSoC4/CyLFClk.c ****     * (WCO_WDT_CONFIG) and control (WCO_WDT_CONTROL) registers. This means that all
2401:Generated_Source\PSoC4/CyLFClk.c ****     * Timer functions that contain 'write' in the name (with the exception of 
2402:Generated_Source\PSoC4/CyLFClk.c ****     * CySysTimerSetMatch() function) are illegal to call once Timer enabled.
2403:Generated_Source\PSoC4/CyLFClk.c ****     *
2404:Generated_Source\PSoC4/CyLFClk.c ****     * Timer current source must be running and stable before calling this 
2405:Generated_Source\PSoC4/CyLFClk.c ****     * function.
2406:Generated_Source\PSoC4/CyLFClk.c ****     *
2407:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2408:Generated_Source\PSoC4/CyLFClk.c ****     void CySysTimerEnable(uint32 counterMask)
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccw66xHk.s 			page 80


2409:Generated_Source\PSoC4/CyLFClk.c ****     {
 1334              		.loc 2 2409 0
 1335              		.cfi_startproc
 1336              	.LVL69:
2410:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_WCO_WDT_CONTROL_REG |= counterMask;
 1337              		.loc 2 2410 0
 1338 0000 094B     		ldr	r3, .L147
 1339 0002 1A68     		ldr	r2, [r3]
 1340 0004 0243     		orr	r2, r0
 1341 0006 1A60     		str	r2, [r3]
2411:Generated_Source\PSoC4/CyLFClk.c **** 
2412:Generated_Source\PSoC4/CyLFClk.c ****         if(0u != (counterMask & CY_SYS_TIMER0_MASK))
 1342              		.loc 2 2412 0
 1343 0008 C207     		lsl	r2, r0, #31
 1344 000a 02D5     		bpl	.L129
 1345              	.L130:
 1346              	.LVL70:
 1347              	.LBB14:
 1348              	.LBB15:
2256:Generated_Source\PSoC4/CyLFClk.c ****                                                  CY_SYS_TIMER_CNT_STTS_SHIFT)) & 0x01u);
 1349              		.loc 2 2256 0 discriminator 1
 1350 000c 1A68     		ldr	r2, [r3]
 1351              	.LBE15:
 1352              	.LBE14:
2413:Generated_Source\PSoC4/CyLFClk.c ****         {
2414:Generated_Source\PSoC4/CyLFClk.c ****             while (0u == CySysTimerGetEnabledStatus(CY_SYS_TIMER0))
 1353              		.loc 2 2414 0 discriminator 1
 1354 000e 9207     		lsl	r2, r2, #30
 1355 0010 FCD5     		bpl	.L130
 1356              	.LVL71:
 1357              	.L129:
2415:Generated_Source\PSoC4/CyLFClk.c ****             {
2416:Generated_Source\PSoC4/CyLFClk.c ****                 /* Wait for changes to come into effect */
2417:Generated_Source\PSoC4/CyLFClk.c ****             }
2418:Generated_Source\PSoC4/CyLFClk.c ****         }
2419:Generated_Source\PSoC4/CyLFClk.c **** 
2420:Generated_Source\PSoC4/CyLFClk.c ****         if(0u != (counterMask & CY_SYS_TIMER1_MASK))
 1358              		.loc 2 2420 0
 1359 0012 C205     		lsl	r2, r0, #23
 1360 0014 02D5     		bpl	.L131
 1361              	.L132:
 1362              	.LVL72:
 1363              	.LBB16:
 1364              	.LBB17:
2256:Generated_Source\PSoC4/CyLFClk.c ****                                                  CY_SYS_TIMER_CNT_STTS_SHIFT)) & 0x01u);
 1365              		.loc 2 2256 0 discriminator 1
 1366 0016 1A68     		ldr	r2, [r3]
 1367              	.LBE17:
 1368              	.LBE16:
2421:Generated_Source\PSoC4/CyLFClk.c ****         {
2422:Generated_Source\PSoC4/CyLFClk.c ****             while (0u == CySysTimerGetEnabledStatus(CY_SYS_TIMER1))
 1369              		.loc 2 2422 0 discriminator 1
 1370 0018 9205     		lsl	r2, r2, #22
 1371 001a FCD5     		bpl	.L132
 1372              	.LVL73:
 1373              	.L131:
2423:Generated_Source\PSoC4/CyLFClk.c ****             {
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccw66xHk.s 			page 81


2424:Generated_Source\PSoC4/CyLFClk.c ****                 /* Wait for changes to come into effect */
2425:Generated_Source\PSoC4/CyLFClk.c ****             }
2426:Generated_Source\PSoC4/CyLFClk.c ****         }
2427:Generated_Source\PSoC4/CyLFClk.c **** 
2428:Generated_Source\PSoC4/CyLFClk.c ****         if(0u != (counterMask & CY_SYS_TIMER2_MASK))
 1374              		.loc 2 2428 0
 1375 001c C203     		lsl	r2, r0, #15
 1376 001e 02D5     		bpl	.L128
 1377              	.L134:
 1378              	.LVL74:
 1379              	.LBB18:
 1380              	.LBB19:
2256:Generated_Source\PSoC4/CyLFClk.c ****                                                  CY_SYS_TIMER_CNT_STTS_SHIFT)) & 0x01u);
 1381              		.loc 2 2256 0 discriminator 1
 1382 0020 1A68     		ldr	r2, [r3]
 1383              	.LBE19:
 1384              	.LBE18:
2429:Generated_Source\PSoC4/CyLFClk.c ****         {
2430:Generated_Source\PSoC4/CyLFClk.c ****             while (0u == CySysTimerGetEnabledStatus(CY_SYS_TIMER2))
 1385              		.loc 2 2430 0 discriminator 1
 1386 0022 9203     		lsl	r2, r2, #14
 1387 0024 FCD5     		bpl	.L134
 1388              	.LVL75:
 1389              	.L128:
2431:Generated_Source\PSoC4/CyLFClk.c ****             {
2432:Generated_Source\PSoC4/CyLFClk.c ****                 /* Wait for changes to come into effect */
2433:Generated_Source\PSoC4/CyLFClk.c ****             }
2434:Generated_Source\PSoC4/CyLFClk.c ****         }
2435:Generated_Source\PSoC4/CyLFClk.c ****     }
 1390              		.loc 2 2435 0
 1391              		@ sp needed
 1392 0026 7047     		bx	lr
 1393              	.L148:
 1394              		.align	2
 1395              	.L147:
 1396 0028 10020640 		.word	1074135568
 1397              		.cfi_endproc
 1398              	.LFE32:
 1399              		.size	CySysTimerEnable, .-CySysTimerEnable
 1400              		.section	.text.CySysTimerDisable,"ax",%progbits
 1401              		.align	1
 1402              		.global	CySysTimerDisable
 1403              		.code	16
 1404              		.thumb_func
 1405              		.type	CySysTimerDisable, %function
 1406              	CySysTimerDisable:
 1407              	.LFB33:
2436:Generated_Source\PSoC4/CyLFClk.c **** 
2437:Generated_Source\PSoC4/CyLFClk.c **** 
2438:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2439:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysTimerDisable
2440:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2441:Generated_Source\PSoC4/CyLFClk.c ****     *
2442:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Disables the specified DeepSleep Timer counters.
2443:Generated_Source\PSoC4/CyLFClk.c ****     *
2444:Generated_Source\PSoC4/CyLFClk.c ****     * All the counters specified in the mask are disabled. The function waits for 
2445:Generated_Source\PSoC4/CyLFClk.c ****     * the changes to come into effect.
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccw66xHk.s 			page 82


2446:Generated_Source\PSoC4/CyLFClk.c ****     *
2447:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterMask
2448:Generated_Source\PSoC4/CyLFClk.c ****     *  CY_SYS_TIMER0_MASK - The mask for Counter 0 to disable.<br>
2449:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_TIMER1_MASK - The mask for Counter 1 to disable.<br>
2450:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_TIMER2_MASK - The mask for Counter 2 to disable.
2451:Generated_Source\PSoC4/CyLFClk.c ****     *
2452:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2453:Generated_Source\PSoC4/CyLFClk.c ****     void CySysTimerDisable(uint32 counterMask)
2454:Generated_Source\PSoC4/CyLFClk.c ****     {
 1408              		.loc 2 2454 0
 1409              		.cfi_startproc
 1410              	.LVL76:
2455:Generated_Source\PSoC4/CyLFClk.c **** 
2456:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_WCO_WDT_CONTROL_REG &= ~counterMask;
 1411              		.loc 2 2456 0
 1412 0000 094B     		ldr	r3, .L165
 1413 0002 1A68     		ldr	r2, [r3]
 1414 0004 8243     		bic	r2, r0
 1415 0006 1A60     		str	r2, [r3]
2457:Generated_Source\PSoC4/CyLFClk.c **** 
2458:Generated_Source\PSoC4/CyLFClk.c ****         if(0u != (counterMask & CY_SYS_TIMER0_MASK))
 1416              		.loc 2 2458 0
 1417 0008 C207     		lsl	r2, r0, #31
 1418 000a 02D5     		bpl	.L150
 1419              	.L151:
 1420              	.LVL77:
 1421              	.LBB26:
 1422              	.LBB27:
2256:Generated_Source\PSoC4/CyLFClk.c ****                                                  CY_SYS_TIMER_CNT_STTS_SHIFT)) & 0x01u);
 1423              		.loc 2 2256 0 discriminator 1
 1424 000c 1A68     		ldr	r2, [r3]
 1425              	.LBE27:
 1426              	.LBE26:
2459:Generated_Source\PSoC4/CyLFClk.c ****         {
2460:Generated_Source\PSoC4/CyLFClk.c ****             while (0u != CySysTimerGetEnabledStatus(CY_SYS_TIMER0))
 1427              		.loc 2 2460 0 discriminator 1
 1428 000e 9207     		lsl	r2, r2, #30
 1429 0010 FCD4     		bmi	.L151
 1430              	.LVL78:
 1431              	.L150:
2461:Generated_Source\PSoC4/CyLFClk.c ****             {
2462:Generated_Source\PSoC4/CyLFClk.c ****                 /* Wait for changes to come into effect */
2463:Generated_Source\PSoC4/CyLFClk.c ****             }
2464:Generated_Source\PSoC4/CyLFClk.c ****         }
2465:Generated_Source\PSoC4/CyLFClk.c **** 
2466:Generated_Source\PSoC4/CyLFClk.c ****         if(0u != (counterMask & CY_SYS_TIMER1_MASK))
 1432              		.loc 2 2466 0
 1433 0012 C205     		lsl	r2, r0, #23
 1434 0014 02D5     		bpl	.L152
 1435              	.L153:
 1436              	.LVL79:
 1437              	.LBB28:
 1438              	.LBB29:
2256:Generated_Source\PSoC4/CyLFClk.c ****                                                  CY_SYS_TIMER_CNT_STTS_SHIFT)) & 0x01u);
 1439              		.loc 2 2256 0 discriminator 1
 1440 0016 1A68     		ldr	r2, [r3]
 1441              	.LBE29:
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccw66xHk.s 			page 83


 1442              	.LBE28:
2467:Generated_Source\PSoC4/CyLFClk.c ****         {
2468:Generated_Source\PSoC4/CyLFClk.c ****             while (0u != CySysTimerGetEnabledStatus(CY_SYS_TIMER1))
 1443              		.loc 2 2468 0 discriminator 1
 1444 0018 9205     		lsl	r2, r2, #22
 1445 001a FCD4     		bmi	.L153
 1446              	.LVL80:
 1447              	.L152:
2469:Generated_Source\PSoC4/CyLFClk.c ****             {
2470:Generated_Source\PSoC4/CyLFClk.c ****                 /* Wait for changes to come into effect */
2471:Generated_Source\PSoC4/CyLFClk.c ****             }
2472:Generated_Source\PSoC4/CyLFClk.c ****         }
2473:Generated_Source\PSoC4/CyLFClk.c **** 
2474:Generated_Source\PSoC4/CyLFClk.c ****         if(0u != (counterMask & CY_SYS_TIMER2_MASK))
 1448              		.loc 2 2474 0
 1449 001c C203     		lsl	r2, r0, #15
 1450 001e 02D5     		bpl	.L149
 1451              	.L155:
 1452              	.LVL81:
 1453              	.LBB30:
 1454              	.LBB31:
2256:Generated_Source\PSoC4/CyLFClk.c ****                                                  CY_SYS_TIMER_CNT_STTS_SHIFT)) & 0x01u);
 1455              		.loc 2 2256 0 discriminator 1
 1456 0020 1A68     		ldr	r2, [r3]
 1457              	.LBE31:
 1458              	.LBE30:
2475:Generated_Source\PSoC4/CyLFClk.c ****         {
2476:Generated_Source\PSoC4/CyLFClk.c ****             while (0u != CySysTimerGetEnabledStatus(CY_SYS_TIMER2))
 1459              		.loc 2 2476 0 discriminator 1
 1460 0022 9203     		lsl	r2, r2, #14
 1461 0024 FCD4     		bmi	.L155
 1462              	.LVL82:
 1463              	.L149:
2477:Generated_Source\PSoC4/CyLFClk.c ****             {
2478:Generated_Source\PSoC4/CyLFClk.c ****                 /* Wait for changes to come into effect */
2479:Generated_Source\PSoC4/CyLFClk.c ****             }
2480:Generated_Source\PSoC4/CyLFClk.c ****         }
2481:Generated_Source\PSoC4/CyLFClk.c **** 
2482:Generated_Source\PSoC4/CyLFClk.c ****     }
 1464              		.loc 2 2482 0
 1465              		@ sp needed
 1466 0026 7047     		bx	lr
 1467              	.L166:
 1468              		.align	2
 1469              	.L165:
 1470 0028 10020640 		.word	1074135568
 1471              		.cfi_endproc
 1472              	.LFE33:
 1473              		.size	CySysTimerDisable, .-CySysTimerDisable
 1474              		.section	.text.CySysTimerSetCascade,"ax",%progbits
 1475              		.align	1
 1476              		.global	CySysTimerSetCascade
 1477              		.code	16
 1478              		.thumb_func
 1479              		.type	CySysTimerSetCascade, %function
 1480              	CySysTimerSetCascade:
 1481              	.LFB34:
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccw66xHk.s 			page 84


2483:Generated_Source\PSoC4/CyLFClk.c **** 
2484:Generated_Source\PSoC4/CyLFClk.c **** 
2485:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2486:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysTimerSetCascade
2487:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2488:Generated_Source\PSoC4/CyLFClk.c ****     *
2489:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
2490:Generated_Source\PSoC4/CyLFClk.c ****     * Writes the two DeepSleep Timers cascade values based on the combination of 
2491:Generated_Source\PSoC4/CyLFClk.c ****     * mask values specified.
2492:Generated_Source\PSoC4/CyLFClk.c ****     *
2493:Generated_Source\PSoC4/CyLFClk.c ****     * \param cascadeMask The mask value used to set or clear the cascade values:
2494:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_TIMER_CASCADE_NONE - Neither<br>
2495:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_TIMER_CASCADE_01 - Cascade 01<br>
2496:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_TIMER_CASCADE_12 - Cascade 12
2497:Generated_Source\PSoC4/CyLFClk.c ****     *
2498:Generated_Source\PSoC4/CyLFClk.c ****     * If only one cascade mask is specified, the second cascade is disabled.
2499:Generated_Source\PSoC4/CyLFClk.c ****     * To set both cascade modes, two defines should be ORed:
2500:Generated_Source\PSoC4/CyLFClk.c ****     * (CY_SYS_TIMER_CASCADE_01 | CY_SYS_TIMER_CASCADE_12).
2501:Generated_Source\PSoC4/CyLFClk.c ****     * \note If CySysTimerSetCascade() was called with ORed defines it is necessary 
2502:Generated_Source\PSoC4/CyLFClk.c ****     * to call CySysTimeSetClearOnMatch(1,1). It is needed to make sure that 
2503:Generated_Source\PSoC4/CyLFClk.c ****     * Counter 2 will be updated in the expected way.
2504:Generated_Source\PSoC4/CyLFClk.c ****     *
2505:Generated_Source\PSoC4/CyLFClk.c ****     * Timer counters that are part of the specified cascade should be disabled.
2506:Generated_Source\PSoC4/CyLFClk.c ****     * Otherwise this function call has no effect. If the specified
2507:Generated_Source\PSoC4/CyLFClk.c ****     * counter is enabled, call CySysTimerDisable() function with the corresponding
2508:Generated_Source\PSoC4/CyLFClk.c ****     * parameter to disable the specified counter and wait for it to stop. This may
2509:Generated_Source\PSoC4/CyLFClk.c ****     * take up to 3 Timers source-cycles.
2510:Generated_Source\PSoC4/CyLFClk.c ****     *
2511:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2512:Generated_Source\PSoC4/CyLFClk.c ****     void CySysTimerSetCascade(uint32 cascadeMask)
2513:Generated_Source\PSoC4/CyLFClk.c ****     {
 1482              		.loc 2 2513 0
 1483              		.cfi_startproc
 1484              	.LVL83:
 1485              	.LBB38:
 1486              	.LBB39:
2256:Generated_Source\PSoC4/CyLFClk.c ****                                                  CY_SYS_TIMER_CNT_STTS_SHIFT)) & 0x01u);
 1487              		.loc 2 2256 0
 1488 0000 094A     		ldr	r2, .L169
 1489              	.LBE39:
 1490              	.LBE38:
 1491              		.loc 2 2513 0
 1492 0002 10B5     		push	{r4, lr}
 1493              		.cfi_def_cfa_offset 8
 1494              		.cfi_offset 4, -8
 1495              		.cfi_offset 14, -4
 1496              	.LBB42:
 1497              	.LBB40:
2256:Generated_Source\PSoC4/CyLFClk.c ****                                                  CY_SYS_TIMER_CNT_STTS_SHIFT)) & 0x01u);
 1498              		.loc 2 2256 0
 1499 0004 1168     		ldr	r1, [r2]
 1500              	.LVL84:
 1501              	.LBE40:
 1502              	.LBE42:
 1503              	.LBB43:
 1504              	.LBB44:
 1505 0006 1368     		ldr	r3, [r2]
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccw66xHk.s 			page 85


 1506              	.LVL85:
 1507              	.LBE44:
 1508              	.LBE43:
 1509              	.LBB46:
 1510              	.LBB47:
 1511 0008 1268     		ldr	r2, [r2]
 1512              	.LVL86:
 1513              	.LBE47:
 1514              	.LBE46:
 1515              	.LBB49:
 1516              	.LBB45:
 1517 000a 5C0A     		lsr	r4, r3, #9
 1518              	.LBE45:
 1519              	.LBE49:
 1520              	.LBB50:
 1521              	.LBB41:
 1522 000c 4B08     		lsr	r3, r1, #1
 1523              	.LVL87:
 1524              	.LBE41:
 1525              	.LBE50:
2514:Generated_Source\PSoC4/CyLFClk.c ****         uint32 configRegValue;
2515:Generated_Source\PSoC4/CyLFClk.c ****         uint32 countersEnableStatus;
2516:Generated_Source\PSoC4/CyLFClk.c **** 
2517:Generated_Source\PSoC4/CyLFClk.c ****         countersEnableStatus = CySysTimerGetEnabledStatus(CY_SYS_TIMER0) |
 1526              		.loc 2 2517 0
 1527 000e 2343     		orr	r3, r4
 1528              	.LBB51:
 1529              	.LBB48:
2256:Generated_Source\PSoC4/CyLFClk.c ****                                                  CY_SYS_TIMER_CNT_STTS_SHIFT)) & 0x01u);
 1530              		.loc 2 2256 0
 1531 0010 520C     		lsr	r2, r2, #17
 1532              	.LBE48:
 1533              	.LBE51:
 1534              		.loc 2 2517 0
 1535 0012 1343     		orr	r3, r2
2518:Generated_Source\PSoC4/CyLFClk.c ****                             CySysTimerGetEnabledStatus(CY_SYS_TIMER1) |
2519:Generated_Source\PSoC4/CyLFClk.c ****                             CySysTimerGetEnabledStatus(CY_SYS_TIMER2);
2520:Generated_Source\PSoC4/CyLFClk.c **** 
2521:Generated_Source\PSoC4/CyLFClk.c ****         if (0u == countersEnableStatus)
 1536              		.loc 2 2521 0
 1537 0014 DB07     		lsl	r3, r3, #31
 1538 0016 05D4     		bmi	.L167
2522:Generated_Source\PSoC4/CyLFClk.c ****         {
2523:Generated_Source\PSoC4/CyLFClk.c ****             configRegValue = CY_SYS_WCO_WDT_CONFIG_REG;
 1539              		.loc 2 2523 0
 1540 0018 044A     		ldr	r2, .L169+4
2524:Generated_Source\PSoC4/CyLFClk.c ****             configRegValue &= ((uint32)(~(CY_SYS_TIMER_CASCADE_01|CY_SYS_TIMER_CASCADE_12)));
 1541              		.loc 2 2524 0
 1542 001a 054B     		ldr	r3, .L169+8
2523:Generated_Source\PSoC4/CyLFClk.c ****             configRegValue &= ((uint32)(~(CY_SYS_TIMER_CASCADE_01|CY_SYS_TIMER_CASCADE_12)));
 1543              		.loc 2 2523 0
 1544 001c 1168     		ldr	r1, [r2]
 1545              	.LVL88:
 1546              		.loc 2 2524 0
 1547 001e 0B40     		and	r3, r1
 1548              	.LVL89:
2525:Generated_Source\PSoC4/CyLFClk.c ****             configRegValue |= cascadeMask;
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccw66xHk.s 			page 86


 1549              		.loc 2 2525 0
 1550 0020 1843     		orr	r0, r3
 1551              	.LVL90:
2526:Generated_Source\PSoC4/CyLFClk.c ****             CY_SYS_WCO_WDT_CONFIG_REG = configRegValue;
 1552              		.loc 2 2526 0
 1553 0022 1060     		str	r0, [r2]
 1554              	.LVL91:
 1555              	.L167:
2527:Generated_Source\PSoC4/CyLFClk.c ****         }
2528:Generated_Source\PSoC4/CyLFClk.c ****     }
 1556              		.loc 2 2528 0
 1557              		@ sp needed
 1558 0024 10BD     		pop	{r4, pc}
 1559              	.L170:
 1560 0026 C046     		.align	2
 1561              	.L169:
 1562 0028 10020640 		.word	1074135568
 1563 002c 0C020640 		.word	1074135564
 1564 0030 F7F7FFFF 		.word	-2057
 1565              		.cfi_endproc
 1566              	.LFE34:
 1567              		.size	CySysTimerSetCascade, .-CySysTimerSetCascade
 1568              		.section	.text.CySysTimerGetCascade,"ax",%progbits
 1569              		.align	1
 1570              		.global	CySysTimerGetCascade
 1571              		.code	16
 1572              		.thumb_func
 1573              		.type	CySysTimerGetCascade, %function
 1574              	CySysTimerGetCascade:
 1575              	.LFB35:
2529:Generated_Source\PSoC4/CyLFClk.c **** 
2530:Generated_Source\PSoC4/CyLFClk.c **** 
2531:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2532:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysTimerGetCascade
2533:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2534:Generated_Source\PSoC4/CyLFClk.c ****     *
2535:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Reads the two DeepSleep Timer cascade values returning a mask of the 
2536:Generated_Source\PSoC4/CyLFClk.c ****     * bits set.
2537:Generated_Source\PSoC4/CyLFClk.c ****     *
2538:Generated_Source\PSoC4/CyLFClk.c ****     * \return The mask of the cascade values set.
2539:Generated_Source\PSoC4/CyLFClk.c ****     * \return CY_SYS_TIMER_CASCADE_NONE - Neither
2540:Generated_Source\PSoC4/CyLFClk.c ****     * \return CY_SYS_TIMER_CASCADE_01 - Cascade 01
2541:Generated_Source\PSoC4/CyLFClk.c ****     * \return CY_SYS_TIMER_CASCADE_12 - Cascade 12
2542:Generated_Source\PSoC4/CyLFClk.c ****     *
2543:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2544:Generated_Source\PSoC4/CyLFClk.c ****     uint32 CySysTimerGetCascade(void)
2545:Generated_Source\PSoC4/CyLFClk.c ****     {
 1576              		.loc 2 2545 0
 1577              		.cfi_startproc
2546:Generated_Source\PSoC4/CyLFClk.c ****         return (CY_SYS_WCO_WDT_CONFIG_REG & (CY_SYS_TIMER_CASCADE_01 | CY_SYS_TIMER_CASCADE_12));
 1578              		.loc 2 2546 0
 1579 0000 024B     		ldr	r3, .L172
2547:Generated_Source\PSoC4/CyLFClk.c ****     }
 1580              		.loc 2 2547 0
 1581              		@ sp needed
2546:Generated_Source\PSoC4/CyLFClk.c ****         return (CY_SYS_WCO_WDT_CONFIG_REG & (CY_SYS_TIMER_CASCADE_01 | CY_SYS_TIMER_CASCADE_12));
 1582              		.loc 2 2546 0
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccw66xHk.s 			page 87


 1583 0002 1868     		ldr	r0, [r3]
 1584 0004 024B     		ldr	r3, .L172+4
 1585 0006 1840     		and	r0, r3
 1586              		.loc 2 2547 0
 1587 0008 7047     		bx	lr
 1588              	.L173:
 1589 000a C046     		.align	2
 1590              	.L172:
 1591 000c 0C020640 		.word	1074135564
 1592 0010 08080000 		.word	2056
 1593              		.cfi_endproc
 1594              	.LFE35:
 1595              		.size	CySysTimerGetCascade, .-CySysTimerGetCascade
 1596              		.section	.text.CySysTimerSetMatch,"ax",%progbits
 1597              		.align	1
 1598              		.global	CySysTimerSetMatch
 1599              		.code	16
 1600              		.thumb_func
 1601              		.type	CySysTimerSetMatch, %function
 1602              	CySysTimerSetMatch:
 1603              	.LFB36:
2548:Generated_Source\PSoC4/CyLFClk.c **** 
2549:Generated_Source\PSoC4/CyLFClk.c **** 
2550:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2551:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysTimerSetMatch
2552:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2553:Generated_Source\PSoC4/CyLFClk.c ****     *
2554:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Configures the Timer counter match comparison value.
2555:Generated_Source\PSoC4/CyLFClk.c ****     *
2556:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum Valid range [0-1]. The number of the Timer counter. The 
2557:Generated_Source\PSoC4/CyLFClk.c ****     * match values are not supported by counter 2.
2558:Generated_Source\PSoC4/CyLFClk.c ****     *
2559:Generated_Source\PSoC4/CyLFClk.c ****     * \param match Valid range [0-65535]. The value to be used to match against 
2560:Generated_Source\PSoC4/CyLFClk.c ****     * the counter.
2561:Generated_Source\PSoC4/CyLFClk.c ****     *
2562:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2563:Generated_Source\PSoC4/CyLFClk.c ****     void CySysTimerSetMatch(uint32 counterNum, uint32 match)
2564:Generated_Source\PSoC4/CyLFClk.c ****     {
 1604              		.loc 2 2564 0
 1605              		.cfi_startproc
 1606              	.LVL92:
 1607 0000 70B5     		push	{r4, r5, r6, lr}
 1608              		.cfi_def_cfa_offset 16
 1609              		.cfi_offset 4, -16
 1610              		.cfi_offset 5, -12
 1611              		.cfi_offset 6, -8
 1612              		.cfi_offset 14, -4
2565:Generated_Source\PSoC4/CyLFClk.c ****         uint32 regValue;
2566:Generated_Source\PSoC4/CyLFClk.c **** 
2567:Generated_Source\PSoC4/CyLFClk.c ****         CYASSERT((counterNum == CY_SYS_TIMER0) ||
2568:Generated_Source\PSoC4/CyLFClk.c ****                  (counterNum == CY_SYS_TIMER1));
2569:Generated_Source\PSoC4/CyLFClk.c **** 
2570:Generated_Source\PSoC4/CyLFClk.c ****         /* Wait for previous changes to come into effect */
2571:Generated_Source\PSoC4/CyLFClk.c ****         CyDelayUs(CY_SYS_3TIMER_DELAY_US);
 1613              		.loc 2 2571 0
 1614 0002 0E4D     		ldr	r5, .L181
2564:Generated_Source\PSoC4/CyLFClk.c ****         uint32 regValue;
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccw66xHk.s 			page 88


 1615              		.loc 2 2564 0
 1616 0004 061C     		mov	r6, r0
 1617              		.loc 2 2571 0
 1618 0006 2B68     		ldr	r3, [r5]
2564:Generated_Source\PSoC4/CyLFClk.c ****         uint32 regValue;
 1619              		.loc 2 2564 0
 1620 0008 0C1C     		mov	r4, r1
 1621              		.loc 2 2571 0
 1622 000a 9B0F     		lsr	r3, r3, #30
 1623 000c C920     		mov	r0, #201
 1624              	.LVL93:
 1625 000e 002B     		cmp	r3, #0
 1626 0010 00D0     		beq	.L175
 1627 0012 6C38     		sub	r0, r0, #108
 1628              	.L175:
 1629              		.loc 2 2571 0 is_stmt 0 discriminator 4
 1630 0014 FFF7FEFF 		bl	CyDelayUs
 1631              	.LVL94:
2572:Generated_Source\PSoC4/CyLFClk.c **** 
2573:Generated_Source\PSoC4/CyLFClk.c ****         regValue = CY_SYS_WCO_WDT_MATCH_REG;
2574:Generated_Source\PSoC4/CyLFClk.c ****         regValue &= (uint32)~((uint32)(CY_SYS_TIMER_LOWER_16BITS_MASK << (counterNum * CY_SYS_TIMER
 1632              		.loc 2 2574 0 is_stmt 1 discriminator 4
 1633 0018 0949     		ldr	r1, .L181+4
 1634 001a 3001     		lsl	r0, r6, #4
 1635 001c 8140     		lsl	r1, r1, r0
2575:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_WCO_WDT_MATCH_REG = (regValue | (match << (counterNum * CY_SYS_TIMER_CNT_MATCH_SHIFT
 1636              		.loc 2 2575 0 discriminator 4
 1637 001e 8440     		lsl	r4, r4, r0
 1638              	.LVL95:
2573:Generated_Source\PSoC4/CyLFClk.c ****         regValue &= (uint32)~((uint32)(CY_SYS_TIMER_LOWER_16BITS_MASK << (counterNum * CY_SYS_TIMER
 1639              		.loc 2 2573 0 discriminator 4
 1640 0020 084A     		ldr	r2, .L181+8
2576:Generated_Source\PSoC4/CyLFClk.c **** 
2577:Generated_Source\PSoC4/CyLFClk.c ****         /* Make sure match synchronization has started */
2578:Generated_Source\PSoC4/CyLFClk.c ****         CyDelayUs(CY_SYS_1TIMER_DELAY_US);
 1641              		.loc 2 2578 0 discriminator 4
 1642 0022 4320     		mov	r0, #67
2573:Generated_Source\PSoC4/CyLFClk.c ****         regValue &= (uint32)~((uint32)(CY_SYS_TIMER_LOWER_16BITS_MASK << (counterNum * CY_SYS_TIMER
 1643              		.loc 2 2573 0 discriminator 4
 1644 0024 1368     		ldr	r3, [r2]
 1645              	.LVL96:
2574:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_WCO_WDT_MATCH_REG = (regValue | (match << (counterNum * CY_SYS_TIMER_CNT_MATCH_SHIFT
 1646              		.loc 2 2574 0 discriminator 4
 1647 0026 8B43     		bic	r3, r1
2575:Generated_Source\PSoC4/CyLFClk.c **** 
 1648              		.loc 2 2575 0 discriminator 4
 1649 0028 2343     		orr	r3, r4
 1650 002a 1360     		str	r3, [r2]
 1651              		.loc 2 2578 0 discriminator 4
 1652 002c 2B68     		ldr	r3, [r5]
 1653 002e 9B0F     		lsr	r3, r3, #30
 1654 0030 00D0     		beq	.L176
 1655              		.loc 2 2578 0 is_stmt 0
 1656 0032 2438     		sub	r0, r0, #36
 1657              	.L176:
 1658              		.loc 2 2578 0 discriminator 4
 1659 0034 FFF7FEFF 		bl	CyDelayUs
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccw66xHk.s 			page 89


 1660              	.LVL97:
2579:Generated_Source\PSoC4/CyLFClk.c ****     }
 1661              		.loc 2 2579 0 is_stmt 1 discriminator 4
 1662              		@ sp needed
 1663              	.LVL98:
 1664 0038 70BD     		pop	{r4, r5, r6, pc}
 1665              	.L182:
 1666 003a C046     		.align	2
 1667              	.L181:
 1668 003c 0C020640 		.word	1074135564
 1669 0040 FFFF0000 		.word	65535
 1670 0044 08020640 		.word	1074135560
 1671              		.cfi_endproc
 1672              	.LFE36:
 1673              		.size	CySysTimerSetMatch, .-CySysTimerSetMatch
 1674              		.section	.text.CySysTimerSetToggleBit,"ax",%progbits
 1675              		.align	1
 1676              		.global	CySysTimerSetToggleBit
 1677              		.code	16
 1678              		.thumb_func
 1679              		.type	CySysTimerSetToggleBit, %function
 1680              	CySysTimerSetToggleBit:
 1681              	.LFB37:
2580:Generated_Source\PSoC4/CyLFClk.c **** 
2581:Generated_Source\PSoC4/CyLFClk.c **** 
2582:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2583:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysTimerSetToggleBit
2584:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2585:Generated_Source\PSoC4/CyLFClk.c ****     *
2586:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Configures which bit in Timer counter 2 to monitor for a toggle.
2587:Generated_Source\PSoC4/CyLFClk.c ****     *
2588:Generated_Source\PSoC4/CyLFClk.c ****     * When that bit toggles, an interrupt is generated if mode for counter 2 has
2589:Generated_Source\PSoC4/CyLFClk.c ****     * enabled interrupts.
2590:Generated_Source\PSoC4/CyLFClk.c ****     *
2591:Generated_Source\PSoC4/CyLFClk.c ****     * \param bits Valid range [0-31]. Counter 2 bit to monitor for a toggle.
2592:Generated_Source\PSoC4/CyLFClk.c ****     *
2593:Generated_Source\PSoC4/CyLFClk.c ****     * \details Timer counter 2 should be disabled. Otherwise this function call has
2594:Generated_Source\PSoC4/CyLFClk.c ****     * no effect.
2595:Generated_Source\PSoC4/CyLFClk.c ****     *
2596:Generated_Source\PSoC4/CyLFClk.c ****     * If the specified counter is enabled, call the CySysTimerDisable() function with
2597:Generated_Source\PSoC4/CyLFClk.c ****     * the corresponding parameter to disable the specified counter and wait for it to
2598:Generated_Source\PSoC4/CyLFClk.c ****     * stop. This may take up to three Timer source-cycles.
2599:Generated_Source\PSoC4/CyLFClk.c ****     *
2600:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2601:Generated_Source\PSoC4/CyLFClk.c ****     void CySysTimerSetToggleBit(uint32 bits)
2602:Generated_Source\PSoC4/CyLFClk.c ****     {
 1682              		.loc 2 2602 0
 1683              		.cfi_startproc
 1684              	.LVL99:
 1685              	.LBB54:
 1686              	.LBB55:
2256:Generated_Source\PSoC4/CyLFClk.c ****                                                  CY_SYS_TIMER_CNT_STTS_SHIFT)) & 0x01u);
 1687              		.loc 2 2256 0
 1688 0000 064B     		ldr	r3, .L185
 1689 0002 1B68     		ldr	r3, [r3]
 1690              	.LBE55:
 1691              	.LBE54:
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccw66xHk.s 			page 90


2603:Generated_Source\PSoC4/CyLFClk.c ****         uint32 configRegValue;
2604:Generated_Source\PSoC4/CyLFClk.c **** 
2605:Generated_Source\PSoC4/CyLFClk.c ****         if (0u == CySysTimerGetEnabledStatus(CY_SYS_TIMER2))
 1692              		.loc 2 2605 0
 1693 0004 9B03     		lsl	r3, r3, #14
 1694 0006 08D4     		bmi	.L183
2606:Generated_Source\PSoC4/CyLFClk.c ****         {
2607:Generated_Source\PSoC4/CyLFClk.c ****             configRegValue = CY_SYS_WCO_WDT_CONFIG_REG;
 1695              		.loc 2 2607 0
 1696 0008 0549     		ldr	r1, .L185+4
2608:Generated_Source\PSoC4/CyLFClk.c ****             configRegValue &= (uint32)(~((uint32)(CY_SYS_TIMER_CONFIG_BITS2_MASK << CY_SYS_TIMER_CO
 1697              		.loc 2 2608 0
 1698 000a 064B     		ldr	r3, .L185+8
2607:Generated_Source\PSoC4/CyLFClk.c ****             configRegValue &= (uint32)(~((uint32)(CY_SYS_TIMER_CONFIG_BITS2_MASK << CY_SYS_TIMER_CO
 1699              		.loc 2 2607 0
 1700 000c 0A68     		ldr	r2, [r1]
 1701              	.LVL100:
 1702              		.loc 2 2608 0
 1703 000e 1340     		and	r3, r2
 1704              	.LVL101:
2609:Generated_Source\PSoC4/CyLFClk.c ****             configRegValue |= ((bits & CY_SYS_TIMER_CONFIG_BITS2_MASK) << CY_SYS_TIMER_CONFIG_BITS2
 1705              		.loc 2 2609 0
 1706 0010 1F22     		mov	r2, #31
 1707 0012 1040     		and	r0, r2
 1708              	.LVL102:
 1709 0014 0006     		lsl	r0, r0, #24
 1710 0016 1843     		orr	r0, r3
 1711              	.LVL103:
2610:Generated_Source\PSoC4/CyLFClk.c ****             CY_SYS_WCO_WDT_CONFIG_REG = configRegValue;
 1712              		.loc 2 2610 0
 1713 0018 0860     		str	r0, [r1]
 1714              	.LVL104:
 1715              	.L183:
2611:Generated_Source\PSoC4/CyLFClk.c ****         }
2612:Generated_Source\PSoC4/CyLFClk.c ****     }
 1716              		.loc 2 2612 0
 1717              		@ sp needed
 1718 001a 7047     		bx	lr
 1719              	.L186:
 1720              		.align	2
 1721              	.L185:
 1722 001c 10020640 		.word	1074135568
 1723 0020 0C020640 		.word	1074135564
 1724 0024 FFFFFFE0 		.word	-520093697
 1725              		.cfi_endproc
 1726              	.LFE37:
 1727              		.size	CySysTimerSetToggleBit, .-CySysTimerSetToggleBit
 1728              		.section	.text.CySysTimerGetToggleBit,"ax",%progbits
 1729              		.align	1
 1730              		.global	CySysTimerGetToggleBit
 1731              		.code	16
 1732              		.thumb_func
 1733              		.type	CySysTimerGetToggleBit, %function
 1734              	CySysTimerGetToggleBit:
 1735              	.LFB38:
2613:Generated_Source\PSoC4/CyLFClk.c **** 
2614:Generated_Source\PSoC4/CyLFClk.c **** 
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccw66xHk.s 			page 91


2615:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2616:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysTimerGetToggleBit
2617:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2618:Generated_Source\PSoC4/CyLFClk.c ****     *
2619:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Reads which bit in Timer counter 2 is monitored for a toggle.
2620:Generated_Source\PSoC4/CyLFClk.c ****     *
2621:Generated_Source\PSoC4/CyLFClk.c ****     * \return The bit that is monitored (range of 0 to 31)
2622:Generated_Source\PSoC4/CyLFClk.c ****     *
2623:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2624:Generated_Source\PSoC4/CyLFClk.c ****     uint32 CySysTimerGetToggleBit(void)
2625:Generated_Source\PSoC4/CyLFClk.c ****     {
 1736              		.loc 2 2625 0
 1737              		.cfi_startproc
2626:Generated_Source\PSoC4/CyLFClk.c ****         return ((CY_SYS_WCO_WDT_CONFIG_REG >> CY_SYS_TIMER_CONFIG_BITS2_POS) & CY_SYS_TIMER_CONFIG_
 1738              		.loc 2 2626 0
 1739 0000 024B     		ldr	r3, .L188
2627:Generated_Source\PSoC4/CyLFClk.c ****     }
 1740              		.loc 2 2627 0
 1741              		@ sp needed
2626:Generated_Source\PSoC4/CyLFClk.c ****         return ((CY_SYS_WCO_WDT_CONFIG_REG >> CY_SYS_TIMER_CONFIG_BITS2_POS) & CY_SYS_TIMER_CONFIG_
 1742              		.loc 2 2626 0
 1743 0002 1868     		ldr	r0, [r3]
 1744 0004 C000     		lsl	r0, r0, #3
 1745 0006 C00E     		lsr	r0, r0, #27
 1746              		.loc 2 2627 0
 1747 0008 7047     		bx	lr
 1748              	.L189:
 1749 000a C046     		.align	2
 1750              	.L188:
 1751 000c 0C020640 		.word	1074135564
 1752              		.cfi_endproc
 1753              	.LFE38:
 1754              		.size	CySysTimerGetToggleBit, .-CySysTimerGetToggleBit
 1755              		.section	.text.CySysTimerGetMatch,"ax",%progbits
 1756              		.align	1
 1757              		.global	CySysTimerGetMatch
 1758              		.code	16
 1759              		.thumb_func
 1760              		.type	CySysTimerGetMatch, %function
 1761              	CySysTimerGetMatch:
 1762              	.LFB39:
2628:Generated_Source\PSoC4/CyLFClk.c **** 
2629:Generated_Source\PSoC4/CyLFClk.c **** 
2630:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2631:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysTimerGetMatch
2632:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2633:Generated_Source\PSoC4/CyLFClk.c ****     *
2634:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Reads the Timer counter match comparison value.
2635:Generated_Source\PSoC4/CyLFClk.c ****     *
2636:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum Valid range [0-1]. The number of the DeepSleep Timer 
2637:Generated_Source\PSoC4/CyLFClk.c ****     * counter. The match values are not supported by counter 2.
2638:Generated_Source\PSoC4/CyLFClk.c ****     *
2639:Generated_Source\PSoC4/CyLFClk.c ****     * \return A 16-bit match value.
2640:Generated_Source\PSoC4/CyLFClk.c ****     *
2641:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2642:Generated_Source\PSoC4/CyLFClk.c ****     uint32 CySysTimerGetMatch(uint32 counterNum)
2643:Generated_Source\PSoC4/CyLFClk.c ****     {
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccw66xHk.s 			page 92


 1763              		.loc 2 2643 0
 1764              		.cfi_startproc
 1765              	.LVL105:
2644:Generated_Source\PSoC4/CyLFClk.c ****         CYASSERT((counterNum == CY_SYS_TIMER0) ||
2645:Generated_Source\PSoC4/CyLFClk.c ****                  (counterNum == CY_SYS_TIMER1));
2646:Generated_Source\PSoC4/CyLFClk.c **** 
2647:Generated_Source\PSoC4/CyLFClk.c ****         return ((uint32)(CY_SYS_WCO_WDT_MATCH_REG >> (counterNum * CY_SYS_TIMER_CNT_MATCH_SHIFT)) &
 1766              		.loc 2 2647 0
 1767 0000 024B     		ldr	r3, .L191
 1768 0002 0001     		lsl	r0, r0, #4
 1769              	.LVL106:
 1770 0004 1B68     		ldr	r3, [r3]
2648:Generated_Source\PSoC4/CyLFClk.c ****                                                                   CY_SYS_TIMER_LOWER_16BITS_MASK);
2649:Generated_Source\PSoC4/CyLFClk.c ****     }
 1771              		.loc 2 2649 0
 1772              		@ sp needed
2647:Generated_Source\PSoC4/CyLFClk.c ****                                                                   CY_SYS_TIMER_LOWER_16BITS_MASK);
 1773              		.loc 2 2647 0
 1774 0006 C340     		lsr	r3, r3, r0
 1775 0008 98B2     		uxth	r0, r3
 1776              		.loc 2 2649 0
 1777 000a 7047     		bx	lr
 1778              	.L192:
 1779              		.align	2
 1780              	.L191:
 1781 000c 08020640 		.word	1074135560
 1782              		.cfi_endproc
 1783              	.LFE39:
 1784              		.size	CySysTimerGetMatch, .-CySysTimerGetMatch
 1785              		.section	.text.CySysTimerGetCount,"ax",%progbits
 1786              		.align	1
 1787              		.global	CySysTimerGetCount
 1788              		.code	16
 1789              		.thumb_func
 1790              		.type	CySysTimerGetCount, %function
 1791              	CySysTimerGetCount:
 1792              	.LFB40:
2650:Generated_Source\PSoC4/CyLFClk.c **** 
2651:Generated_Source\PSoC4/CyLFClk.c **** 
2652:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2653:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysTimerGetCount
2654:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2655:Generated_Source\PSoC4/CyLFClk.c ****     *
2656:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Reads the current DeepSleep Timer counter value.
2657:Generated_Source\PSoC4/CyLFClk.c ****     *
2658:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum Valid range [0-2]. The number of the Timer counter.
2659:Generated_Source\PSoC4/CyLFClk.c ****     *
2660:Generated_Source\PSoC4/CyLFClk.c ****     * \return A live counter value. Counter 0 and Counter 1 are 16 bit counters 
2661:Generated_Source\PSoC4/CyLFClk.c ****     * and counter 2 is a 32 bit counter.
2662:Generated_Source\PSoC4/CyLFClk.c ****     *
2663:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2664:Generated_Source\PSoC4/CyLFClk.c ****     uint32 CySysTimerGetCount(uint32 counterNum)
2665:Generated_Source\PSoC4/CyLFClk.c ****     {
 1793              		.loc 2 2665 0
 1794              		.cfi_startproc
 1795              	.LVL107:
2666:Generated_Source\PSoC4/CyLFClk.c ****         uint32 regValue = 0u;
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccw66xHk.s 			page 93


2667:Generated_Source\PSoC4/CyLFClk.c **** 
2668:Generated_Source\PSoC4/CyLFClk.c ****         switch(counterNum)
 1796              		.loc 2 2668 0
 1797 0000 0128     		cmp	r0, #1
 1798 0002 0AD0     		beq	.L195
 1799 0004 0028     		cmp	r0, #0
 1800 0006 04D0     		beq	.L196
 1801 0008 0228     		cmp	r0, #2
 1802 000a 0AD1     		bne	.L200
2669:Generated_Source\PSoC4/CyLFClk.c ****         {
2670:Generated_Source\PSoC4/CyLFClk.c ****             /* Timer Counter 0 */
2671:Generated_Source\PSoC4/CyLFClk.c ****             case 0u:
2672:Generated_Source\PSoC4/CyLFClk.c ****                 regValue = CY_SYS_WCO_WDT_CTRLOW_REG & CY_SYS_TIMER_LOWER_16BITS_MASK;
2673:Generated_Source\PSoC4/CyLFClk.c ****             break;
2674:Generated_Source\PSoC4/CyLFClk.c **** 
2675:Generated_Source\PSoC4/CyLFClk.c ****             /* Timer Counter 1 */
2676:Generated_Source\PSoC4/CyLFClk.c ****             case 1u:
2677:Generated_Source\PSoC4/CyLFClk.c ****                 regValue = (CY_SYS_WCO_WDT_CTRLOW_REG >> CY_SYS_TIMER_CNT_MATCH_SHIFT) & CY_SYS_TIM
2678:Generated_Source\PSoC4/CyLFClk.c ****             break;
2679:Generated_Source\PSoC4/CyLFClk.c **** 
2680:Generated_Source\PSoC4/CyLFClk.c ****             /* Timer Counter 2 */
2681:Generated_Source\PSoC4/CyLFClk.c ****             case 2u:
2682:Generated_Source\PSoC4/CyLFClk.c ****                 regValue = CY_SYS_WCO_WDT_CTRHIGH_REG;
 1803              		.loc 2 2682 0
 1804 000c 064B     		ldr	r3, .L201
 1805 000e 1868     		ldr	r0, [r3]
 1806              	.LVL108:
2683:Generated_Source\PSoC4/CyLFClk.c ****             break;
 1807              		.loc 2 2683 0
 1808 0010 08E0     		b	.L194
 1809              	.LVL109:
 1810              	.L196:
2672:Generated_Source\PSoC4/CyLFClk.c ****             break;
 1811              		.loc 2 2672 0
 1812 0012 064B     		ldr	r3, .L201+4
 1813 0014 1868     		ldr	r0, [r3]
 1814              	.LVL110:
 1815 0016 80B2     		uxth	r0, r0
 1816              	.LVL111:
2673:Generated_Source\PSoC4/CyLFClk.c **** 
 1817              		.loc 2 2673 0
 1818 0018 04E0     		b	.L194
 1819              	.LVL112:
 1820              	.L195:
2677:Generated_Source\PSoC4/CyLFClk.c ****             break;
 1821              		.loc 2 2677 0
 1822 001a 044B     		ldr	r3, .L201+4
 1823 001c 1868     		ldr	r0, [r3]
 1824              	.LVL113:
 1825 001e 000C     		lsr	r0, r0, #16
 1826              	.LVL114:
2678:Generated_Source\PSoC4/CyLFClk.c **** 
 1827              		.loc 2 2678 0
 1828 0020 00E0     		b	.L194
 1829              	.LVL115:
 1830              	.L200:
2666:Generated_Source\PSoC4/CyLFClk.c **** 
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccw66xHk.s 			page 94


 1831              		.loc 2 2666 0
 1832 0022 0020     		mov	r0, #0
 1833              	.LVL116:
 1834              	.L194:
2684:Generated_Source\PSoC4/CyLFClk.c **** 
2685:Generated_Source\PSoC4/CyLFClk.c ****             default:
2686:Generated_Source\PSoC4/CyLFClk.c ****                 CYASSERT(0u != 0u);
2687:Generated_Source\PSoC4/CyLFClk.c ****             break;
2688:Generated_Source\PSoC4/CyLFClk.c ****         }
2689:Generated_Source\PSoC4/CyLFClk.c **** 
2690:Generated_Source\PSoC4/CyLFClk.c ****         return (regValue);
2691:Generated_Source\PSoC4/CyLFClk.c ****     }
 1835              		.loc 2 2691 0
 1836              		@ sp needed
 1837 0024 7047     		bx	lr
 1838              	.L202:
 1839 0026 C046     		.align	2
 1840              	.L201:
 1841 0028 04020640 		.word	1074135556
 1842 002c 00020640 		.word	1074135552
 1843              		.cfi_endproc
 1844              	.LFE40:
 1845              		.size	CySysTimerGetCount, .-CySysTimerGetCount
 1846              		.section	.text.CySysTimerGetInterruptSource,"ax",%progbits
 1847              		.align	1
 1848              		.global	CySysTimerGetInterruptSource
 1849              		.code	16
 1850              		.thumb_func
 1851              		.type	CySysTimerGetInterruptSource, %function
 1852              	CySysTimerGetInterruptSource:
 1853              	.LFB41:
2692:Generated_Source\PSoC4/CyLFClk.c **** 
2693:Generated_Source\PSoC4/CyLFClk.c **** 
2694:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2695:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysTimerGetInterruptSource
2696:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2697:Generated_Source\PSoC4/CyLFClk.c ****     *
2698:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
2699:Generated_Source\PSoC4/CyLFClk.c ****     * Reads a mask containing all the DeepSleep Timer counters interrupts that are 
2700:Generated_Source\PSoC4/CyLFClk.c ****     * currently set by the hardware, if a corresponding mode is selected.
2701:Generated_Source\PSoC4/CyLFClk.c ****     *
2702:Generated_Source\PSoC4/CyLFClk.c ****     * \return The mask of interrupts set
2703:Generated_Source\PSoC4/CyLFClk.c ****     * \return CY_SYS_TIMER0_INT - Set interrupt for Counter 0
2704:Generated_Source\PSoC4/CyLFClk.c ****     * \return CY_SYS_TIMER1_INT - Set interrupt for Counter 1
2705:Generated_Source\PSoC4/CyLFClk.c ****     * \return CY_SYS_TIMER2_INT - Set interrupt for Counter 2
2706:Generated_Source\PSoC4/CyLFClk.c ****     *
2707:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2708:Generated_Source\PSoC4/CyLFClk.c ****     uint32 CySysTimerGetInterruptSource(void)
2709:Generated_Source\PSoC4/CyLFClk.c ****     {
 1854              		.loc 2 2709 0
 1855              		.cfi_startproc
2710:Generated_Source\PSoC4/CyLFClk.c ****         return (CY_SYS_WCO_WDT_CONTROL_REG & (CY_SYS_TIMER0_INT | CY_SYS_TIMER1_INT | CY_SYS_TIMER2
 1856              		.loc 2 2710 0
 1857 0000 024B     		ldr	r3, .L204
2711:Generated_Source\PSoC4/CyLFClk.c ****     }
 1858              		.loc 2 2711 0
 1859              		@ sp needed
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccw66xHk.s 			page 95


2710:Generated_Source\PSoC4/CyLFClk.c ****         return (CY_SYS_WCO_WDT_CONTROL_REG & (CY_SYS_TIMER0_INT | CY_SYS_TIMER1_INT | CY_SYS_TIMER2
 1860              		.loc 2 2710 0
 1861 0002 1868     		ldr	r0, [r3]
 1862 0004 024B     		ldr	r3, .L204+4
 1863 0006 1840     		and	r0, r3
 1864              		.loc 2 2711 0
 1865 0008 7047     		bx	lr
 1866              	.L205:
 1867 000a C046     		.align	2
 1868              	.L204:
 1869 000c 10020640 		.word	1074135568
 1870 0010 04040400 		.word	263172
 1871              		.cfi_endproc
 1872              	.LFE41:
 1873              		.size	CySysTimerGetInterruptSource, .-CySysTimerGetInterruptSource
 1874              		.section	.text.CySysTimerClearInterrupt,"ax",%progbits
 1875              		.align	1
 1876              		.global	CySysTimerClearInterrupt
 1877              		.code	16
 1878              		.thumb_func
 1879              		.type	CySysTimerClearInterrupt, %function
 1880              	CySysTimerClearInterrupt:
 1881              	.LFB42:
2712:Generated_Source\PSoC4/CyLFClk.c **** 
2713:Generated_Source\PSoC4/CyLFClk.c **** 
2714:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2715:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysTimerClearInterrupt
2716:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2717:Generated_Source\PSoC4/CyLFClk.c ****     *
2718:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Clears all the DeepSleep Timer counter interrupts set in the mask.
2719:Generated_Source\PSoC4/CyLFClk.c ****     *
2720:Generated_Source\PSoC4/CyLFClk.c ****     * All the Timer interrupts are to be cleared by the firmware, otherwise
2721:Generated_Source\PSoC4/CyLFClk.c ****     * interrupts are generated continuously.
2722:Generated_Source\PSoC4/CyLFClk.c ****     *
2723:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterMask
2724:Generated_Source\PSoC4/CyLFClk.c ****     *  CY_SYS_TIMER0_INT - Clear counter 0<br>
2725:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_TIMER1_INT - Clear counter 1<br>
2726:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_TIMER2_INT - Clear counter 2
2727:Generated_Source\PSoC4/CyLFClk.c ****     *
2728:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2729:Generated_Source\PSoC4/CyLFClk.c ****     void CySysTimerClearInterrupt(uint32 counterMask)
2730:Generated_Source\PSoC4/CyLFClk.c ****     {
 1882              		.loc 2 2730 0
 1883              		.cfi_startproc
 1884              	.LVL117:
 1885 0000 10B5     		push	{r4, lr}
 1886              		.cfi_def_cfa_offset 8
 1887              		.cfi_offset 4, -8
 1888              		.cfi_offset 14, -4
 1889              		.loc 2 2730 0
 1890 0002 041C     		mov	r4, r0
2731:Generated_Source\PSoC4/CyLFClk.c ****         uint8 interruptState;
2732:Generated_Source\PSoC4/CyLFClk.c ****         interruptState = CyEnterCriticalSection();
 1891              		.loc 2 2732 0
 1892 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 1893              	.LVL118:
2733:Generated_Source\PSoC4/CyLFClk.c **** 
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccw66xHk.s 			page 96


2734:Generated_Source\PSoC4/CyLFClk.c ****         /* Set new WCO_TIMER control register value */
2735:Generated_Source\PSoC4/CyLFClk.c ****         counterMask &= (CY_SYS_TIMER0_INT |
2736:Generated_Source\PSoC4/CyLFClk.c ****                         CY_SYS_TIMER1_INT |
2737:Generated_Source\PSoC4/CyLFClk.c ****                         CY_SYS_TIMER2_INT);
2738:Generated_Source\PSoC4/CyLFClk.c **** 
2739:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_WCO_WDT_CONTROL_REG = counterMask | (CY_SYS_WCO_WDT_CONTROL_REG & ~(CY_SYS_TIMER0_IN
 1894              		.loc 2 2739 0
 1895 0008 0549     		ldr	r1, .L207
2735:Generated_Source\PSoC4/CyLFClk.c ****                         CY_SYS_TIMER1_INT |
 1896              		.loc 2 2735 0
 1897 000a 064A     		ldr	r2, .L207+4
 1898              		.loc 2 2739 0
 1899 000c 0B68     		ldr	r3, [r1]
2735:Generated_Source\PSoC4/CyLFClk.c ****                         CY_SYS_TIMER1_INT |
 1900              		.loc 2 2735 0
 1901 000e 1440     		and	r4, r2
 1902              	.LVL119:
 1903              		.loc 2 2739 0
 1904 0010 054A     		ldr	r2, .L207+8
2740:Generated_Source\PSoC4/CyLFClk.c ****                                                                            CY_SYS_TIMER1_INT |
2741:Generated_Source\PSoC4/CyLFClk.c ****                                                                            CY_SYS_TIMER2_INT));
2742:Generated_Source\PSoC4/CyLFClk.c **** 
2743:Generated_Source\PSoC4/CyLFClk.c ****         /* Read the CY_SYS_WDT_CONTROL_REG to clear the interrupt request.
2744:Generated_Source\PSoC4/CyLFClk.c ****          * Cypress ID #207093, #206231
2745:Generated_Source\PSoC4/CyLFClk.c ****         */
2746:Generated_Source\PSoC4/CyLFClk.c ****         (void)CY_SYS_WCO_WDT_CONTROL_REG;
2747:Generated_Source\PSoC4/CyLFClk.c **** 
2748:Generated_Source\PSoC4/CyLFClk.c ****         CyExitCriticalSection(interruptState);
2749:Generated_Source\PSoC4/CyLFClk.c ****     }
 1905              		.loc 2 2749 0
 1906              		@ sp needed
2739:Generated_Source\PSoC4/CyLFClk.c ****                                                                            CY_SYS_TIMER1_INT |
 1907              		.loc 2 2739 0
 1908 0012 1340     		and	r3, r2
 1909 0014 2343     		orr	r3, r4
 1910 0016 0B60     		str	r3, [r1]
2746:Generated_Source\PSoC4/CyLFClk.c **** 
 1911              		.loc 2 2746 0
 1912 0018 0B68     		ldr	r3, [r1]
2748:Generated_Source\PSoC4/CyLFClk.c ****     }
 1913              		.loc 2 2748 0
 1914 001a FFF7FEFF 		bl	CyExitCriticalSection
 1915              	.LVL120:
 1916              	.LVL121:
 1917              		.loc 2 2749 0
 1918 001e 10BD     		pop	{r4, pc}
 1919              	.L208:
 1920              		.align	2
 1921              	.L207:
 1922 0020 10020640 		.word	1074135568
 1923 0024 04040400 		.word	263172
 1924 0028 FBFBFBFF 		.word	-263173
 1925              		.cfi_endproc
 1926              	.LFE42:
 1927              		.size	CySysTimerClearInterrupt, .-CySysTimerClearInterrupt
 1928              		.section	.text.CySysTimerSetInterruptCallback,"ax",%progbits
 1929              		.align	1
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccw66xHk.s 			page 97


 1930              		.global	CySysTimerSetInterruptCallback
 1931              		.code	16
 1932              		.thumb_func
 1933              		.type	CySysTimerSetInterruptCallback, %function
 1934              	CySysTimerSetInterruptCallback:
 1935              	.LFB43:
2750:Generated_Source\PSoC4/CyLFClk.c **** 
2751:Generated_Source\PSoC4/CyLFClk.c **** 
2752:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2753:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysTimerSetInterruptCallback
2754:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2755:Generated_Source\PSoC4/CyLFClk.c ****     *
2756:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
2757:Generated_Source\PSoC4/CyLFClk.c ****     * Sets the ISR callback function for the particular DeepSleep Timer counter.
2758:Generated_Source\PSoC4/CyLFClk.c ****     *
2759:Generated_Source\PSoC4/CyLFClk.c ****     * These functions are called on the Timer interrupt.
2760:Generated_Source\PSoC4/CyLFClk.c ****     *
2761:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum The number of the Timer counter.
2762:Generated_Source\PSoC4/CyLFClk.c ****     * \param function The pointer to the callback function.
2763:Generated_Source\PSoC4/CyLFClk.c ****     *
2764:Generated_Source\PSoC4/CyLFClk.c ****     * \return  The pointer to the previous callback function. 
2765:Generated_Source\PSoC4/CyLFClk.c ****     * \return NULL is returned if the specified address is not set.
2766:Generated_Source\PSoC4/CyLFClk.c ****     *
2767:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2768:Generated_Source\PSoC4/CyLFClk.c ****     cyTimerCallback CySysTimerSetInterruptCallback(uint32 counterNum, cyTimerCallback function)
2769:Generated_Source\PSoC4/CyLFClk.c ****     {
 1936              		.loc 2 2769 0
 1937              		.cfi_startproc
 1938              	.LVL122:
2770:Generated_Source\PSoC4/CyLFClk.c ****         cyTimerCallback prevCallback = (void *)0;
 1939              		.loc 2 2770 0
 1940 0000 0022     		mov	r2, #0
2771:Generated_Source\PSoC4/CyLFClk.c **** 
2772:Generated_Source\PSoC4/CyLFClk.c ****         if(counterNum < CY_SYS_NUM_OF_TIMERS)
 1941              		.loc 2 2772 0
 1942 0002 0228     		cmp	r0, #2
 1943 0004 04D8     		bhi	.L210
2773:Generated_Source\PSoC4/CyLFClk.c ****         {
2774:Generated_Source\PSoC4/CyLFClk.c ****             prevCallback = cySysTimerCallback[counterNum];
 1944              		.loc 2 2774 0
 1945 0006 034B     		ldr	r3, .L212
 1946 0008 8000     		lsl	r0, r0, #2
 1947              	.LVL123:
 1948 000a 1B18     		add	r3, r3, r0
 1949 000c 9A68     		ldr	r2, [r3, #8]
 1950              	.LVL124:
2775:Generated_Source\PSoC4/CyLFClk.c ****             cySysTimerCallback[counterNum] = function;
 1951              		.loc 2 2775 0
 1952 000e 9960     		str	r1, [r3, #8]
 1953              	.LVL125:
 1954              	.L210:
2776:Generated_Source\PSoC4/CyLFClk.c ****         }
2777:Generated_Source\PSoC4/CyLFClk.c ****         else
2778:Generated_Source\PSoC4/CyLFClk.c ****         {
2779:Generated_Source\PSoC4/CyLFClk.c ****             CYASSERT(0u != 0u);
2780:Generated_Source\PSoC4/CyLFClk.c ****         }
2781:Generated_Source\PSoC4/CyLFClk.c **** 
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccw66xHk.s 			page 98


2782:Generated_Source\PSoC4/CyLFClk.c ****         return((cyTimerCallback)prevCallback);
2783:Generated_Source\PSoC4/CyLFClk.c ****     }
 1955              		.loc 2 2783 0
 1956 0010 101C     		mov	r0, r2
 1957              		@ sp needed
 1958 0012 7047     		bx	lr
 1959              	.L213:
 1960              		.align	2
 1961              	.L212:
 1962 0014 00000000 		.word	.LANCHOR0
 1963              		.cfi_endproc
 1964              	.LFE43:
 1965              		.size	CySysTimerSetInterruptCallback, .-CySysTimerSetInterruptCallback
 1966              		.section	.text.CySysTimerGetInterruptCallback,"ax",%progbits
 1967              		.align	1
 1968              		.global	CySysTimerGetInterruptCallback
 1969              		.code	16
 1970              		.thumb_func
 1971              		.type	CySysTimerGetInterruptCallback, %function
 1972              	CySysTimerGetInterruptCallback:
 1973              	.LFB44:
2784:Generated_Source\PSoC4/CyLFClk.c **** 
2785:Generated_Source\PSoC4/CyLFClk.c **** 
2786:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2787:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysTimerGetInterruptCallback
2788:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2789:Generated_Source\PSoC4/CyLFClk.c ****     *
2790:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Gets the ISR callback function for the particular DeepSleep Timer 
2791:Generated_Source\PSoC4/CyLFClk.c ****     * counter.
2792:Generated_Source\PSoC4/CyLFClk.c ****     *
2793:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum The number of the Timer counter.
2794:Generated_Source\PSoC4/CyLFClk.c ****     *
2795:Generated_Source\PSoC4/CyLFClk.c ****     * \return
2796:Generated_Source\PSoC4/CyLFClk.c ****     * The pointer to the callback function registered for a particular Timer by
2797:Generated_Source\PSoC4/CyLFClk.c ****     * a particular address that are passed through arguments.
2798:Generated_Source\PSoC4/CyLFClk.c ****     *
2799:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2800:Generated_Source\PSoC4/CyLFClk.c ****     cyTimerCallback CySysTimerGetInterruptCallback(uint32 counterNum)
2801:Generated_Source\PSoC4/CyLFClk.c ****     {
 1974              		.loc 2 2801 0
 1975              		.cfi_startproc
 1976              	.LVL126:
2802:Generated_Source\PSoC4/CyLFClk.c ****         cyTimerCallback retCallback = (void *)0;
 1977              		.loc 2 2802 0
 1978 0000 0023     		mov	r3, #0
2803:Generated_Source\PSoC4/CyLFClk.c **** 
2804:Generated_Source\PSoC4/CyLFClk.c ****         if(counterNum < CY_SYS_NUM_OF_TIMERS)
 1979              		.loc 2 2804 0
 1980 0002 0228     		cmp	r0, #2
 1981 0004 03D8     		bhi	.L215
2805:Generated_Source\PSoC4/CyLFClk.c ****         {
2806:Generated_Source\PSoC4/CyLFClk.c ****             retCallback = (cyTimerCallback)cySysTimerCallback[counterNum];
 1982              		.loc 2 2806 0
 1983 0006 034B     		ldr	r3, .L217
 1984 0008 8000     		lsl	r0, r0, #2
 1985              	.LVL127:
 1986 000a 1818     		add	r0, r3, r0
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccw66xHk.s 			page 99


 1987 000c 8368     		ldr	r3, [r0, #8]
 1988              	.LVL128:
 1989              	.L215:
2807:Generated_Source\PSoC4/CyLFClk.c ****         }
2808:Generated_Source\PSoC4/CyLFClk.c ****         else
2809:Generated_Source\PSoC4/CyLFClk.c ****         {
2810:Generated_Source\PSoC4/CyLFClk.c ****             CYASSERT(0u != 0u);
2811:Generated_Source\PSoC4/CyLFClk.c ****         }
2812:Generated_Source\PSoC4/CyLFClk.c **** 
2813:Generated_Source\PSoC4/CyLFClk.c ****         return(retCallback);
2814:Generated_Source\PSoC4/CyLFClk.c ****     }
 1990              		.loc 2 2814 0
 1991 000e 181C     		mov	r0, r3
 1992              		@ sp needed
 1993 0010 7047     		bx	lr
 1994              	.L218:
 1995 0012 C046     		.align	2
 1996              	.L217:
 1997 0014 00000000 		.word	.LANCHOR0
 1998              		.cfi_endproc
 1999              	.LFE44:
 2000              		.size	CySysTimerGetInterruptCallback, .-CySysTimerGetInterruptCallback
 2001              		.section	.text.CySysTimerEnableIsr,"ax",%progbits
 2002              		.align	1
 2003              		.global	CySysTimerEnableIsr
 2004              		.code	16
 2005              		.thumb_func
 2006              		.type	CySysTimerEnableIsr, %function
 2007              	CySysTimerEnableIsr:
 2008              	.LFB45:
2815:Generated_Source\PSoC4/CyLFClk.c **** 
2816:Generated_Source\PSoC4/CyLFClk.c **** 
2817:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2818:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysTimerEnableIsr
2819:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2820:Generated_Source\PSoC4/CyLFClk.c ****     *
2821:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Enables the ISR callback servicing for the particular Timer counter
2822:Generated_Source\PSoC4/CyLFClk.c ****     *
2823:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum Valid range [0-2]. The number of the Timer counter.
2824:Generated_Source\PSoC4/CyLFClk.c ****     *
2825:Generated_Source\PSoC4/CyLFClk.c ****     * Value corresponds to appropriate Timer counter. For example value 1 
2826:Generated_Source\PSoC4/CyLFClk.c ****     * corresponds to second Timer counter.
2827:Generated_Source\PSoC4/CyLFClk.c ****     *
2828:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2829:Generated_Source\PSoC4/CyLFClk.c ****     void CySysTimerEnableIsr(uint32 counterNum)
2830:Generated_Source\PSoC4/CyLFClk.c ****     {
 2009              		.loc 2 2830 0
 2010              		.cfi_startproc
 2011              	.LVL129:
2831:Generated_Source\PSoC4/CyLFClk.c ****         if(counterNum <= CY_SYS_TIMER2)
 2012              		.loc 2 2831 0
 2013 0000 0228     		cmp	r0, #2
 2014 0002 0AD8     		bhi	.L219
2832:Generated_Source\PSoC4/CyLFClk.c ****         {
2833:Generated_Source\PSoC4/CyLFClk.c ****             disableTimerServicedIsr &= ~counterTimerIntMaskTbl[counterNum];
 2015              		.loc 2 2833 0
 2016 0004 054B     		ldr	r3, .L221
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccw66xHk.s 			page 100


 2017 0006 0649     		ldr	r1, .L221+4
 2018 0008 8000     		lsl	r0, r0, #2
 2019              	.LVL130:
 2020 000a 5A69     		ldr	r2, [r3, #20]
 2021 000c 4158     		ldr	r1, [r0, r1]
 2022 000e 8A43     		bic	r2, r1
 2023 0010 5A61     		str	r2, [r3, #20]
2834:Generated_Source\PSoC4/CyLFClk.c ****             timerIsrMask |= counterTimerIntMaskTbl[counterNum];
 2024              		.loc 2 2834 0
 2025 0012 044A     		ldr	r2, .L221+8
 2026 0014 1368     		ldr	r3, [r2]
 2027 0016 0B43     		orr	r3, r1
 2028 0018 1360     		str	r3, [r2]
 2029              	.L219:
2835:Generated_Source\PSoC4/CyLFClk.c ****         }
2836:Generated_Source\PSoC4/CyLFClk.c ****         else
2837:Generated_Source\PSoC4/CyLFClk.c ****         {
2838:Generated_Source\PSoC4/CyLFClk.c ****             CYASSERT(0u != 0u);
2839:Generated_Source\PSoC4/CyLFClk.c ****         }
2840:Generated_Source\PSoC4/CyLFClk.c ****     }
 2030              		.loc 2 2840 0
 2031              		@ sp needed
 2032 001a 7047     		bx	lr
 2033              	.L222:
 2034              		.align	2
 2035              	.L221:
 2036 001c 00000000 		.word	.LANCHOR0
 2037 0020 00000000 		.word	.LANCHOR1
 2038 0024 00000000 		.word	.LANCHOR2
 2039              		.cfi_endproc
 2040              	.LFE45:
 2041              		.size	CySysTimerEnableIsr, .-CySysTimerEnableIsr
 2042              		.section	.text.CySysTimerDisableIsr,"ax",%progbits
 2043              		.align	1
 2044              		.global	CySysTimerDisableIsr
 2045              		.code	16
 2046              		.thumb_func
 2047              		.type	CySysTimerDisableIsr, %function
 2048              	CySysTimerDisableIsr:
 2049              	.LFB46:
2841:Generated_Source\PSoC4/CyLFClk.c **** 
2842:Generated_Source\PSoC4/CyLFClk.c **** 
2843:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2844:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysTimerDisableIsr
2845:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2846:Generated_Source\PSoC4/CyLFClk.c ****     *
2847:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Disables the ISR callback servicing for the particular Timer counter
2848:Generated_Source\PSoC4/CyLFClk.c ****     *
2849:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum Valid range [0-2]. The number of the Timer counter.
2850:Generated_Source\PSoC4/CyLFClk.c ****     *
2851:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2852:Generated_Source\PSoC4/CyLFClk.c ****     void CySysTimerDisableIsr(uint32 counterNum)
2853:Generated_Source\PSoC4/CyLFClk.c ****     {
 2050              		.loc 2 2853 0
 2051              		.cfi_startproc
 2052              	.LVL131:
2854:Generated_Source\PSoC4/CyLFClk.c ****         if(counterNum <= CY_SYS_TIMER2)
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccw66xHk.s 			page 101


 2053              		.loc 2 2854 0
 2054 0000 0228     		cmp	r0, #2
 2055 0002 06D8     		bhi	.L223
2855:Generated_Source\PSoC4/CyLFClk.c ****         {
2856:Generated_Source\PSoC4/CyLFClk.c ****             timerIsrMask &= ~counterTimerIntMaskTbl[counterNum];
 2056              		.loc 2 2856 0
 2057 0004 034A     		ldr	r2, .L225
 2058 0006 0449     		ldr	r1, .L225+4
 2059 0008 8000     		lsl	r0, r0, #2
 2060              	.LVL132:
 2061 000a 1368     		ldr	r3, [r2]
 2062 000c 4158     		ldr	r1, [r0, r1]
 2063 000e 8B43     		bic	r3, r1
 2064 0010 1360     		str	r3, [r2]
 2065              	.L223:
2857:Generated_Source\PSoC4/CyLFClk.c ****         }
2858:Generated_Source\PSoC4/CyLFClk.c ****         else
2859:Generated_Source\PSoC4/CyLFClk.c ****         {
2860:Generated_Source\PSoC4/CyLFClk.c ****             CYASSERT(0u != 0u);
2861:Generated_Source\PSoC4/CyLFClk.c ****         }
2862:Generated_Source\PSoC4/CyLFClk.c ****     }
 2066              		.loc 2 2862 0
 2067              		@ sp needed
 2068 0012 7047     		bx	lr
 2069              	.L226:
 2070              		.align	2
 2071              	.L225:
 2072 0014 00000000 		.word	.LANCHOR2
 2073 0018 00000000 		.word	.LANCHOR1
 2074              		.cfi_endproc
 2075              	.LFE46:
 2076              		.size	CySysTimerDisableIsr, .-CySysTimerDisableIsr
 2077              		.section	.text.CySysTimerIsr,"ax",%progbits
 2078              		.align	1
 2079              		.global	CySysTimerIsr
 2080              		.code	16
 2081              		.thumb_func
 2082              		.type	CySysTimerIsr, %function
 2083              	CySysTimerIsr:
 2084              	.LFB47:
2863:Generated_Source\PSoC4/CyLFClk.c **** 
2864:Generated_Source\PSoC4/CyLFClk.c **** 
2865:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2866:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysTimerIsr
2867:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2868:Generated_Source\PSoC4/CyLFClk.c ****     *
2869:Generated_Source\PSoC4/CyLFClk.c ****     * \brief This is the handler of the DeepSleep Timer interrupt in CPU NVIC.
2870:Generated_Source\PSoC4/CyLFClk.c ****     *
2871:Generated_Source\PSoC4/CyLFClk.c ****     * The handler checks which Timer triggered in the interrupt and calls the 
2872:Generated_Source\PSoC4/CyLFClk.c ****     * respective callback functions configured by the user by using 
2873:Generated_Source\PSoC4/CyLFClk.c ****     * CySysTimerSetIsrCallback() API.
2874:Generated_Source\PSoC4/CyLFClk.c ****     *
2875:Generated_Source\PSoC4/CyLFClk.c ****     * The order of the callback execution is incremental. Callback-0 is
2876:Generated_Source\PSoC4/CyLFClk.c ****     * run as the first one and callback-2 is called as the last one.
2877:Generated_Source\PSoC4/CyLFClk.c ****     *
2878:Generated_Source\PSoC4/CyLFClk.c ****     * \details This function clears the DeepSleep Timer interrupt every time when 
2879:Generated_Source\PSoC4/CyLFClk.c ****     * it is called.
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccw66xHk.s 			page 102


2880:Generated_Source\PSoC4/CyLFClk.c ****     *
2881:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2882:Generated_Source\PSoC4/CyLFClk.c ****     void CySysTimerIsr(void)
2883:Generated_Source\PSoC4/CyLFClk.c ****     {
 2085              		.loc 2 2883 0
 2086              		.cfi_startproc
2884:Generated_Source\PSoC4/CyLFClk.c ****         if(0u != (CY_SYS_TIMER0_INT & CY_SYS_WCO_WDT_CONTROL_REG))
 2087              		.loc 2 2884 0
 2088 0000 0422     		mov	r2, #4
2883:Generated_Source\PSoC4/CyLFClk.c ****         if(0u != (CY_SYS_TIMER0_INT & CY_SYS_WCO_WDT_CONTROL_REG))
 2089              		.loc 2 2883 0
 2090 0002 38B5     		push	{r3, r4, r5, lr}
 2091              		.cfi_def_cfa_offset 16
 2092              		.cfi_offset 3, -16
 2093              		.cfi_offset 4, -12
 2094              		.cfi_offset 5, -8
 2095              		.cfi_offset 14, -4
 2096              		.loc 2 2884 0
 2097 0004 224C     		ldr	r4, .L259
 2098 0006 2368     		ldr	r3, [r4]
 2099 0008 1342     		tst	r3, r2
 2100 000a 13D0     		beq	.L228
2885:Generated_Source\PSoC4/CyLFClk.c ****         {
2886:Generated_Source\PSoC4/CyLFClk.c ****             if(0u != (CY_SYS_TIMER0_INT & timerIsrMask))
 2101              		.loc 2 2886 0
 2102 000c 2149     		ldr	r1, .L259+4
 2103 000e 0B68     		ldr	r3, [r1]
 2104 0010 1342     		tst	r3, r2
 2105 0012 0CD0     		beq	.L230
2887:Generated_Source\PSoC4/CyLFClk.c ****             {
2888:Generated_Source\PSoC4/CyLFClk.c ****                 timerIsrMask &= ~(disableTimerServicedIsr & CY_SYS_TIMER0_INT);
 2106              		.loc 2 2888 0
 2107 0014 204B     		ldr	r3, .L259+8
 2108 0016 5D69     		ldr	r5, [r3, #20]
 2109 0018 0868     		ldr	r0, [r1]
 2110 001a 1540     		and	r5, r2
 2111 001c A843     		bic	r0, r5
 2112 001e 0860     		str	r0, [r1]
2889:Generated_Source\PSoC4/CyLFClk.c ****                 disableTimerServicedIsr  &= ~CY_SYS_TIMER0_INT;
 2113              		.loc 2 2889 0
 2114 0020 5969     		ldr	r1, [r3, #20]
 2115 0022 9143     		bic	r1, r2
 2116 0024 5961     		str	r1, [r3, #20]
2890:Generated_Source\PSoC4/CyLFClk.c ****                 if(cySysTimerCallback[CY_SYS_TIMER0] != (void *) 0)
 2117              		.loc 2 2890 0
 2118 0026 9B68     		ldr	r3, [r3, #8]
 2119 0028 002B     		cmp	r3, #0
 2120 002a 00D0     		beq	.L230
2891:Generated_Source\PSoC4/CyLFClk.c ****                 {
2892:Generated_Source\PSoC4/CyLFClk.c ****                     (void)(cySysTimerCallback[CY_SYS_TIMER0])();
 2121              		.loc 2 2892 0
 2122 002c 9847     		blx	r3
 2123              	.LVL133:
 2124              	.L230:
2893:Generated_Source\PSoC4/CyLFClk.c ****                 }
2894:Generated_Source\PSoC4/CyLFClk.c ****             }
2895:Generated_Source\PSoC4/CyLFClk.c ****             CySysTimerClearInterrupt(CY_SYS_TIMER0_INT);
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccw66xHk.s 			page 103


 2125              		.loc 2 2895 0
 2126 002e 0420     		mov	r0, #4
 2127 0030 FFF7FEFF 		bl	CySysTimerClearInterrupt
 2128              	.LVL134:
 2129              	.L228:
2896:Generated_Source\PSoC4/CyLFClk.c ****         }
2897:Generated_Source\PSoC4/CyLFClk.c **** 
2898:Generated_Source\PSoC4/CyLFClk.c ****         if(0u != (CY_SYS_TIMER1_INT & CY_SYS_WCO_WDT_CONTROL_REG))
 2130              		.loc 2 2898 0
 2131 0034 8023     		mov	r3, #128
 2132 0036 2268     		ldr	r2, [r4]
 2133 0038 DB00     		lsl	r3, r3, #3
 2134 003a 1A42     		tst	r2, r3
 2135 003c 15D0     		beq	.L232
2899:Generated_Source\PSoC4/CyLFClk.c ****         {
2900:Generated_Source\PSoC4/CyLFClk.c ****             if(0u != (CY_SYS_TIMER1_INT & timerIsrMask))
 2136              		.loc 2 2900 0
 2137 003e 1549     		ldr	r1, .L259+4
 2138 0040 0A68     		ldr	r2, [r1]
 2139 0042 1A42     		tst	r2, r3
 2140 0044 0DD0     		beq	.L234
2901:Generated_Source\PSoC4/CyLFClk.c ****             {
2902:Generated_Source\PSoC4/CyLFClk.c ****                 timerIsrMask &= ~(disableTimerServicedIsr & CY_SYS_TIMER1_INT);
 2141              		.loc 2 2902 0
 2142 0046 144A     		ldr	r2, .L259+8
 2143 0048 5569     		ldr	r5, [r2, #20]
 2144 004a 0868     		ldr	r0, [r1]
 2145 004c 2B40     		and	r3, r5
 2146 004e 9843     		bic	r0, r3
 2147 0050 0860     		str	r0, [r1]
2903:Generated_Source\PSoC4/CyLFClk.c ****                 disableTimerServicedIsr  &= ~CY_SYS_TIMER1_INT;
 2148              		.loc 2 2903 0
 2149 0052 5169     		ldr	r1, [r2, #20]
 2150 0054 114B     		ldr	r3, .L259+12
 2151 0056 0B40     		and	r3, r1
 2152 0058 5361     		str	r3, [r2, #20]
2904:Generated_Source\PSoC4/CyLFClk.c ****                 if(cySysTimerCallback[CY_SYS_TIMER1] != (void *) 0)
 2153              		.loc 2 2904 0
 2154 005a D368     		ldr	r3, [r2, #12]
 2155 005c 002B     		cmp	r3, #0
 2156 005e 00D0     		beq	.L234
2905:Generated_Source\PSoC4/CyLFClk.c ****                 {
2906:Generated_Source\PSoC4/CyLFClk.c ****                     (void)(cySysTimerCallback[CY_SYS_TIMER1])();
 2157              		.loc 2 2906 0
 2158 0060 9847     		blx	r3
 2159              	.LVL135:
 2160              	.L234:
2907:Generated_Source\PSoC4/CyLFClk.c ****                 }
2908:Generated_Source\PSoC4/CyLFClk.c ****             }
2909:Generated_Source\PSoC4/CyLFClk.c ****             CySysTimerClearInterrupt(CY_SYS_TIMER1_INT);
 2161              		.loc 2 2909 0
 2162 0062 8020     		mov	r0, #128
 2163 0064 C000     		lsl	r0, r0, #3
 2164 0066 FFF7FEFF 		bl	CySysTimerClearInterrupt
 2165              	.LVL136:
 2166              	.L232:
2910:Generated_Source\PSoC4/CyLFClk.c ****         }
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccw66xHk.s 			page 104


2911:Generated_Source\PSoC4/CyLFClk.c **** 
2912:Generated_Source\PSoC4/CyLFClk.c ****         if(0u != (CY_SYS_TIMER2_INT & CY_SYS_WCO_WDT_CONTROL_REG))
 2167              		.loc 2 2912 0
 2168 006a 8023     		mov	r3, #128
 2169 006c 2268     		ldr	r2, [r4]
 2170 006e DB02     		lsl	r3, r3, #11
 2171 0070 1A42     		tst	r2, r3
 2172 0072 0CD0     		beq	.L227
2913:Generated_Source\PSoC4/CyLFClk.c ****         {
2914:Generated_Source\PSoC4/CyLFClk.c ****             if(0u != (CY_SYS_TIMER2_INT & timerIsrMask))
 2173              		.loc 2 2914 0
 2174 0074 074A     		ldr	r2, .L259+4
 2175 0076 1268     		ldr	r2, [r2]
 2176 0078 1A42     		tst	r2, r3
 2177 007a 04D0     		beq	.L237
2915:Generated_Source\PSoC4/CyLFClk.c ****             {
2916:Generated_Source\PSoC4/CyLFClk.c ****                 if(cySysTimerCallback[CY_SYS_TIMER2] != (void *) 0)
 2178              		.loc 2 2916 0
 2179 007c 064B     		ldr	r3, .L259+8
 2180 007e 1B69     		ldr	r3, [r3, #16]
 2181 0080 002B     		cmp	r3, #0
 2182 0082 00D0     		beq	.L237
2917:Generated_Source\PSoC4/CyLFClk.c ****                 {
2918:Generated_Source\PSoC4/CyLFClk.c ****                     (void)(cySysTimerCallback[CY_SYS_TIMER2])();
 2183              		.loc 2 2918 0
 2184 0084 9847     		blx	r3
 2185              	.LVL137:
 2186              	.L237:
2919:Generated_Source\PSoC4/CyLFClk.c ****                 }
2920:Generated_Source\PSoC4/CyLFClk.c ****             }
2921:Generated_Source\PSoC4/CyLFClk.c ****             CySysTimerClearInterrupt(CY_SYS_TIMER2_INT);
 2187              		.loc 2 2921 0
 2188 0086 8020     		mov	r0, #128
 2189 0088 C002     		lsl	r0, r0, #11
 2190 008a FFF7FEFF 		bl	CySysTimerClearInterrupt
 2191              	.LVL138:
 2192              	.L227:
2922:Generated_Source\PSoC4/CyLFClk.c ****         }
2923:Generated_Source\PSoC4/CyLFClk.c ****     }
 2193              		.loc 2 2923 0
 2194              		@ sp needed
 2195 008e 38BD     		pop	{r3, r4, r5, pc}
 2196              	.L260:
 2197              		.align	2
 2198              	.L259:
 2199 0090 10020640 		.word	1074135568
 2200 0094 00000000 		.word	.LANCHOR2
 2201 0098 00000000 		.word	.LANCHOR0
 2202 009c FFFBFFFF 		.word	-1025
 2203              		.cfi_endproc
 2204              	.LFE47:
 2205              		.size	CySysTimerIsr, .-CySysTimerIsr
 2206              		.section	.text.CySysTimerResetCounters,"ax",%progbits
 2207              		.align	1
 2208              		.global	CySysTimerResetCounters
 2209              		.code	16
 2210              		.thumb_func
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccw66xHk.s 			page 105


 2211              		.type	CySysTimerResetCounters, %function
 2212              	CySysTimerResetCounters:
 2213              	.LFB48:
2924:Generated_Source\PSoC4/CyLFClk.c **** 
2925:Generated_Source\PSoC4/CyLFClk.c **** 
2926:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2927:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysTimerResetCounters
2928:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2929:Generated_Source\PSoC4/CyLFClk.c ****     *
2930:Generated_Source\PSoC4/CyLFClk.c ****     * \brief Resets all the Timer counters set in the mask.
2931:Generated_Source\PSoC4/CyLFClk.c ****     *
2932:Generated_Source\PSoC4/CyLFClk.c ****     * \param countersMask
2933:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_TIMER0_RESET - Reset the Counter 0<br>
2934:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_TIMER1_RESET - Reset the Counter 1<br>
2935:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_TIMER2_RESET - Reset the Counter 2
2936:Generated_Source\PSoC4/CyLFClk.c ****     *
2937:Generated_Source\PSoC4/CyLFClk.c ****     * \details
2938:Generated_Source\PSoC4/CyLFClk.c ****     * This function waits while corresponding counters will be reset. This may
2939:Generated_Source\PSoC4/CyLFClk.c ****     * take up to 3 DeepSleep Timer source-cycles. DeepSleep Timer source must be 
2940:Generated_Source\PSoC4/CyLFClk.c ****     * enabled. Otherwise, the function will never exit.
2941:Generated_Source\PSoC4/CyLFClk.c ****     *
2942:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
2943:Generated_Source\PSoC4/CyLFClk.c ****     void CySysTimerResetCounters(uint32 countersMask)
2944:Generated_Source\PSoC4/CyLFClk.c ****     {
 2214              		.loc 2 2944 0
 2215              		.cfi_startproc
 2216              	.LVL139:
2945:Generated_Source\PSoC4/CyLFClk.c ****         /* Set new Timer reset value */
2946:Generated_Source\PSoC4/CyLFClk.c ****         CY_SYS_WCO_WDT_CONTROL_REG |= (countersMask & CY_SYS_TIMER_RESET);
 2217              		.loc 2 2946 0
 2218 0000 044B     		ldr	r3, .L263
 2219 0002 054A     		ldr	r2, .L263+4
 2220 0004 1968     		ldr	r1, [r3]
 2221 0006 1040     		and	r0, r2
 2222              	.LVL140:
 2223 0008 0843     		orr	r0, r1
 2224 000a 1860     		str	r0, [r3]
 2225              	.L262:
2947:Generated_Source\PSoC4/CyLFClk.c **** 
2948:Generated_Source\PSoC4/CyLFClk.c ****         while (0uL != (CY_SYS_WCO_WDT_CONTROL_REG & CY_SYS_TIMER_RESET))
 2226              		.loc 2 2948 0 discriminator 1
 2227 000c 1968     		ldr	r1, [r3]
 2228 000e 1142     		tst	r1, r2
 2229 0010 FCD1     		bne	.L262
2949:Generated_Source\PSoC4/CyLFClk.c ****         {
2950:Generated_Source\PSoC4/CyLFClk.c ****             /* Wait for reset to come into effect */
2951:Generated_Source\PSoC4/CyLFClk.c ****         }
2952:Generated_Source\PSoC4/CyLFClk.c ****     }
 2230              		.loc 2 2952 0
 2231              		@ sp needed
 2232 0012 7047     		bx	lr
 2233              	.L264:
 2234              		.align	2
 2235              	.L263:
 2236 0014 10020640 		.word	1074135568
 2237 0018 08080800 		.word	526344
 2238              		.cfi_endproc
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccw66xHk.s 			page 106


 2239              	.LFE48:
 2240              		.size	CySysTimerResetCounters, .-CySysTimerResetCounters
 2241              		.section	.text.CySysTimerDelayUntilMatch,"ax",%progbits
 2242              		.align	1
 2243              		.global	CySysTimerDelayUntilMatch
 2244              		.code	16
 2245              		.thumb_func
 2246              		.type	CySysTimerDelayUntilMatch, %function
 2247              	CySysTimerDelayUntilMatch:
 2248              	.LFB50:
2953:Generated_Source\PSoC4/CyLFClk.c **** #endif /* (CY_IP_SRSSLT && CY_IP_WCO && CY_IP_WCO_WDT_EN) */
2954:Generated_Source\PSoC4/CyLFClk.c **** 
2955:Generated_Source\PSoC4/CyLFClk.c **** 
2956:Generated_Source\PSoC4/CyLFClk.c **** #if(CY_IP_SRSSV2 || (CY_IP_WCO_WDT_EN && CY_IP_SRSSLT))
2957:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
2958:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysTimerDelay
2959:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
2960:Generated_Source\PSoC4/CyLFClk.c ****     *
2961:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
2962:Generated_Source\PSoC4/CyLFClk.c ****     * The function implements the delay specified in the LFCLK clock ticks.
2963:Generated_Source\PSoC4/CyLFClk.c ****     *
2964:Generated_Source\PSoC4/CyLFClk.c ****     * This API is applicable for PSoC 4100 / PSoC 4200 / PSoC 4100 BLE / 
2965:Generated_Source\PSoC4/CyLFClk.c ****     * PSoC 4200 BLE / PRoC BLE / PSoC 4200L / PSoC 4100M / PSoC 4200M devices to 
2966:Generated_Source\PSoC4/CyLFClk.c ****     * use WDT. Also this API is available to use for PSoC4100S and / PSoC Analog 
2967:Generated_Source\PSoC4/CyLFClk.c ****     * Coprocessor devices to use DeepSleep Timers.
2968:Generated_Source\PSoC4/CyLFClk.c ****     *
2969:Generated_Source\PSoC4/CyLFClk.c ****     * For PSoC 4100 / PSoC 4200 / PSoC 4100 BLE / PSoC 4200 BLE / PRoC BLE / PSoC 
2970:Generated_Source\PSoC4/CyLFClk.c ****     * 4200L / PSoC 4100M / PSoC 4200M devices:
2971:Generated_Source\PSoC4/CyLFClk.c ****     * The specified WDT counter should be configured as described below and started.
2972:Generated_Source\PSoC4/CyLFClk.c ****     *
2973:Generated_Source\PSoC4/CyLFClk.c ****     * For PSoC 4100S / PSoC Analog Coprocessor devices:
2974:Generated_Source\PSoC4/CyLFClk.c ****     * The specified DeepSleep Timer counter should be configured as described below
2975:Generated_Source\PSoC4/CyLFClk.c ****     * and started.
2976:Generated_Source\PSoC4/CyLFClk.c ****     *
2977:Generated_Source\PSoC4/CyLFClk.c ****     * This function can operate in two modes: the "WAIT" and "INTERRUPT" modes. In
2978:Generated_Source\PSoC4/CyLFClk.c ****     * the "WAIT" mode, the function waits for the specified number of ticks. In the
2979:Generated_Source\PSoC4/CyLFClk.c ****     * "INTERRUPT" mode, the interrupt is generated after the specified number of
2980:Generated_Source\PSoC4/CyLFClk.c ****     * ticks.
2981:Generated_Source\PSoC4/CyLFClk.c ****     *
2982:Generated_Source\PSoC4/CyLFClk.c ****     * For the correct function operation, the "Clear On Match" option should be
2983:Generated_Source\PSoC4/CyLFClk.c ****     * disabled for the specified WDT or DeepSleep Timer counter. Use 
2984:Generated_Source\PSoC4/CyLFClk.c ****     * CySysWdtSetClearOnMatch() for WDT or CySysTimerSetClearOnMatch() for DeepSleep
2985:Generated_Source\PSoC4/CyLFClk.c ****     * Timer function with the "enable" parameter equal to zero for the used WDT 
2986:Generated_Source\PSoC4/CyLFClk.c ****     * counter or DeepSleep Timer counter.
2987:Generated_Source\PSoC4/CyLFClk.c ****     *
2988:Generated_Source\PSoC4/CyLFClk.c ****     * The corresponding WDT counter should be configured to match the selected
2989:Generated_Source\PSoC4/CyLFClk.c ****     * mode: "Free running Timer" for the "WAIT" mode, and
2990:Generated_Source\PSoC4/CyLFClk.c ****     * "Periodic Timer" / "Watchdog (w/Interrupt)" for the "INTERRUPT" mode.
2991:Generated_Source\PSoC4/CyLFClk.c ****     *
2992:Generated_Source\PSoC4/CyLFClk.c ****     * Or the corresponding DeepSleep Timer counter should be configured to match the
2993:Generated_Source\PSoC4/CyLFClk.c ****     * selected mode: "Free running Timer" for the "WAIT" mode, and
2994:Generated_Source\PSoC4/CyLFClk.c ****     * "Periodic Timer" for the "INTERRUPT" mode.
2995:Generated_Source\PSoC4/CyLFClk.c ****     *
2996:Generated_Source\PSoC4/CyLFClk.c ****     * This can be configured in two ways:
2997:Generated_Source\PSoC4/CyLFClk.c ****     * - Through the DWR page. Open the "Clocks" tab, click the "Edit Clocks..."
2998:Generated_Source\PSoC4/CyLFClk.c ****     * button, in the "Configure System Clocks" window click on the
2999:Generated_Source\PSoC4/CyLFClk.c ****     * "Low Frequency Clocks" tab and choose the appropriate option for the used
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccw66xHk.s 			page 107


3000:Generated_Source\PSoC4/CyLFClk.c ****     * WDT or DeepSleep Timer counter.
3001:Generated_Source\PSoC4/CyLFClk.c ****     *
3002:Generated_Source\PSoC4/CyLFClk.c ****     * - Through the CySysWdtSetMode() for WDT or CySysTimerSetMode() for DeepSleep
3003:Generated_Source\PSoC4/CyLFClk.c ****     * Timer function. Call it with the appropriate "mode" parameter for the 
3004:Generated_Source\PSoC4/CyLFClk.c ****     * used WDT or DeepSleep Timer counter.
3005:Generated_Source\PSoC4/CyLFClk.c ****     *
3006:Generated_Source\PSoC4/CyLFClk.c ****     * For the "INTERRUPT" mode, the recommended sequence is the following:
3007:Generated_Source\PSoC4/CyLFClk.c ****     * - Call the CySysWdtDisableCounterIsr() for WDT or 
3008:Generated_Source\PSoC4/CyLFClk.c ****     * CySysTimerDisableIsr() for DeepSleep Timer function to disable servicing
3009:Generated_Source\PSoC4/CyLFClk.c ****     * interrupts of the specified WDT or DeepSleep Timer counter.
3010:Generated_Source\PSoC4/CyLFClk.c ****     *
3011:Generated_Source\PSoC4/CyLFClk.c ****     * - Call the CySysWdtSetInterruptCallback() for WDT or 
3012:Generated_Source\PSoC4/CyLFClk.c ****     * CySysTimerSetIsrCallback() for DeepSleep Timer function to register 
3013:Generated_Source\PSoC4/CyLFClk.c ****     * the callback function for the corresponding WDT or DeepSleep Timer counter.
3014:Generated_Source\PSoC4/CyLFClk.c ****     *
3015:Generated_Source\PSoC4/CyLFClk.c ****     * - Call the CySysTimerDelay() function.
3016:Generated_Source\PSoC4/CyLFClk.c ****     *
3017:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum Valid range [0-1]. The number of the counter 
3018:Generated_Source\PSoC4/CyLFClk.c ****     * (Timer0 or Timer1).
3019:Generated_Source\PSoC4/CyLFClk.c ****     * \param delayType
3020:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_TIMER_WAIT - "WAIT" mode. <br>
3021:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_TIMER_INTERRUPT - "INTERRUPT" mode.
3022:Generated_Source\PSoC4/CyLFClk.c ****     * \param delay The delay value in the LFCLK ticks 
3023:Generated_Source\PSoC4/CyLFClk.c ****     * (allowable range - 16-bit value).
3024:Generated_Source\PSoC4/CyLFClk.c ****     *
3025:Generated_Source\PSoC4/CyLFClk.c ****     * \details
3026:Generated_Source\PSoC4/CyLFClk.c ****     * In the "INTERRUPT" mode, this function enables ISR callback servicing
3027:Generated_Source\PSoC4/CyLFClk.c ****     * from the corresponding WDT or DeepSleep Timer counter. Servicing of this ISR 
3028:Generated_Source\PSoC4/CyLFClk.c ****     * callback will be disabled after the expiration of the delay time.
3029:Generated_Source\PSoC4/CyLFClk.c ****     *
3030:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
3031:Generated_Source\PSoC4/CyLFClk.c ****     void CySysTimerDelay(uint32 counterNum, cy_sys_timer_delaytype_enum delayType, uint32 delay)
3032:Generated_Source\PSoC4/CyLFClk.c ****     {
3033:Generated_Source\PSoC4/CyLFClk.c ****         uint32 regValue;
3034:Generated_Source\PSoC4/CyLFClk.c ****         uint32 matchValue;
3035:Generated_Source\PSoC4/CyLFClk.c **** 
3036:Generated_Source\PSoC4/CyLFClk.c ****         #if(CY_IP_SRSSV2)
3037:Generated_Source\PSoC4/CyLFClk.c ****             if((counterNum < CY_SYS_WDT_COUNTER2) && (0uL == CySysWdtGetClearOnMatch(counterNum)) &
3038:Generated_Source\PSoC4/CyLFClk.c ****                                                                 (delay <= CY_SYS_UINT16_MAX_VAL))
3039:Generated_Source\PSoC4/CyLFClk.c ****             {
3040:Generated_Source\PSoC4/CyLFClk.c ****                 regValue   = CySysWdtGetCount(counterNum);
3041:Generated_Source\PSoC4/CyLFClk.c ****                 matchValue = (regValue + delay) & (uint32)CY_SYS_UINT16_MAX_VAL;
3042:Generated_Source\PSoC4/CyLFClk.c **** 
3043:Generated_Source\PSoC4/CyLFClk.c ****                 CySysTimerDelayUntilMatch(counterNum, delayType, matchValue);
3044:Generated_Source\PSoC4/CyLFClk.c ****             }
3045:Generated_Source\PSoC4/CyLFClk.c ****             else
3046:Generated_Source\PSoC4/CyLFClk.c ****             {
3047:Generated_Source\PSoC4/CyLFClk.c ****                 CYASSERT(0u != 0u);
3048:Generated_Source\PSoC4/CyLFClk.c ****             }
3049:Generated_Source\PSoC4/CyLFClk.c ****         #endif /* (CY_IP_SRSSV2) */
3050:Generated_Source\PSoC4/CyLFClk.c **** 
3051:Generated_Source\PSoC4/CyLFClk.c ****         #if(CY_IP_WCO_WDT_EN && CY_IP_SRSSLT)
3052:Generated_Source\PSoC4/CyLFClk.c ****             if((counterNum < CY_SYS_TIMER2) && (0uL == CySysTimerGetClearOnMatch(counterNum)) && 
3053:Generated_Source\PSoC4/CyLFClk.c ****                                                             (delay <= CY_SYS_UINT16_MAX_VAL))
3054:Generated_Source\PSoC4/CyLFClk.c ****             {
3055:Generated_Source\PSoC4/CyLFClk.c ****                 regValue   = CySysTimerGetCount(counterNum);
3056:Generated_Source\PSoC4/CyLFClk.c ****                 matchValue = (regValue + delay) & (uint32)CY_SYS_UINT16_MAX_VAL;
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccw66xHk.s 			page 108


3057:Generated_Source\PSoC4/CyLFClk.c **** 
3058:Generated_Source\PSoC4/CyLFClk.c ****                 CySysTimerDelayUntilMatch(counterNum, delayType, matchValue);
3059:Generated_Source\PSoC4/CyLFClk.c ****             }
3060:Generated_Source\PSoC4/CyLFClk.c ****             else
3061:Generated_Source\PSoC4/CyLFClk.c ****             {
3062:Generated_Source\PSoC4/CyLFClk.c ****                 CYASSERT(0u != 0u);
3063:Generated_Source\PSoC4/CyLFClk.c ****             }
3064:Generated_Source\PSoC4/CyLFClk.c ****         #endif /* (CY_IP_WCO_WDT_EN) */
3065:Generated_Source\PSoC4/CyLFClk.c ****     }
3066:Generated_Source\PSoC4/CyLFClk.c **** 
3067:Generated_Source\PSoC4/CyLFClk.c **** 
3068:Generated_Source\PSoC4/CyLFClk.c ****     /*******************************************************************************
3069:Generated_Source\PSoC4/CyLFClk.c ****     * Function Name: CySysTimerDelayUntilMatch
3070:Generated_Source\PSoC4/CyLFClk.c ****     ****************************************************************************//**
3071:Generated_Source\PSoC4/CyLFClk.c ****     *
3072:Generated_Source\PSoC4/CyLFClk.c ****     * \brief
3073:Generated_Source\PSoC4/CyLFClk.c ****     * The function implements the delay specified as the number of WDT or DeepSleep
3074:Generated_Source\PSoC4/CyLFClk.c ****     * Timer clock source ticks between WDT or DeepSleep Timer current value and 
3075:Generated_Source\PSoC4/CyLFClk.c ****     * match" value.
3076:Generated_Source\PSoC4/CyLFClk.c ****     *
3077:Generated_Source\PSoC4/CyLFClk.c ****     * This API is applicable for PSoC 4100 / PSoC 4200 / PRoC BLE / PSoC 4100 BLE /
3078:Generated_Source\PSoC4/CyLFClk.c ****     * PSoC 4200 BLE / PSoC 4200L / PSoC 4100M / PSoC 4200M devices to use WDT.
3079:Generated_Source\PSoC4/CyLFClk.c ****     * Also this API is available to use for PSoC4100S / Analog Coprocessor devices
3080:Generated_Source\PSoC4/CyLFClk.c ****     * to use DeepSleep Timers.
3081:Generated_Source\PSoC4/CyLFClk.c ****     * 
3082:Generated_Source\PSoC4/CyLFClk.c ****     * For PSoC 4100 / PSoC 4200 / PSoC 4100 BLE / PSoC 4200 BLE / PRoC BLE / PSoC 
3083:Generated_Source\PSoC4/CyLFClk.c ****     * 4200L / PSoC 4100M / PSoC 4200M devices:
3084:Generated_Source\PSoC4/CyLFClk.c ****     * The function implements the delay specified as the number of LFCLK ticks
3085:Generated_Source\PSoC4/CyLFClk.c ****     * between the specified WDT counter's current value and the "match"
3086:Generated_Source\PSoC4/CyLFClk.c ****     * passed as the parameter to this function. The current WDT counter value can 
3087:Generated_Source\PSoC4/CyLFClk.c ****     * be obtained using the CySysWdtGetCount() function.
3088:Generated_Source\PSoC4/CyLFClk.c ****     *
3089:Generated_Source\PSoC4/CyLFClk.c ****     * For PSoC4100 S and Analog Coprocessor devices:
3090:Generated_Source\PSoC4/CyLFClk.c ****     * The function implements the delay specified as the number of DeepSleep Timer 
3091:Generated_Source\PSoC4/CyLFClk.c ****     * input clock ticks for Timer0/Timer1 counter's current value and the "match" 
3092:Generated_Source\PSoC4/CyLFClk.c ****     * passed as the parameter to this function. The current DeepSleep Timer counter
3093:Generated_Source\PSoC4/CyLFClk.c ****     * value can be obtained using the CySysWdtGetCount() function.
3094:Generated_Source\PSoC4/CyLFClk.c ****     *
3095:Generated_Source\PSoC4/CyLFClk.c ****     * For PSoC 4100 / PSoC 4200 / PSoC 4100 BLE / PSoC 4200 BLE / PRoC BLE / PSoC 
3096:Generated_Source\PSoC4/CyLFClk.c ****     * 4200L / PSoC 4100M / PSoC 4200M devices:
3097:Generated_Source\PSoC4/CyLFClk.c ****     * The specified WDT counter should be configured as described below and started.
3098:Generated_Source\PSoC4/CyLFClk.c ****     *
3099:Generated_Source\PSoC4/CyLFClk.c ****     * For PSoC PSoC 4100S / PSoC Analog Coprocessor devices:
3100:Generated_Source\PSoC4/CyLFClk.c ****     * The specified DeepSleep Timer counter should be configured as described below
3101:Generated_Source\PSoC4/CyLFClk.c ****     * and started.
3102:Generated_Source\PSoC4/CyLFClk.c ****     *
3103:Generated_Source\PSoC4/CyLFClk.c ****     * This function can operate in two modes: the "WAIT" and "INTERRUPT" modes. In
3104:Generated_Source\PSoC4/CyLFClk.c ****     * the "WAIT" mode, the function waits for the specified number of ticks. In the
3105:Generated_Source\PSoC4/CyLFClk.c ****     * "INTERRUPT" mode, the interrupt is generated after the specified number of
3106:Generated_Source\PSoC4/CyLFClk.c ****     * ticks.
3107:Generated_Source\PSoC4/CyLFClk.c ****     *
3108:Generated_Source\PSoC4/CyLFClk.c ****     * For the correct function operation, the "Clear On Match" option should be
3109:Generated_Source\PSoC4/CyLFClk.c ****     * disabled for the specified WDT or DeepSleep Timer counter. Use 
3110:Generated_Source\PSoC4/CyLFClk.c ****     * CySysWdtSetClearOnMatch() for WDT or CySysTimerSetClearOnMatch() for DeepSleep
3111:Generated_Source\PSoC4/CyLFClk.c ****     * Timer function with the "enable" parameter equal to zero for the used WDT 
3112:Generated_Source\PSoC4/CyLFClk.c ****     * or DeepSleep Timer counter.
3113:Generated_Source\PSoC4/CyLFClk.c ****     *
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccw66xHk.s 			page 109


3114:Generated_Source\PSoC4/CyLFClk.c ****     * For PSoC 4100 / PSoC 4200 / PSoC 4100 BLE / PSoC 4200 BLE / PRoC BLE / PSoC 
3115:Generated_Source\PSoC4/CyLFClk.c ****     * 4200L / PSoC 4100M/PSoC 4200M devices:
3116:Generated_Source\PSoC4/CyLFClk.c ****     * The corresponding WDT counter should be configured to match the selected
3117:Generated_Source\PSoC4/CyLFClk.c ****     * mode: "Free running Timer" for the "WAIT" mode, and
3118:Generated_Source\PSoC4/CyLFClk.c ****     * "Periodic Timer" / "Watchdog (w/Interrupt)" for the "INTERRUPT" mode.
3119:Generated_Source\PSoC4/CyLFClk.c ****     *
3120:Generated_Source\PSoC4/CyLFClk.c ****     * For PSoC 4100S / PSoC Analog Coprocessor devices:
3121:Generated_Source\PSoC4/CyLFClk.c ****     * Corresponding DeepSleep Timer counter should be configured to match the 
3122:Generated_Source\PSoC4/CyLFClk.c ****     * selected mode: "Free running Timer" for the "WAIT" mode, and
3123:Generated_Source\PSoC4/CyLFClk.c ****     * "Periodic Timer" for the "INTERRUPT" mode.
3124:Generated_Source\PSoC4/CyLFClk.c ****     *
3125:Generated_Source\PSoC4/CyLFClk.c ****     * This can be configured in two ways:
3126:Generated_Source\PSoC4/CyLFClk.c ****     * - Through the DWR page. Open the "Clocks" tab, click the "Edit Clocks..."
3127:Generated_Source\PSoC4/CyLFClk.c ****     * button, in the "Configure System Clocks" window click on the
3128:Generated_Source\PSoC4/CyLFClk.c ****     * "Low Frequency Clocks" tab and choose the appropriate option for the used
3129:Generated_Source\PSoC4/CyLFClk.c ****     * WDT or DeepSleep Timer counter.
3130:Generated_Source\PSoC4/CyLFClk.c ****     *
3131:Generated_Source\PSoC4/CyLFClk.c ****     * - Through the CySysWdtSetMode() for WDT or CySysTimerSetMode() for DeepSleep
3132:Generated_Source\PSoC4/CyLFClk.c ****     * Timer function. Call it with the appropriate "mode" parameter for the 
3133:Generated_Source\PSoC4/CyLFClk.c ****     * used WDT or DeepSleep Timer counter.
3134:Generated_Source\PSoC4/CyLFClk.c ****     *
3135:Generated_Source\PSoC4/CyLFClk.c ****     * For the "INTERRUPT" mode, the recommended sequence is the following:
3136:Generated_Source\PSoC4/CyLFClk.c ****     * - Call the CySysWdtDisableCounterIsr() for WDT or 
3137:Generated_Source\PSoC4/CyLFClk.c ****     * CySysTimerDisableIsr() for DeepSleep Timer function to disable servicing
3138:Generated_Source\PSoC4/CyLFClk.c ****     * interrupts of the specified WDT or DeepSleep Timer counter.
3139:Generated_Source\PSoC4/CyLFClk.c ****     *
3140:Generated_Source\PSoC4/CyLFClk.c ****     * - Call the CySysWdtSetInterruptCallback() for WDT or 
3141:Generated_Source\PSoC4/CyLFClk.c ****     * CySysTimerSetInterruptCallback() for DeepSleep Timer function to register 
3142:Generated_Source\PSoC4/CyLFClk.c ****     * the callback function for the corresponding WDT or DeepSleep Timer counter.
3143:Generated_Source\PSoC4/CyLFClk.c ****     *
3144:Generated_Source\PSoC4/CyLFClk.c ****     * - Call the CySysTimerDelay() function.
3145:Generated_Source\PSoC4/CyLFClk.c ****     *
3146:Generated_Source\PSoC4/CyLFClk.c ****     * \param counterNum Valid range [0-1]. The number of the WDT or DeepSleep 
3147:Generated_Source\PSoC4/CyLFClk.c ****     * Timer.
3148:Generated_Source\PSoC4/CyLFClk.c ****     * counter (Timer0 or Timer1).
3149:Generated_Source\PSoC4/CyLFClk.c ****     * \param delayType  CY_SYS_TIMER_WAIT - "WAIT" mode.<br>
3150:Generated_Source\PSoC4/CyLFClk.c ****     * CY_SYS_TIMER_INTERRUPT - "INTERRUPT" mode.
3151:Generated_Source\PSoC4/CyLFClk.c ****     * \param delay The delay value in the LFCLK ticks
3152:Generated_Source\PSoC4/CyLFClk.c ****     * (allowable range - 16-bit value).
3153:Generated_Source\PSoC4/CyLFClk.c ****     *
3154:Generated_Source\PSoC4/CyLFClk.c ****     * \details
3155:Generated_Source\PSoC4/CyLFClk.c ****     * In the "INTERRUPT" mode, this function enables ISR callback servicing
3156:Generated_Source\PSoC4/CyLFClk.c ****     * from the corresponding WDT counter. Servicing of this ISR callback will be
3157:Generated_Source\PSoC4/CyLFClk.c ****     * disabled after the expiration of the delay time.
3158:Generated_Source\PSoC4/CyLFClk.c ****     *
3159:Generated_Source\PSoC4/CyLFClk.c ****     *******************************************************************************/
3160:Generated_Source\PSoC4/CyLFClk.c ****     void CySysTimerDelayUntilMatch(uint32 counterNum, cy_sys_timer_delaytype_enum delayType, uint32
3161:Generated_Source\PSoC4/CyLFClk.c ****     {
 2249              		.loc 2 3161 0
 2250              		.cfi_startproc
 2251              	.LVL141:
 2252 0000 70B5     		push	{r4, r5, r6, lr}
 2253              		.cfi_def_cfa_offset 16
 2254              		.cfi_offset 4, -16
 2255              		.cfi_offset 5, -12
 2256              		.cfi_offset 6, -8
 2257              		.cfi_offset 14, -4
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccw66xHk.s 			page 110


3162:Generated_Source\PSoC4/CyLFClk.c ****         uint32 tmpValue;
3163:Generated_Source\PSoC4/CyLFClk.c **** 
3164:Generated_Source\PSoC4/CyLFClk.c ****         #if(CY_IP_SRSSV2)
3165:Generated_Source\PSoC4/CyLFClk.c ****             if((counterNum < CY_SYS_WDT_COUNTER2) && (0uL == CySysWdtGetClearOnMatch(counterNum)) &
3166:Generated_Source\PSoC4/CyLFClk.c ****                                                                 (match <= CY_SYS_UINT16_MAX_VAL))
3167:Generated_Source\PSoC4/CyLFClk.c ****             {
3168:Generated_Source\PSoC4/CyLFClk.c ****                 if(delayType == CY_SYS_TIMER_WAIT)
3169:Generated_Source\PSoC4/CyLFClk.c ****                 {
3170:Generated_Source\PSoC4/CyLFClk.c ****                     do
3171:Generated_Source\PSoC4/CyLFClk.c ****                     {
3172:Generated_Source\PSoC4/CyLFClk.c ****                         tmpValue = CySysWdtGetCount(counterNum);
3173:Generated_Source\PSoC4/CyLFClk.c ****                     }while(tmpValue > match);
3174:Generated_Source\PSoC4/CyLFClk.c **** 
3175:Generated_Source\PSoC4/CyLFClk.c ****                     do
3176:Generated_Source\PSoC4/CyLFClk.c ****                     {
3177:Generated_Source\PSoC4/CyLFClk.c ****                         tmpValue = CySysWdtGetCount(counterNum);
3178:Generated_Source\PSoC4/CyLFClk.c ****                     }while(tmpValue < match);
3179:Generated_Source\PSoC4/CyLFClk.c ****                 }
3180:Generated_Source\PSoC4/CyLFClk.c ****                 else
3181:Generated_Source\PSoC4/CyLFClk.c ****                 {
3182:Generated_Source\PSoC4/CyLFClk.c ****                     tmpValue = counterIntMaskTbl[counterNum];
3183:Generated_Source\PSoC4/CyLFClk.c ****                     CySysWdtSetMatch(counterNum, match);
3184:Generated_Source\PSoC4/CyLFClk.c **** 
3185:Generated_Source\PSoC4/CyLFClk.c ****                     disableServicedIsr  |= tmpValue;
3186:Generated_Source\PSoC4/CyLFClk.c ****                     wdtIsrMask |= tmpValue;
3187:Generated_Source\PSoC4/CyLFClk.c ****                 }
3188:Generated_Source\PSoC4/CyLFClk.c ****             }
3189:Generated_Source\PSoC4/CyLFClk.c ****             else
3190:Generated_Source\PSoC4/CyLFClk.c ****             {
3191:Generated_Source\PSoC4/CyLFClk.c ****                 CYASSERT(0u != 0u);
3192:Generated_Source\PSoC4/CyLFClk.c ****             }
3193:Generated_Source\PSoC4/CyLFClk.c **** 
3194:Generated_Source\PSoC4/CyLFClk.c ****         #endif /* (CY_IP_SRSSV2) */  
3195:Generated_Source\PSoC4/CyLFClk.c **** 
3196:Generated_Source\PSoC4/CyLFClk.c ****         #if(CY_IP_WCO_WDT_EN && CY_IP_SRSSLT)
3197:Generated_Source\PSoC4/CyLFClk.c ****         if((counterNum < CY_SYS_TIMER2) && (0uL == CySysTimerGetClearOnMatch(counterNum)) &&
 2258              		.loc 2 3197 0
 2259 0002 0128     		cmp	r0, #1
 2260 0004 25D8     		bhi	.L265
 2261 0006 151C     		mov	r5, r2
 2262 0008 0E1C     		mov	r6, r1
 2263 000a 041C     		mov	r4, r0
 2264              		.loc 2 3197 0 is_stmt 0 discriminator 1
 2265 000c FFF7FEFF 		bl	CySysTimerGetClearOnMatch
 2266              	.LVL142:
 2267 0010 0028     		cmp	r0, #0
 2268 0012 1ED1     		bne	.L265
 2269              		.loc 2 3197 0 discriminator 2
 2270 0014 0F4B     		ldr	r3, .L272
 2271 0016 9D42     		cmp	r5, r3
 2272 0018 1BD8     		bhi	.L265
3198:Generated_Source\PSoC4/CyLFClk.c ****                                                         (match <= CY_SYS_UINT16_MAX_VAL))
3199:Generated_Source\PSoC4/CyLFClk.c ****         {
3200:Generated_Source\PSoC4/CyLFClk.c ****             if(delayType == CY_SYS_TIMER_WAIT)
 2273              		.loc 2 3200 0 is_stmt 1
 2274 001a 002E     		cmp	r6, #0
 2275 001c 0AD1     		bne	.L269
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccw66xHk.s 			page 111


 2276              	.L270:
3201:Generated_Source\PSoC4/CyLFClk.c ****             {
3202:Generated_Source\PSoC4/CyLFClk.c ****                 do
3203:Generated_Source\PSoC4/CyLFClk.c ****                 {
3204:Generated_Source\PSoC4/CyLFClk.c ****                     tmpValue = CySysTimerGetCount(counterNum);
 2277              		.loc 2 3204 0 discriminator 1
 2278 001e 201C     		mov	r0, r4
 2279 0020 FFF7FEFF 		bl	CySysTimerGetCount
 2280              	.LVL143:
3205:Generated_Source\PSoC4/CyLFClk.c ****                 }while(tmpValue > match);
 2281              		.loc 2 3205 0 discriminator 1
 2282 0024 A842     		cmp	r0, r5
 2283 0026 FAD8     		bhi	.L270
 2284              	.L271:
3206:Generated_Source\PSoC4/CyLFClk.c **** 
3207:Generated_Source\PSoC4/CyLFClk.c ****                 do
3208:Generated_Source\PSoC4/CyLFClk.c ****                 {
3209:Generated_Source\PSoC4/CyLFClk.c ****                     tmpValue = CySysTimerGetCount(counterNum);
 2285              		.loc 2 3209 0 discriminator 1
 2286 0028 201C     		mov	r0, r4
 2287              	.LVL144:
 2288 002a FFF7FEFF 		bl	CySysTimerGetCount
 2289              	.LVL145:
3210:Generated_Source\PSoC4/CyLFClk.c ****                 }while(tmpValue < match);
 2290              		.loc 2 3210 0 discriminator 1
 2291 002e A842     		cmp	r0, r5
 2292 0030 FAD3     		bcc	.L271
 2293 0032 0EE0     		b	.L265
 2294              	.LVL146:
 2295              	.L269:
 2296              	.LBB58:
 2297              	.LBB59:
3211:Generated_Source\PSoC4/CyLFClk.c ****             }
3212:Generated_Source\PSoC4/CyLFClk.c ****             else
3213:Generated_Source\PSoC4/CyLFClk.c ****             {
3214:Generated_Source\PSoC4/CyLFClk.c ****                 tmpValue = counterTimerIntMaskTbl[counterNum];
 2298              		.loc 2 3214 0
 2299 0034 084B     		ldr	r3, .L272+4
 2300 0036 A200     		lsl	r2, r4, #2
3215:Generated_Source\PSoC4/CyLFClk.c ****                 CySysTimerSetMatch(counterNum, match);
 2301              		.loc 2 3215 0
 2302 0038 201C     		mov	r0, r4
 2303 003a 291C     		mov	r1, r5
3214:Generated_Source\PSoC4/CyLFClk.c ****                 CySysTimerSetMatch(counterNum, match);
 2304              		.loc 2 3214 0
 2305 003c D658     		ldr	r6, [r2, r3]
 2306              	.LVL147:
 2307              		.loc 2 3215 0
 2308 003e FFF7FEFF 		bl	CySysTimerSetMatch
 2309              	.LVL148:
3216:Generated_Source\PSoC4/CyLFClk.c **** 
3217:Generated_Source\PSoC4/CyLFClk.c ****                 disableTimerServicedIsr  |= tmpValue;
 2310              		.loc 2 3217 0
 2311 0042 064A     		ldr	r2, .L272+8
 2312 0044 5369     		ldr	r3, [r2, #20]
 2313 0046 3343     		orr	r3, r6
 2314 0048 5361     		str	r3, [r2, #20]
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccw66xHk.s 			page 112


3218:Generated_Source\PSoC4/CyLFClk.c ****                 timerIsrMask |= tmpValue;
 2315              		.loc 2 3218 0
 2316 004a 054A     		ldr	r2, .L272+12
 2317 004c 1368     		ldr	r3, [r2]
 2318 004e 3343     		orr	r3, r6
 2319 0050 1360     		str	r3, [r2]
 2320              	.LVL149:
 2321              	.L265:
 2322              	.LBE59:
 2323              	.LBE58:
3219:Generated_Source\PSoC4/CyLFClk.c ****             }
3220:Generated_Source\PSoC4/CyLFClk.c ****         }
3221:Generated_Source\PSoC4/CyLFClk.c ****         else
3222:Generated_Source\PSoC4/CyLFClk.c ****         {
3223:Generated_Source\PSoC4/CyLFClk.c ****             CYASSERT(0u != 0u);
3224:Generated_Source\PSoC4/CyLFClk.c ****         }
3225:Generated_Source\PSoC4/CyLFClk.c ****         #endif /* (CY_IP_WCO_WDT_EN && CY_IP_SRSSLT) */
3226:Generated_Source\PSoC4/CyLFClk.c ****     }
 2324              		.loc 2 3226 0
 2325              		@ sp needed
 2326 0052 70BD     		pop	{r4, r5, r6, pc}
 2327              	.L273:
 2328              		.align	2
 2329              	.L272:
 2330 0054 FFFF0000 		.word	65535
 2331 0058 00000000 		.word	.LANCHOR1
 2332 005c 00000000 		.word	.LANCHOR0
 2333 0060 00000000 		.word	.LANCHOR2
 2334              		.cfi_endproc
 2335              	.LFE50:
 2336              		.size	CySysTimerDelayUntilMatch, .-CySysTimerDelayUntilMatch
 2337              		.section	.text.CySysTimerDelay,"ax",%progbits
 2338              		.align	1
 2339              		.global	CySysTimerDelay
 2340              		.code	16
 2341              		.thumb_func
 2342              		.type	CySysTimerDelay, %function
 2343              	CySysTimerDelay:
 2344              	.LFB49:
3032:Generated_Source\PSoC4/CyLFClk.c ****         uint32 regValue;
 2345              		.loc 2 3032 0
 2346              		.cfi_startproc
 2347              	.LVL150:
 2348 0000 70B5     		push	{r4, r5, r6, lr}
 2349              		.cfi_def_cfa_offset 16
 2350              		.cfi_offset 4, -16
 2351              		.cfi_offset 5, -12
 2352              		.cfi_offset 6, -8
 2353              		.cfi_offset 14, -4
3052:Generated_Source\PSoC4/CyLFClk.c ****                                                             (delay <= CY_SYS_UINT16_MAX_VAL))
 2354              		.loc 2 3052 0
 2355 0002 0128     		cmp	r0, #1
 2356 0004 12D8     		bhi	.L274
 2357 0006 141C     		mov	r4, r2
 2358 0008 0E1C     		mov	r6, r1
 2359 000a 051C     		mov	r5, r0
3052:Generated_Source\PSoC4/CyLFClk.c ****                                                             (delay <= CY_SYS_UINT16_MAX_VAL))
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccw66xHk.s 			page 113


 2360              		.loc 2 3052 0 is_stmt 0 discriminator 1
 2361 000c FFF7FEFF 		bl	CySysTimerGetClearOnMatch
 2362              	.LVL151:
 2363 0010 0028     		cmp	r0, #0
 2364 0012 0BD1     		bne	.L274
3052:Generated_Source\PSoC4/CyLFClk.c ****                                                             (delay <= CY_SYS_UINT16_MAX_VAL))
 2365              		.loc 2 3052 0 discriminator 2
 2366 0014 064B     		ldr	r3, .L278
 2367 0016 9C42     		cmp	r4, r3
 2368 0018 08D8     		bhi	.L274
3055:Generated_Source\PSoC4/CyLFClk.c ****                 matchValue = (regValue + delay) & (uint32)CY_SYS_UINT16_MAX_VAL;
 2369              		.loc 2 3055 0 is_stmt 1
 2370 001a 281C     		mov	r0, r5
 2371 001c FFF7FEFF 		bl	CySysTimerGetCount
 2372              	.LVL152:
3056:Generated_Source\PSoC4/CyLFClk.c **** 
 2373              		.loc 2 3056 0
 2374 0020 0219     		add	r2, r0, r4
 2375 0022 92B2     		uxth	r2, r2
3058:Generated_Source\PSoC4/CyLFClk.c ****             }
 2376              		.loc 2 3058 0
 2377 0024 281C     		mov	r0, r5
 2378              	.LVL153:
 2379 0026 311C     		mov	r1, r6
 2380 0028 FFF7FEFF 		bl	CySysTimerDelayUntilMatch
 2381              	.LVL154:
 2382              	.L274:
3065:Generated_Source\PSoC4/CyLFClk.c **** 
 2383              		.loc 2 3065 0
 2384              		@ sp needed
 2385 002c 70BD     		pop	{r4, r5, r6, pc}
 2386              	.L279:
 2387 002e C046     		.align	2
 2388              	.L278:
 2389 0030 FFFF0000 		.word	65535
 2390              		.cfi_endproc
 2391              	.LFE49:
 2392              		.size	CySysTimerDelay, .-CySysTimerDelay
 2393              		.section	.rodata
 2394              		.align	2
 2395              		.set	.LANCHOR1,. + 0
 2396              		.type	counterTimerIntMaskTbl, %object
 2397              		.size	counterTimerIntMaskTbl, 12
 2398              	counterTimerIntMaskTbl:
 2399 0000 04000000 		.word	4
 2400 0004 00040000 		.word	1024
 2401 0008 00000400 		.word	262144
 2402              		.data
 2403              		.align	2
 2404              		.set	.LANCHOR2,. + 0
 2405              		.type	timerIsrMask, %object
 2406              		.size	timerIsrMask, 4
 2407              	timerIsrMask:
 2408 0000 04040400 		.word	263172
 2409              		.bss
 2410              		.align	2
 2411              		.set	.LANCHOR0,. + 0
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccw66xHk.s 			page 114


 2412              		.type	compensateRunningStatus.4775, %object
 2413              		.size	compensateRunningStatus.4775, 4
 2414              	compensateRunningStatus.4775:
 2415 0000 00000000 		.space	4
 2416              		.type	cySysWdtCallback, %object
 2417              		.size	cySysWdtCallback, 4
 2418              	cySysWdtCallback:
 2419 0004 00000000 		.space	4
 2420              		.type	cySysTimerCallback, %object
 2421              		.size	cySysTimerCallback, 12
 2422              	cySysTimerCallback:
 2423 0008 00000000 		.space	12
 2423      00000000 
 2423      00000000 
 2424              		.type	disableTimerServicedIsr, %object
 2425              		.size	disableTimerServicedIsr, 4
 2426              	disableTimerServicedIsr:
 2427 0014 00000000 		.space	4
 2428              		.text
 2429              	.Letext0:
 2430              		.file 3 "Generated_Source\\PSoC4\\cytypes.h"
 2431              		.file 4 "Generated_Source\\PSoC4\\CyLib.h"
 2432              		.section	.debug_info,"",%progbits
 2433              	.Ldebug_info0:
 2434 0000 B30C0000 		.4byte	0xcb3
 2435 0004 0400     		.2byte	0x4
 2436 0006 00000000 		.4byte	.Ldebug_abbrev0
 2437 000a 04       		.byte	0x4
 2438 000b 01       		.uleb128 0x1
 2439 000c E8030000 		.4byte	.LASF108
 2440 0010 01       		.byte	0x1
 2441 0011 D3060000 		.4byte	.LASF109
 2442 0015 FA050000 		.4byte	.LASF110
 2443 0019 68000000 		.4byte	.Ldebug_ranges0+0x68
 2444 001d 00000000 		.4byte	0
 2445 0021 00000000 		.4byte	.Ldebug_line0
 2446 0025 02       		.uleb128 0x2
 2447 0026 01       		.byte	0x1
 2448 0027 06       		.byte	0x6
 2449 0028 E9000000 		.4byte	.LASF0
 2450 002c 02       		.uleb128 0x2
 2451 002d 01       		.byte	0x1
 2452 002e 08       		.byte	0x8
 2453 002f 26060000 		.4byte	.LASF1
 2454 0033 02       		.uleb128 0x2
 2455 0034 02       		.byte	0x2
 2456 0035 05       		.byte	0x5
 2457 0036 52060000 		.4byte	.LASF2
 2458 003a 02       		.uleb128 0x2
 2459 003b 02       		.byte	0x2
 2460 003c 07       		.byte	0x7
 2461 003d 6B030000 		.4byte	.LASF3
 2462 0041 02       		.uleb128 0x2
 2463 0042 04       		.byte	0x4
 2464 0043 05       		.byte	0x5
 2465 0044 82010000 		.4byte	.LASF4
 2466 0048 02       		.uleb128 0x2
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccw66xHk.s 			page 115


 2467 0049 04       		.byte	0x4
 2468 004a 07       		.byte	0x7
 2469 004b 21030000 		.4byte	.LASF5
 2470 004f 02       		.uleb128 0x2
 2471 0050 08       		.byte	0x8
 2472 0051 05       		.byte	0x5
 2473 0052 DB000000 		.4byte	.LASF6
 2474 0056 02       		.uleb128 0x2
 2475 0057 08       		.byte	0x8
 2476 0058 07       		.byte	0x7
 2477 0059 6F000000 		.4byte	.LASF7
 2478 005d 03       		.uleb128 0x3
 2479 005e 04       		.byte	0x4
 2480 005f 05       		.byte	0x5
 2481 0060 696E7400 		.ascii	"int\000"
 2482 0064 02       		.uleb128 0x2
 2483 0065 04       		.byte	0x4
 2484 0066 07       		.byte	0x7
 2485 0067 C8020000 		.4byte	.LASF8
 2486 006b 04       		.uleb128 0x4
 2487 006c 9D010000 		.4byte	.LASF9
 2488 0070 03       		.byte	0x3
 2489 0071 B901     		.2byte	0x1b9
 2490 0073 2C000000 		.4byte	0x2c
 2491 0077 04       		.uleb128 0x4
 2492 0078 00000000 		.4byte	.LASF10
 2493 007c 03       		.byte	0x3
 2494 007d BA01     		.2byte	0x1ba
 2495 007f 3A000000 		.4byte	0x3a
 2496 0083 04       		.uleb128 0x4
 2497 0084 0F020000 		.4byte	.LASF11
 2498 0088 03       		.byte	0x3
 2499 0089 BB01     		.2byte	0x1bb
 2500 008b 48000000 		.4byte	0x48
 2501 008f 02       		.uleb128 0x2
 2502 0090 04       		.byte	0x4
 2503 0091 04       		.byte	0x4
 2504 0092 95050000 		.4byte	.LASF12
 2505 0096 02       		.uleb128 0x2
 2506 0097 08       		.byte	0x8
 2507 0098 04       		.byte	0x4
 2508 0099 AA010000 		.4byte	.LASF13
 2509 009d 02       		.uleb128 0x2
 2510 009e 01       		.byte	0x1
 2511 009f 08       		.byte	0x8
 2512 00a0 46070000 		.4byte	.LASF14
 2513 00a4 04       		.uleb128 0x4
 2514 00a5 0D080000 		.4byte	.LASF15
 2515 00a9 03       		.byte	0x3
 2516 00aa 5B02     		.2byte	0x25b
 2517 00ac 48000000 		.4byte	0x48
 2518 00b0 04       		.uleb128 0x4
 2519 00b1 96040000 		.4byte	.LASF16
 2520 00b5 03       		.byte	0x3
 2521 00b6 6502     		.2byte	0x265
 2522 00b8 BC000000 		.4byte	0xbc
 2523 00bc 05       		.uleb128 0x5
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccw66xHk.s 			page 116


 2524 00bd 83000000 		.4byte	0x83
 2525 00c1 06       		.uleb128 0x6
 2526 00c2 04       		.byte	0x4
 2527 00c3 C7000000 		.4byte	0xc7
 2528 00c7 07       		.uleb128 0x7
 2529 00c8 08       		.uleb128 0x8
 2530 00c9 01       		.byte	0x1
 2531 00ca 01       		.byte	0x1
 2532 00cb 1B       		.byte	0x1b
 2533 00cc DD000000 		.4byte	0xdd
 2534 00d0 09       		.uleb128 0x9
 2535 00d1 40050000 		.4byte	.LASF17
 2536 00d5 00       		.sleb128 0
 2537 00d6 09       		.uleb128 0x9
 2538 00d7 5D080000 		.4byte	.LASF18
 2539 00db 01       		.sleb128 1
 2540 00dc 00       		.byte	0
 2541 00dd 0A       		.uleb128 0xa
 2542 00de 61010000 		.4byte	.LASF19
 2543 00e2 01       		.byte	0x1
 2544 00e3 1E       		.byte	0x1e
 2545 00e4 C8000000 		.4byte	0xc8
 2546 00e8 0A       		.uleb128 0xa
 2547 00e9 31010000 		.4byte	.LASF20
 2548 00ed 01       		.byte	0x1
 2549 00ee 58       		.byte	0x58
 2550 00ef C1000000 		.4byte	0xc1
 2551 00f3 0A       		.uleb128 0xa
 2552 00f4 4C000000 		.4byte	.LASF21
 2553 00f8 01       		.byte	0x1
 2554 00f9 5C       		.byte	0x5c
 2555 00fa C1000000 		.4byte	0xc1
 2556 00fe 02       		.uleb128 0x2
 2557 00ff 04       		.byte	0x4
 2558 0100 07       		.byte	0x7
 2559 0101 F8040000 		.4byte	.LASF22
 2560 0105 0B       		.uleb128 0xb
 2561 0106 B3040000 		.4byte	.LASF111
 2562 010a 02       		.byte	0x2
 2563 010b 8008     		.2byte	0x880
 2564 010d 83000000 		.4byte	0x83
 2565 0111 01       		.byte	0x1
 2566 0112 23010000 		.4byte	0x123
 2567 0116 0C       		.uleb128 0xc
 2568 0117 7A040000 		.4byte	.LASF26
 2569 011b 02       		.byte	0x2
 2570 011c 8208     		.2byte	0x882
 2571 011e 83000000 		.4byte	0x83
 2572 0122 00       		.byte	0
 2573 0123 0D       		.uleb128 0xd
 2574 0124 9B050000 		.4byte	.LASF106
 2575 0128 02       		.byte	0x2
 2576 0129 580C     		.2byte	0xc58
 2577 012b 01       		.byte	0x1
 2578 012c 61010000 		.4byte	0x161
 2579 0130 0E       		.uleb128 0xe
 2580 0131 2E000000 		.4byte	.LASF23
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccw66xHk.s 			page 117


 2581 0135 02       		.byte	0x2
 2582 0136 580C     		.2byte	0xc58
 2583 0138 83000000 		.4byte	0x83
 2584 013c 0E       		.uleb128 0xe
 2585 013d 5C060000 		.4byte	.LASF24
 2586 0141 02       		.byte	0x2
 2587 0142 580C     		.2byte	0xc58
 2588 0144 DD000000 		.4byte	0xdd
 2589 0148 0E       		.uleb128 0xe
 2590 0149 25050000 		.4byte	.LASF25
 2591 014d 02       		.byte	0x2
 2592 014e 580C     		.2byte	0xc58
 2593 0150 83000000 		.4byte	0x83
 2594 0154 0C       		.uleb128 0xc
 2595 0155 7B070000 		.4byte	.LASF27
 2596 0159 02       		.byte	0x2
 2597 015a 5A0C     		.2byte	0xc5a
 2598 015c 83000000 		.4byte	0x83
 2599 0160 00       		.byte	0
 2600 0161 0F       		.uleb128 0xf
 2601 0162 BF000000 		.4byte	.LASF112
 2602 0166 01       		.byte	0x1
 2603 0167 9002     		.2byte	0x290
 2604 0169 00000000 		.4byte	.LFB0
 2605 016d 34000000 		.4byte	.LFE0-.LFB0
 2606 0171 01       		.uleb128 0x1
 2607 0172 9C       		.byte	0x9c
 2608 0173 10       		.uleb128 0x10
 2609 0174 D7030000 		.4byte	.LASF28
 2610 0178 02       		.byte	0x2
 2611 0179 53       		.byte	0x53
 2612 017a 00000000 		.4byte	.LFB1
 2613 017e 14000000 		.4byte	.LFE1-.LFB1
 2614 0182 01       		.uleb128 0x1
 2615 0183 9C       		.byte	0x9c
 2616 0184 10       		.uleb128 0x10
 2617 0185 C3010000 		.4byte	.LASF29
 2618 0189 02       		.byte	0x2
 2619 018a 6C       		.byte	0x6c
 2620 018b 00000000 		.4byte	.LFB2
 2621 018f 10000000 		.4byte	.LFE2-.LFB2
 2622 0193 01       		.uleb128 0x1
 2623 0194 9C       		.byte	0x9c
 2624 0195 10       		.uleb128 0x10
 2625 0196 A2060000 		.4byte	.LASF30
 2626 019a 02       		.byte	0x2
 2627 019b A8       		.byte	0xa8
 2628 019c 00000000 		.4byte	.LFB3
 2629 01a0 34000000 		.4byte	.LFE3-.LFB3
 2630 01a4 01       		.uleb128 0x1
 2631 01a5 9C       		.byte	0x9c
 2632 01a6 10       		.uleb128 0x10
 2633 01a7 16020000 		.4byte	.LASF31
 2634 01ab 02       		.byte	0x2
 2635 01ac C9       		.byte	0xc9
 2636 01ad 00000000 		.4byte	.LFB4
 2637 01b1 28000000 		.4byte	.LFE4-.LFB4
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccw66xHk.s 			page 118


 2638 01b5 01       		.uleb128 0x1
 2639 01b6 9C       		.byte	0x9c
 2640 01b7 11       		.uleb128 0x11
 2641 01b8 47080000 		.4byte	.LASF41
 2642 01bc 02       		.byte	0x2
 2643 01bd 0B01     		.2byte	0x10b
 2644 01bf A4000000 		.4byte	0xa4
 2645 01c3 00000000 		.4byte	.LFB5
 2646 01c7 EC000000 		.4byte	.LFE5-.LFB5
 2647 01cb 01       		.uleb128 0x1
 2648 01cc 9C       		.byte	0x9c
 2649 01cd 44020000 		.4byte	0x244
 2650 01d1 12       		.uleb128 0x12
 2651 01d2 14030000 		.4byte	.LASF32
 2652 01d6 02       		.byte	0x2
 2653 01d7 0B01     		.2byte	0x10b
 2654 01d9 83000000 		.4byte	0x83
 2655 01dd 00000000 		.4byte	.LLST0
 2656 01e1 12       		.uleb128 0x12
 2657 01e2 B1010000 		.4byte	.LASF33
 2658 01e6 02       		.byte	0x2
 2659 01e7 0B01     		.2byte	0x10b
 2660 01e9 44020000 		.4byte	0x244
 2661 01ed 48000000 		.4byte	.LLST1
 2662 01f1 13       		.uleb128 0x13
 2663 01f2 D3010000 		.4byte	.LASF34
 2664 01f6 02       		.byte	0x2
 2665 01f7 0D01     		.2byte	0x10d
 2666 01f9 83000000 		.4byte	0x83
 2667 01fd 7F000000 		.4byte	.LLST2
 2668 0201 13       		.uleb128 0x13
 2669 0202 A3070000 		.4byte	.LASF35
 2670 0206 02       		.byte	0x2
 2671 0207 0E01     		.2byte	0x10e
 2672 0209 83000000 		.4byte	0x83
 2673 020d 9D000000 		.4byte	.LLST3
 2674 0211 14       		.uleb128 0x14
 2675 0212 34060000 		.4byte	.LASF36
 2676 0216 02       		.byte	0x2
 2677 0217 0F01     		.2byte	0x10f
 2678 0219 83000000 		.4byte	0x83
 2679 021d 05       		.uleb128 0x5
 2680 021e 03       		.byte	0x3
 2681 021f 00000000 		.4byte	compensateRunningStatus.4775
 2682 0223 13       		.uleb128 0x13
 2683 0224 52050000 		.4byte	.LASF37
 2684 0228 02       		.byte	0x2
 2685 0229 1001     		.2byte	0x110
 2686 022b 83000000 		.4byte	0x83
 2687 022f D1000000 		.4byte	.LLST4
 2688 0233 13       		.uleb128 0x13
 2689 0234 CA040000 		.4byte	.LASF38
 2690 0238 02       		.byte	0x2
 2691 0239 1101     		.2byte	0x111
 2692 023b A4000000 		.4byte	0xa4
 2693 023f F5000000 		.4byte	.LLST5
 2694 0243 00       		.byte	0
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccw66xHk.s 			page 119


 2695 0244 06       		.uleb128 0x6
 2696 0245 04       		.byte	0x4
 2697 0246 83000000 		.4byte	0x83
 2698 024a 15       		.uleb128 0x15
 2699 024b B8070000 		.4byte	.LASF39
 2700 024f 02       		.byte	0x2
 2701 0250 0303     		.2byte	0x303
 2702 0252 00000000 		.4byte	.LFB6
 2703 0256 18000000 		.4byte	.LFE6-.LFB6
 2704 025a 01       		.uleb128 0x1
 2705 025b 9C       		.byte	0x9c
 2706 025c 6A020000 		.4byte	0x26a
 2707 0260 16       		.uleb128 0x16
 2708 0261 06000000 		.4byte	.LVL22
 2709 0265 61010000 		.4byte	0x161
 2710 0269 00       		.byte	0
 2711 026a 17       		.uleb128 0x17
 2712 026b 98000000 		.4byte	.LASF47
 2713 026f 02       		.byte	0x2
 2714 0270 3803     		.2byte	0x338
 2715 0272 83000000 		.4byte	0x83
 2716 0276 00000000 		.4byte	.LFB8
 2717 027a 0C000000 		.4byte	.LFE8-.LFB8
 2718 027e 01       		.uleb128 0x1
 2719 027f 9C       		.byte	0x9c
 2720 0280 15       		.uleb128 0x15
 2721 0281 1E070000 		.4byte	.LASF40
 2722 0285 02       		.byte	0x2
 2723 0286 1503     		.2byte	0x315
 2724 0288 00000000 		.4byte	.LFB7
 2725 028c 1C000000 		.4byte	.LFE7-.LFB7
 2726 0290 01       		.uleb128 0x1
 2727 0291 9C       		.byte	0x9c
 2728 0292 A0020000 		.4byte	0x2a0
 2729 0296 16       		.uleb128 0x16
 2730 0297 06000000 		.4byte	.LVL23
 2731 029b 6A020000 		.4byte	0x26a
 2732 029f 00       		.byte	0
 2733 02a0 18       		.uleb128 0x18
 2734 02a1 2E070000 		.4byte	.LASF42
 2735 02a5 02       		.byte	0x2
 2736 02a6 5303     		.2byte	0x353
 2737 02a8 83000000 		.4byte	0x83
 2738 02ac 00000000 		.4byte	.LFB9
 2739 02b0 1C000000 		.4byte	.LFE9-.LFB9
 2740 02b4 01       		.uleb128 0x1
 2741 02b5 9C       		.byte	0x9c
 2742 02b6 E4020000 		.4byte	0x2e4
 2743 02ba 12       		.uleb128 0x12
 2744 02bb 4B070000 		.4byte	.LASF43
 2745 02bf 02       		.byte	0x2
 2746 02c0 5303     		.2byte	0x353
 2747 02c2 83000000 		.4byte	0x83
 2748 02c6 20010000 		.4byte	.LLST6
 2749 02ca 13       		.uleb128 0x13
 2750 02cb 86040000 		.4byte	.LASF44
 2751 02cf 02       		.byte	0x2
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccw66xHk.s 			page 120


 2752 02d0 5503     		.2byte	0x355
 2753 02d2 83000000 		.4byte	0x83
 2754 02d6 41010000 		.4byte	.LLST7
 2755 02da 16       		.uleb128 0x16
 2756 02db 12000000 		.4byte	.LVL26
 2757 02df 61010000 		.4byte	0x161
 2758 02e3 00       		.byte	0
 2759 02e4 15       		.uleb128 0x15
 2760 02e5 DE040000 		.4byte	.LASF45
 2761 02e9 02       		.byte	0x2
 2762 02ea 9603     		.2byte	0x396
 2763 02ec 00000000 		.4byte	.LFB10
 2764 02f0 24000000 		.4byte	.LFE10-.LFB10
 2765 02f4 01       		.uleb128 0x1
 2766 02f5 9C       		.byte	0x9c
 2767 02f6 14030000 		.4byte	0x314
 2768 02fa 12       		.uleb128 0x12
 2769 02fb 94010000 		.4byte	.LASF46
 2770 02ff 02       		.byte	0x2
 2771 0300 9603     		.2byte	0x396
 2772 0302 83000000 		.4byte	0x83
 2773 0306 5F010000 		.4byte	.LLST8
 2774 030a 16       		.uleb128 0x16
 2775 030b 08000000 		.4byte	.LVL29
 2776 030f 6A020000 		.4byte	0x26a
 2777 0313 00       		.byte	0
 2778 0314 17       		.uleb128 0x17
 2779 0315 7E030000 		.4byte	.LASF48
 2780 0319 02       		.byte	0x2
 2781 031a 7E07     		.2byte	0x77e
 2782 031c 83000000 		.4byte	0x83
 2783 0320 00000000 		.4byte	.LFB11
 2784 0324 18000000 		.4byte	.LFE11-.LFB11
 2785 0328 01       		.uleb128 0x1
 2786 0329 9C       		.byte	0x9c
 2787 032a 19       		.uleb128 0x19
 2788 032b 71020000 		.4byte	.LASF49
 2789 032f 02       		.byte	0x2
 2790 0330 9107     		.2byte	0x791
 2791 0332 00000000 		.4byte	.LFB12
 2792 0336 0C000000 		.4byte	.LFE12-.LFB12
 2793 033a 01       		.uleb128 0x1
 2794 033b 9C       		.byte	0x9c
 2795 033c 19       		.uleb128 0x19
 2796 033d 66060000 		.4byte	.LASF50
 2797 0341 02       		.byte	0x2
 2798 0342 A107     		.2byte	0x7a1
 2799 0344 00000000 		.4byte	.LFB13
 2800 0348 10000000 		.4byte	.LFE13-.LFB13
 2801 034c 01       		.uleb128 0x1
 2802 034d 9C       		.byte	0x9c
 2803 034e 15       		.uleb128 0x15
 2804 034f 4B020000 		.4byte	.LASF51
 2805 0353 02       		.byte	0x2
 2806 0354 B107     		.2byte	0x7b1
 2807 0356 00000000 		.4byte	.LFB14
 2808 035a 14000000 		.4byte	.LFE14-.LFB14
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccw66xHk.s 			page 121


 2809 035e 01       		.uleb128 0x1
 2810 035f 9C       		.byte	0x9c
 2811 0360 75030000 		.4byte	0x375
 2812 0364 12       		.uleb128 0x12
 2813 0365 25050000 		.4byte	.LASF25
 2814 0369 02       		.byte	0x2
 2815 036a B107     		.2byte	0x7b1
 2816 036c 83000000 		.4byte	0x83
 2817 0370 8B010000 		.4byte	.LLST9
 2818 0374 00       		.byte	0
 2819 0375 17       		.uleb128 0x17
 2820 0376 01050000 		.4byte	.LASF52
 2821 037a 02       		.byte	0x2
 2822 037b C107     		.2byte	0x7c1
 2823 037d 83000000 		.4byte	0x83
 2824 0381 00000000 		.4byte	.LFB15
 2825 0385 0C000000 		.4byte	.LFE15-.LFB15
 2826 0389 01       		.uleb128 0x1
 2827 038a 9C       		.byte	0x9c
 2828 038b 17       		.uleb128 0x17
 2829 038c 50070000 		.4byte	.LASF53
 2830 0390 02       		.byte	0x2
 2831 0391 D007     		.2byte	0x7d0
 2832 0393 83000000 		.4byte	0x83
 2833 0397 00000000 		.4byte	.LFB16
 2834 039b 0C000000 		.4byte	.LFE16-.LFB16
 2835 039f 01       		.uleb128 0x1
 2836 03a0 9C       		.byte	0x9c
 2837 03a1 15       		.uleb128 0x15
 2838 03a2 F2020000 		.4byte	.LASF54
 2839 03a6 02       		.byte	0x2
 2840 03a7 E407     		.2byte	0x7e4
 2841 03a9 00000000 		.4byte	.LFB17
 2842 03ad 20000000 		.4byte	.LFE17-.LFB17
 2843 03b1 01       		.uleb128 0x1
 2844 03b2 9C       		.byte	0x9c
 2845 03b3 C8030000 		.4byte	0x3c8
 2846 03b7 12       		.uleb128 0x12
 2847 03b8 CD050000 		.4byte	.LASF55
 2848 03bc 02       		.byte	0x2
 2849 03bd E407     		.2byte	0x7e4
 2850 03bf 83000000 		.4byte	0x83
 2851 03c3 C1010000 		.4byte	.LLST10
 2852 03c7 00       		.byte	0
 2853 03c8 17       		.uleb128 0x17
 2854 03c9 1B010000 		.4byte	.LASF56
 2855 03cd 02       		.byte	0x2
 2856 03ce F607     		.2byte	0x7f6
 2857 03d0 83000000 		.4byte	0x83
 2858 03d4 00000000 		.4byte	.LFB18
 2859 03d8 10000000 		.4byte	.LFE18-.LFB18
 2860 03dc 01       		.uleb128 0x1
 2861 03dd 9C       		.byte	0x9c
 2862 03de 19       		.uleb128 0x19
 2863 03df 7E050000 		.4byte	.LASF57
 2864 03e3 02       		.byte	0x2
 2865 03e4 0708     		.2byte	0x807
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccw66xHk.s 			page 122


 2866 03e6 00000000 		.4byte	.LFB19
 2867 03ea 10000000 		.4byte	.LFE19-.LFB19
 2868 03ee 01       		.uleb128 0x1
 2869 03ef 9C       		.byte	0x9c
 2870 03f0 19       		.uleb128 0x19
 2871 03f1 55030000 		.4byte	.LASF58
 2872 03f5 02       		.byte	0x2
 2873 03f6 1608     		.2byte	0x816
 2874 03f8 00000000 		.4byte	.LFB20
 2875 03fc 10000000 		.4byte	.LFE20-.LFB20
 2876 0400 01       		.uleb128 0x1
 2877 0401 9C       		.byte	0x9c
 2878 0402 19       		.uleb128 0x19
 2879 0403 B5050000 		.4byte	.LASF59
 2880 0407 02       		.byte	0x2
 2881 0408 2508     		.2byte	0x825
 2882 040a 00000000 		.4byte	.LFB21
 2883 040e 10000000 		.4byte	.LFE21-.LFB21
 2884 0412 01       		.uleb128 0x1
 2885 0413 9C       		.byte	0x9c
 2886 0414 18       		.uleb128 0x18
 2887 0415 80020000 		.4byte	.LASF60
 2888 0419 02       		.byte	0x2
 2889 041a 3708     		.2byte	0x837
 2890 041c E8000000 		.4byte	0xe8
 2891 0420 00000000 		.4byte	.LFB22
 2892 0424 10000000 		.4byte	.LFE22-.LFB22
 2893 0428 01       		.uleb128 0x1
 2894 0429 9C       		.byte	0x9c
 2895 042a 4F040000 		.4byte	0x44f
 2896 042e 12       		.uleb128 0x12
 2897 042f 03010000 		.4byte	.LASF61
 2898 0433 02       		.byte	0x2
 2899 0434 3708     		.2byte	0x837
 2900 0436 E8000000 		.4byte	0xe8
 2901 043a F9010000 		.4byte	.LLST11
 2902 043e 13       		.uleb128 0x13
 2903 043f 3E020000 		.4byte	.LASF62
 2904 0443 02       		.byte	0x2
 2905 0444 3908     		.2byte	0x839
 2906 0446 E8000000 		.4byte	0xe8
 2907 044a 1B020000 		.4byte	.LLST12
 2908 044e 00       		.byte	0
 2909 044f 17       		.uleb128 0x17
 2910 0450 97030000 		.4byte	.LASF63
 2911 0454 02       		.byte	0x2
 2912 0455 4C08     		.2byte	0x84c
 2913 0457 E8000000 		.4byte	0xe8
 2914 045b 00000000 		.4byte	.LFB23
 2915 045f 0C000000 		.4byte	.LFE23-.LFB23
 2916 0463 01       		.uleb128 0x1
 2917 0464 9C       		.byte	0x9c
 2918 0465 1A       		.uleb128 0x1a
 2919 0466 CB030000 		.4byte	.LASF64
 2920 046a 02       		.byte	0x2
 2921 046b 6408     		.2byte	0x864
 2922 046d 00000000 		.4byte	.LFB24
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccw66xHk.s 			page 123


 2923 0471 18000000 		.4byte	.LFE24-.LFB24
 2924 0475 01       		.uleb128 0x1
 2925 0476 9C       		.byte	0x9c
 2926 0477 85040000 		.4byte	0x485
 2927 047b 16       		.uleb128 0x16
 2928 047c 10000000 		.4byte	.LVL40
 2929 0480 DE030000 		.4byte	0x3de
 2930 0484 00       		.byte	0
 2931 0485 15       		.uleb128 0x15
 2932 0486 07070000 		.4byte	.LASF65
 2933 048a 02       		.byte	0x2
 2934 048b A108     		.2byte	0x8a1
 2935 048d 00000000 		.4byte	.LFB26
 2936 0491 60000000 		.4byte	.LFE26-.LFB26
 2937 0495 01       		.uleb128 0x1
 2938 0496 9C       		.byte	0x9c
 2939 0497 FB040000 		.4byte	0x4fb
 2940 049b 12       		.uleb128 0x12
 2941 049c D7040000 		.4byte	.LASF66
 2942 04a0 02       		.byte	0x2
 2943 04a1 A108     		.2byte	0x8a1
 2944 04a3 83000000 		.4byte	0x83
 2945 04a7 3A020000 		.4byte	.LLST13
 2946 04ab 13       		.uleb128 0x13
 2947 04ac 0C010000 		.4byte	.LASF67
 2948 04b0 02       		.byte	0x2
 2949 04b1 A308     		.2byte	0x8a3
 2950 04b3 6B000000 		.4byte	0x6b
 2951 04b7 66020000 		.4byte	.LLST14
 2952 04bb 1B       		.uleb128 0x1b
 2953 04bc 05010000 		.4byte	0x105
 2954 04c0 02000000 		.4byte	.LBB4
 2955 04c4 00000000 		.4byte	.Ldebug_ranges0+0
 2956 04c8 02       		.byte	0x2
 2957 04c9 A508     		.2byte	0x8a5
 2958 04cb DF040000 		.4byte	0x4df
 2959 04cf 1C       		.uleb128 0x1c
 2960 04d0 00000000 		.4byte	.Ldebug_ranges0+0
 2961 04d4 1D       		.uleb128 0x1d
 2962 04d5 16010000 		.4byte	0x116
 2963 04d9 79020000 		.4byte	.LLST15
 2964 04dd 00       		.byte	0
 2965 04de 00       		.byte	0
 2966 04df 16       		.uleb128 0x16
 2967 04e0 28000000 		.4byte	.LVL45
 2968 04e4 8D0C0000 		.4byte	0xc8d
 2969 04e8 16       		.uleb128 0x16
 2970 04e9 2C000000 		.4byte	.LVL46
 2971 04ed 9E0C0000 		.4byte	0xc9e
 2972 04f1 16       		.uleb128 0x16
 2973 04f2 3E000000 		.4byte	.LVL48
 2974 04f6 A90C0000 		.4byte	0xca9
 2975 04fa 00       		.byte	0
 2976 04fb 1E       		.uleb128 0x1e
 2977 04fc 87060000 		.4byte	.LASF113
 2978 0500 02       		.byte	0x2
 2979 0501 CD08     		.2byte	0x8cd
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccw66xHk.s 			page 124


 2980 0503 83000000 		.4byte	0x83
 2981 0507 01       		.byte	0x1
 2982 0508 19050000 		.4byte	0x519
 2983 050c 0E       		.uleb128 0xe
 2984 050d 2E000000 		.4byte	.LASF23
 2985 0511 02       		.byte	0x2
 2986 0512 CD08     		.2byte	0x8cd
 2987 0514 83000000 		.4byte	0x83
 2988 0518 00       		.byte	0
 2989 0519 1F       		.uleb128 0x1f
 2990 051a FB040000 		.4byte	0x4fb
 2991 051e 00000000 		.4byte	.LFB27
 2992 0522 18000000 		.4byte	.LFE27-.LFB27
 2993 0526 01       		.uleb128 0x1
 2994 0527 9C       		.byte	0x9c
 2995 0528 36050000 		.4byte	0x536
 2996 052c 20       		.uleb128 0x20
 2997 052d 0C050000 		.4byte	0x50c
 2998 0531 93020000 		.4byte	.LLST16
 2999 0535 00       		.byte	0
 3000 0536 15       		.uleb128 0x15
 3001 0537 6C050000 		.4byte	.LASF68
 3002 053b 02       		.byte	0x2
 3003 053c EA08     		.2byte	0x8ea
 3004 053e 00000000 		.4byte	.LFB28
 3005 0542 2C000000 		.4byte	.LFE28-.LFB28
 3006 0546 01       		.uleb128 0x1
 3007 0547 9C       		.byte	0x9c
 3008 0548 8D050000 		.4byte	0x58d
 3009 054c 12       		.uleb128 0x12
 3010 054d 2E000000 		.4byte	.LASF23
 3011 0551 02       		.byte	0x2
 3012 0552 EA08     		.2byte	0x8ea
 3013 0554 83000000 		.4byte	0x83
 3014 0558 B4020000 		.4byte	.LLST17
 3015 055c 12       		.uleb128 0x12
 3016 055d 4B070000 		.4byte	.LASF43
 3017 0561 02       		.byte	0x2
 3018 0562 EA08     		.2byte	0x8ea
 3019 0564 83000000 		.4byte	0x83
 3020 0568 E0020000 		.4byte	.LLST18
 3021 056c 13       		.uleb128 0x13
 3022 056d C9070000 		.4byte	.LASF69
 3023 0571 02       		.byte	0x2
 3024 0572 EC08     		.2byte	0x8ec
 3025 0574 83000000 		.4byte	0x83
 3026 0578 0C030000 		.4byte	.LLST19
 3027 057c 21       		.uleb128 0x21
 3028 057d 0A000000 		.4byte	.LVL52
 3029 0581 FB040000 		.4byte	0x4fb
 3030 0585 22       		.uleb128 0x22
 3031 0586 01       		.uleb128 0x1
 3032 0587 50       		.byte	0x50
 3033 0588 02       		.uleb128 0x2
 3034 0589 74       		.byte	0x74
 3035 058a 00       		.sleb128 0
 3036 058b 00       		.byte	0
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccw66xHk.s 			page 125


 3037 058c 00       		.byte	0
 3038 058d 18       		.uleb128 0x18
 3039 058e 86000000 		.4byte	.LASF70
 3040 0592 02       		.byte	0x2
 3041 0593 0809     		.2byte	0x908
 3042 0595 83000000 		.4byte	0x83
 3043 0599 00000000 		.4byte	.LFB29
 3044 059d 14000000 		.4byte	.LFE29-.LFB29
 3045 05a1 01       		.uleb128 0x1
 3046 05a2 9C       		.byte	0x9c
 3047 05a3 B8050000 		.4byte	0x5b8
 3048 05a7 12       		.uleb128 0x12
 3049 05a8 2E000000 		.4byte	.LASF23
 3050 05ac 02       		.byte	0x2
 3051 05ad 0809     		.2byte	0x908
 3052 05af 83000000 		.4byte	0x83
 3053 05b3 2A030000 		.4byte	.LLST20
 3054 05b7 00       		.byte	0
 3055 05b8 15       		.uleb128 0x15
 3056 05b9 F5010000 		.4byte	.LASF71
 3057 05bd 02       		.byte	0x2
 3058 05be 2409     		.2byte	0x924
 3059 05c0 00000000 		.4byte	.LFB30
 3060 05c4 2C000000 		.4byte	.LFE30-.LFB30
 3061 05c8 01       		.uleb128 0x1
 3062 05c9 9C       		.byte	0x9c
 3063 05ca 0F060000 		.4byte	0x60f
 3064 05ce 12       		.uleb128 0x12
 3065 05cf 2E000000 		.4byte	.LASF23
 3066 05d3 02       		.byte	0x2
 3067 05d4 2409     		.2byte	0x924
 3068 05d6 83000000 		.4byte	0x83
 3069 05da 4B030000 		.4byte	.LLST21
 3070 05de 12       		.uleb128 0x12
 3071 05df A3010000 		.4byte	.LASF72
 3072 05e3 02       		.byte	0x2
 3073 05e4 2409     		.2byte	0x924
 3074 05e6 83000000 		.4byte	0x83
 3075 05ea 77030000 		.4byte	.LLST22
 3076 05ee 13       		.uleb128 0x13
 3077 05ef C9070000 		.4byte	.LASF69
 3078 05f3 02       		.byte	0x2
 3079 05f4 2609     		.2byte	0x926
 3080 05f6 83000000 		.4byte	0x83
 3081 05fa A3030000 		.4byte	.LLST23
 3082 05fe 21       		.uleb128 0x21
 3083 05ff 0A000000 		.4byte	.LVL61
 3084 0603 FB040000 		.4byte	0x4fb
 3085 0607 22       		.uleb128 0x22
 3086 0608 01       		.uleb128 0x1
 3087 0609 50       		.byte	0x50
 3088 060a 02       		.uleb128 0x2
 3089 060b 74       		.byte	0x74
 3090 060c 00       		.sleb128 0
 3091 060d 00       		.byte	0
 3092 060e 00       		.byte	0
 3093 060f 18       		.uleb128 0x18
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccw66xHk.s 			page 126


 3094 0610 61070000 		.4byte	.LASF73
 3095 0614 02       		.byte	0x2
 3096 0615 4509     		.2byte	0x945
 3097 0617 83000000 		.4byte	0x83
 3098 061b 00000000 		.4byte	.LFB31
 3099 061f 18000000 		.4byte	.LFE31-.LFB31
 3100 0623 01       		.uleb128 0x1
 3101 0624 9C       		.byte	0x9c
 3102 0625 3A060000 		.4byte	0x63a
 3103 0629 12       		.uleb128 0x12
 3104 062a 2E000000 		.4byte	.LASF23
 3105 062e 02       		.byte	0x2
 3106 062f 4509     		.2byte	0x945
 3107 0631 83000000 		.4byte	0x83
 3108 0635 C1030000 		.4byte	.LLST24
 3109 0639 00       		.byte	0
 3110 063a 15       		.uleb128 0x15
 3111 063b 76060000 		.4byte	.LASF74
 3112 063f 02       		.byte	0x2
 3113 0640 6809     		.2byte	0x968
 3114 0642 00000000 		.4byte	.LFB32
 3115 0646 2C000000 		.4byte	.LFE32-.LFB32
 3116 064a 01       		.uleb128 0x1
 3117 064b 9C       		.byte	0x9c
 3118 064c B5060000 		.4byte	0x6b5
 3119 0650 23       		.uleb128 0x23
 3120 0651 9D020000 		.4byte	.LASF75
 3121 0655 02       		.byte	0x2
 3122 0656 6809     		.2byte	0x968
 3123 0658 83000000 		.4byte	0x83
 3124 065c 01       		.uleb128 0x1
 3125 065d 50       		.byte	0x50
 3126 065e 24       		.uleb128 0x24
 3127 065f FB040000 		.4byte	0x4fb
 3128 0663 0C000000 		.4byte	.LBB14
 3129 0667 02000000 		.4byte	.LBE14-.LBB14
 3130 066b 02       		.byte	0x2
 3131 066c 6E09     		.2byte	0x96e
 3132 066e 7C060000 		.4byte	0x67c
 3133 0672 20       		.uleb128 0x20
 3134 0673 0C050000 		.4byte	0x50c
 3135 0677 E2030000 		.4byte	.LLST25
 3136 067b 00       		.byte	0
 3137 067c 24       		.uleb128 0x24
 3138 067d FB040000 		.4byte	0x4fb
 3139 0681 16000000 		.4byte	.LBB16
 3140 0685 02000000 		.4byte	.LBE16-.LBB16
 3141 0689 02       		.byte	0x2
 3142 068a 7609     		.2byte	0x976
 3143 068c 9A060000 		.4byte	0x69a
 3144 0690 20       		.uleb128 0x20
 3145 0691 0C050000 		.4byte	0x50c
 3146 0695 F6030000 		.4byte	.LLST26
 3147 0699 00       		.byte	0
 3148 069a 25       		.uleb128 0x25
 3149 069b FB040000 		.4byte	0x4fb
 3150 069f 20000000 		.4byte	.LBB18
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccw66xHk.s 			page 127


 3151 06a3 02000000 		.4byte	.LBE18-.LBB18
 3152 06a7 02       		.byte	0x2
 3153 06a8 7E09     		.2byte	0x97e
 3154 06aa 20       		.uleb128 0x20
 3155 06ab 0C050000 		.4byte	0x50c
 3156 06af 0A040000 		.4byte	.LLST27
 3157 06b3 00       		.byte	0
 3158 06b4 00       		.byte	0
 3159 06b5 15       		.uleb128 0x15
 3160 06b6 FB070000 		.4byte	.LASF76
 3161 06ba 02       		.byte	0x2
 3162 06bb 9509     		.2byte	0x995
 3163 06bd 00000000 		.4byte	.LFB33
 3164 06c1 2C000000 		.4byte	.LFE33-.LFB33
 3165 06c5 01       		.uleb128 0x1
 3166 06c6 9C       		.byte	0x9c
 3167 06c7 30070000 		.4byte	0x730
 3168 06cb 23       		.uleb128 0x23
 3169 06cc 9D020000 		.4byte	.LASF75
 3170 06d0 02       		.byte	0x2
 3171 06d1 9509     		.2byte	0x995
 3172 06d3 83000000 		.4byte	0x83
 3173 06d7 01       		.uleb128 0x1
 3174 06d8 50       		.byte	0x50
 3175 06d9 24       		.uleb128 0x24
 3176 06da FB040000 		.4byte	0x4fb
 3177 06de 0C000000 		.4byte	.LBB26
 3178 06e2 02000000 		.4byte	.LBE26-.LBB26
 3179 06e6 02       		.byte	0x2
 3180 06e7 9C09     		.2byte	0x99c
 3181 06e9 F7060000 		.4byte	0x6f7
 3182 06ed 20       		.uleb128 0x20
 3183 06ee 0C050000 		.4byte	0x50c
 3184 06f2 1E040000 		.4byte	.LLST28
 3185 06f6 00       		.byte	0
 3186 06f7 24       		.uleb128 0x24
 3187 06f8 FB040000 		.4byte	0x4fb
 3188 06fc 16000000 		.4byte	.LBB28
 3189 0700 02000000 		.4byte	.LBE28-.LBB28
 3190 0704 02       		.byte	0x2
 3191 0705 A409     		.2byte	0x9a4
 3192 0707 15070000 		.4byte	0x715
 3193 070b 20       		.uleb128 0x20
 3194 070c 0C050000 		.4byte	0x50c
 3195 0710 32040000 		.4byte	.LLST29
 3196 0714 00       		.byte	0
 3197 0715 25       		.uleb128 0x25
 3198 0716 FB040000 		.4byte	0x4fb
 3199 071a 20000000 		.4byte	.LBB30
 3200 071e 02000000 		.4byte	.LBE30-.LBB30
 3201 0722 02       		.byte	0x2
 3202 0723 AC09     		.2byte	0x9ac
 3203 0725 20       		.uleb128 0x20
 3204 0726 0C050000 		.4byte	0x50c
 3205 072a 46040000 		.4byte	.LLST30
 3206 072e 00       		.byte	0
 3207 072f 00       		.byte	0
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccw66xHk.s 			page 128


 3208 0730 15       		.uleb128 0x15
 3209 0731 5C020000 		.4byte	.LASF77
 3210 0735 02       		.byte	0x2
 3211 0736 D009     		.2byte	0x9d0
 3212 0738 00000000 		.4byte	.LFB34
 3213 073c 34000000 		.4byte	.LFE34-.LFB34
 3214 0740 01       		.uleb128 0x1
 3215 0741 9C       		.byte	0x9c
 3216 0742 C4070000 		.4byte	0x7c4
 3217 0746 12       		.uleb128 0x12
 3218 0747 EF070000 		.4byte	.LASF78
 3219 074b 02       		.byte	0x2
 3220 074c D009     		.2byte	0x9d0
 3221 074e 83000000 		.4byte	0x83
 3222 0752 5A040000 		.4byte	.LLST31
 3223 0756 13       		.uleb128 0x13
 3224 0757 C9070000 		.4byte	.LASF69
 3225 075b 02       		.byte	0x2
 3226 075c D209     		.2byte	0x9d2
 3227 075e 83000000 		.4byte	0x83
 3228 0762 7B040000 		.4byte	.LLST32
 3229 0766 13       		.uleb128 0x13
 3230 0767 BE060000 		.4byte	.LASF79
 3231 076b 02       		.byte	0x2
 3232 076c D309     		.2byte	0x9d3
 3233 076e 83000000 		.4byte	0x83
 3234 0772 A4040000 		.4byte	.LLST33
 3235 0776 1B       		.uleb128 0x1b
 3236 0777 FB040000 		.4byte	0x4fb
 3237 077b 00000000 		.4byte	.LBB38
 3238 077f 18000000 		.4byte	.Ldebug_ranges0+0x18
 3239 0783 02       		.byte	0x2
 3240 0784 D509     		.2byte	0x9d5
 3241 0786 91070000 		.4byte	0x791
 3242 078a 26       		.uleb128 0x26
 3243 078b 0C050000 		.4byte	0x50c
 3244 078f 00       		.byte	0
 3245 0790 00       		.byte	0
 3246 0791 1B       		.uleb128 0x1b
 3247 0792 FB040000 		.4byte	0x4fb
 3248 0796 06000000 		.4byte	.LBB43
 3249 079a 38000000 		.4byte	.Ldebug_ranges0+0x38
 3250 079e 02       		.byte	0x2
 3251 079f D609     		.2byte	0x9d6
 3252 07a1 AC070000 		.4byte	0x7ac
 3253 07a5 26       		.uleb128 0x26
 3254 07a6 0C050000 		.4byte	0x50c
 3255 07aa 01       		.byte	0x1
 3256 07ab 00       		.byte	0
 3257 07ac 27       		.uleb128 0x27
 3258 07ad FB040000 		.4byte	0x4fb
 3259 07b1 08000000 		.4byte	.LBB46
 3260 07b5 50000000 		.4byte	.Ldebug_ranges0+0x50
 3261 07b9 02       		.byte	0x2
 3262 07ba D709     		.2byte	0x9d7
 3263 07bc 26       		.uleb128 0x26
 3264 07bd 0C050000 		.4byte	0x50c
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccw66xHk.s 			page 129


 3265 07c1 02       		.byte	0x2
 3266 07c2 00       		.byte	0
 3267 07c3 00       		.byte	0
 3268 07c4 17       		.uleb128 0x17
 3269 07c5 2B050000 		.4byte	.LASF80
 3270 07c9 02       		.byte	0x2
 3271 07ca F009     		.2byte	0x9f0
 3272 07cc 83000000 		.4byte	0x83
 3273 07d0 00000000 		.4byte	.LFB35
 3274 07d4 14000000 		.4byte	.LFE35-.LFB35
 3275 07d8 01       		.uleb128 0x1
 3276 07d9 9C       		.byte	0x9c
 3277 07da 15       		.uleb128 0x15
 3278 07db F4060000 		.4byte	.LASF81
 3279 07df 02       		.byte	0x2
 3280 07e0 030A     		.2byte	0xa03
 3281 07e2 00000000 		.4byte	.LFB36
 3282 07e6 48000000 		.4byte	.LFE36-.LFB36
 3283 07ea 01       		.uleb128 0x1
 3284 07eb 9C       		.byte	0x9c
 3285 07ec 2F080000 		.4byte	0x82f
 3286 07f0 12       		.uleb128 0x12
 3287 07f1 2E000000 		.4byte	.LASF23
 3288 07f5 02       		.byte	0x2
 3289 07f6 030A     		.2byte	0xa03
 3290 07f8 83000000 		.4byte	0x83
 3291 07fc C7040000 		.4byte	.LLST34
 3292 0800 12       		.uleb128 0x12
 3293 0801 25050000 		.4byte	.LASF25
 3294 0805 02       		.byte	0x2
 3295 0806 030A     		.2byte	0xa03
 3296 0808 83000000 		.4byte	0x83
 3297 080c F3040000 		.4byte	.LLST35
 3298 0810 0C       		.uleb128 0xc
 3299 0811 8B010000 		.4byte	.LASF82
 3300 0815 02       		.byte	0x2
 3301 0816 050A     		.2byte	0xa05
 3302 0818 83000000 		.4byte	0x83
 3303 081c 16       		.uleb128 0x16
 3304 081d 18000000 		.4byte	.LVL94
 3305 0821 8D0C0000 		.4byte	0xc8d
 3306 0825 16       		.uleb128 0x16
 3307 0826 38000000 		.4byte	.LVL97
 3308 082a 8D0C0000 		.4byte	0xc8d
 3309 082e 00       		.byte	0
 3310 082f 15       		.uleb128 0x15
 3311 0830 D8070000 		.4byte	.LASF83
 3312 0834 02       		.byte	0x2
 3313 0835 290A     		.2byte	0xa29
 3314 0837 00000000 		.4byte	.LFB37
 3315 083b 28000000 		.4byte	.LFE37-.LFB37
 3316 083f 01       		.uleb128 0x1
 3317 0840 9C       		.byte	0x9c
 3318 0841 7D080000 		.4byte	0x87d
 3319 0845 12       		.uleb128 0x12
 3320 0846 7D010000 		.4byte	.LASF84
 3321 084a 02       		.byte	0x2
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccw66xHk.s 			page 130


 3322 084b 290A     		.2byte	0xa29
 3323 084d 83000000 		.4byte	0x83
 3324 0851 1F050000 		.4byte	.LLST36
 3325 0855 13       		.uleb128 0x13
 3326 0856 C9070000 		.4byte	.LASF69
 3327 085a 02       		.byte	0x2
 3328 085b 2B0A     		.2byte	0xa2b
 3329 085d 83000000 		.4byte	0x83
 3330 0861 40050000 		.4byte	.LLST37
 3331 0865 25       		.uleb128 0x25
 3332 0866 FB040000 		.4byte	0x4fb
 3333 086a 00000000 		.4byte	.LBB54
 3334 086e 04000000 		.4byte	.LBE54-.LBB54
 3335 0872 02       		.byte	0x2
 3336 0873 2D0A     		.2byte	0xa2d
 3337 0875 26       		.uleb128 0x26
 3338 0876 0C050000 		.4byte	0x50c
 3339 087a 02       		.byte	0x2
 3340 087b 00       		.byte	0
 3341 087c 00       		.byte	0
 3342 087d 17       		.uleb128 0x17
 3343 087e B4030000 		.4byte	.LASF85
 3344 0882 02       		.byte	0x2
 3345 0883 400A     		.2byte	0xa40
 3346 0885 83000000 		.4byte	0x83
 3347 0889 00000000 		.4byte	.LFB38
 3348 088d 10000000 		.4byte	.LFE38-.LFB38
 3349 0891 01       		.uleb128 0x1
 3350 0892 9C       		.byte	0x9c
 3351 0893 18       		.uleb128 0x18
 3352 0894 39000000 		.4byte	.LASF86
 3353 0898 02       		.byte	0x2
 3354 0899 520A     		.2byte	0xa52
 3355 089b 83000000 		.4byte	0x83
 3356 089f 00000000 		.4byte	.LFB39
 3357 08a3 10000000 		.4byte	.LFE39-.LFB39
 3358 08a7 01       		.uleb128 0x1
 3359 08a8 9C       		.byte	0x9c
 3360 08a9 BE080000 		.4byte	0x8be
 3361 08ad 12       		.uleb128 0x12
 3362 08ae 2E000000 		.4byte	.LASF23
 3363 08b2 02       		.byte	0x2
 3364 08b3 520A     		.2byte	0xa52
 3365 08b5 83000000 		.4byte	0x83
 3366 08b9 69050000 		.4byte	.LLST38
 3367 08bd 00       		.byte	0
 3368 08be 18       		.uleb128 0x18
 3369 08bf 12050000 		.4byte	.LASF87
 3370 08c3 02       		.byte	0x2
 3371 08c4 680A     		.2byte	0xa68
 3372 08c6 83000000 		.4byte	0x83
 3373 08ca 00000000 		.4byte	.LFB40
 3374 08ce 30000000 		.4byte	.LFE40-.LFB40
 3375 08d2 01       		.uleb128 0x1
 3376 08d3 9C       		.byte	0x9c
 3377 08d4 F9080000 		.4byte	0x8f9
 3378 08d8 12       		.uleb128 0x12
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccw66xHk.s 			page 131


 3379 08d9 2E000000 		.4byte	.LASF23
 3380 08dd 02       		.byte	0x2
 3381 08de 680A     		.2byte	0xa68
 3382 08e0 83000000 		.4byte	0x83
 3383 08e4 8A050000 		.4byte	.LLST39
 3384 08e8 13       		.uleb128 0x13
 3385 08e9 8B010000 		.4byte	.LASF82
 3386 08ed 02       		.byte	0x2
 3387 08ee 6A0A     		.2byte	0xa6a
 3388 08f0 83000000 		.4byte	0x83
 3389 08f4 F6050000 		.4byte	.LLST40
 3390 08f8 00       		.byte	0
 3391 08f9 17       		.uleb128 0x17
 3392 08fa D5020000 		.4byte	.LASF88
 3393 08fe 02       		.byte	0x2
 3394 08ff 940A     		.2byte	0xa94
 3395 0901 83000000 		.4byte	0x83
 3396 0905 00000000 		.4byte	.LFB41
 3397 0909 14000000 		.4byte	.LFE41-.LFB41
 3398 090d 01       		.uleb128 0x1
 3399 090e 9C       		.byte	0x9c
 3400 090f 15       		.uleb128 0x15
 3401 0910 16080000 		.4byte	.LASF89
 3402 0914 02       		.byte	0x2
 3403 0915 A90A     		.2byte	0xaa9
 3404 0917 00000000 		.4byte	.LFB42
 3405 091b 2C000000 		.4byte	.LFE42-.LFB42
 3406 091f 01       		.uleb128 0x1
 3407 0920 9C       		.byte	0x9c
 3408 0921 58090000 		.4byte	0x958
 3409 0925 12       		.uleb128 0x12
 3410 0926 9D020000 		.4byte	.LASF75
 3411 092a 02       		.byte	0x2
 3412 092b A90A     		.2byte	0xaa9
 3413 092d 83000000 		.4byte	0x83
 3414 0931 5A060000 		.4byte	.LLST41
 3415 0935 13       		.uleb128 0x13
 3416 0936 0C010000 		.4byte	.LASF67
 3417 093a 02       		.byte	0x2
 3418 093b AB0A     		.2byte	0xaab
 3419 093d 6B000000 		.4byte	0x6b
 3420 0941 AA060000 		.4byte	.LLST42
 3421 0945 16       		.uleb128 0x16
 3422 0946 08000000 		.4byte	.LVL118
 3423 094a 9E0C0000 		.4byte	0xc9e
 3424 094e 16       		.uleb128 0x16
 3425 094f 1E000000 		.4byte	.LVL120
 3426 0953 A90C0000 		.4byte	0xca9
 3427 0957 00       		.byte	0
 3428 0958 18       		.uleb128 0x18
 3429 0959 84070000 		.4byte	.LASF90
 3430 095d 02       		.byte	0x2
 3431 095e D00A     		.2byte	0xad0
 3432 0960 F3000000 		.4byte	0xf3
 3433 0964 00000000 		.4byte	.LFB43
 3434 0968 18000000 		.4byte	.LFE43-.LFB43
 3435 096c 01       		.uleb128 0x1
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccw66xHk.s 			page 132


 3436 096d 9C       		.byte	0x9c
 3437 096e A1090000 		.4byte	0x9a1
 3438 0972 12       		.uleb128 0x12
 3439 0973 2E000000 		.4byte	.LASF23
 3440 0977 02       		.byte	0x2
 3441 0978 D00A     		.2byte	0xad0
 3442 097a 83000000 		.4byte	0x83
 3443 097e BD060000 		.4byte	.LLST43
 3444 0982 23       		.uleb128 0x23
 3445 0983 03010000 		.4byte	.LASF61
 3446 0987 02       		.byte	0x2
 3447 0988 D00A     		.2byte	0xad0
 3448 098a F3000000 		.4byte	0xf3
 3449 098e 01       		.uleb128 0x1
 3450 098f 51       		.byte	0x51
 3451 0990 13       		.uleb128 0x13
 3452 0991 3E020000 		.4byte	.LASF62
 3453 0995 02       		.byte	0x2
 3454 0996 D20A     		.2byte	0xad2
 3455 0998 F3000000 		.4byte	0xf3
 3456 099c DE060000 		.4byte	.LLST44
 3457 09a0 00       		.byte	0
 3458 09a1 18       		.uleb128 0x18
 3459 09a2 A9020000 		.4byte	.LASF91
 3460 09a6 02       		.byte	0x2
 3461 09a7 F00A     		.2byte	0xaf0
 3462 09a9 F3000000 		.4byte	0xf3
 3463 09ad 00000000 		.4byte	.LFB44
 3464 09b1 18000000 		.4byte	.LFE44-.LFB44
 3465 09b5 01       		.uleb128 0x1
 3466 09b6 9C       		.byte	0x9c
 3467 09b7 DC090000 		.4byte	0x9dc
 3468 09bb 12       		.uleb128 0x12
 3469 09bc 2E000000 		.4byte	.LASF23
 3470 09c0 02       		.byte	0x2
 3471 09c1 F00A     		.2byte	0xaf0
 3472 09c3 83000000 		.4byte	0x83
 3473 09c7 FD060000 		.4byte	.LLST45
 3474 09cb 13       		.uleb128 0x13
 3475 09cc 08030000 		.4byte	.LASF92
 3476 09d0 02       		.byte	0x2
 3477 09d1 F20A     		.2byte	0xaf2
 3478 09d3 F3000000 		.4byte	0xf3
 3479 09d7 1E070000 		.4byte	.LLST46
 3480 09db 00       		.byte	0
 3481 09dc 15       		.uleb128 0x15
 3482 09dd AB000000 		.4byte	.LASF93
 3483 09e1 02       		.byte	0x2
 3484 09e2 0D0B     		.2byte	0xb0d
 3485 09e4 00000000 		.4byte	.LFB45
 3486 09e8 28000000 		.4byte	.LFE45-.LFB45
 3487 09ec 01       		.uleb128 0x1
 3488 09ed 9C       		.byte	0x9c
 3489 09ee 030A0000 		.4byte	0xa03
 3490 09f2 12       		.uleb128 0x12
 3491 09f3 2E000000 		.4byte	.LASF23
 3492 09f7 02       		.byte	0x2
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccw66xHk.s 			page 133


 3493 09f8 0D0B     		.2byte	0xb0d
 3494 09fa 83000000 		.4byte	0x83
 3495 09fe 3D070000 		.4byte	.LLST47
 3496 0a02 00       		.byte	0
 3497 0a03 15       		.uleb128 0x15
 3498 0a04 E5050000 		.4byte	.LASF94
 3499 0a08 02       		.byte	0x2
 3500 0a09 240B     		.2byte	0xb24
 3501 0a0b 00000000 		.4byte	.LFB46
 3502 0a0f 1C000000 		.4byte	.LFE46-.LFB46
 3503 0a13 01       		.uleb128 0x1
 3504 0a14 9C       		.byte	0x9c
 3505 0a15 2A0A0000 		.4byte	0xa2a
 3506 0a19 12       		.uleb128 0x12
 3507 0a1a 2E000000 		.4byte	.LASF23
 3508 0a1e 02       		.byte	0x2
 3509 0a1f 240B     		.2byte	0xb24
 3510 0a21 83000000 		.4byte	0x83
 3511 0a25 5E070000 		.4byte	.LLST48
 3512 0a29 00       		.byte	0
 3513 0a2a 1A       		.uleb128 0x1a
 3514 0a2b F5000000 		.4byte	.LASF95
 3515 0a2f 02       		.byte	0x2
 3516 0a30 420B     		.2byte	0xb42
 3517 0a32 00000000 		.4byte	.LFB47
 3518 0a36 A0000000 		.4byte	.LFE47-.LFB47
 3519 0a3a 01       		.uleb128 0x1
 3520 0a3b 9C       		.byte	0x9c
 3521 0a3c 7A0A0000 		.4byte	0xa7a
 3522 0a40 28       		.uleb128 0x28
 3523 0a41 34000000 		.4byte	.LVL134
 3524 0a45 0F090000 		.4byte	0x90f
 3525 0a49 530A0000 		.4byte	0xa53
 3526 0a4d 22       		.uleb128 0x22
 3527 0a4e 01       		.uleb128 0x1
 3528 0a4f 50       		.byte	0x50
 3529 0a50 01       		.uleb128 0x1
 3530 0a51 34       		.byte	0x34
 3531 0a52 00       		.byte	0
 3532 0a53 28       		.uleb128 0x28
 3533 0a54 6A000000 		.4byte	.LVL136
 3534 0a58 0F090000 		.4byte	0x90f
 3535 0a5c 680A0000 		.4byte	0xa68
 3536 0a60 22       		.uleb128 0x22
 3537 0a61 01       		.uleb128 0x1
 3538 0a62 50       		.byte	0x50
 3539 0a63 03       		.uleb128 0x3
 3540 0a64 0A       		.byte	0xa
 3541 0a65 0004     		.2byte	0x400
 3542 0a67 00       		.byte	0
 3543 0a68 21       		.uleb128 0x21
 3544 0a69 8E000000 		.4byte	.LVL138
 3545 0a6d 0F090000 		.4byte	0x90f
 3546 0a71 22       		.uleb128 0x22
 3547 0a72 01       		.uleb128 0x1
 3548 0a73 50       		.byte	0x50
 3549 0a74 03       		.uleb128 0x3
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccw66xHk.s 			page 134


 3550 0a75 40       		.byte	0x40
 3551 0a76 3E       		.byte	0x3e
 3552 0a77 24       		.byte	0x24
 3553 0a78 00       		.byte	0
 3554 0a79 00       		.byte	0
 3555 0a7a 15       		.uleb128 0x15
 3556 0a7b 49010000 		.4byte	.LASF96
 3557 0a7f 02       		.byte	0x2
 3558 0a80 7F0B     		.2byte	0xb7f
 3559 0a82 00000000 		.4byte	.LFB48
 3560 0a86 1C000000 		.4byte	.LFE48-.LFB48
 3561 0a8a 01       		.uleb128 0x1
 3562 0a8b 9C       		.byte	0x9c
 3563 0a8c A10A0000 		.4byte	0xaa1
 3564 0a90 12       		.uleb128 0x12
 3565 0a91 E8010000 		.4byte	.LASF97
 3566 0a95 02       		.byte	0x2
 3567 0a96 7F0B     		.2byte	0xb7f
 3568 0a98 83000000 		.4byte	0x83
 3569 0a9c 7F070000 		.4byte	.LLST49
 3570 0aa0 00       		.byte	0
 3571 0aa1 1F       		.uleb128 0x1f
 3572 0aa2 23010000 		.4byte	0x123
 3573 0aa6 00000000 		.4byte	.LFB50
 3574 0aaa 64000000 		.4byte	.LFE50-.LFB50
 3575 0aae 01       		.uleb128 0x1
 3576 0aaf 9C       		.byte	0x9c
 3577 0ab0 630B0000 		.4byte	0xb63
 3578 0ab4 20       		.uleb128 0x20
 3579 0ab5 30010000 		.4byte	0x130
 3580 0ab9 A0070000 		.4byte	.LLST50
 3581 0abd 20       		.uleb128 0x20
 3582 0abe 3C010000 		.4byte	0x13c
 3583 0ac2 CC070000 		.4byte	.LLST51
 3584 0ac6 20       		.uleb128 0x20
 3585 0ac7 48010000 		.4byte	0x148
 3586 0acb ED070000 		.4byte	.LLST52
 3587 0acf 1D       		.uleb128 0x1d
 3588 0ad0 54010000 		.4byte	0x154
 3589 0ad4 19080000 		.4byte	.LLST53
 3590 0ad8 29       		.uleb128 0x29
 3591 0ad9 34000000 		.4byte	.LBB58
 3592 0add 1E000000 		.4byte	.LBE58-.LBB58
 3593 0ae1 2A0B0000 		.4byte	0xb2a
 3594 0ae5 20       		.uleb128 0x20
 3595 0ae6 3C010000 		.4byte	0x13c
 3596 0aea 37080000 		.4byte	.LLST54
 3597 0aee 20       		.uleb128 0x20
 3598 0aef 48010000 		.4byte	0x148
 3599 0af3 4A080000 		.4byte	.LLST55
 3600 0af7 20       		.uleb128 0x20
 3601 0af8 30010000 		.4byte	0x130
 3602 0afc 5D080000 		.4byte	.LLST56
 3603 0b00 2A       		.uleb128 0x2a
 3604 0b01 34000000 		.4byte	.LBB59
 3605 0b05 1E000000 		.4byte	.LBE59-.LBB59
 3606 0b09 1D       		.uleb128 0x1d
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccw66xHk.s 			page 135


 3607 0b0a 54010000 		.4byte	0x154
 3608 0b0e 70080000 		.4byte	.LLST57
 3609 0b12 21       		.uleb128 0x21
 3610 0b13 42000000 		.4byte	.LVL148
 3611 0b17 DA070000 		.4byte	0x7da
 3612 0b1b 22       		.uleb128 0x22
 3613 0b1c 01       		.uleb128 0x1
 3614 0b1d 51       		.byte	0x51
 3615 0b1e 02       		.uleb128 0x2
 3616 0b1f 75       		.byte	0x75
 3617 0b20 00       		.sleb128 0
 3618 0b21 22       		.uleb128 0x22
 3619 0b22 01       		.uleb128 0x1
 3620 0b23 50       		.byte	0x50
 3621 0b24 02       		.uleb128 0x2
 3622 0b25 74       		.byte	0x74
 3623 0b26 00       		.sleb128 0
 3624 0b27 00       		.byte	0
 3625 0b28 00       		.byte	0
 3626 0b29 00       		.byte	0
 3627 0b2a 28       		.uleb128 0x28
 3628 0b2b 10000000 		.4byte	.LVL142
 3629 0b2f 0F060000 		.4byte	0x60f
 3630 0b33 3E0B0000 		.4byte	0xb3e
 3631 0b37 22       		.uleb128 0x22
 3632 0b38 01       		.uleb128 0x1
 3633 0b39 50       		.byte	0x50
 3634 0b3a 02       		.uleb128 0x2
 3635 0b3b 74       		.byte	0x74
 3636 0b3c 00       		.sleb128 0
 3637 0b3d 00       		.byte	0
 3638 0b3e 28       		.uleb128 0x28
 3639 0b3f 24000000 		.4byte	.LVL143
 3640 0b43 BE080000 		.4byte	0x8be
 3641 0b47 520B0000 		.4byte	0xb52
 3642 0b4b 22       		.uleb128 0x22
 3643 0b4c 01       		.uleb128 0x1
 3644 0b4d 50       		.byte	0x50
 3645 0b4e 02       		.uleb128 0x2
 3646 0b4f 74       		.byte	0x74
 3647 0b50 00       		.sleb128 0
 3648 0b51 00       		.byte	0
 3649 0b52 21       		.uleb128 0x21
 3650 0b53 2E000000 		.4byte	.LVL145
 3651 0b57 BE080000 		.4byte	0x8be
 3652 0b5b 22       		.uleb128 0x22
 3653 0b5c 01       		.uleb128 0x1
 3654 0b5d 50       		.byte	0x50
 3655 0b5e 02       		.uleb128 0x2
 3656 0b5f 74       		.byte	0x74
 3657 0b60 00       		.sleb128 0
 3658 0b61 00       		.byte	0
 3659 0b62 00       		.byte	0
 3660 0b63 15       		.uleb128 0x15
 3661 0b64 D5050000 		.4byte	.LASF98
 3662 0b68 02       		.byte	0x2
 3663 0b69 D70B     		.2byte	0xbd7
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccw66xHk.s 			page 136


 3664 0b6b 00000000 		.4byte	.LFB49
 3665 0b6f 34000000 		.4byte	.LFE49-.LFB49
 3666 0b73 01       		.uleb128 0x1
 3667 0b74 9C       		.byte	0x9c
 3668 0b75 080C0000 		.4byte	0xc08
 3669 0b79 12       		.uleb128 0x12
 3670 0b7a 2E000000 		.4byte	.LASF23
 3671 0b7e 02       		.byte	0x2
 3672 0b7f D70B     		.2byte	0xbd7
 3673 0b81 83000000 		.4byte	0x83
 3674 0b85 83080000 		.4byte	.LLST58
 3675 0b89 12       		.uleb128 0x12
 3676 0b8a 5C060000 		.4byte	.LASF24
 3677 0b8e 02       		.byte	0x2
 3678 0b8f D70B     		.2byte	0xbd7
 3679 0b91 DD000000 		.4byte	0xdd
 3680 0b95 AF080000 		.4byte	.LLST59
 3681 0b99 12       		.uleb128 0x12
 3682 0b9a 4C060000 		.4byte	.LASF99
 3683 0b9e 02       		.byte	0x2
 3684 0b9f D70B     		.2byte	0xbd7
 3685 0ba1 83000000 		.4byte	0x83
 3686 0ba5 D0080000 		.4byte	.LLST60
 3687 0ba9 13       		.uleb128 0x13
 3688 0baa 8B010000 		.4byte	.LASF82
 3689 0bae 02       		.byte	0x2
 3690 0baf D90B     		.2byte	0xbd9
 3691 0bb1 83000000 		.4byte	0x83
 3692 0bb5 FC080000 		.4byte	.LLST61
 3693 0bb9 13       		.uleb128 0x13
 3694 0bba 4A030000 		.4byte	.LASF100
 3695 0bbe 02       		.byte	0x2
 3696 0bbf DA0B     		.2byte	0xbda
 3697 0bc1 83000000 		.4byte	0x83
 3698 0bc5 0F090000 		.4byte	.LLST62
 3699 0bc9 28       		.uleb128 0x28
 3700 0bca 10000000 		.4byte	.LVL151
 3701 0bce 0F060000 		.4byte	0x60f
 3702 0bd2 DD0B0000 		.4byte	0xbdd
 3703 0bd6 22       		.uleb128 0x22
 3704 0bd7 01       		.uleb128 0x1
 3705 0bd8 50       		.byte	0x50
 3706 0bd9 02       		.uleb128 0x2
 3707 0bda 75       		.byte	0x75
 3708 0bdb 00       		.sleb128 0
 3709 0bdc 00       		.byte	0
 3710 0bdd 28       		.uleb128 0x28
 3711 0bde 20000000 		.4byte	.LVL152
 3712 0be2 BE080000 		.4byte	0x8be
 3713 0be6 F10B0000 		.4byte	0xbf1
 3714 0bea 22       		.uleb128 0x22
 3715 0beb 01       		.uleb128 0x1
 3716 0bec 50       		.byte	0x50
 3717 0bed 02       		.uleb128 0x2
 3718 0bee 75       		.byte	0x75
 3719 0bef 00       		.sleb128 0
 3720 0bf0 00       		.byte	0
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccw66xHk.s 			page 137


 3721 0bf1 21       		.uleb128 0x21
 3722 0bf2 2C000000 		.4byte	.LVL154
 3723 0bf6 23010000 		.4byte	0x123
 3724 0bfa 22       		.uleb128 0x22
 3725 0bfb 01       		.uleb128 0x1
 3726 0bfc 51       		.byte	0x51
 3727 0bfd 02       		.uleb128 0x2
 3728 0bfe 76       		.byte	0x76
 3729 0bff 00       		.sleb128 0
 3730 0c00 22       		.uleb128 0x22
 3731 0c01 01       		.uleb128 0x1
 3732 0c02 50       		.byte	0x50
 3733 0c03 02       		.uleb128 0x2
 3734 0c04 75       		.byte	0x75
 3735 0c05 00       		.sleb128 0
 3736 0c06 00       		.byte	0
 3737 0c07 00       		.byte	0
 3738 0c08 2B       		.uleb128 0x2b
 3739 0c09 2F080000 		.4byte	.LASF101
 3740 0c0d 02       		.byte	0x2
 3741 0c0e 37       		.byte	0x37
 3742 0c0f BC000000 		.4byte	0xbc
 3743 0c13 05       		.uleb128 0x5
 3744 0c14 03       		.byte	0x3
 3745 0c15 14000000 		.4byte	disableTimerServicedIsr
 3746 0c19 2B       		.uleb128 0x2b
 3747 0c1a 31020000 		.4byte	.LASF102
 3748 0c1e 02       		.byte	0x2
 3749 0c1f 38       		.byte	0x38
 3750 0c20 BC000000 		.4byte	0xbc
 3751 0c24 05       		.uleb128 0x5
 3752 0c25 03       		.byte	0x3
 3753 0c26 00000000 		.4byte	timerIsrMask
 3754 0c2a 2C       		.uleb128 0x2c
 3755 0c2b 83000000 		.4byte	0x83
 3756 0c2f 3A0C0000 		.4byte	0xc3a
 3757 0c33 2D       		.uleb128 0x2d
 3758 0c34 FE000000 		.4byte	0xfe
 3759 0c38 02       		.byte	0x2
 3760 0c39 00       		.byte	0
 3761 0c3a 2B       		.uleb128 0x2b
 3762 0c3b 33030000 		.4byte	.LASF103
 3763 0c3f 02       		.byte	0x2
 3764 0c40 3C       		.byte	0x3c
 3765 0c41 4B0C0000 		.4byte	0xc4b
 3766 0c45 05       		.uleb128 0x5
 3767 0c46 03       		.byte	0x3
 3768 0c47 00000000 		.4byte	counterTimerIntMaskTbl
 3769 0c4b 2E       		.uleb128 0x2e
 3770 0c4c 2A0C0000 		.4byte	0xc2a
 3771 0c50 2C       		.uleb128 0x2c
 3772 0c51 F3000000 		.4byte	0xf3
 3773 0c55 600C0000 		.4byte	0xc60
 3774 0c59 2D       		.uleb128 0x2d
 3775 0c5a FE000000 		.4byte	0xfe
 3776 0c5e 02       		.byte	0x2
 3777 0c5f 00       		.byte	0
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccw66xHk.s 			page 138


 3778 0c60 2B       		.uleb128 0x2b
 3779 0c61 5C000000 		.4byte	.LASF104
 3780 0c65 02       		.byte	0x2
 3781 0c66 40       		.byte	0x40
 3782 0c67 500C0000 		.4byte	0xc50
 3783 0c6b 05       		.uleb128 0x5
 3784 0c6c 03       		.byte	0x3
 3785 0c6d 08000000 		.4byte	cySysTimerCallback
 3786 0c71 2B       		.uleb128 0x2b
 3787 0c72 1D000000 		.4byte	.LASF105
 3788 0c76 02       		.byte	0x2
 3789 0c77 46       		.byte	0x46
 3790 0c78 E8000000 		.4byte	0xe8
 3791 0c7c 05       		.uleb128 0x5
 3792 0c7d 03       		.byte	0x3
 3793 0c7e 04000000 		.4byte	cySysWdtCallback
 3794 0c82 2F       		.uleb128 0x2f
 3795 0c83 5E050000 		.4byte	.LASF114
 3796 0c87 04       		.byte	0x4
 3797 0c88 D4       		.byte	0xd4
 3798 0c89 83000000 		.4byte	0x83
 3799 0c8d 30       		.uleb128 0x30
 3800 0c8e 3F010000 		.4byte	.LASF107
 3801 0c92 04       		.byte	0x4
 3802 0c93 DA       		.byte	0xda
 3803 0c94 9E0C0000 		.4byte	0xc9e
 3804 0c98 31       		.uleb128 0x31
 3805 0c99 77000000 		.4byte	0x77
 3806 0c9d 00       		.byte	0
 3807 0c9e 32       		.uleb128 0x32
 3808 0c9f 9C040000 		.4byte	.LASF115
 3809 0ca3 04       		.byte	0x4
 3810 0ca4 E5       		.byte	0xe5
 3811 0ca5 6B000000 		.4byte	0x6b
 3812 0ca9 33       		.uleb128 0x33
 3813 0caa 07000000 		.4byte	.LASF116
 3814 0cae 04       		.byte	0x4
 3815 0caf E6       		.byte	0xe6
 3816 0cb0 31       		.uleb128 0x31
 3817 0cb1 6B000000 		.4byte	0x6b
 3818 0cb5 00       		.byte	0
 3819 0cb6 00       		.byte	0
 3820              		.section	.debug_abbrev,"",%progbits
 3821              	.Ldebug_abbrev0:
 3822 0000 01       		.uleb128 0x1
 3823 0001 11       		.uleb128 0x11
 3824 0002 01       		.byte	0x1
 3825 0003 25       		.uleb128 0x25
 3826 0004 0E       		.uleb128 0xe
 3827 0005 13       		.uleb128 0x13
 3828 0006 0B       		.uleb128 0xb
 3829 0007 03       		.uleb128 0x3
 3830 0008 0E       		.uleb128 0xe
 3831 0009 1B       		.uleb128 0x1b
 3832 000a 0E       		.uleb128 0xe
 3833 000b 55       		.uleb128 0x55
 3834 000c 17       		.uleb128 0x17
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccw66xHk.s 			page 139


 3835 000d 11       		.uleb128 0x11
 3836 000e 01       		.uleb128 0x1
 3837 000f 10       		.uleb128 0x10
 3838 0010 17       		.uleb128 0x17
 3839 0011 00       		.byte	0
 3840 0012 00       		.byte	0
 3841 0013 02       		.uleb128 0x2
 3842 0014 24       		.uleb128 0x24
 3843 0015 00       		.byte	0
 3844 0016 0B       		.uleb128 0xb
 3845 0017 0B       		.uleb128 0xb
 3846 0018 3E       		.uleb128 0x3e
 3847 0019 0B       		.uleb128 0xb
 3848 001a 03       		.uleb128 0x3
 3849 001b 0E       		.uleb128 0xe
 3850 001c 00       		.byte	0
 3851 001d 00       		.byte	0
 3852 001e 03       		.uleb128 0x3
 3853 001f 24       		.uleb128 0x24
 3854 0020 00       		.byte	0
 3855 0021 0B       		.uleb128 0xb
 3856 0022 0B       		.uleb128 0xb
 3857 0023 3E       		.uleb128 0x3e
 3858 0024 0B       		.uleb128 0xb
 3859 0025 03       		.uleb128 0x3
 3860 0026 08       		.uleb128 0x8
 3861 0027 00       		.byte	0
 3862 0028 00       		.byte	0
 3863 0029 04       		.uleb128 0x4
 3864 002a 16       		.uleb128 0x16
 3865 002b 00       		.byte	0
 3866 002c 03       		.uleb128 0x3
 3867 002d 0E       		.uleb128 0xe
 3868 002e 3A       		.uleb128 0x3a
 3869 002f 0B       		.uleb128 0xb
 3870 0030 3B       		.uleb128 0x3b
 3871 0031 05       		.uleb128 0x5
 3872 0032 49       		.uleb128 0x49
 3873 0033 13       		.uleb128 0x13
 3874 0034 00       		.byte	0
 3875 0035 00       		.byte	0
 3876 0036 05       		.uleb128 0x5
 3877 0037 35       		.uleb128 0x35
 3878 0038 00       		.byte	0
 3879 0039 49       		.uleb128 0x49
 3880 003a 13       		.uleb128 0x13
 3881 003b 00       		.byte	0
 3882 003c 00       		.byte	0
 3883 003d 06       		.uleb128 0x6
 3884 003e 0F       		.uleb128 0xf
 3885 003f 00       		.byte	0
 3886 0040 0B       		.uleb128 0xb
 3887 0041 0B       		.uleb128 0xb
 3888 0042 49       		.uleb128 0x49
 3889 0043 13       		.uleb128 0x13
 3890 0044 00       		.byte	0
 3891 0045 00       		.byte	0
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccw66xHk.s 			page 140


 3892 0046 07       		.uleb128 0x7
 3893 0047 15       		.uleb128 0x15
 3894 0048 00       		.byte	0
 3895 0049 27       		.uleb128 0x27
 3896 004a 19       		.uleb128 0x19
 3897 004b 00       		.byte	0
 3898 004c 00       		.byte	0
 3899 004d 08       		.uleb128 0x8
 3900 004e 04       		.uleb128 0x4
 3901 004f 01       		.byte	0x1
 3902 0050 0B       		.uleb128 0xb
 3903 0051 0B       		.uleb128 0xb
 3904 0052 3A       		.uleb128 0x3a
 3905 0053 0B       		.uleb128 0xb
 3906 0054 3B       		.uleb128 0x3b
 3907 0055 0B       		.uleb128 0xb
 3908 0056 01       		.uleb128 0x1
 3909 0057 13       		.uleb128 0x13
 3910 0058 00       		.byte	0
 3911 0059 00       		.byte	0
 3912 005a 09       		.uleb128 0x9
 3913 005b 28       		.uleb128 0x28
 3914 005c 00       		.byte	0
 3915 005d 03       		.uleb128 0x3
 3916 005e 0E       		.uleb128 0xe
 3917 005f 1C       		.uleb128 0x1c
 3918 0060 0D       		.uleb128 0xd
 3919 0061 00       		.byte	0
 3920 0062 00       		.byte	0
 3921 0063 0A       		.uleb128 0xa
 3922 0064 16       		.uleb128 0x16
 3923 0065 00       		.byte	0
 3924 0066 03       		.uleb128 0x3
 3925 0067 0E       		.uleb128 0xe
 3926 0068 3A       		.uleb128 0x3a
 3927 0069 0B       		.uleb128 0xb
 3928 006a 3B       		.uleb128 0x3b
 3929 006b 0B       		.uleb128 0xb
 3930 006c 49       		.uleb128 0x49
 3931 006d 13       		.uleb128 0x13
 3932 006e 00       		.byte	0
 3933 006f 00       		.byte	0
 3934 0070 0B       		.uleb128 0xb
 3935 0071 2E       		.uleb128 0x2e
 3936 0072 01       		.byte	0x1
 3937 0073 03       		.uleb128 0x3
 3938 0074 0E       		.uleb128 0xe
 3939 0075 3A       		.uleb128 0x3a
 3940 0076 0B       		.uleb128 0xb
 3941 0077 3B       		.uleb128 0x3b
 3942 0078 05       		.uleb128 0x5
 3943 0079 27       		.uleb128 0x27
 3944 007a 19       		.uleb128 0x19
 3945 007b 49       		.uleb128 0x49
 3946 007c 13       		.uleb128 0x13
 3947 007d 20       		.uleb128 0x20
 3948 007e 0B       		.uleb128 0xb
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccw66xHk.s 			page 141


 3949 007f 01       		.uleb128 0x1
 3950 0080 13       		.uleb128 0x13
 3951 0081 00       		.byte	0
 3952 0082 00       		.byte	0
 3953 0083 0C       		.uleb128 0xc
 3954 0084 34       		.uleb128 0x34
 3955 0085 00       		.byte	0
 3956 0086 03       		.uleb128 0x3
 3957 0087 0E       		.uleb128 0xe
 3958 0088 3A       		.uleb128 0x3a
 3959 0089 0B       		.uleb128 0xb
 3960 008a 3B       		.uleb128 0x3b
 3961 008b 05       		.uleb128 0x5
 3962 008c 49       		.uleb128 0x49
 3963 008d 13       		.uleb128 0x13
 3964 008e 00       		.byte	0
 3965 008f 00       		.byte	0
 3966 0090 0D       		.uleb128 0xd
 3967 0091 2E       		.uleb128 0x2e
 3968 0092 01       		.byte	0x1
 3969 0093 3F       		.uleb128 0x3f
 3970 0094 19       		.uleb128 0x19
 3971 0095 03       		.uleb128 0x3
 3972 0096 0E       		.uleb128 0xe
 3973 0097 3A       		.uleb128 0x3a
 3974 0098 0B       		.uleb128 0xb
 3975 0099 3B       		.uleb128 0x3b
 3976 009a 05       		.uleb128 0x5
 3977 009b 27       		.uleb128 0x27
 3978 009c 19       		.uleb128 0x19
 3979 009d 20       		.uleb128 0x20
 3980 009e 0B       		.uleb128 0xb
 3981 009f 01       		.uleb128 0x1
 3982 00a0 13       		.uleb128 0x13
 3983 00a1 00       		.byte	0
 3984 00a2 00       		.byte	0
 3985 00a3 0E       		.uleb128 0xe
 3986 00a4 05       		.uleb128 0x5
 3987 00a5 00       		.byte	0
 3988 00a6 03       		.uleb128 0x3
 3989 00a7 0E       		.uleb128 0xe
 3990 00a8 3A       		.uleb128 0x3a
 3991 00a9 0B       		.uleb128 0xb
 3992 00aa 3B       		.uleb128 0x3b
 3993 00ab 05       		.uleb128 0x5
 3994 00ac 49       		.uleb128 0x49
 3995 00ad 13       		.uleb128 0x13
 3996 00ae 00       		.byte	0
 3997 00af 00       		.byte	0
 3998 00b0 0F       		.uleb128 0xf
 3999 00b1 2E       		.uleb128 0x2e
 4000 00b2 00       		.byte	0
 4001 00b3 03       		.uleb128 0x3
 4002 00b4 0E       		.uleb128 0xe
 4003 00b5 3A       		.uleb128 0x3a
 4004 00b6 0B       		.uleb128 0xb
 4005 00b7 3B       		.uleb128 0x3b
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccw66xHk.s 			page 142


 4006 00b8 05       		.uleb128 0x5
 4007 00b9 27       		.uleb128 0x27
 4008 00ba 19       		.uleb128 0x19
 4009 00bb 11       		.uleb128 0x11
 4010 00bc 01       		.uleb128 0x1
 4011 00bd 12       		.uleb128 0x12
 4012 00be 06       		.uleb128 0x6
 4013 00bf 40       		.uleb128 0x40
 4014 00c0 18       		.uleb128 0x18
 4015 00c1 9742     		.uleb128 0x2117
 4016 00c3 19       		.uleb128 0x19
 4017 00c4 00       		.byte	0
 4018 00c5 00       		.byte	0
 4019 00c6 10       		.uleb128 0x10
 4020 00c7 2E       		.uleb128 0x2e
 4021 00c8 00       		.byte	0
 4022 00c9 3F       		.uleb128 0x3f
 4023 00ca 19       		.uleb128 0x19
 4024 00cb 03       		.uleb128 0x3
 4025 00cc 0E       		.uleb128 0xe
 4026 00cd 3A       		.uleb128 0x3a
 4027 00ce 0B       		.uleb128 0xb
 4028 00cf 3B       		.uleb128 0x3b
 4029 00d0 0B       		.uleb128 0xb
 4030 00d1 27       		.uleb128 0x27
 4031 00d2 19       		.uleb128 0x19
 4032 00d3 11       		.uleb128 0x11
 4033 00d4 01       		.uleb128 0x1
 4034 00d5 12       		.uleb128 0x12
 4035 00d6 06       		.uleb128 0x6
 4036 00d7 40       		.uleb128 0x40
 4037 00d8 18       		.uleb128 0x18
 4038 00d9 9742     		.uleb128 0x2117
 4039 00db 19       		.uleb128 0x19
 4040 00dc 00       		.byte	0
 4041 00dd 00       		.byte	0
 4042 00de 11       		.uleb128 0x11
 4043 00df 2E       		.uleb128 0x2e
 4044 00e0 01       		.byte	0x1
 4045 00e1 3F       		.uleb128 0x3f
 4046 00e2 19       		.uleb128 0x19
 4047 00e3 03       		.uleb128 0x3
 4048 00e4 0E       		.uleb128 0xe
 4049 00e5 3A       		.uleb128 0x3a
 4050 00e6 0B       		.uleb128 0xb
 4051 00e7 3B       		.uleb128 0x3b
 4052 00e8 05       		.uleb128 0x5
 4053 00e9 27       		.uleb128 0x27
 4054 00ea 19       		.uleb128 0x19
 4055 00eb 49       		.uleb128 0x49
 4056 00ec 13       		.uleb128 0x13
 4057 00ed 11       		.uleb128 0x11
 4058 00ee 01       		.uleb128 0x1
 4059 00ef 12       		.uleb128 0x12
 4060 00f0 06       		.uleb128 0x6
 4061 00f1 40       		.uleb128 0x40
 4062 00f2 18       		.uleb128 0x18
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccw66xHk.s 			page 143


 4063 00f3 9642     		.uleb128 0x2116
 4064 00f5 19       		.uleb128 0x19
 4065 00f6 01       		.uleb128 0x1
 4066 00f7 13       		.uleb128 0x13
 4067 00f8 00       		.byte	0
 4068 00f9 00       		.byte	0
 4069 00fa 12       		.uleb128 0x12
 4070 00fb 05       		.uleb128 0x5
 4071 00fc 00       		.byte	0
 4072 00fd 03       		.uleb128 0x3
 4073 00fe 0E       		.uleb128 0xe
 4074 00ff 3A       		.uleb128 0x3a
 4075 0100 0B       		.uleb128 0xb
 4076 0101 3B       		.uleb128 0x3b
 4077 0102 05       		.uleb128 0x5
 4078 0103 49       		.uleb128 0x49
 4079 0104 13       		.uleb128 0x13
 4080 0105 02       		.uleb128 0x2
 4081 0106 17       		.uleb128 0x17
 4082 0107 00       		.byte	0
 4083 0108 00       		.byte	0
 4084 0109 13       		.uleb128 0x13
 4085 010a 34       		.uleb128 0x34
 4086 010b 00       		.byte	0
 4087 010c 03       		.uleb128 0x3
 4088 010d 0E       		.uleb128 0xe
 4089 010e 3A       		.uleb128 0x3a
 4090 010f 0B       		.uleb128 0xb
 4091 0110 3B       		.uleb128 0x3b
 4092 0111 05       		.uleb128 0x5
 4093 0112 49       		.uleb128 0x49
 4094 0113 13       		.uleb128 0x13
 4095 0114 02       		.uleb128 0x2
 4096 0115 17       		.uleb128 0x17
 4097 0116 00       		.byte	0
 4098 0117 00       		.byte	0
 4099 0118 14       		.uleb128 0x14
 4100 0119 34       		.uleb128 0x34
 4101 011a 00       		.byte	0
 4102 011b 03       		.uleb128 0x3
 4103 011c 0E       		.uleb128 0xe
 4104 011d 3A       		.uleb128 0x3a
 4105 011e 0B       		.uleb128 0xb
 4106 011f 3B       		.uleb128 0x3b
 4107 0120 05       		.uleb128 0x5
 4108 0121 49       		.uleb128 0x49
 4109 0122 13       		.uleb128 0x13
 4110 0123 02       		.uleb128 0x2
 4111 0124 18       		.uleb128 0x18
 4112 0125 00       		.byte	0
 4113 0126 00       		.byte	0
 4114 0127 15       		.uleb128 0x15
 4115 0128 2E       		.uleb128 0x2e
 4116 0129 01       		.byte	0x1
 4117 012a 3F       		.uleb128 0x3f
 4118 012b 19       		.uleb128 0x19
 4119 012c 03       		.uleb128 0x3
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccw66xHk.s 			page 144


 4120 012d 0E       		.uleb128 0xe
 4121 012e 3A       		.uleb128 0x3a
 4122 012f 0B       		.uleb128 0xb
 4123 0130 3B       		.uleb128 0x3b
 4124 0131 05       		.uleb128 0x5
 4125 0132 27       		.uleb128 0x27
 4126 0133 19       		.uleb128 0x19
 4127 0134 11       		.uleb128 0x11
 4128 0135 01       		.uleb128 0x1
 4129 0136 12       		.uleb128 0x12
 4130 0137 06       		.uleb128 0x6
 4131 0138 40       		.uleb128 0x40
 4132 0139 18       		.uleb128 0x18
 4133 013a 9742     		.uleb128 0x2117
 4134 013c 19       		.uleb128 0x19
 4135 013d 01       		.uleb128 0x1
 4136 013e 13       		.uleb128 0x13
 4137 013f 00       		.byte	0
 4138 0140 00       		.byte	0
 4139 0141 16       		.uleb128 0x16
 4140 0142 898201   		.uleb128 0x4109
 4141 0145 00       		.byte	0
 4142 0146 11       		.uleb128 0x11
 4143 0147 01       		.uleb128 0x1
 4144 0148 31       		.uleb128 0x31
 4145 0149 13       		.uleb128 0x13
 4146 014a 00       		.byte	0
 4147 014b 00       		.byte	0
 4148 014c 17       		.uleb128 0x17
 4149 014d 2E       		.uleb128 0x2e
 4150 014e 00       		.byte	0
 4151 014f 3F       		.uleb128 0x3f
 4152 0150 19       		.uleb128 0x19
 4153 0151 03       		.uleb128 0x3
 4154 0152 0E       		.uleb128 0xe
 4155 0153 3A       		.uleb128 0x3a
 4156 0154 0B       		.uleb128 0xb
 4157 0155 3B       		.uleb128 0x3b
 4158 0156 05       		.uleb128 0x5
 4159 0157 27       		.uleb128 0x27
 4160 0158 19       		.uleb128 0x19
 4161 0159 49       		.uleb128 0x49
 4162 015a 13       		.uleb128 0x13
 4163 015b 11       		.uleb128 0x11
 4164 015c 01       		.uleb128 0x1
 4165 015d 12       		.uleb128 0x12
 4166 015e 06       		.uleb128 0x6
 4167 015f 40       		.uleb128 0x40
 4168 0160 18       		.uleb128 0x18
 4169 0161 9742     		.uleb128 0x2117
 4170 0163 19       		.uleb128 0x19
 4171 0164 00       		.byte	0
 4172 0165 00       		.byte	0
 4173 0166 18       		.uleb128 0x18
 4174 0167 2E       		.uleb128 0x2e
 4175 0168 01       		.byte	0x1
 4176 0169 3F       		.uleb128 0x3f
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccw66xHk.s 			page 145


 4177 016a 19       		.uleb128 0x19
 4178 016b 03       		.uleb128 0x3
 4179 016c 0E       		.uleb128 0xe
 4180 016d 3A       		.uleb128 0x3a
 4181 016e 0B       		.uleb128 0xb
 4182 016f 3B       		.uleb128 0x3b
 4183 0170 05       		.uleb128 0x5
 4184 0171 27       		.uleb128 0x27
 4185 0172 19       		.uleb128 0x19
 4186 0173 49       		.uleb128 0x49
 4187 0174 13       		.uleb128 0x13
 4188 0175 11       		.uleb128 0x11
 4189 0176 01       		.uleb128 0x1
 4190 0177 12       		.uleb128 0x12
 4191 0178 06       		.uleb128 0x6
 4192 0179 40       		.uleb128 0x40
 4193 017a 18       		.uleb128 0x18
 4194 017b 9742     		.uleb128 0x2117
 4195 017d 19       		.uleb128 0x19
 4196 017e 01       		.uleb128 0x1
 4197 017f 13       		.uleb128 0x13
 4198 0180 00       		.byte	0
 4199 0181 00       		.byte	0
 4200 0182 19       		.uleb128 0x19
 4201 0183 2E       		.uleb128 0x2e
 4202 0184 00       		.byte	0
 4203 0185 3F       		.uleb128 0x3f
 4204 0186 19       		.uleb128 0x19
 4205 0187 03       		.uleb128 0x3
 4206 0188 0E       		.uleb128 0xe
 4207 0189 3A       		.uleb128 0x3a
 4208 018a 0B       		.uleb128 0xb
 4209 018b 3B       		.uleb128 0x3b
 4210 018c 05       		.uleb128 0x5
 4211 018d 27       		.uleb128 0x27
 4212 018e 19       		.uleb128 0x19
 4213 018f 11       		.uleb128 0x11
 4214 0190 01       		.uleb128 0x1
 4215 0191 12       		.uleb128 0x12
 4216 0192 06       		.uleb128 0x6
 4217 0193 40       		.uleb128 0x40
 4218 0194 18       		.uleb128 0x18
 4219 0195 9742     		.uleb128 0x2117
 4220 0197 19       		.uleb128 0x19
 4221 0198 00       		.byte	0
 4222 0199 00       		.byte	0
 4223 019a 1A       		.uleb128 0x1a
 4224 019b 2E       		.uleb128 0x2e
 4225 019c 01       		.byte	0x1
 4226 019d 3F       		.uleb128 0x3f
 4227 019e 19       		.uleb128 0x19
 4228 019f 03       		.uleb128 0x3
 4229 01a0 0E       		.uleb128 0xe
 4230 01a1 3A       		.uleb128 0x3a
 4231 01a2 0B       		.uleb128 0xb
 4232 01a3 3B       		.uleb128 0x3b
 4233 01a4 05       		.uleb128 0x5
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccw66xHk.s 			page 146


 4234 01a5 27       		.uleb128 0x27
 4235 01a6 19       		.uleb128 0x19
 4236 01a7 11       		.uleb128 0x11
 4237 01a8 01       		.uleb128 0x1
 4238 01a9 12       		.uleb128 0x12
 4239 01aa 06       		.uleb128 0x6
 4240 01ab 40       		.uleb128 0x40
 4241 01ac 18       		.uleb128 0x18
 4242 01ad 9642     		.uleb128 0x2116
 4243 01af 19       		.uleb128 0x19
 4244 01b0 01       		.uleb128 0x1
 4245 01b1 13       		.uleb128 0x13
 4246 01b2 00       		.byte	0
 4247 01b3 00       		.byte	0
 4248 01b4 1B       		.uleb128 0x1b
 4249 01b5 1D       		.uleb128 0x1d
 4250 01b6 01       		.byte	0x1
 4251 01b7 31       		.uleb128 0x31
 4252 01b8 13       		.uleb128 0x13
 4253 01b9 52       		.uleb128 0x52
 4254 01ba 01       		.uleb128 0x1
 4255 01bb 55       		.uleb128 0x55
 4256 01bc 17       		.uleb128 0x17
 4257 01bd 58       		.uleb128 0x58
 4258 01be 0B       		.uleb128 0xb
 4259 01bf 59       		.uleb128 0x59
 4260 01c0 05       		.uleb128 0x5
 4261 01c1 01       		.uleb128 0x1
 4262 01c2 13       		.uleb128 0x13
 4263 01c3 00       		.byte	0
 4264 01c4 00       		.byte	0
 4265 01c5 1C       		.uleb128 0x1c
 4266 01c6 0B       		.uleb128 0xb
 4267 01c7 01       		.byte	0x1
 4268 01c8 55       		.uleb128 0x55
 4269 01c9 17       		.uleb128 0x17
 4270 01ca 00       		.byte	0
 4271 01cb 00       		.byte	0
 4272 01cc 1D       		.uleb128 0x1d
 4273 01cd 34       		.uleb128 0x34
 4274 01ce 00       		.byte	0
 4275 01cf 31       		.uleb128 0x31
 4276 01d0 13       		.uleb128 0x13
 4277 01d1 02       		.uleb128 0x2
 4278 01d2 17       		.uleb128 0x17
 4279 01d3 00       		.byte	0
 4280 01d4 00       		.byte	0
 4281 01d5 1E       		.uleb128 0x1e
 4282 01d6 2E       		.uleb128 0x2e
 4283 01d7 01       		.byte	0x1
 4284 01d8 3F       		.uleb128 0x3f
 4285 01d9 19       		.uleb128 0x19
 4286 01da 03       		.uleb128 0x3
 4287 01db 0E       		.uleb128 0xe
 4288 01dc 3A       		.uleb128 0x3a
 4289 01dd 0B       		.uleb128 0xb
 4290 01de 3B       		.uleb128 0x3b
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccw66xHk.s 			page 147


 4291 01df 05       		.uleb128 0x5
 4292 01e0 27       		.uleb128 0x27
 4293 01e1 19       		.uleb128 0x19
 4294 01e2 49       		.uleb128 0x49
 4295 01e3 13       		.uleb128 0x13
 4296 01e4 20       		.uleb128 0x20
 4297 01e5 0B       		.uleb128 0xb
 4298 01e6 01       		.uleb128 0x1
 4299 01e7 13       		.uleb128 0x13
 4300 01e8 00       		.byte	0
 4301 01e9 00       		.byte	0
 4302 01ea 1F       		.uleb128 0x1f
 4303 01eb 2E       		.uleb128 0x2e
 4304 01ec 01       		.byte	0x1
 4305 01ed 31       		.uleb128 0x31
 4306 01ee 13       		.uleb128 0x13
 4307 01ef 11       		.uleb128 0x11
 4308 01f0 01       		.uleb128 0x1
 4309 01f1 12       		.uleb128 0x12
 4310 01f2 06       		.uleb128 0x6
 4311 01f3 40       		.uleb128 0x40
 4312 01f4 18       		.uleb128 0x18
 4313 01f5 9742     		.uleb128 0x2117
 4314 01f7 19       		.uleb128 0x19
 4315 01f8 01       		.uleb128 0x1
 4316 01f9 13       		.uleb128 0x13
 4317 01fa 00       		.byte	0
 4318 01fb 00       		.byte	0
 4319 01fc 20       		.uleb128 0x20
 4320 01fd 05       		.uleb128 0x5
 4321 01fe 00       		.byte	0
 4322 01ff 31       		.uleb128 0x31
 4323 0200 13       		.uleb128 0x13
 4324 0201 02       		.uleb128 0x2
 4325 0202 17       		.uleb128 0x17
 4326 0203 00       		.byte	0
 4327 0204 00       		.byte	0
 4328 0205 21       		.uleb128 0x21
 4329 0206 898201   		.uleb128 0x4109
 4330 0209 01       		.byte	0x1
 4331 020a 11       		.uleb128 0x11
 4332 020b 01       		.uleb128 0x1
 4333 020c 31       		.uleb128 0x31
 4334 020d 13       		.uleb128 0x13
 4335 020e 00       		.byte	0
 4336 020f 00       		.byte	0
 4337 0210 22       		.uleb128 0x22
 4338 0211 8A8201   		.uleb128 0x410a
 4339 0214 00       		.byte	0
 4340 0215 02       		.uleb128 0x2
 4341 0216 18       		.uleb128 0x18
 4342 0217 9142     		.uleb128 0x2111
 4343 0219 18       		.uleb128 0x18
 4344 021a 00       		.byte	0
 4345 021b 00       		.byte	0
 4346 021c 23       		.uleb128 0x23
 4347 021d 05       		.uleb128 0x5
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccw66xHk.s 			page 148


 4348 021e 00       		.byte	0
 4349 021f 03       		.uleb128 0x3
 4350 0220 0E       		.uleb128 0xe
 4351 0221 3A       		.uleb128 0x3a
 4352 0222 0B       		.uleb128 0xb
 4353 0223 3B       		.uleb128 0x3b
 4354 0224 05       		.uleb128 0x5
 4355 0225 49       		.uleb128 0x49
 4356 0226 13       		.uleb128 0x13
 4357 0227 02       		.uleb128 0x2
 4358 0228 18       		.uleb128 0x18
 4359 0229 00       		.byte	0
 4360 022a 00       		.byte	0
 4361 022b 24       		.uleb128 0x24
 4362 022c 1D       		.uleb128 0x1d
 4363 022d 01       		.byte	0x1
 4364 022e 31       		.uleb128 0x31
 4365 022f 13       		.uleb128 0x13
 4366 0230 11       		.uleb128 0x11
 4367 0231 01       		.uleb128 0x1
 4368 0232 12       		.uleb128 0x12
 4369 0233 06       		.uleb128 0x6
 4370 0234 58       		.uleb128 0x58
 4371 0235 0B       		.uleb128 0xb
 4372 0236 59       		.uleb128 0x59
 4373 0237 05       		.uleb128 0x5
 4374 0238 01       		.uleb128 0x1
 4375 0239 13       		.uleb128 0x13
 4376 023a 00       		.byte	0
 4377 023b 00       		.byte	0
 4378 023c 25       		.uleb128 0x25
 4379 023d 1D       		.uleb128 0x1d
 4380 023e 01       		.byte	0x1
 4381 023f 31       		.uleb128 0x31
 4382 0240 13       		.uleb128 0x13
 4383 0241 11       		.uleb128 0x11
 4384 0242 01       		.uleb128 0x1
 4385 0243 12       		.uleb128 0x12
 4386 0244 06       		.uleb128 0x6
 4387 0245 58       		.uleb128 0x58
 4388 0246 0B       		.uleb128 0xb
 4389 0247 59       		.uleb128 0x59
 4390 0248 05       		.uleb128 0x5
 4391 0249 00       		.byte	0
 4392 024a 00       		.byte	0
 4393 024b 26       		.uleb128 0x26
 4394 024c 05       		.uleb128 0x5
 4395 024d 00       		.byte	0
 4396 024e 31       		.uleb128 0x31
 4397 024f 13       		.uleb128 0x13
 4398 0250 1C       		.uleb128 0x1c
 4399 0251 0B       		.uleb128 0xb
 4400 0252 00       		.byte	0
 4401 0253 00       		.byte	0
 4402 0254 27       		.uleb128 0x27
 4403 0255 1D       		.uleb128 0x1d
 4404 0256 01       		.byte	0x1
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccw66xHk.s 			page 149


 4405 0257 31       		.uleb128 0x31
 4406 0258 13       		.uleb128 0x13
 4407 0259 52       		.uleb128 0x52
 4408 025a 01       		.uleb128 0x1
 4409 025b 55       		.uleb128 0x55
 4410 025c 17       		.uleb128 0x17
 4411 025d 58       		.uleb128 0x58
 4412 025e 0B       		.uleb128 0xb
 4413 025f 59       		.uleb128 0x59
 4414 0260 05       		.uleb128 0x5
 4415 0261 00       		.byte	0
 4416 0262 00       		.byte	0
 4417 0263 28       		.uleb128 0x28
 4418 0264 898201   		.uleb128 0x4109
 4419 0267 01       		.byte	0x1
 4420 0268 11       		.uleb128 0x11
 4421 0269 01       		.uleb128 0x1
 4422 026a 31       		.uleb128 0x31
 4423 026b 13       		.uleb128 0x13
 4424 026c 01       		.uleb128 0x1
 4425 026d 13       		.uleb128 0x13
 4426 026e 00       		.byte	0
 4427 026f 00       		.byte	0
 4428 0270 29       		.uleb128 0x29
 4429 0271 0B       		.uleb128 0xb
 4430 0272 01       		.byte	0x1
 4431 0273 11       		.uleb128 0x11
 4432 0274 01       		.uleb128 0x1
 4433 0275 12       		.uleb128 0x12
 4434 0276 06       		.uleb128 0x6
 4435 0277 01       		.uleb128 0x1
 4436 0278 13       		.uleb128 0x13
 4437 0279 00       		.byte	0
 4438 027a 00       		.byte	0
 4439 027b 2A       		.uleb128 0x2a
 4440 027c 0B       		.uleb128 0xb
 4441 027d 01       		.byte	0x1
 4442 027e 11       		.uleb128 0x11
 4443 027f 01       		.uleb128 0x1
 4444 0280 12       		.uleb128 0x12
 4445 0281 06       		.uleb128 0x6
 4446 0282 00       		.byte	0
 4447 0283 00       		.byte	0
 4448 0284 2B       		.uleb128 0x2b
 4449 0285 34       		.uleb128 0x34
 4450 0286 00       		.byte	0
 4451 0287 03       		.uleb128 0x3
 4452 0288 0E       		.uleb128 0xe
 4453 0289 3A       		.uleb128 0x3a
 4454 028a 0B       		.uleb128 0xb
 4455 028b 3B       		.uleb128 0x3b
 4456 028c 0B       		.uleb128 0xb
 4457 028d 49       		.uleb128 0x49
 4458 028e 13       		.uleb128 0x13
 4459 028f 02       		.uleb128 0x2
 4460 0290 18       		.uleb128 0x18
 4461 0291 00       		.byte	0
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccw66xHk.s 			page 150


 4462 0292 00       		.byte	0
 4463 0293 2C       		.uleb128 0x2c
 4464 0294 01       		.uleb128 0x1
 4465 0295 01       		.byte	0x1
 4466 0296 49       		.uleb128 0x49
 4467 0297 13       		.uleb128 0x13
 4468 0298 01       		.uleb128 0x1
 4469 0299 13       		.uleb128 0x13
 4470 029a 00       		.byte	0
 4471 029b 00       		.byte	0
 4472 029c 2D       		.uleb128 0x2d
 4473 029d 21       		.uleb128 0x21
 4474 029e 00       		.byte	0
 4475 029f 49       		.uleb128 0x49
 4476 02a0 13       		.uleb128 0x13
 4477 02a1 2F       		.uleb128 0x2f
 4478 02a2 0B       		.uleb128 0xb
 4479 02a3 00       		.byte	0
 4480 02a4 00       		.byte	0
 4481 02a5 2E       		.uleb128 0x2e
 4482 02a6 26       		.uleb128 0x26
 4483 02a7 00       		.byte	0
 4484 02a8 49       		.uleb128 0x49
 4485 02a9 13       		.uleb128 0x13
 4486 02aa 00       		.byte	0
 4487 02ab 00       		.byte	0
 4488 02ac 2F       		.uleb128 0x2f
 4489 02ad 34       		.uleb128 0x34
 4490 02ae 00       		.byte	0
 4491 02af 03       		.uleb128 0x3
 4492 02b0 0E       		.uleb128 0xe
 4493 02b1 3A       		.uleb128 0x3a
 4494 02b2 0B       		.uleb128 0xb
 4495 02b3 3B       		.uleb128 0x3b
 4496 02b4 0B       		.uleb128 0xb
 4497 02b5 49       		.uleb128 0x49
 4498 02b6 13       		.uleb128 0x13
 4499 02b7 3F       		.uleb128 0x3f
 4500 02b8 19       		.uleb128 0x19
 4501 02b9 3C       		.uleb128 0x3c
 4502 02ba 19       		.uleb128 0x19
 4503 02bb 00       		.byte	0
 4504 02bc 00       		.byte	0
 4505 02bd 30       		.uleb128 0x30
 4506 02be 2E       		.uleb128 0x2e
 4507 02bf 01       		.byte	0x1
 4508 02c0 3F       		.uleb128 0x3f
 4509 02c1 19       		.uleb128 0x19
 4510 02c2 03       		.uleb128 0x3
 4511 02c3 0E       		.uleb128 0xe
 4512 02c4 3A       		.uleb128 0x3a
 4513 02c5 0B       		.uleb128 0xb
 4514 02c6 3B       		.uleb128 0x3b
 4515 02c7 0B       		.uleb128 0xb
 4516 02c8 27       		.uleb128 0x27
 4517 02c9 19       		.uleb128 0x19
 4518 02ca 3C       		.uleb128 0x3c
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccw66xHk.s 			page 151


 4519 02cb 19       		.uleb128 0x19
 4520 02cc 01       		.uleb128 0x1
 4521 02cd 13       		.uleb128 0x13
 4522 02ce 00       		.byte	0
 4523 02cf 00       		.byte	0
 4524 02d0 31       		.uleb128 0x31
 4525 02d1 05       		.uleb128 0x5
 4526 02d2 00       		.byte	0
 4527 02d3 49       		.uleb128 0x49
 4528 02d4 13       		.uleb128 0x13
 4529 02d5 00       		.byte	0
 4530 02d6 00       		.byte	0
 4531 02d7 32       		.uleb128 0x32
 4532 02d8 2E       		.uleb128 0x2e
 4533 02d9 00       		.byte	0
 4534 02da 3F       		.uleb128 0x3f
 4535 02db 19       		.uleb128 0x19
 4536 02dc 03       		.uleb128 0x3
 4537 02dd 0E       		.uleb128 0xe
 4538 02de 3A       		.uleb128 0x3a
 4539 02df 0B       		.uleb128 0xb
 4540 02e0 3B       		.uleb128 0x3b
 4541 02e1 0B       		.uleb128 0xb
 4542 02e2 27       		.uleb128 0x27
 4543 02e3 19       		.uleb128 0x19
 4544 02e4 49       		.uleb128 0x49
 4545 02e5 13       		.uleb128 0x13
 4546 02e6 3C       		.uleb128 0x3c
 4547 02e7 19       		.uleb128 0x19
 4548 02e8 00       		.byte	0
 4549 02e9 00       		.byte	0
 4550 02ea 33       		.uleb128 0x33
 4551 02eb 2E       		.uleb128 0x2e
 4552 02ec 01       		.byte	0x1
 4553 02ed 3F       		.uleb128 0x3f
 4554 02ee 19       		.uleb128 0x19
 4555 02ef 03       		.uleb128 0x3
 4556 02f0 0E       		.uleb128 0xe
 4557 02f1 3A       		.uleb128 0x3a
 4558 02f2 0B       		.uleb128 0xb
 4559 02f3 3B       		.uleb128 0x3b
 4560 02f4 0B       		.uleb128 0xb
 4561 02f5 27       		.uleb128 0x27
 4562 02f6 19       		.uleb128 0x19
 4563 02f7 3C       		.uleb128 0x3c
 4564 02f8 19       		.uleb128 0x19
 4565 02f9 00       		.byte	0
 4566 02fa 00       		.byte	0
 4567 02fb 00       		.byte	0
 4568              		.section	.debug_loc,"",%progbits
 4569              	.Ldebug_loc0:
 4570              	.LLST0:
 4571 0000 00000000 		.4byte	.LVL0
 4572 0004 4E000000 		.4byte	.LVL4
 4573 0008 0100     		.2byte	0x1
 4574 000a 50       		.byte	0x50
 4575 000b 4E000000 		.4byte	.LVL4
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccw66xHk.s 			page 152


 4576 000f 52000000 		.4byte	.LVL5
 4577 0013 0400     		.2byte	0x4
 4578 0015 74       		.byte	0x74
 4579 0016 E400     		.sleb128 100
 4580 0018 9F       		.byte	0x9f
 4581 0019 52000000 		.4byte	.LVL5
 4582 001d A4000000 		.4byte	.LVL19
 4583 0021 0400     		.2byte	0x4
 4584 0023 F3       		.byte	0xf3
 4585 0024 01       		.uleb128 0x1
 4586 0025 50       		.byte	0x50
 4587 0026 9F       		.byte	0x9f
 4588 0027 A4000000 		.4byte	.LVL19
 4589 002b B2000000 		.4byte	.LVL21
 4590 002f 0100     		.2byte	0x1
 4591 0031 50       		.byte	0x50
 4592 0032 B2000000 		.4byte	.LVL21
 4593 0036 EC000000 		.4byte	.LFE5
 4594 003a 0400     		.2byte	0x4
 4595 003c F3       		.byte	0xf3
 4596 003d 01       		.uleb128 0x1
 4597 003e 50       		.byte	0x50
 4598 003f 9F       		.byte	0x9f
 4599 0040 00000000 		.4byte	0
 4600 0044 00000000 		.4byte	0
 4601              	.LLST1:
 4602 0048 00000000 		.4byte	.LVL0
 4603 004c 56000000 		.4byte	.LVL6
 4604 0050 0100     		.2byte	0x1
 4605 0052 51       		.byte	0x51
 4606 0053 56000000 		.4byte	.LVL6
 4607 0057 A4000000 		.4byte	.LVL19
 4608 005b 0100     		.2byte	0x1
 4609 005d 54       		.byte	0x54
 4610 005e A4000000 		.4byte	.LVL19
 4611 0062 B2000000 		.4byte	.LVL21
 4612 0066 0100     		.2byte	0x1
 4613 0068 51       		.byte	0x51
 4614 0069 B2000000 		.4byte	.LVL21
 4615 006d EC000000 		.4byte	.LFE5
 4616 0071 0400     		.2byte	0x4
 4617 0073 F3       		.byte	0xf3
 4618 0074 01       		.uleb128 0x1
 4619 0075 51       		.byte	0x51
 4620 0076 9F       		.byte	0x9f
 4621 0077 00000000 		.4byte	0
 4622 007b 00000000 		.4byte	0
 4623              	.LLST2:
 4624 007f 86000000 		.4byte	.LVL13
 4625 0083 88000000 		.4byte	.LVL14
 4626 0087 0100     		.2byte	0x1
 4627 0089 50       		.byte	0x50
 4628 008a 9C000000 		.4byte	.LVL17
 4629 008e A4000000 		.4byte	.LVL19
 4630 0092 0100     		.2byte	0x1
 4631 0094 50       		.byte	0x50
 4632 0095 00000000 		.4byte	0
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccw66xHk.s 			page 153


 4633 0099 00000000 		.4byte	0
 4634              	.LLST3:
 4635 009d 5E000000 		.4byte	.LVL8
 4636 00a1 71000000 		.4byte	.LVL9-1
 4637 00a5 0100     		.2byte	0x1
 4638 00a7 50       		.byte	0x50
 4639 00a8 71000000 		.4byte	.LVL9-1
 4640 00ac 74000000 		.4byte	.LVL10
 4641 00b0 0100     		.2byte	0x1
 4642 00b2 56       		.byte	0x56
 4643 00b3 88000000 		.4byte	.LVL14
 4644 00b7 8C000000 		.4byte	.LVL15
 4645 00bb 0100     		.2byte	0x1
 4646 00bd 50       		.byte	0x50
 4647 00be 8C000000 		.4byte	.LVL15
 4648 00c2 9C000000 		.4byte	.LVL17
 4649 00c6 0100     		.2byte	0x1
 4650 00c8 56       		.byte	0x56
 4651 00c9 00000000 		.4byte	0
 4652 00cd 00000000 		.4byte	0
 4653              	.LLST4:
 4654 00d1 0A000000 		.4byte	.LVL1
 4655 00d5 0E000000 		.4byte	.LVL2
 4656 00d9 0700     		.2byte	0x7
 4657 00db 72       		.byte	0x72
 4658 00dc 00       		.sleb128 0
 4659 00dd 0A       		.byte	0xa
 4660 00de 0F0F     		.2byte	0xf0f
 4661 00e0 1A       		.byte	0x1a
 4662 00e1 9F       		.byte	0x9f
 4663 00e2 0E000000 		.4byte	.LVL2
 4664 00e6 16000000 		.4byte	.LVL3
 4665 00ea 0100     		.2byte	0x1
 4666 00ec 52       		.byte	0x52
 4667 00ed 00000000 		.4byte	0
 4668 00f1 00000000 		.4byte	0
 4669              	.LLST5:
 4670 00f5 A2000000 		.4byte	.LVL18
 4671 00f9 A4000000 		.4byte	.LVL19
 4672 00fd 0200     		.2byte	0x2
 4673 00ff 30       		.byte	0x30
 4674 0100 9F       		.byte	0x9f
 4675 0101 B0000000 		.4byte	.LVL20
 4676 0105 B2000000 		.4byte	.LVL21
 4677 0109 0200     		.2byte	0x2
 4678 010b 37       		.byte	0x37
 4679 010c 9F       		.byte	0x9f
 4680 010d B2000000 		.4byte	.LVL21
 4681 0111 EC000000 		.4byte	.LFE5
 4682 0115 0100     		.2byte	0x1
 4683 0117 53       		.byte	0x53
 4684 0118 00000000 		.4byte	0
 4685 011c 00000000 		.4byte	0
 4686              	.LLST6:
 4687 0120 00000000 		.4byte	.LVL24
 4688 0124 11000000 		.4byte	.LVL26-1
 4689 0128 0100     		.2byte	0x1
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccw66xHk.s 			page 154


 4690 012a 50       		.byte	0x50
 4691 012b 11000000 		.4byte	.LVL26-1
 4692 012f 1C000000 		.4byte	.LFE9
 4693 0133 0400     		.2byte	0x4
 4694 0135 F3       		.byte	0xf3
 4695 0136 01       		.uleb128 0x1
 4696 0137 50       		.byte	0x50
 4697 0138 9F       		.byte	0x9f
 4698 0139 00000000 		.4byte	0
 4699 013d 00000000 		.4byte	0
 4700              	.LLST7:
 4701 0141 0A000000 		.4byte	.LVL25
 4702 0145 14000000 		.4byte	.LVL27
 4703 0149 0100     		.2byte	0x1
 4704 014b 54       		.byte	0x54
 4705 014c 14000000 		.4byte	.LVL27
 4706 0150 1C000000 		.4byte	.LFE9
 4707 0154 0100     		.2byte	0x1
 4708 0156 50       		.byte	0x50
 4709 0157 00000000 		.4byte	0
 4710 015b 00000000 		.4byte	0
 4711              	.LLST8:
 4712 015f 00000000 		.4byte	.LVL28
 4713 0163 07000000 		.4byte	.LVL29-1
 4714 0167 0100     		.2byte	0x1
 4715 0169 50       		.byte	0x50
 4716 016a 07000000 		.4byte	.LVL29-1
 4717 016e 1E000000 		.4byte	.LVL30
 4718 0172 0100     		.2byte	0x1
 4719 0174 54       		.byte	0x54
 4720 0175 1E000000 		.4byte	.LVL30
 4721 0179 24000000 		.4byte	.LFE10
 4722 017d 0400     		.2byte	0x4
 4723 017f F3       		.byte	0xf3
 4724 0180 01       		.uleb128 0x1
 4725 0181 50       		.byte	0x50
 4726 0182 9F       		.byte	0x9f
 4727 0183 00000000 		.4byte	0
 4728 0187 00000000 		.4byte	0
 4729              	.LLST9:
 4730 018b 00000000 		.4byte	.LVL31
 4731 018f 00000000 		.4byte	.LVL31
 4732 0193 0100     		.2byte	0x1
 4733 0195 50       		.byte	0x50
 4734 0196 00000000 		.4byte	.LVL31
 4735 019a 04000000 		.4byte	.LVL32
 4736 019e 0700     		.2byte	0x7
 4737 01a0 70       		.byte	0x70
 4738 01a1 00       		.sleb128 0
 4739 01a2 0A       		.byte	0xa
 4740 01a3 FFFF     		.2byte	0xffff
 4741 01a5 1A       		.byte	0x1a
 4742 01a6 9F       		.byte	0x9f
 4743 01a7 04000000 		.4byte	.LVL32
 4744 01ab 14000000 		.4byte	.LFE14
 4745 01af 0800     		.2byte	0x8
 4746 01b1 F3       		.byte	0xf3
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccw66xHk.s 			page 155


 4747 01b2 01       		.uleb128 0x1
 4748 01b3 50       		.byte	0x50
 4749 01b4 0A       		.byte	0xa
 4750 01b5 FFFF     		.2byte	0xffff
 4751 01b7 1A       		.byte	0x1a
 4752 01b8 9F       		.byte	0x9f
 4753 01b9 00000000 		.4byte	0
 4754 01bd 00000000 		.4byte	0
 4755              	.LLST10:
 4756 01c1 00000000 		.4byte	.LVL33
 4757 01c5 08000000 		.4byte	.LVL34
 4758 01c9 0100     		.2byte	0x1
 4759 01cb 50       		.byte	0x50
 4760 01cc 08000000 		.4byte	.LVL34
 4761 01d0 10000000 		.4byte	.LVL35
 4762 01d4 0700     		.2byte	0x7
 4763 01d6 72       		.byte	0x72
 4764 01d7 00       		.sleb128 0
 4765 01d8 4E       		.byte	0x4e
 4766 01d9 3F       		.byte	0x3f
 4767 01da 24       		.byte	0x24
 4768 01db 1A       		.byte	0x1a
 4769 01dc 9F       		.byte	0x9f
 4770 01dd 10000000 		.4byte	.LVL35
 4771 01e1 20000000 		.4byte	.LFE17
 4772 01e5 0A00     		.2byte	0xa
 4773 01e7 F3       		.byte	0xf3
 4774 01e8 01       		.uleb128 0x1
 4775 01e9 50       		.byte	0x50
 4776 01ea 40       		.byte	0x40
 4777 01eb 24       		.byte	0x24
 4778 01ec 4E       		.byte	0x4e
 4779 01ed 3F       		.byte	0x3f
 4780 01ee 24       		.byte	0x24
 4781 01ef 1A       		.byte	0x1a
 4782 01f0 9F       		.byte	0x9f
 4783 01f1 00000000 		.4byte	0
 4784 01f5 00000000 		.4byte	0
 4785              	.LLST11:
 4786 01f9 00000000 		.4byte	.LVL36
 4787 01fd 08000000 		.4byte	.LVL38
 4788 0201 0100     		.2byte	0x1
 4789 0203 50       		.byte	0x50
 4790 0204 08000000 		.4byte	.LVL38
 4791 0208 10000000 		.4byte	.LFE22
 4792 020c 0500     		.2byte	0x5
 4793 020e 03       		.byte	0x3
 4794 020f 04000000 		.4byte	cySysWdtCallback
 4795 0213 00000000 		.4byte	0
 4796 0217 00000000 		.4byte	0
 4797              	.LLST12:
 4798 021b 00000000 		.4byte	.LVL36
 4799 021f 04000000 		.4byte	.LVL37
 4800 0223 0200     		.2byte	0x2
 4801 0225 30       		.byte	0x30
 4802 0226 9F       		.byte	0x9f
 4803 0227 04000000 		.4byte	.LVL37
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccw66xHk.s 			page 156


 4804 022b 10000000 		.4byte	.LFE22
 4805 022f 0100     		.2byte	0x1
 4806 0231 52       		.byte	0x52
 4807 0232 00000000 		.4byte	0
 4808 0236 00000000 		.4byte	0
 4809              	.LLST13:
 4810 023a 00000000 		.4byte	.LVL41
 4811 023e 18000000 		.4byte	.LVL44
 4812 0242 0100     		.2byte	0x1
 4813 0244 50       		.byte	0x50
 4814 0245 18000000 		.4byte	.LVL44
 4815 0249 30000000 		.4byte	.LVL47
 4816 024d 0100     		.2byte	0x1
 4817 024f 54       		.byte	0x54
 4818 0250 30000000 		.4byte	.LVL47
 4819 0254 60000000 		.4byte	.LFE26
 4820 0258 0400     		.2byte	0x4
 4821 025a F3       		.byte	0xf3
 4822 025b 01       		.uleb128 0x1
 4823 025c 50       		.byte	0x50
 4824 025d 9F       		.byte	0x9f
 4825 025e 00000000 		.4byte	0
 4826 0262 00000000 		.4byte	0
 4827              	.LLST14:
 4828 0266 2C000000 		.4byte	.LVL46
 4829 026a 3D000000 		.4byte	.LVL48-1
 4830 026e 0100     		.2byte	0x1
 4831 0270 50       		.byte	0x50
 4832 0271 00000000 		.4byte	0
 4833 0275 00000000 		.4byte	0
 4834              	.LLST15:
 4835 0279 08000000 		.4byte	.LVL42
 4836 027d 0C000000 		.4byte	.LVL43
 4837 0281 0800     		.2byte	0x8
 4838 0283 73       		.byte	0x73
 4839 0284 00       		.sleb128 0
 4840 0285 40       		.byte	0x40
 4841 0286 4A       		.byte	0x4a
 4842 0287 24       		.byte	0x24
 4843 0288 1F       		.byte	0x1f
 4844 0289 1A       		.byte	0x1a
 4845 028a 9F       		.byte	0x9f
 4846 028b 00000000 		.4byte	0
 4847 028f 00000000 		.4byte	0
 4848              	.LLST16:
 4849 0293 00000000 		.4byte	.LVL49
 4850 0297 04000000 		.4byte	.LVL50
 4851 029b 0100     		.2byte	0x1
 4852 029d 50       		.byte	0x50
 4853 029e 04000000 		.4byte	.LVL50
 4854 02a2 18000000 		.4byte	.LFE27
 4855 02a6 0400     		.2byte	0x4
 4856 02a8 F3       		.byte	0xf3
 4857 02a9 01       		.uleb128 0x1
 4858 02aa 50       		.byte	0x50
 4859 02ab 9F       		.byte	0x9f
 4860 02ac 00000000 		.4byte	0
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccw66xHk.s 			page 157


 4861 02b0 00000000 		.4byte	0
 4862              	.LLST17:
 4863 02b4 00000000 		.4byte	.LVL51
 4864 02b8 09000000 		.4byte	.LVL52-1
 4865 02bc 0100     		.2byte	0x1
 4866 02be 50       		.byte	0x50
 4867 02bf 09000000 		.4byte	.LVL52-1
 4868 02c3 14000000 		.4byte	.LVL53
 4869 02c7 0100     		.2byte	0x1
 4870 02c9 54       		.byte	0x54
 4871 02ca 14000000 		.4byte	.LVL53
 4872 02ce 2C000000 		.4byte	.LFE28
 4873 02d2 0400     		.2byte	0x4
 4874 02d4 F3       		.byte	0xf3
 4875 02d5 01       		.uleb128 0x1
 4876 02d6 50       		.byte	0x50
 4877 02d7 9F       		.byte	0x9f
 4878 02d8 00000000 		.4byte	0
 4879 02dc 00000000 		.4byte	0
 4880              	.LLST18:
 4881 02e0 00000000 		.4byte	.LVL51
 4882 02e4 09000000 		.4byte	.LVL52-1
 4883 02e8 0100     		.2byte	0x1
 4884 02ea 51       		.byte	0x51
 4885 02eb 09000000 		.4byte	.LVL52-1
 4886 02ef 24000000 		.4byte	.LVL57
 4887 02f3 0100     		.2byte	0x1
 4888 02f5 55       		.byte	0x55
 4889 02f6 24000000 		.4byte	.LVL57
 4890 02fa 2C000000 		.4byte	.LFE28
 4891 02fe 0400     		.2byte	0x4
 4892 0300 F3       		.byte	0xf3
 4893 0301 01       		.uleb128 0x1
 4894 0302 51       		.byte	0x51
 4895 0303 9F       		.byte	0x9f
 4896 0304 00000000 		.4byte	0
 4897 0308 00000000 		.4byte	0
 4898              	.LLST19:
 4899 030c 20000000 		.4byte	.LVL54
 4900 0310 22000000 		.4byte	.LVL55
 4901 0314 0100     		.2byte	0x1
 4902 0316 53       		.byte	0x53
 4903 0317 22000000 		.4byte	.LVL55
 4904 031b 24000000 		.4byte	.LVL56
 4905 031f 0100     		.2byte	0x1
 4906 0321 51       		.byte	0x51
 4907 0322 00000000 		.4byte	0
 4908 0326 00000000 		.4byte	0
 4909              	.LLST20:
 4910 032a 00000000 		.4byte	.LVL58
 4911 032e 04000000 		.4byte	.LVL59
 4912 0332 0100     		.2byte	0x1
 4913 0334 50       		.byte	0x50
 4914 0335 04000000 		.4byte	.LVL59
 4915 0339 14000000 		.4byte	.LFE29
 4916 033d 0400     		.2byte	0x4
 4917 033f F3       		.byte	0xf3
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccw66xHk.s 			page 158


 4918 0340 01       		.uleb128 0x1
 4919 0341 50       		.byte	0x50
 4920 0342 9F       		.byte	0x9f
 4921 0343 00000000 		.4byte	0
 4922 0347 00000000 		.4byte	0
 4923              	.LLST21:
 4924 034b 00000000 		.4byte	.LVL60
 4925 034f 09000000 		.4byte	.LVL61-1
 4926 0353 0100     		.2byte	0x1
 4927 0355 50       		.byte	0x50
 4928 0356 09000000 		.4byte	.LVL61-1
 4929 035a 10000000 		.4byte	.LVL62
 4930 035e 0100     		.2byte	0x1
 4931 0360 54       		.byte	0x54
 4932 0361 10000000 		.4byte	.LVL62
 4933 0365 2C000000 		.4byte	.LFE30
 4934 0369 0400     		.2byte	0x4
 4935 036b F3       		.byte	0xf3
 4936 036c 01       		.uleb128 0x1
 4937 036d 50       		.byte	0x50
 4938 036e 9F       		.byte	0x9f
 4939 036f 00000000 		.4byte	0
 4940 0373 00000000 		.4byte	0
 4941              	.LLST22:
 4942 0377 00000000 		.4byte	.LVL60
 4943 037b 09000000 		.4byte	.LVL61-1
 4944 037f 0100     		.2byte	0x1
 4945 0381 51       		.byte	0x51
 4946 0382 09000000 		.4byte	.LVL61-1
 4947 0386 16000000 		.4byte	.LVL63
 4948 038a 0100     		.2byte	0x1
 4949 038c 55       		.byte	0x55
 4950 038d 16000000 		.4byte	.LVL63
 4951 0391 2C000000 		.4byte	.LFE30
 4952 0395 0400     		.2byte	0x4
 4953 0397 F3       		.byte	0xf3
 4954 0398 01       		.uleb128 0x1
 4955 0399 51       		.byte	0x51
 4956 039a 9F       		.byte	0x9f
 4957 039b 00000000 		.4byte	0
 4958 039f 00000000 		.4byte	0
 4959              	.LLST23:
 4960 03a3 20000000 		.4byte	.LVL64
 4961 03a7 22000000 		.4byte	.LVL65
 4962 03ab 0100     		.2byte	0x1
 4963 03ad 53       		.byte	0x53
 4964 03ae 22000000 		.4byte	.LVL65
 4965 03b2 24000000 		.4byte	.LVL66
 4966 03b6 0100     		.2byte	0x1
 4967 03b8 54       		.byte	0x54
 4968 03b9 00000000 		.4byte	0
 4969 03bd 00000000 		.4byte	0
 4970              	.LLST24:
 4971 03c1 00000000 		.4byte	.LVL67
 4972 03c5 04000000 		.4byte	.LVL68
 4973 03c9 0100     		.2byte	0x1
 4974 03cb 50       		.byte	0x50
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccw66xHk.s 			page 159


 4975 03cc 04000000 		.4byte	.LVL68
 4976 03d0 18000000 		.4byte	.LFE31
 4977 03d4 0400     		.2byte	0x4
 4978 03d6 F3       		.byte	0xf3
 4979 03d7 01       		.uleb128 0x1
 4980 03d8 50       		.byte	0x50
 4981 03d9 9F       		.byte	0x9f
 4982 03da 00000000 		.4byte	0
 4983 03de 00000000 		.4byte	0
 4984              	.LLST25:
 4985 03e2 0C000000 		.4byte	.LVL70
 4986 03e6 12000000 		.4byte	.LVL71
 4987 03ea 0200     		.2byte	0x2
 4988 03ec 30       		.byte	0x30
 4989 03ed 9F       		.byte	0x9f
 4990 03ee 00000000 		.4byte	0
 4991 03f2 00000000 		.4byte	0
 4992              	.LLST26:
 4993 03f6 16000000 		.4byte	.LVL72
 4994 03fa 1C000000 		.4byte	.LVL73
 4995 03fe 0200     		.2byte	0x2
 4996 0400 31       		.byte	0x31
 4997 0401 9F       		.byte	0x9f
 4998 0402 00000000 		.4byte	0
 4999 0406 00000000 		.4byte	0
 5000              	.LLST27:
 5001 040a 20000000 		.4byte	.LVL74
 5002 040e 26000000 		.4byte	.LVL75
 5003 0412 0200     		.2byte	0x2
 5004 0414 32       		.byte	0x32
 5005 0415 9F       		.byte	0x9f
 5006 0416 00000000 		.4byte	0
 5007 041a 00000000 		.4byte	0
 5008              	.LLST28:
 5009 041e 0C000000 		.4byte	.LVL77
 5010 0422 12000000 		.4byte	.LVL78
 5011 0426 0200     		.2byte	0x2
 5012 0428 30       		.byte	0x30
 5013 0429 9F       		.byte	0x9f
 5014 042a 00000000 		.4byte	0
 5015 042e 00000000 		.4byte	0
 5016              	.LLST29:
 5017 0432 16000000 		.4byte	.LVL79
 5018 0436 1C000000 		.4byte	.LVL80
 5019 043a 0200     		.2byte	0x2
 5020 043c 31       		.byte	0x31
 5021 043d 9F       		.byte	0x9f
 5022 043e 00000000 		.4byte	0
 5023 0442 00000000 		.4byte	0
 5024              	.LLST30:
 5025 0446 20000000 		.4byte	.LVL81
 5026 044a 26000000 		.4byte	.LVL82
 5027 044e 0200     		.2byte	0x2
 5028 0450 32       		.byte	0x32
 5029 0451 9F       		.byte	0x9f
 5030 0452 00000000 		.4byte	0
 5031 0456 00000000 		.4byte	0
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccw66xHk.s 			page 160


 5032              	.LLST31:
 5033 045a 00000000 		.4byte	.LVL83
 5034 045e 22000000 		.4byte	.LVL90
 5035 0462 0100     		.2byte	0x1
 5036 0464 50       		.byte	0x50
 5037 0465 22000000 		.4byte	.LVL90
 5038 0469 34000000 		.4byte	.LFE34
 5039 046d 0400     		.2byte	0x4
 5040 046f F3       		.byte	0xf3
 5041 0470 01       		.uleb128 0x1
 5042 0471 50       		.byte	0x50
 5043 0472 9F       		.byte	0x9f
 5044 0473 00000000 		.4byte	0
 5045 0477 00000000 		.4byte	0
 5046              	.LLST32:
 5047 047b 1E000000 		.4byte	.LVL88
 5048 047f 20000000 		.4byte	.LVL89
 5049 0483 0100     		.2byte	0x1
 5050 0485 51       		.byte	0x51
 5051 0486 20000000 		.4byte	.LVL89
 5052 048a 22000000 		.4byte	.LVL90
 5053 048e 0100     		.2byte	0x1
 5054 0490 53       		.byte	0x53
 5055 0491 22000000 		.4byte	.LVL90
 5056 0495 24000000 		.4byte	.LVL91
 5057 0499 0100     		.2byte	0x1
 5058 049b 50       		.byte	0x50
 5059 049c 00000000 		.4byte	0
 5060 04a0 00000000 		.4byte	0
 5061              	.LLST33:
 5062 04a4 0A000000 		.4byte	.LVL86
 5063 04a8 0E000000 		.4byte	.LVL87
 5064 04ac 1100     		.2byte	0x11
 5065 04ae 73       		.byte	0x73
 5066 04af 00       		.sleb128 0
 5067 04b0 39       		.byte	0x39
 5068 04b1 25       		.byte	0x25
 5069 04b2 71       		.byte	0x71
 5070 04b3 00       		.sleb128 0
 5071 04b4 31       		.byte	0x31
 5072 04b5 25       		.byte	0x25
 5073 04b6 21       		.byte	0x21
 5074 04b7 72       		.byte	0x72
 5075 04b8 00       		.sleb128 0
 5076 04b9 41       		.byte	0x41
 5077 04ba 25       		.byte	0x25
 5078 04bb 21       		.byte	0x21
 5079 04bc 31       		.byte	0x31
 5080 04bd 1A       		.byte	0x1a
 5081 04be 9F       		.byte	0x9f
 5082 04bf 00000000 		.4byte	0
 5083 04c3 00000000 		.4byte	0
 5084              	.LLST34:
 5085 04c7 00000000 		.4byte	.LVL92
 5086 04cb 0E000000 		.4byte	.LVL93
 5087 04cf 0100     		.2byte	0x1
 5088 04d1 50       		.byte	0x50
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccw66xHk.s 			page 161


 5089 04d2 0E000000 		.4byte	.LVL93
 5090 04d6 38000000 		.4byte	.LVL98
 5091 04da 0100     		.2byte	0x1
 5092 04dc 56       		.byte	0x56
 5093 04dd 38000000 		.4byte	.LVL98
 5094 04e1 48000000 		.4byte	.LFE36
 5095 04e5 0400     		.2byte	0x4
 5096 04e7 F3       		.byte	0xf3
 5097 04e8 01       		.uleb128 0x1
 5098 04e9 50       		.byte	0x50
 5099 04ea 9F       		.byte	0x9f
 5100 04eb 00000000 		.4byte	0
 5101 04ef 00000000 		.4byte	0
 5102              	.LLST35:
 5103 04f3 00000000 		.4byte	.LVL92
 5104 04f7 17000000 		.4byte	.LVL94-1
 5105 04fb 0100     		.2byte	0x1
 5106 04fd 51       		.byte	0x51
 5107 04fe 17000000 		.4byte	.LVL94-1
 5108 0502 20000000 		.4byte	.LVL95
 5109 0506 0100     		.2byte	0x1
 5110 0508 54       		.byte	0x54
 5111 0509 20000000 		.4byte	.LVL95
 5112 050d 48000000 		.4byte	.LFE36
 5113 0511 0400     		.2byte	0x4
 5114 0513 F3       		.byte	0xf3
 5115 0514 01       		.uleb128 0x1
 5116 0515 51       		.byte	0x51
 5117 0516 9F       		.byte	0x9f
 5118 0517 00000000 		.4byte	0
 5119 051b 00000000 		.4byte	0
 5120              	.LLST36:
 5121 051f 00000000 		.4byte	.LVL99
 5122 0523 14000000 		.4byte	.LVL102
 5123 0527 0100     		.2byte	0x1
 5124 0529 50       		.byte	0x50
 5125 052a 14000000 		.4byte	.LVL102
 5126 052e 28000000 		.4byte	.LFE37
 5127 0532 0400     		.2byte	0x4
 5128 0534 F3       		.byte	0xf3
 5129 0535 01       		.uleb128 0x1
 5130 0536 50       		.byte	0x50
 5131 0537 9F       		.byte	0x9f
 5132 0538 00000000 		.4byte	0
 5133 053c 00000000 		.4byte	0
 5134              	.LLST37:
 5135 0540 0E000000 		.4byte	.LVL100
 5136 0544 10000000 		.4byte	.LVL101
 5137 0548 0100     		.2byte	0x1
 5138 054a 52       		.byte	0x52
 5139 054b 10000000 		.4byte	.LVL101
 5140 054f 18000000 		.4byte	.LVL103
 5141 0553 0100     		.2byte	0x1
 5142 0555 53       		.byte	0x53
 5143 0556 18000000 		.4byte	.LVL103
 5144 055a 1A000000 		.4byte	.LVL104
 5145 055e 0100     		.2byte	0x1
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccw66xHk.s 			page 162


 5146 0560 50       		.byte	0x50
 5147 0561 00000000 		.4byte	0
 5148 0565 00000000 		.4byte	0
 5149              	.LLST38:
 5150 0569 00000000 		.4byte	.LVL105
 5151 056d 04000000 		.4byte	.LVL106
 5152 0571 0100     		.2byte	0x1
 5153 0573 50       		.byte	0x50
 5154 0574 04000000 		.4byte	.LVL106
 5155 0578 10000000 		.4byte	.LFE39
 5156 057c 0400     		.2byte	0x4
 5157 057e F3       		.byte	0xf3
 5158 057f 01       		.uleb128 0x1
 5159 0580 50       		.byte	0x50
 5160 0581 9F       		.byte	0x9f
 5161 0582 00000000 		.4byte	0
 5162 0586 00000000 		.4byte	0
 5163              	.LLST39:
 5164 058a 00000000 		.4byte	.LVL107
 5165 058e 10000000 		.4byte	.LVL108
 5166 0592 0100     		.2byte	0x1
 5167 0594 50       		.byte	0x50
 5168 0595 10000000 		.4byte	.LVL108
 5169 0599 12000000 		.4byte	.LVL109
 5170 059d 0400     		.2byte	0x4
 5171 059f F3       		.byte	0xf3
 5172 05a0 01       		.uleb128 0x1
 5173 05a1 50       		.byte	0x50
 5174 05a2 9F       		.byte	0x9f
 5175 05a3 12000000 		.4byte	.LVL109
 5176 05a7 16000000 		.4byte	.LVL110
 5177 05ab 0100     		.2byte	0x1
 5178 05ad 50       		.byte	0x50
 5179 05ae 16000000 		.4byte	.LVL110
 5180 05b2 1A000000 		.4byte	.LVL112
 5181 05b6 0400     		.2byte	0x4
 5182 05b8 F3       		.byte	0xf3
 5183 05b9 01       		.uleb128 0x1
 5184 05ba 50       		.byte	0x50
 5185 05bb 9F       		.byte	0x9f
 5186 05bc 1A000000 		.4byte	.LVL112
 5187 05c0 1E000000 		.4byte	.LVL113
 5188 05c4 0100     		.2byte	0x1
 5189 05c6 50       		.byte	0x50
 5190 05c7 1E000000 		.4byte	.LVL113
 5191 05cb 22000000 		.4byte	.LVL115
 5192 05cf 0400     		.2byte	0x4
 5193 05d1 F3       		.byte	0xf3
 5194 05d2 01       		.uleb128 0x1
 5195 05d3 50       		.byte	0x50
 5196 05d4 9F       		.byte	0x9f
 5197 05d5 22000000 		.4byte	.LVL115
 5198 05d9 24000000 		.4byte	.LVL116
 5199 05dd 0100     		.2byte	0x1
 5200 05df 50       		.byte	0x50
 5201 05e0 24000000 		.4byte	.LVL116
 5202 05e4 30000000 		.4byte	.LFE40
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccw66xHk.s 			page 163


 5203 05e8 0400     		.2byte	0x4
 5204 05ea F3       		.byte	0xf3
 5205 05eb 01       		.uleb128 0x1
 5206 05ec 50       		.byte	0x50
 5207 05ed 9F       		.byte	0x9f
 5208 05ee 00000000 		.4byte	0
 5209 05f2 00000000 		.4byte	0
 5210              	.LLST40:
 5211 05f6 00000000 		.4byte	.LVL107
 5212 05fa 10000000 		.4byte	.LVL108
 5213 05fe 0200     		.2byte	0x2
 5214 0600 30       		.byte	0x30
 5215 0601 9F       		.byte	0x9f
 5216 0602 10000000 		.4byte	.LVL108
 5217 0606 12000000 		.4byte	.LVL109
 5218 060a 0100     		.2byte	0x1
 5219 060c 50       		.byte	0x50
 5220 060d 12000000 		.4byte	.LVL109
 5221 0611 18000000 		.4byte	.LVL111
 5222 0615 0200     		.2byte	0x2
 5223 0617 30       		.byte	0x30
 5224 0618 9F       		.byte	0x9f
 5225 0619 18000000 		.4byte	.LVL111
 5226 061d 1A000000 		.4byte	.LVL112
 5227 0621 0100     		.2byte	0x1
 5228 0623 50       		.byte	0x50
 5229 0624 1A000000 		.4byte	.LVL112
 5230 0628 20000000 		.4byte	.LVL114
 5231 062c 0200     		.2byte	0x2
 5232 062e 30       		.byte	0x30
 5233 062f 9F       		.byte	0x9f
 5234 0630 20000000 		.4byte	.LVL114
 5235 0634 22000000 		.4byte	.LVL115
 5236 0638 0100     		.2byte	0x1
 5237 063a 50       		.byte	0x50
 5238 063b 22000000 		.4byte	.LVL115
 5239 063f 24000000 		.4byte	.LVL116
 5240 0643 0200     		.2byte	0x2
 5241 0645 30       		.byte	0x30
 5242 0646 9F       		.byte	0x9f
 5243 0647 24000000 		.4byte	.LVL116
 5244 064b 30000000 		.4byte	.LFE40
 5245 064f 0100     		.2byte	0x1
 5246 0651 50       		.byte	0x50
 5247 0652 00000000 		.4byte	0
 5248 0656 00000000 		.4byte	0
 5249              	.LLST41:
 5250 065a 00000000 		.4byte	.LVL117
 5251 065e 07000000 		.4byte	.LVL118-1
 5252 0662 0100     		.2byte	0x1
 5253 0664 50       		.byte	0x50
 5254 0665 07000000 		.4byte	.LVL118-1
 5255 0669 08000000 		.4byte	.LVL118
 5256 066d 0100     		.2byte	0x1
 5257 066f 54       		.byte	0x54
 5258 0670 08000000 		.4byte	.LVL118
 5259 0674 10000000 		.4byte	.LVL119
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccw66xHk.s 			page 164


 5260 0678 0900     		.2byte	0x9
 5261 067a 74       		.byte	0x74
 5262 067b 00       		.sleb128 0
 5263 067c 0C       		.byte	0xc
 5264 067d 04040400 		.4byte	0x40404
 5265 0681 1A       		.byte	0x1a
 5266 0682 9F       		.byte	0x9f
 5267 0683 10000000 		.4byte	.LVL119
 5268 0687 1E000000 		.4byte	.LVL121
 5269 068b 0100     		.2byte	0x1
 5270 068d 54       		.byte	0x54
 5271 068e 1E000000 		.4byte	.LVL121
 5272 0692 2C000000 		.4byte	.LFE42
 5273 0696 0A00     		.2byte	0xa
 5274 0698 F3       		.byte	0xf3
 5275 0699 01       		.uleb128 0x1
 5276 069a 50       		.byte	0x50
 5277 069b 0C       		.byte	0xc
 5278 069c 04040400 		.4byte	0x40404
 5279 06a0 1A       		.byte	0x1a
 5280 06a1 9F       		.byte	0x9f
 5281 06a2 00000000 		.4byte	0
 5282 06a6 00000000 		.4byte	0
 5283              	.LLST42:
 5284 06aa 08000000 		.4byte	.LVL118
 5285 06ae 1D000000 		.4byte	.LVL120-1
 5286 06b2 0100     		.2byte	0x1
 5287 06b4 50       		.byte	0x50
 5288 06b5 00000000 		.4byte	0
 5289 06b9 00000000 		.4byte	0
 5290              	.LLST43:
 5291 06bd 00000000 		.4byte	.LVL122
 5292 06c1 0A000000 		.4byte	.LVL123
 5293 06c5 0100     		.2byte	0x1
 5294 06c7 50       		.byte	0x50
 5295 06c8 0A000000 		.4byte	.LVL123
 5296 06cc 18000000 		.4byte	.LFE43
 5297 06d0 0400     		.2byte	0x4
 5298 06d2 F3       		.byte	0xf3
 5299 06d3 01       		.uleb128 0x1
 5300 06d4 50       		.byte	0x50
 5301 06d5 9F       		.byte	0x9f
 5302 06d6 00000000 		.4byte	0
 5303 06da 00000000 		.4byte	0
 5304              	.LLST44:
 5305 06de 00000000 		.4byte	.LVL122
 5306 06e2 0E000000 		.4byte	.LVL124
 5307 06e6 0200     		.2byte	0x2
 5308 06e8 30       		.byte	0x30
 5309 06e9 9F       		.byte	0x9f
 5310 06ea 0E000000 		.4byte	.LVL124
 5311 06ee 18000000 		.4byte	.LFE43
 5312 06f2 0100     		.2byte	0x1
 5313 06f4 52       		.byte	0x52
 5314 06f5 00000000 		.4byte	0
 5315 06f9 00000000 		.4byte	0
 5316              	.LLST45:
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccw66xHk.s 			page 165


 5317 06fd 00000000 		.4byte	.LVL126
 5318 0701 0A000000 		.4byte	.LVL127
 5319 0705 0100     		.2byte	0x1
 5320 0707 50       		.byte	0x50
 5321 0708 0A000000 		.4byte	.LVL127
 5322 070c 18000000 		.4byte	.LFE44
 5323 0710 0400     		.2byte	0x4
 5324 0712 F3       		.byte	0xf3
 5325 0713 01       		.uleb128 0x1
 5326 0714 50       		.byte	0x50
 5327 0715 9F       		.byte	0x9f
 5328 0716 00000000 		.4byte	0
 5329 071a 00000000 		.4byte	0
 5330              	.LLST46:
 5331 071e 00000000 		.4byte	.LVL126
 5332 0722 0E000000 		.4byte	.LVL128
 5333 0726 0200     		.2byte	0x2
 5334 0728 30       		.byte	0x30
 5335 0729 9F       		.byte	0x9f
 5336 072a 0E000000 		.4byte	.LVL128
 5337 072e 18000000 		.4byte	.LFE44
 5338 0732 0100     		.2byte	0x1
 5339 0734 53       		.byte	0x53
 5340 0735 00000000 		.4byte	0
 5341 0739 00000000 		.4byte	0
 5342              	.LLST47:
 5343 073d 00000000 		.4byte	.LVL129
 5344 0741 0A000000 		.4byte	.LVL130
 5345 0745 0100     		.2byte	0x1
 5346 0747 50       		.byte	0x50
 5347 0748 0A000000 		.4byte	.LVL130
 5348 074c 28000000 		.4byte	.LFE45
 5349 0750 0400     		.2byte	0x4
 5350 0752 F3       		.byte	0xf3
 5351 0753 01       		.uleb128 0x1
 5352 0754 50       		.byte	0x50
 5353 0755 9F       		.byte	0x9f
 5354 0756 00000000 		.4byte	0
 5355 075a 00000000 		.4byte	0
 5356              	.LLST48:
 5357 075e 00000000 		.4byte	.LVL131
 5358 0762 0A000000 		.4byte	.LVL132
 5359 0766 0100     		.2byte	0x1
 5360 0768 50       		.byte	0x50
 5361 0769 0A000000 		.4byte	.LVL132
 5362 076d 1C000000 		.4byte	.LFE46
 5363 0771 0400     		.2byte	0x4
 5364 0773 F3       		.byte	0xf3
 5365 0774 01       		.uleb128 0x1
 5366 0775 50       		.byte	0x50
 5367 0776 9F       		.byte	0x9f
 5368 0777 00000000 		.4byte	0
 5369 077b 00000000 		.4byte	0
 5370              	.LLST49:
 5371 077f 00000000 		.4byte	.LVL139
 5372 0783 08000000 		.4byte	.LVL140
 5373 0787 0100     		.2byte	0x1
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccw66xHk.s 			page 166


 5374 0789 50       		.byte	0x50
 5375 078a 08000000 		.4byte	.LVL140
 5376 078e 1C000000 		.4byte	.LFE48
 5377 0792 0400     		.2byte	0x4
 5378 0794 F3       		.byte	0xf3
 5379 0795 01       		.uleb128 0x1
 5380 0796 50       		.byte	0x50
 5381 0797 9F       		.byte	0x9f
 5382 0798 00000000 		.4byte	0
 5383 079c 00000000 		.4byte	0
 5384              	.LLST50:
 5385 07a0 00000000 		.4byte	.LVL141
 5386 07a4 0F000000 		.4byte	.LVL142-1
 5387 07a8 0100     		.2byte	0x1
 5388 07aa 50       		.byte	0x50
 5389 07ab 0F000000 		.4byte	.LVL142-1
 5390 07af 52000000 		.4byte	.LVL149
 5391 07b3 0100     		.2byte	0x1
 5392 07b5 54       		.byte	0x54
 5393 07b6 52000000 		.4byte	.LVL149
 5394 07ba 64000000 		.4byte	.LFE50
 5395 07be 0400     		.2byte	0x4
 5396 07c0 F3       		.byte	0xf3
 5397 07c1 01       		.uleb128 0x1
 5398 07c2 50       		.byte	0x50
 5399 07c3 9F       		.byte	0x9f
 5400 07c4 00000000 		.4byte	0
 5401 07c8 00000000 		.4byte	0
 5402              	.LLST51:
 5403 07cc 00000000 		.4byte	.LVL141
 5404 07d0 0F000000 		.4byte	.LVL142-1
 5405 07d4 0100     		.2byte	0x1
 5406 07d6 51       		.byte	0x51
 5407 07d7 0F000000 		.4byte	.LVL142-1
 5408 07db 64000000 		.4byte	.LFE50
 5409 07df 0400     		.2byte	0x4
 5410 07e1 F3       		.byte	0xf3
 5411 07e2 01       		.uleb128 0x1
 5412 07e3 51       		.byte	0x51
 5413 07e4 9F       		.byte	0x9f
 5414 07e5 00000000 		.4byte	0
 5415 07e9 00000000 		.4byte	0
 5416              	.LLST52:
 5417 07ed 00000000 		.4byte	.LVL141
 5418 07f1 0F000000 		.4byte	.LVL142-1
 5419 07f5 0100     		.2byte	0x1
 5420 07f7 52       		.byte	0x52
 5421 07f8 0F000000 		.4byte	.LVL142-1
 5422 07fc 52000000 		.4byte	.LVL149
 5423 0800 0100     		.2byte	0x1
 5424 0802 55       		.byte	0x55
 5425 0803 52000000 		.4byte	.LVL149
 5426 0807 64000000 		.4byte	.LFE50
 5427 080b 0400     		.2byte	0x4
 5428 080d F3       		.byte	0xf3
 5429 080e 01       		.uleb128 0x1
 5430 080f 52       		.byte	0x52
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccw66xHk.s 			page 167


 5431 0810 9F       		.byte	0x9f
 5432 0811 00000000 		.4byte	0
 5433 0815 00000000 		.4byte	0
 5434              	.LLST53:
 5435 0819 24000000 		.4byte	.LVL143
 5436 081d 2A000000 		.4byte	.LVL144
 5437 0821 0100     		.2byte	0x1
 5438 0823 50       		.byte	0x50
 5439 0824 2E000000 		.4byte	.LVL145
 5440 0828 34000000 		.4byte	.LVL146
 5441 082c 0100     		.2byte	0x1
 5442 082e 50       		.byte	0x50
 5443 082f 00000000 		.4byte	0
 5444 0833 00000000 		.4byte	0
 5445              	.LLST54:
 5446 0837 34000000 		.4byte	.LVL146
 5447 083b 3E000000 		.4byte	.LVL147
 5448 083f 0100     		.2byte	0x1
 5449 0841 56       		.byte	0x56
 5450 0842 00000000 		.4byte	0
 5451 0846 00000000 		.4byte	0
 5452              	.LLST55:
 5453 084a 34000000 		.4byte	.LVL146
 5454 084e 52000000 		.4byte	.LVL149
 5455 0852 0100     		.2byte	0x1
 5456 0854 55       		.byte	0x55
 5457 0855 00000000 		.4byte	0
 5458 0859 00000000 		.4byte	0
 5459              	.LLST56:
 5460 085d 34000000 		.4byte	.LVL146
 5461 0861 52000000 		.4byte	.LVL149
 5462 0865 0100     		.2byte	0x1
 5463 0867 54       		.byte	0x54
 5464 0868 00000000 		.4byte	0
 5465 086c 00000000 		.4byte	0
 5466              	.LLST57:
 5467 0870 3E000000 		.4byte	.LVL147
 5468 0874 52000000 		.4byte	.LVL149
 5469 0878 0100     		.2byte	0x1
 5470 087a 56       		.byte	0x56
 5471 087b 00000000 		.4byte	0
 5472 087f 00000000 		.4byte	0
 5473              	.LLST58:
 5474 0883 00000000 		.4byte	.LVL150
 5475 0887 0F000000 		.4byte	.LVL151-1
 5476 088b 0100     		.2byte	0x1
 5477 088d 50       		.byte	0x50
 5478 088e 0F000000 		.4byte	.LVL151-1
 5479 0892 2C000000 		.4byte	.LVL154
 5480 0896 0100     		.2byte	0x1
 5481 0898 55       		.byte	0x55
 5482 0899 2C000000 		.4byte	.LVL154
 5483 089d 34000000 		.4byte	.LFE49
 5484 08a1 0400     		.2byte	0x4
 5485 08a3 F3       		.byte	0xf3
 5486 08a4 01       		.uleb128 0x1
 5487 08a5 50       		.byte	0x50
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccw66xHk.s 			page 168


 5488 08a6 9F       		.byte	0x9f
 5489 08a7 00000000 		.4byte	0
 5490 08ab 00000000 		.4byte	0
 5491              	.LLST59:
 5492 08af 00000000 		.4byte	.LVL150
 5493 08b3 0F000000 		.4byte	.LVL151-1
 5494 08b7 0100     		.2byte	0x1
 5495 08b9 51       		.byte	0x51
 5496 08ba 0F000000 		.4byte	.LVL151-1
 5497 08be 34000000 		.4byte	.LFE49
 5498 08c2 0400     		.2byte	0x4
 5499 08c4 F3       		.byte	0xf3
 5500 08c5 01       		.uleb128 0x1
 5501 08c6 51       		.byte	0x51
 5502 08c7 9F       		.byte	0x9f
 5503 08c8 00000000 		.4byte	0
 5504 08cc 00000000 		.4byte	0
 5505              	.LLST60:
 5506 08d0 00000000 		.4byte	.LVL150
 5507 08d4 0F000000 		.4byte	.LVL151-1
 5508 08d8 0100     		.2byte	0x1
 5509 08da 52       		.byte	0x52
 5510 08db 0F000000 		.4byte	.LVL151-1
 5511 08df 2C000000 		.4byte	.LVL154
 5512 08e3 0100     		.2byte	0x1
 5513 08e5 54       		.byte	0x54
 5514 08e6 2C000000 		.4byte	.LVL154
 5515 08ea 34000000 		.4byte	.LFE49
 5516 08ee 0400     		.2byte	0x4
 5517 08f0 F3       		.byte	0xf3
 5518 08f1 01       		.uleb128 0x1
 5519 08f2 52       		.byte	0x52
 5520 08f3 9F       		.byte	0x9f
 5521 08f4 00000000 		.4byte	0
 5522 08f8 00000000 		.4byte	0
 5523              	.LLST61:
 5524 08fc 20000000 		.4byte	.LVL152
 5525 0900 26000000 		.4byte	.LVL153
 5526 0904 0100     		.2byte	0x1
 5527 0906 50       		.byte	0x50
 5528 0907 00000000 		.4byte	0
 5529 090b 00000000 		.4byte	0
 5530              	.LLST62:
 5531 090f 20000000 		.4byte	.LVL152
 5532 0913 26000000 		.4byte	.LVL153
 5533 0917 0A00     		.2byte	0xa
 5534 0919 70       		.byte	0x70
 5535 091a 00       		.sleb128 0
 5536 091b 74       		.byte	0x74
 5537 091c 00       		.sleb128 0
 5538 091d 22       		.byte	0x22
 5539 091e 0A       		.byte	0xa
 5540 091f FFFF     		.2byte	0xffff
 5541 0921 1A       		.byte	0x1a
 5542 0922 9F       		.byte	0x9f
 5543 0923 00000000 		.4byte	0
 5544 0927 00000000 		.4byte	0
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccw66xHk.s 			page 169


 5545              		.section	.debug_aranges,"",%progbits
 5546 0000 A4010000 		.4byte	0x1a4
 5547 0004 0200     		.2byte	0x2
 5548 0006 00000000 		.4byte	.Ldebug_info0
 5549 000a 04       		.byte	0x4
 5550 000b 00       		.byte	0
 5551 000c 0000     		.2byte	0
 5552 000e 0000     		.2byte	0
 5553 0010 00000000 		.4byte	.LFB0
 5554 0014 34000000 		.4byte	.LFE0-.LFB0
 5555 0018 00000000 		.4byte	.LFB1
 5556 001c 14000000 		.4byte	.LFE1-.LFB1
 5557 0020 00000000 		.4byte	.LFB2
 5558 0024 10000000 		.4byte	.LFE2-.LFB2
 5559 0028 00000000 		.4byte	.LFB3
 5560 002c 34000000 		.4byte	.LFE3-.LFB3
 5561 0030 00000000 		.4byte	.LFB4
 5562 0034 28000000 		.4byte	.LFE4-.LFB4
 5563 0038 00000000 		.4byte	.LFB5
 5564 003c EC000000 		.4byte	.LFE5-.LFB5
 5565 0040 00000000 		.4byte	.LFB6
 5566 0044 18000000 		.4byte	.LFE6-.LFB6
 5567 0048 00000000 		.4byte	.LFB8
 5568 004c 0C000000 		.4byte	.LFE8-.LFB8
 5569 0050 00000000 		.4byte	.LFB7
 5570 0054 1C000000 		.4byte	.LFE7-.LFB7
 5571 0058 00000000 		.4byte	.LFB9
 5572 005c 1C000000 		.4byte	.LFE9-.LFB9
 5573 0060 00000000 		.4byte	.LFB10
 5574 0064 24000000 		.4byte	.LFE10-.LFB10
 5575 0068 00000000 		.4byte	.LFB11
 5576 006c 18000000 		.4byte	.LFE11-.LFB11
 5577 0070 00000000 		.4byte	.LFB12
 5578 0074 0C000000 		.4byte	.LFE12-.LFB12
 5579 0078 00000000 		.4byte	.LFB13
 5580 007c 10000000 		.4byte	.LFE13-.LFB13
 5581 0080 00000000 		.4byte	.LFB14
 5582 0084 14000000 		.4byte	.LFE14-.LFB14
 5583 0088 00000000 		.4byte	.LFB15
 5584 008c 0C000000 		.4byte	.LFE15-.LFB15
 5585 0090 00000000 		.4byte	.LFB16
 5586 0094 0C000000 		.4byte	.LFE16-.LFB16
 5587 0098 00000000 		.4byte	.LFB17
 5588 009c 20000000 		.4byte	.LFE17-.LFB17
 5589 00a0 00000000 		.4byte	.LFB18
 5590 00a4 10000000 		.4byte	.LFE18-.LFB18
 5591 00a8 00000000 		.4byte	.LFB19
 5592 00ac 10000000 		.4byte	.LFE19-.LFB19
 5593 00b0 00000000 		.4byte	.LFB20
 5594 00b4 10000000 		.4byte	.LFE20-.LFB20
 5595 00b8 00000000 		.4byte	.LFB21
 5596 00bc 10000000 		.4byte	.LFE21-.LFB21
 5597 00c0 00000000 		.4byte	.LFB22
 5598 00c4 10000000 		.4byte	.LFE22-.LFB22
 5599 00c8 00000000 		.4byte	.LFB23
 5600 00cc 0C000000 		.4byte	.LFE23-.LFB23
 5601 00d0 00000000 		.4byte	.LFB24
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccw66xHk.s 			page 170


 5602 00d4 18000000 		.4byte	.LFE24-.LFB24
 5603 00d8 00000000 		.4byte	.LFB26
 5604 00dc 60000000 		.4byte	.LFE26-.LFB26
 5605 00e0 00000000 		.4byte	.LFB27
 5606 00e4 18000000 		.4byte	.LFE27-.LFB27
 5607 00e8 00000000 		.4byte	.LFB28
 5608 00ec 2C000000 		.4byte	.LFE28-.LFB28
 5609 00f0 00000000 		.4byte	.LFB29
 5610 00f4 14000000 		.4byte	.LFE29-.LFB29
 5611 00f8 00000000 		.4byte	.LFB30
 5612 00fc 2C000000 		.4byte	.LFE30-.LFB30
 5613 0100 00000000 		.4byte	.LFB31
 5614 0104 18000000 		.4byte	.LFE31-.LFB31
 5615 0108 00000000 		.4byte	.LFB32
 5616 010c 2C000000 		.4byte	.LFE32-.LFB32
 5617 0110 00000000 		.4byte	.LFB33
 5618 0114 2C000000 		.4byte	.LFE33-.LFB33
 5619 0118 00000000 		.4byte	.LFB34
 5620 011c 34000000 		.4byte	.LFE34-.LFB34
 5621 0120 00000000 		.4byte	.LFB35
 5622 0124 14000000 		.4byte	.LFE35-.LFB35
 5623 0128 00000000 		.4byte	.LFB36
 5624 012c 48000000 		.4byte	.LFE36-.LFB36
 5625 0130 00000000 		.4byte	.LFB37
 5626 0134 28000000 		.4byte	.LFE37-.LFB37
 5627 0138 00000000 		.4byte	.LFB38
 5628 013c 10000000 		.4byte	.LFE38-.LFB38
 5629 0140 00000000 		.4byte	.LFB39
 5630 0144 10000000 		.4byte	.LFE39-.LFB39
 5631 0148 00000000 		.4byte	.LFB40
 5632 014c 30000000 		.4byte	.LFE40-.LFB40
 5633 0150 00000000 		.4byte	.LFB41
 5634 0154 14000000 		.4byte	.LFE41-.LFB41
 5635 0158 00000000 		.4byte	.LFB42
 5636 015c 2C000000 		.4byte	.LFE42-.LFB42
 5637 0160 00000000 		.4byte	.LFB43
 5638 0164 18000000 		.4byte	.LFE43-.LFB43
 5639 0168 00000000 		.4byte	.LFB44
 5640 016c 18000000 		.4byte	.LFE44-.LFB44
 5641 0170 00000000 		.4byte	.LFB45
 5642 0174 28000000 		.4byte	.LFE45-.LFB45
 5643 0178 00000000 		.4byte	.LFB46
 5644 017c 1C000000 		.4byte	.LFE46-.LFB46
 5645 0180 00000000 		.4byte	.LFB47
 5646 0184 A0000000 		.4byte	.LFE47-.LFB47
 5647 0188 00000000 		.4byte	.LFB48
 5648 018c 1C000000 		.4byte	.LFE48-.LFB48
 5649 0190 00000000 		.4byte	.LFB50
 5650 0194 64000000 		.4byte	.LFE50-.LFB50
 5651 0198 00000000 		.4byte	.LFB49
 5652 019c 34000000 		.4byte	.LFE49-.LFB49
 5653 01a0 00000000 		.4byte	0
 5654 01a4 00000000 		.4byte	0
 5655              		.section	.debug_ranges,"",%progbits
 5656              	.Ldebug_ranges0:
 5657 0000 02000000 		.4byte	.LBB4
 5658 0004 04000000 		.4byte	.LBE4
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccw66xHk.s 			page 171


 5659 0008 06000000 		.4byte	.LBB7
 5660 000c 0E000000 		.4byte	.LBE7
 5661 0010 00000000 		.4byte	0
 5662 0014 00000000 		.4byte	0
 5663 0018 00000000 		.4byte	.LBB38
 5664 001c 02000000 		.4byte	.LBE38
 5665 0020 04000000 		.4byte	.LBB42
 5666 0024 06000000 		.4byte	.LBE42
 5667 0028 0C000000 		.4byte	.LBB50
 5668 002c 0E000000 		.4byte	.LBE50
 5669 0030 00000000 		.4byte	0
 5670 0034 00000000 		.4byte	0
 5671 0038 06000000 		.4byte	.LBB43
 5672 003c 08000000 		.4byte	.LBE43
 5673 0040 0A000000 		.4byte	.LBB49
 5674 0044 0C000000 		.4byte	.LBE49
 5675 0048 00000000 		.4byte	0
 5676 004c 00000000 		.4byte	0
 5677 0050 08000000 		.4byte	.LBB46
 5678 0054 0A000000 		.4byte	.LBE46
 5679 0058 10000000 		.4byte	.LBB51
 5680 005c 12000000 		.4byte	.LBE51
 5681 0060 00000000 		.4byte	0
 5682 0064 00000000 		.4byte	0
 5683 0068 00000000 		.4byte	.LFB0
 5684 006c 34000000 		.4byte	.LFE0
 5685 0070 00000000 		.4byte	.LFB1
 5686 0074 14000000 		.4byte	.LFE1
 5687 0078 00000000 		.4byte	.LFB2
 5688 007c 10000000 		.4byte	.LFE2
 5689 0080 00000000 		.4byte	.LFB3
 5690 0084 34000000 		.4byte	.LFE3
 5691 0088 00000000 		.4byte	.LFB4
 5692 008c 28000000 		.4byte	.LFE4
 5693 0090 00000000 		.4byte	.LFB5
 5694 0094 EC000000 		.4byte	.LFE5
 5695 0098 00000000 		.4byte	.LFB6
 5696 009c 18000000 		.4byte	.LFE6
 5697 00a0 00000000 		.4byte	.LFB8
 5698 00a4 0C000000 		.4byte	.LFE8
 5699 00a8 00000000 		.4byte	.LFB7
 5700 00ac 1C000000 		.4byte	.LFE7
 5701 00b0 00000000 		.4byte	.LFB9
 5702 00b4 1C000000 		.4byte	.LFE9
 5703 00b8 00000000 		.4byte	.LFB10
 5704 00bc 24000000 		.4byte	.LFE10
 5705 00c0 00000000 		.4byte	.LFB11
 5706 00c4 18000000 		.4byte	.LFE11
 5707 00c8 00000000 		.4byte	.LFB12
 5708 00cc 0C000000 		.4byte	.LFE12
 5709 00d0 00000000 		.4byte	.LFB13
 5710 00d4 10000000 		.4byte	.LFE13
 5711 00d8 00000000 		.4byte	.LFB14
 5712 00dc 14000000 		.4byte	.LFE14
 5713 00e0 00000000 		.4byte	.LFB15
 5714 00e4 0C000000 		.4byte	.LFE15
 5715 00e8 00000000 		.4byte	.LFB16
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccw66xHk.s 			page 172


 5716 00ec 0C000000 		.4byte	.LFE16
 5717 00f0 00000000 		.4byte	.LFB17
 5718 00f4 20000000 		.4byte	.LFE17
 5719 00f8 00000000 		.4byte	.LFB18
 5720 00fc 10000000 		.4byte	.LFE18
 5721 0100 00000000 		.4byte	.LFB19
 5722 0104 10000000 		.4byte	.LFE19
 5723 0108 00000000 		.4byte	.LFB20
 5724 010c 10000000 		.4byte	.LFE20
 5725 0110 00000000 		.4byte	.LFB21
 5726 0114 10000000 		.4byte	.LFE21
 5727 0118 00000000 		.4byte	.LFB22
 5728 011c 10000000 		.4byte	.LFE22
 5729 0120 00000000 		.4byte	.LFB23
 5730 0124 0C000000 		.4byte	.LFE23
 5731 0128 00000000 		.4byte	.LFB24
 5732 012c 18000000 		.4byte	.LFE24
 5733 0130 00000000 		.4byte	.LFB26
 5734 0134 60000000 		.4byte	.LFE26
 5735 0138 00000000 		.4byte	.LFB27
 5736 013c 18000000 		.4byte	.LFE27
 5737 0140 00000000 		.4byte	.LFB28
 5738 0144 2C000000 		.4byte	.LFE28
 5739 0148 00000000 		.4byte	.LFB29
 5740 014c 14000000 		.4byte	.LFE29
 5741 0150 00000000 		.4byte	.LFB30
 5742 0154 2C000000 		.4byte	.LFE30
 5743 0158 00000000 		.4byte	.LFB31
 5744 015c 18000000 		.4byte	.LFE31
 5745 0160 00000000 		.4byte	.LFB32
 5746 0164 2C000000 		.4byte	.LFE32
 5747 0168 00000000 		.4byte	.LFB33
 5748 016c 2C000000 		.4byte	.LFE33
 5749 0170 00000000 		.4byte	.LFB34
 5750 0174 34000000 		.4byte	.LFE34
 5751 0178 00000000 		.4byte	.LFB35
 5752 017c 14000000 		.4byte	.LFE35
 5753 0180 00000000 		.4byte	.LFB36
 5754 0184 48000000 		.4byte	.LFE36
 5755 0188 00000000 		.4byte	.LFB37
 5756 018c 28000000 		.4byte	.LFE37
 5757 0190 00000000 		.4byte	.LFB38
 5758 0194 10000000 		.4byte	.LFE38
 5759 0198 00000000 		.4byte	.LFB39
 5760 019c 10000000 		.4byte	.LFE39
 5761 01a0 00000000 		.4byte	.LFB40
 5762 01a4 30000000 		.4byte	.LFE40
 5763 01a8 00000000 		.4byte	.LFB41
 5764 01ac 14000000 		.4byte	.LFE41
 5765 01b0 00000000 		.4byte	.LFB42
 5766 01b4 2C000000 		.4byte	.LFE42
 5767 01b8 00000000 		.4byte	.LFB43
 5768 01bc 18000000 		.4byte	.LFE43
 5769 01c0 00000000 		.4byte	.LFB44
 5770 01c4 18000000 		.4byte	.LFE44
 5771 01c8 00000000 		.4byte	.LFB45
 5772 01cc 28000000 		.4byte	.LFE45
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccw66xHk.s 			page 173


 5773 01d0 00000000 		.4byte	.LFB46
 5774 01d4 1C000000 		.4byte	.LFE46
 5775 01d8 00000000 		.4byte	.LFB47
 5776 01dc A0000000 		.4byte	.LFE47
 5777 01e0 00000000 		.4byte	.LFB48
 5778 01e4 1C000000 		.4byte	.LFE48
 5779 01e8 00000000 		.4byte	.LFB50
 5780 01ec 64000000 		.4byte	.LFE50
 5781 01f0 00000000 		.4byte	.LFB49
 5782 01f4 34000000 		.4byte	.LFE49
 5783 01f8 00000000 		.4byte	0
 5784 01fc 00000000 		.4byte	0
 5785              		.section	.debug_line,"",%progbits
 5786              	.Ldebug_line0:
 5787 0000 8A060000 		.section	.debug_str,"MS",%progbits,1
 5787      02005C00 
 5787      00000201 
 5787      FB0E0D00 
 5787      01010101 
 5788              	.LASF10:
 5789 0000 75696E74 		.ascii	"uint16\000"
 5789      313600
 5790              	.LASF116:
 5791 0007 43794578 		.ascii	"CyExitCriticalSection\000"
 5791      69744372 
 5791      69746963 
 5791      616C5365 
 5791      6374696F 
 5792              	.LASF105:
 5793 001d 63795379 		.ascii	"cySysWdtCallback\000"
 5793      73576474 
 5793      43616C6C 
 5793      6261636B 
 5793      00
 5794              	.LASF23:
 5795 002e 636F756E 		.ascii	"counterNum\000"
 5795      7465724E 
 5795      756D00
 5796              	.LASF86:
 5797 0039 43795379 		.ascii	"CySysTimerGetMatch\000"
 5797      7354696D 
 5797      65724765 
 5797      744D6174 
 5797      636800
 5798              	.LASF21:
 5799 004c 63795469 		.ascii	"cyTimerCallback\000"
 5799      6D657243 
 5799      616C6C62 
 5799      61636B00 
 5800              	.LASF104:
 5801 005c 63795379 		.ascii	"cySysTimerCallback\000"
 5801      7354696D 
 5801      65724361 
 5801      6C6C6261 
 5801      636B00
 5802              	.LASF7:
 5803 006f 6C6F6E67 		.ascii	"long long unsigned int\000"
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccw66xHk.s 			page 174


 5803      206C6F6E 
 5803      6720756E 
 5803      7369676E 
 5803      65642069 
 5804              	.LASF70:
 5805 0086 43795379 		.ascii	"CySysTimerGetMode\000"
 5805      7354696D 
 5805      65724765 
 5805      744D6F64 
 5805      6500
 5806              	.LASF47:
 5807 0098 43795379 		.ascii	"CySysClkWcoEnabled\000"
 5807      73436C6B 
 5807      57636F45 
 5807      6E61626C 
 5807      656400
 5808              	.LASF93:
 5809 00ab 43795379 		.ascii	"CySysTimerEnableIsr\000"
 5809      7354696D 
 5809      6572456E 
 5809      61626C65 
 5809      49737200 
 5810              	.LASF112:
 5811 00bf 43795379 		.ascii	"CySysClkWcoSetHighPowerMode\000"
 5811      73436C6B 
 5811      57636F53 
 5811      65744869 
 5811      6768506F 
 5812              	.LASF6:
 5813 00db 6C6F6E67 		.ascii	"long long int\000"
 5813      206C6F6E 
 5813      6720696E 
 5813      7400
 5814              	.LASF0:
 5815 00e9 7369676E 		.ascii	"signed char\000"
 5815      65642063 
 5815      68617200 
 5816              	.LASF95:
 5817 00f5 43795379 		.ascii	"CySysTimerIsr\000"
 5817      7354696D 
 5817      65724973 
 5817      7200
 5818              	.LASF61:
 5819 0103 66756E63 		.ascii	"function\000"
 5819      74696F6E 
 5819      00
 5820              	.LASF67:
 5821 010c 696E7465 		.ascii	"interruptState\000"
 5821      72727570 
 5821      74537461 
 5821      746500
 5822              	.LASF56:
 5823 011b 43795379 		.ascii	"CySysWdtGetIgnoreBits\000"
 5823      73576474 
 5823      47657449 
 5823      676E6F72 
 5823      65426974 
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccw66xHk.s 			page 175


 5824              	.LASF20:
 5825 0131 63795764 		.ascii	"cyWdtCallback\000"
 5825      7443616C 
 5825      6C626163 
 5825      6B00
 5826              	.LASF107:
 5827 013f 43794465 		.ascii	"CyDelayUs\000"
 5827      6C617955 
 5827      7300
 5828              	.LASF96:
 5829 0149 43795379 		.ascii	"CySysTimerResetCounters\000"
 5829      7354696D 
 5829      65725265 
 5829      73657443 
 5829      6F756E74 
 5830              	.LASF19:
 5831 0161 63795F73 		.ascii	"cy_sys_timer_delaytype_enum\000"
 5831      79735F74 
 5831      696D6572 
 5831      5F64656C 
 5831      61797479 
 5832              	.LASF84:
 5833 017d 62697473 		.ascii	"bits\000"
 5833      00
 5834              	.LASF4:
 5835 0182 6C6F6E67 		.ascii	"long int\000"
 5835      20696E74 
 5835      00
 5836              	.LASF82:
 5837 018b 72656756 		.ascii	"regValue\000"
 5837      616C7565 
 5837      00
 5838              	.LASF46:
 5839 0194 636C6F63 		.ascii	"clockSel\000"
 5839      6B53656C 
 5839      00
 5840              	.LASF9:
 5841 019d 75696E74 		.ascii	"uint8\000"
 5841      3800
 5842              	.LASF72:
 5843 01a3 656E6162 		.ascii	"enable\000"
 5843      6C6500
 5844              	.LASF13:
 5845 01aa 646F7562 		.ascii	"double\000"
 5845      6C6500
 5846              	.LASF33:
 5847 01b1 636F6D70 		.ascii	"compensatedCycles\000"
 5847      656E7361 
 5847      74656443 
 5847      79636C65 
 5847      7300
 5848              	.LASF29:
 5849 01c3 43795379 		.ascii	"CySysClkIloStop\000"
 5849      73436C6B 
 5849      496C6F53 
 5849      746F7000 
 5850              	.LASF34:
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccw66xHk.s 			page 176


 5851 01d3 696C6F43 		.ascii	"iloCompensatedCycles\000"
 5851      6F6D7065 
 5851      6E736174 
 5851      65644379 
 5851      636C6573 
 5852              	.LASF97:
 5853 01e8 636F756E 		.ascii	"countersMask\000"
 5853      74657273 
 5853      4D61736B 
 5853      00
 5854              	.LASF71:
 5855 01f5 43795379 		.ascii	"CySysTimerSetClearOnMatch\000"
 5855      7354696D 
 5855      65725365 
 5855      74436C65 
 5855      61724F6E 
 5856              	.LASF11:
 5857 020f 75696E74 		.ascii	"uint32\000"
 5857      333200
 5858              	.LASF31:
 5859 0216 43795379 		.ascii	"CySysClkIloStopMeasurement\000"
 5859      73436C6B 
 5859      496C6F53 
 5859      746F704D 
 5859      65617375 
 5860              	.LASF102:
 5861 0231 74696D65 		.ascii	"timerIsrMask\000"
 5861      72497372 
 5861      4D61736B 
 5861      00
 5862              	.LASF62:
 5863 023e 70726576 		.ascii	"prevCallback\000"
 5863      43616C6C 
 5863      6261636B 
 5863      00
 5864              	.LASF51:
 5865 024b 43795379 		.ascii	"CySysWdtSetMatch\000"
 5865      73576474 
 5865      5365744D 
 5865      61746368 
 5865      00
 5866              	.LASF77:
 5867 025c 43795379 		.ascii	"CySysTimerSetCascade\000"
 5867      7354696D 
 5867      65725365 
 5867      74436173 
 5867      63616465 
 5868              	.LASF49:
 5869 0271 43795379 		.ascii	"CySysWdtEnable\000"
 5869      73576474 
 5869      456E6162 
 5869      6C6500
 5870              	.LASF60:
 5871 0280 43795379 		.ascii	"CySysWdtSetInterruptCallback\000"
 5871      73576474 
 5871      53657449 
 5871      6E746572 
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccw66xHk.s 			page 177


 5871      72757074 
 5872              	.LASF75:
 5873 029d 636F756E 		.ascii	"counterMask\000"
 5873      7465724D 
 5873      61736B00 
 5874              	.LASF91:
 5875 02a9 43795379 		.ascii	"CySysTimerGetInterruptCallback\000"
 5875      7354696D 
 5875      65724765 
 5875      74496E74 
 5875      65727275 
 5876              	.LASF8:
 5877 02c8 756E7369 		.ascii	"unsigned int\000"
 5877      676E6564 
 5877      20696E74 
 5877      00
 5878              	.LASF88:
 5879 02d5 43795379 		.ascii	"CySysTimerGetInterruptSource\000"
 5879      7354696D 
 5879      65724765 
 5879      74496E74 
 5879      65727275 
 5880              	.LASF54:
 5881 02f2 43795379 		.ascii	"CySysWdtSetIgnoreBits\000"
 5881      73576474 
 5881      53657449 
 5881      676E6F72 
 5881      65426974 
 5882              	.LASF92:
 5883 0308 72657443 		.ascii	"retCallback\000"
 5883      616C6C62 
 5883      61636B00 
 5884              	.LASF32:
 5885 0314 64657369 		.ascii	"desiredDelay\000"
 5885      72656444 
 5885      656C6179 
 5885      00
 5886              	.LASF5:
 5887 0321 6C6F6E67 		.ascii	"long unsigned int\000"
 5887      20756E73 
 5887      69676E65 
 5887      6420696E 
 5887      7400
 5888              	.LASF103:
 5889 0333 636F756E 		.ascii	"counterTimerIntMaskTbl\000"
 5889      74657254 
 5889      696D6572 
 5889      496E744D 
 5889      61736B54 
 5890              	.LASF100:
 5891 034a 6D617463 		.ascii	"matchValue\000"
 5891      6856616C 
 5891      756500
 5892              	.LASF58:
 5893 0355 43795379 		.ascii	"CySysWdtMaskInterrupt\000"
 5893      73576474 
 5893      4D61736B 
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccw66xHk.s 			page 178


 5893      496E7465 
 5893      72727570 
 5894              	.LASF3:
 5895 036b 73686F72 		.ascii	"short unsigned int\000"
 5895      7420756E 
 5895      7369676E 
 5895      65642069 
 5895      6E7400
 5896              	.LASF48:
 5897 037e 43795379 		.ascii	"CySysWdtGetEnabledStatus\000"
 5897      73576474 
 5897      47657445 
 5897      6E61626C 
 5897      65645374 
 5898              	.LASF63:
 5899 0397 43795379 		.ascii	"CySysWdtGetInterruptCallback\000"
 5899      73576474 
 5899      47657449 
 5899      6E746572 
 5899      72757074 
 5900              	.LASF85:
 5901 03b4 43795379 		.ascii	"CySysTimerGetToggleBit\000"
 5901      7354696D 
 5901      65724765 
 5901      74546F67 
 5901      676C6542 
 5902              	.LASF64:
 5903 03cb 43795379 		.ascii	"CySysWdtIsr\000"
 5903      73576474 
 5903      49737200 
 5904              	.LASF28:
 5905 03d7 43795379 		.ascii	"CySysClkIloStart\000"
 5905      73436C6B 
 5905      496C6F53 
 5905      74617274 
 5905      00
 5906              	.LASF108:
 5907 03e8 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 5907      4320342E 
 5907      392E3320 
 5907      32303135 
 5907      30333033 
 5908 041b 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m0plus -mthumb -"
 5908      20726576 
 5908      6973696F 
 5908      6E203232 
 5908      31323230 
 5909 044e 67202D4F 		.ascii	"g -Os -ffunction-sections -ffat-lto-objects\000"
 5909      73202D66 
 5909      66756E63 
 5909      74696F6E 
 5909      2D736563 
 5910              	.LASF26:
 5911 047a 74696D65 		.ascii	"timerSource\000"
 5911      72536F75 
 5911      72636500 
 5912              	.LASF44:
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccw66xHk.s 			page 179


 5913 0486 706F7765 		.ascii	"powerModeStatus\000"
 5913      724D6F64 
 5913      65537461 
 5913      74757300 
 5914              	.LASF16:
 5915 0496 72656733 		.ascii	"reg32\000"
 5915      3200
 5916              	.LASF115:
 5917 049c 4379456E 		.ascii	"CyEnterCriticalSection\000"
 5917      74657243 
 5917      72697469 
 5917      63616C53 
 5917      65637469 
 5918              	.LASF111:
 5919 04b3 43795379 		.ascii	"CySysClkGetTimerSource\000"
 5919      73436C6B 
 5919      47657454 
 5919      696D6572 
 5919      536F7572 
 5920              	.LASF38:
 5921 04ca 72657475 		.ascii	"returnStatus\000"
 5921      726E5374 
 5921      61747573 
 5921      00
 5922              	.LASF66:
 5923 04d7 736F7572 		.ascii	"source\000"
 5923      636500
 5924              	.LASF45:
 5925 04de 43795379 		.ascii	"CySysClkWcoClockOutSelect\000"
 5925      73436C6B 
 5925      57636F43 
 5925      6C6F636B 
 5925      4F757453 
 5926              	.LASF22:
 5927 04f8 73697A65 		.ascii	"sizetype\000"
 5927      74797065 
 5927      00
 5928              	.LASF52:
 5929 0501 43795379 		.ascii	"CySysWdtGetMatch\000"
 5929      73576474 
 5929      4765744D 
 5929      61746368 
 5929      00
 5930              	.LASF87:
 5931 0512 43795379 		.ascii	"CySysTimerGetCount\000"
 5931      7354696D 
 5931      65724765 
 5931      74436F75 
 5931      6E7400
 5932              	.LASF25:
 5933 0525 6D617463 		.ascii	"match\000"
 5933      6800
 5934              	.LASF80:
 5935 052b 43795379 		.ascii	"CySysTimerGetCascade\000"
 5935      7354696D 
 5935      65724765 
 5935      74436173 
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccw66xHk.s 			page 180


 5935      63616465 
 5936              	.LASF17:
 5937 0540 43595F53 		.ascii	"CY_SYS_TIMER_WAIT\000"
 5937      59535F54 
 5937      494D4552 
 5937      5F574149 
 5937      5400
 5938              	.LASF37:
 5939 0552 63686563 		.ascii	"checkStatus\000"
 5939      6B537461 
 5939      74757300 
 5940              	.LASF114:
 5941 055e 63796465 		.ascii	"cydelayFreqHz\000"
 5941      6C617946 
 5941      72657148 
 5941      7A00
 5942              	.LASF68:
 5943 056c 43795379 		.ascii	"CySysTimerSetMode\000"
 5943      7354696D 
 5943      65725365 
 5943      744D6F64 
 5943      6500
 5944              	.LASF57:
 5945 057e 43795379 		.ascii	"CySysWdtClearInterrupt\000"
 5945      73576474 
 5945      436C6561 
 5945      72496E74 
 5945      65727275 
 5946              	.LASF12:
 5947 0595 666C6F61 		.ascii	"float\000"
 5947      7400
 5948              	.LASF106:
 5949 059b 43795379 		.ascii	"CySysTimerDelayUntilMatch\000"
 5949      7354696D 
 5949      65724465 
 5949      6C617955 
 5949      6E74696C 
 5950              	.LASF59:
 5951 05b5 43795379 		.ascii	"CySysWdtUnmaskInterrupt\000"
 5951      73576474 
 5951      556E6D61 
 5951      736B496E 
 5951      74657272 
 5952              	.LASF55:
 5953 05cd 62697473 		.ascii	"bitsNum\000"
 5953      4E756D00 
 5954              	.LASF98:
 5955 05d5 43795379 		.ascii	"CySysTimerDelay\000"
 5955      7354696D 
 5955      65724465 
 5955      6C617900 
 5956              	.LASF94:
 5957 05e5 43795379 		.ascii	"CySysTimerDisableIsr\000"
 5957      7354696D 
 5957      65724469 
 5957      7361626C 
 5957      65497372 
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccw66xHk.s 			page 181


 5958              	.LASF110:
 5959 05fa 433A5C63 		.ascii	"C:\\cypress\\TalkingClock\\Talking_Clock.cydsn\000"
 5959      79707265 
 5959      73735C54 
 5959      616C6B69 
 5959      6E67436C 
 5960              	.LASF1:
 5961 0626 756E7369 		.ascii	"unsigned char\000"
 5961      676E6564 
 5961      20636861 
 5961      7200
 5962              	.LASF36:
 5963 0634 636F6D70 		.ascii	"compensateRunningStatus\000"
 5963      656E7361 
 5963      74655275 
 5963      6E6E696E 
 5963      67537461 
 5964              	.LASF99:
 5965 064c 64656C61 		.ascii	"delay\000"
 5965      7900
 5966              	.LASF2:
 5967 0652 73686F72 		.ascii	"short int\000"
 5967      7420696E 
 5967      7400
 5968              	.LASF24:
 5969 065c 64656C61 		.ascii	"delayType\000"
 5969      79547970 
 5969      6500
 5970              	.LASF50:
 5971 0666 43795379 		.ascii	"CySysWdtDisable\000"
 5971      73576474 
 5971      44697361 
 5971      626C6500 
 5972              	.LASF74:
 5973 0676 43795379 		.ascii	"CySysTimerEnable\000"
 5973      7354696D 
 5973      6572456E 
 5973      61626C65 
 5973      00
 5974              	.LASF113:
 5975 0687 43795379 		.ascii	"CySysTimerGetEnabledStatus\000"
 5975      7354696D 
 5975      65724765 
 5975      74456E61 
 5975      626C6564 
 5976              	.LASF30:
 5977 06a2 43795379 		.ascii	"CySysClkIloStartMeasurement\000"
 5977      73436C6B 
 5977      496C6F53 
 5977      74617274 
 5977      4D656173 
 5978              	.LASF79:
 5979 06be 636F756E 		.ascii	"countersEnableStatus\000"
 5979      74657273 
 5979      456E6162 
 5979      6C655374 
 5979      61747573 
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccw66xHk.s 			page 182


 5980              	.LASF109:
 5981 06d3 47656E65 		.ascii	"Generated_Source\\PSoC4\\CyLFClk.c\000"
 5981      72617465 
 5981      645F536F 
 5981      75726365 
 5981      5C50536F 
 5982              	.LASF81:
 5983 06f4 43795379 		.ascii	"CySysTimerSetMatch\000"
 5983      7354696D 
 5983      65725365 
 5983      744D6174 
 5983      636800
 5984              	.LASF65:
 5985 0707 43795379 		.ascii	"CySysClkSetTimerSource\000"
 5985      73436C6B 
 5985      53657454 
 5985      696D6572 
 5985      536F7572 
 5986              	.LASF40:
 5987 071e 43795379 		.ascii	"CySysClkWcoStop\000"
 5987      73436C6B 
 5987      57636F53 
 5987      746F7000 
 5988              	.LASF42:
 5989 072e 43795379 		.ascii	"CySysClkWcoSetPowerMode\000"
 5989      73436C6B 
 5989      57636F53 
 5989      6574506F 
 5989      7765724D 
 5990              	.LASF14:
 5991 0746 63686172 		.ascii	"char\000"
 5991      00
 5992              	.LASF43:
 5993 074b 6D6F6465 		.ascii	"mode\000"
 5993      00
 5994              	.LASF53:
 5995 0750 43795379 		.ascii	"CySysWdtGetCount\000"
 5995      73576474 
 5995      47657443 
 5995      6F756E74 
 5995      00
 5996              	.LASF73:
 5997 0761 43795379 		.ascii	"CySysTimerGetClearOnMatch\000"
 5997      7354696D 
 5997      65724765 
 5997      74436C65 
 5997      61724F6E 
 5998              	.LASF27:
 5999 077b 746D7056 		.ascii	"tmpValue\000"
 5999      616C7565 
 5999      00
 6000              	.LASF90:
 6001 0784 43795379 		.ascii	"CySysTimerSetInterruptCallback\000"
 6001      7354696D 
 6001      65725365 
 6001      74496E74 
 6001      65727275 
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccw66xHk.s 			page 183


 6002              	.LASF35:
 6003 07a3 64657369 		.ascii	"desiredDelayInCounts\000"
 6003      72656444 
 6003      656C6179 
 6003      496E436F 
 6003      756E7473 
 6004              	.LASF39:
 6005 07b8 43795379 		.ascii	"CySysClkWcoStart\000"
 6005      73436C6B 
 6005      57636F53 
 6005      74617274 
 6005      00
 6006              	.LASF69:
 6007 07c9 636F6E66 		.ascii	"configRegValue\000"
 6007      69675265 
 6007      6756616C 
 6007      756500
 6008              	.LASF83:
 6009 07d8 43795379 		.ascii	"CySysTimerSetToggleBit\000"
 6009      7354696D 
 6009      65725365 
 6009      74546F67 
 6009      676C6542 
 6010              	.LASF78:
 6011 07ef 63617363 		.ascii	"cascadeMask\000"
 6011      6164654D 
 6011      61736B00 
 6012              	.LASF76:
 6013 07fb 43795379 		.ascii	"CySysTimerDisable\000"
 6013      7354696D 
 6013      65724469 
 6013      7361626C 
 6013      6500
 6014              	.LASF15:
 6015 080d 63797374 		.ascii	"cystatus\000"
 6015      61747573 
 6015      00
 6016              	.LASF89:
 6017 0816 43795379 		.ascii	"CySysTimerClearInterrupt\000"
 6017      7354696D 
 6017      6572436C 
 6017      65617249 
 6017      6E746572 
 6018              	.LASF101:
 6019 082f 64697361 		.ascii	"disableTimerServicedIsr\000"
 6019      626C6554 
 6019      696D6572 
 6019      53657276 
 6019      69636564 
 6020              	.LASF41:
 6021 0847 43795379 		.ascii	"CySysClkIloCompensate\000"
 6021      73436C6B 
 6021      496C6F43 
 6021      6F6D7065 
 6021      6E736174 
 6022              	.LASF18:
 6023 085d 43595F53 		.ascii	"CY_SYS_TIMER_INTERRUPT\000"
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccw66xHk.s 			page 184


 6023      59535F54 
 6023      494D4552 
 6023      5F494E54 
 6023      45525255 
 6024              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
