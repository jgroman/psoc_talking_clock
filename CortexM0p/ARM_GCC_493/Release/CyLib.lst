ARM GAS  C:\Users\Jerry\AppData\Local\Temp\cc2xwxHk.s 			page 1


   1              		.cpu cortex-m0plus
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 4
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"CyLib.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.CySysClkImoStart,"ax",%progbits
  18              		.align	1
  19              		.global	CySysClkImoStart
  20              		.code	16
  21              		.thumb_func
  22              		.type	CySysClkImoStart, %function
  23              	CySysClkImoStart:
  24              	.LFB1:
  25              		.file 1 "Generated_Source\\PSoC4\\CyLib.c"
   1:Generated_Source\PSoC4/CyLib.c **** /***************************************************************************//**
   2:Generated_Source\PSoC4/CyLib.c **** * \file CyLib.c
   3:Generated_Source\PSoC4/CyLib.c **** * \version 5.50
   4:Generated_Source\PSoC4/CyLib.c **** *
   5:Generated_Source\PSoC4/CyLib.c **** * \brief Provides a system API for the Clocking, Interrupts, SysTick, and
   6:Generated_Source\PSoC4/CyLib.c **** * Voltage Detect.
   7:Generated_Source\PSoC4/CyLib.c **** *
   8:Generated_Source\PSoC4/CyLib.c **** * \note Documentation of the API's in this file is located in the PSoC 4 System
   9:Generated_Source\PSoC4/CyLib.c **** * Reference Guide provided with PSoC Creator.
  10:Generated_Source\PSoC4/CyLib.c **** *
  11:Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
  12:Generated_Source\PSoC4/CyLib.c **** * \copyright
  13:Generated_Source\PSoC4/CyLib.c **** * Copyright 2010-2016, Cypress Semiconductor Corporation.  All rights reserved.
  14:Generated_Source\PSoC4/CyLib.c **** * You may use this file only in accordance with the license, terms, conditions,
  15:Generated_Source\PSoC4/CyLib.c **** * disclaimers, and limitations in the end user license agreement accompanying
  16:Generated_Source\PSoC4/CyLib.c **** * the software package with which this file was provided.
  17:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
  18:Generated_Source\PSoC4/CyLib.c **** 
  19:Generated_Source\PSoC4/CyLib.c **** #include "CyLib.h"
  20:Generated_Source\PSoC4/CyLib.c **** 
  21:Generated_Source\PSoC4/CyLib.c **** /* CySysClkWriteImoFreq() || CySysClkImoEnableWcoLock() */
  22:Generated_Source\PSoC4/CyLib.c **** #if ((CY_IP_SRSSV2 && CY_IP_FMLT) || CY_IP_IMO_TRIMMABLE_BY_WCO)
  23:Generated_Source\PSoC4/CyLib.c ****     #include "CyFlash.h"
  24:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2 && CY_IP_FMLT) */
  25:Generated_Source\PSoC4/CyLib.c **** 
  26:Generated_Source\PSoC4/CyLib.c **** /* Do not use these definitions directly in your application */
  27:Generated_Source\PSoC4/CyLib.c **** uint32 cydelayFreqHz  = CYDEV_BCLK__SYSCLK__HZ;
  28:Generated_Source\PSoC4/CyLib.c **** uint32 cydelayFreqKhz = (CYDEV_BCLK__SYSCLK__HZ + CY_DELAY_1K_MINUS_1_THRESHOLD) / CY_DELAY_1K_THRE
  29:Generated_Source\PSoC4/CyLib.c **** uint8  cydelayFreqMhz = (uint8)((CYDEV_BCLK__SYSCLK__HZ + CY_DELAY_1M_MINUS_1_THRESHOLD) / CY_DELAY
  30:Generated_Source\PSoC4/CyLib.c **** uint32 cydelay32kMs   = CY_DELAY_MS_OVERFLOW * ((CYDEV_BCLK__SYSCLK__HZ + CY_DELAY_1K_MINUS_1_THRES
  31:Generated_Source\PSoC4/CyLib.c ****                         CY_DELAY_1K_THRESHOLD);
  32:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\cc2xwxHk.s 			page 2


  33:Generated_Source\PSoC4/CyLib.c **** 
  34:Generated_Source\PSoC4/CyLib.c **** static cySysTickCallback CySysTickCallbacks[CY_SYS_SYST_NUM_OF_CALLBACKS];
  35:Generated_Source\PSoC4/CyLib.c **** static void CySysTickServiceCallbacks(void);
  36:Generated_Source\PSoC4/CyLib.c **** 
  37:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_SRSSV2 && CY_IP_PLL)
  38:Generated_Source\PSoC4/CyLib.c ****     static uint32 CySysClkPllGetBypassMode(uint32 pll);
  39:Generated_Source\PSoC4/CyLib.c ****     static cystatus CySysClkPllConfigChangeAllowed(uint32 pll);
  40:Generated_Source\PSoC4/CyLib.c **** #endif /* #if (CY_IP_SRSSV2 && CY_IP_PLL) */
  41:Generated_Source\PSoC4/CyLib.c **** 
  42:Generated_Source\PSoC4/CyLib.c **** 
  43:Generated_Source\PSoC4/CyLib.c **** /***************************************************************************//**
  44:Generated_Source\PSoC4/CyLib.c **** * Indicates whether or not the SysTick has been initialized. The variable is
  45:Generated_Source\PSoC4/CyLib.c **** * initialized to 0 and set to 1 the first time CySysTickStart() is called.
  46:Generated_Source\PSoC4/CyLib.c **** *
  47:Generated_Source\PSoC4/CyLib.c **** * This allows the component to restart without reinitialization after the first
  48:Generated_Source\PSoC4/CyLib.c **** * call to the CySysTickStart() routine.
  49:Generated_Source\PSoC4/CyLib.c **** *
  50:Generated_Source\PSoC4/CyLib.c **** * If reinitialization of the SysTick is required, call CySysTickInit() before
  51:Generated_Source\PSoC4/CyLib.c **** * calling CySysTickStart(). Alternatively, the SysTick can be reinitialized by
  52:Generated_Source\PSoC4/CyLib.c **** * calling the CySysTickInit() and CySysTickEnable() functions.
  53:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
  54:Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickInitVar = 0u;
  55:Generated_Source\PSoC4/CyLib.c **** 
  56:Generated_Source\PSoC4/CyLib.c **** 
  57:Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSV2)
  58:Generated_Source\PSoC4/CyLib.c ****         /* Conversion between CySysClkWriteImoFreq() parameter and register's value */
  59:Generated_Source\PSoC4/CyLib.c ****         const uint8 cyImoFreqMhz2Reg[CY_SYS_CLK_IMO_FREQ_TABLE_SIZE] = {
  60:Generated_Source\PSoC4/CyLib.c ****             /*  3 MHz */ 0x03u,  /*  4 MHz */ 0x04u,  /*  5 MHz */ 0x05u,  /*  6 MHz */ 0x06u,
  61:Generated_Source\PSoC4/CyLib.c ****             /*  7 MHz */ 0x07u,  /*  8 MHz */ 0x08u,  /*  9 MHz */ 0x09u,  /* 10 MHz */ 0x0Au,
  62:Generated_Source\PSoC4/CyLib.c ****             /* 11 MHz */ 0x0Bu,  /* 12 MHz */ 0x0Cu,  /* 13 MHz */ 0x0Eu,  /* 14 MHz */ 0x0Fu,
  63:Generated_Source\PSoC4/CyLib.c ****             /* 15 MHz */ 0x10u,  /* 16 MHz */ 0x11u,  /* 17 MHz */ 0x12u,  /* 18 MHz */ 0x13u,
  64:Generated_Source\PSoC4/CyLib.c ****             /* 19 MHz */ 0x14u,  /* 20 MHz */ 0x15u,  /* 21 MHz */ 0x16u,  /* 22 MHz */ 0x17u,
  65:Generated_Source\PSoC4/CyLib.c ****             /* 23 MHz */ 0x18u,  /* 24 MHz */ 0x19u,  /* 25 MHz */ 0x1Bu,  /* 26 MHz */ 0x1Cu,
  66:Generated_Source\PSoC4/CyLib.c ****             /* 27 MHz */ 0x1Du,  /* 28 MHz */ 0x1Eu,  /* 29 MHz */ 0x1Fu,  /* 30 MHz */ 0x20u,
  67:Generated_Source\PSoC4/CyLib.c ****             /* 31 MHz */ 0x21u,  /* 32 MHz */ 0x22u,  /* 33 MHz */ 0x23u,  /* 34 MHz */ 0x25u,
  68:Generated_Source\PSoC4/CyLib.c ****             /* 35 MHz */ 0x26u,  /* 36 MHz */ 0x27u,  /* 37 MHz */ 0x28u,  /* 38 MHz */ 0x29u,
  69:Generated_Source\PSoC4/CyLib.c ****             /* 39 MHz */ 0x2Au,  /* 40 MHz */ 0x2Bu,  /* 41 MHz */ 0x2Eu,  /* 42 MHz */ 0x2Fu,
  70:Generated_Source\PSoC4/CyLib.c ****             /* 43 MHz */ 0x30u,  /* 44 MHz */ 0x31u,  /* 45 MHz */ 0x32u,  /* 46 MHz */ 0x33u,
  71:Generated_Source\PSoC4/CyLib.c ****             /* 47 MHz */ 0x34u,  /* 48 MHz */ 0x35u };
  72:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2) */
  73:Generated_Source\PSoC4/CyLib.c **** 
  74:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
  75:Generated_Source\PSoC4/CyLib.c ****         /* Conversion between IMO frequency and WCO DPLL max offset steps */
  76:Generated_Source\PSoC4/CyLib.c ****         const uint8 cyImoFreqMhz2DpllOffset[CY_SYS_CLK_IMO_FREQ_WCO_DPLL_TABLE_SIZE] = {
  77:Generated_Source\PSoC4/CyLib.c ****             /* 26 MHz */  238u, /* 27 MHz */  219u, /* 28 MHz */  201u, /* 29 MHz */  185u,
  78:Generated_Source\PSoC4/CyLib.c ****             /* 30 MHz */  170u, /* 31 MHz */  155u, /* 32 MHz */  142u, /* 33 MHz */  130u,
  79:Generated_Source\PSoC4/CyLib.c ****             /* 34 MHz */  118u, /* 35 MHz */  107u, /* 36 MHz */   96u, /* 37 MHz */  86u,
  80:Generated_Source\PSoC4/CyLib.c ****             /* 38 MHz */   77u, /* 39 MHz */   68u, /* 40 MHz */   59u, /* 41 MHz */  51u,
  81:Generated_Source\PSoC4/CyLib.c ****             /* 42 MHz */   44u, /* 43 MHz */   36u, /* 44 MHz */   29u, /* 45 MHz */  23u,
  82:Generated_Source\PSoC4/CyLib.c ****             /* 46 MHz */   16u, /* 47 MHz */   10u, /* 48 MHz */   4u };
  83:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
  84:Generated_Source\PSoC4/CyLib.c **** 
  85:Generated_Source\PSoC4/CyLib.c **** /* Stored CY_SYS_CLK_IMO_TRIM4_REG when modified for USB lock */
  86:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_IMO_TRIMMABLE_BY_USB && CY_IP_SRSSV2)
  87:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkImoTrim4 = 0u;
  88:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_IMO_TRIMMABLE_BY_USB && CY_IP_SRSSV2) */
  89:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\cc2xwxHk.s 			page 3


  90:Generated_Source\PSoC4/CyLib.c **** /* Stored PUMP_SEL configuration during disable (IMO output by default) */
  91:Generated_Source\PSoC4/CyLib.c **** uint32 CySysClkPumpConfig = CY_SYS_CLK_PUMP_ENABLE;
  92:Generated_Source\PSoC4/CyLib.c **** 
  93:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
  94:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkImoStart
  95:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
  96:Generated_Source\PSoC4/CyLib.c **** *
  97:Generated_Source\PSoC4/CyLib.c **** * Enables the IMO.
  98:Generated_Source\PSoC4/CyLib.c **** *
  99:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4100M / PSoC 4200M / PSoC 4000S / PSoC 4100S / PSoC 4400 devices,
 100:Generated_Source\PSoC4/CyLib.c **** * this function will also enable WCO lock if selected in the Design Wide
 101:Generated_Source\PSoC4/CyLib.c **** * Resources tab.
 102:Generated_Source\PSoC4/CyLib.c **** *
 103:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4200L / devices, this function will also enable USB lock if selected
 104:Generated_Source\PSoC4/CyLib.c **** * in the Design Wide Resources tab.
 105:Generated_Source\PSoC4/CyLib.c **** *
 106:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 107:Generated_Source\PSoC4/CyLib.c **** void CySysClkImoStart(void)
 108:Generated_Source\PSoC4/CyLib.c **** {
  26              		.loc 1 108 0
  27              		.cfi_startproc
 109:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_IMO_CONFIG_REG |= CY_SYS_CLK_IMO_CONFIG_ENABLE;
  28              		.loc 1 109 0
  29 0000 8021     		mov	r1, #128
  30 0002 034A     		ldr	r2, .L2
  31 0004 0906     		lsl	r1, r1, #24
  32 0006 1368     		ldr	r3, [r2]
 110:Generated_Source\PSoC4/CyLib.c **** 
 111:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 112:Generated_Source\PSoC4/CyLib.c ****         #if (CYDEV_IMO_TRIMMED_BY_WCO == 1u)
 113:Generated_Source\PSoC4/CyLib.c ****             CySysClkImoEnableWcoLock();
 114:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CYDEV_IMO_TRIMMED_BY_WCO == 1u) */
 115:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 116:Generated_Source\PSoC4/CyLib.c **** 
 117:Generated_Source\PSoC4/CyLib.c **** 
 118:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 119:Generated_Source\PSoC4/CyLib.c ****         #if (CYDEV_IMO_TRIMMED_BY_USB == 1u)
 120:Generated_Source\PSoC4/CyLib.c ****             CySysClkImoEnableUsbLock();
 121:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 1u) */
 122:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 123:Generated_Source\PSoC4/CyLib.c **** 
 124:Generated_Source\PSoC4/CyLib.c **** }
  33              		.loc 1 124 0
  34              		@ sp needed
 109:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_IMO_CONFIG_REG |= CY_SYS_CLK_IMO_CONFIG_ENABLE;
  35              		.loc 1 109 0
  36 0008 0B43     		orr	r3, r1
  37 000a 1360     		str	r3, [r2]
  38              		.loc 1 124 0
  39 000c 7047     		bx	lr
  40              	.L3:
  41 000e C046     		.align	2
  42              	.L2:
  43 0010 30000340 		.word	1073938480
  44              		.cfi_endproc
  45              	.LFE1:
  46              		.size	CySysClkImoStart, .-CySysClkImoStart
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\cc2xwxHk.s 			page 4


  47              		.section	.text.CySysClkImoDisableWcoLock,"ax",%progbits
  48              		.align	1
  49              		.global	CySysClkImoDisableWcoLock
  50              		.code	16
  51              		.thumb_func
  52              		.type	CySysClkImoDisableWcoLock, %function
  53              	CySysClkImoDisableWcoLock:
  54              	.LFB4:
 125:Generated_Source\PSoC4/CyLib.c **** 
 126:Generated_Source\PSoC4/CyLib.c **** 
 127:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 128:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkImoStop
 129:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 130:Generated_Source\PSoC4/CyLib.c **** *
 131:Generated_Source\PSoC4/CyLib.c **** * Disables the IMO.
 132:Generated_Source\PSoC4/CyLib.c **** *
 133:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4100M / PSoC 4200M / PSoC 4000S / PSoC 4100S / PSoC 4400 devices,
 134:Generated_Source\PSoC4/CyLib.c **** * this function will also disable WCO lock.
 135:Generated_Source\PSoC4/CyLib.c **** *
 136:Generated_Source\PSoC4/CyLib.c **** * For PSoC PSoC 4200L devices, this function will also disable USB lock.
 137:Generated_Source\PSoC4/CyLib.c **** *
 138:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 139:Generated_Source\PSoC4/CyLib.c **** void CySysClkImoStop(void)
 140:Generated_Source\PSoC4/CyLib.c **** {
 141:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 142:Generated_Source\PSoC4/CyLib.c ****         CySysClkImoDisableWcoLock();
 143:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 144:Generated_Source\PSoC4/CyLib.c **** 
 145:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 146:Generated_Source\PSoC4/CyLib.c ****         CySysClkImoDisableUsbLock();
 147:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 148:Generated_Source\PSoC4/CyLib.c **** 
 149:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_IMO_CONFIG_REG &= ( uint32 ) ( ~( uint32 )CY_SYS_CLK_IMO_CONFIG_ENABLE);
 150:Generated_Source\PSoC4/CyLib.c **** }
 151:Generated_Source\PSoC4/CyLib.c **** 
 152:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 153:Generated_Source\PSoC4/CyLib.c **** 
 154:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 155:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoEnableWcoLock
 156:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 157:Generated_Source\PSoC4/CyLib.c ****     *
 158:Generated_Source\PSoC4/CyLib.c ****     * Enables the IMO to WCO lock feature. This function works only if the WCO is
 159:Generated_Source\PSoC4/CyLib.c ****     * already enabled. If the WCO is not enabled then this function returns
 160:Generated_Source\PSoC4/CyLib.c ****     * without enabling the lock feature.
 161:Generated_Source\PSoC4/CyLib.c ****     *
 162:Generated_Source\PSoC4/CyLib.c ****     * It takes up to 20 ms for the IMO to stabilize. The delay is implemented with
 163:Generated_Source\PSoC4/CyLib.c ****     * CyDelay() function. The delay interval is measured based on the system
 164:Generated_Source\PSoC4/CyLib.c ****     * frequency defined by PSoC Creator at build time. If System clock frequency
 165:Generated_Source\PSoC4/CyLib.c ****     * is changed in runtime, the CyDelayFreq() with the appropriate parameter
 166:Generated_Source\PSoC4/CyLib.c ****     * should be called.
 167:Generated_Source\PSoC4/CyLib.c ****     *
 168:Generated_Source\PSoC4/CyLib.c ****     * For PSoC 4200L devices, note that the IMO can lock to either WCO or USB
 169:Generated_Source\PSoC4/CyLib.c ****     * but not both.
 170:Generated_Source\PSoC4/CyLib.c ****     *
 171:Generated_Source\PSoC4/CyLib.c ****     * This function is applicable for PSoC 4100M / PSoC 4200M / PSoC 4000S /
 172:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4100S / PSoC 4400 / PSoC 4200L.
 173:Generated_Source\PSoC4/CyLib.c ****     *
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\cc2xwxHk.s 			page 5


 174:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 175:Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoEnableWcoLock(void)
 176:Generated_Source\PSoC4/CyLib.c ****     {
 177:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 178:Generated_Source\PSoC4/CyLib.c ****             uint32 i;
 179:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
 180:Generated_Source\PSoC4/CyLib.c **** 
 181:Generated_Source\PSoC4/CyLib.c ****         uint32 freq;
 182:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 183:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
 184:Generated_Source\PSoC4/CyLib.c ****         uint32 lfLimit = 0u;
 185:Generated_Source\PSoC4/CyLib.c ****         volatile uint32 flashCtlReg;
 186:Generated_Source\PSoC4/CyLib.c **** 
 187:Generated_Source\PSoC4/CyLib.c ****         if (0u != CySysClkWcoEnabled())
 188:Generated_Source\PSoC4/CyLib.c ****         {
 189:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
 190:Generated_Source\PSoC4/CyLib.c **** 
 191:Generated_Source\PSoC4/CyLib.c ****             /* Set oscillator interface control port to WCO */
 192:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB)
 193:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_OSCINTF_CTL_REG =
 194:Generated_Source\PSoC4/CyLib.c ****                     (CY_SYS_CLK_OSCINTF_CTL_REG & (uint32) ~CY_SYS_CLK_OSCINTF_CTL_PORT_SEL_MASK) |
 195:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_CLK_OSCINTF_CTL_PORT_SEL_WCO;
 196:Generated_Source\PSoC4/CyLib.c ****             #endif /* (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB) */
 197:Generated_Source\PSoC4/CyLib.c **** 
 198:Generated_Source\PSoC4/CyLib.c ****             /* Get current IMO frequency based on the register value */
 199:Generated_Source\PSoC4/CyLib.c ****             #if(CY_IP_SRSSV2)
 200:Generated_Source\PSoC4/CyLib.c ****                 freq = CY_SYS_CLK_IMO_MIN_FREQ_MHZ;
 201:Generated_Source\PSoC4/CyLib.c ****                 for(i = 0u; i < CY_SYS_CLK_IMO_FREQ_TABLE_SIZE; i++)
 202:Generated_Source\PSoC4/CyLib.c ****                 {
 203:Generated_Source\PSoC4/CyLib.c ****                     if ((uint8) (CY_SYS_CLK_IMO_TRIM2_REG & CY_SYS_CLK_IMO_FREQ_BITS_MASK) == cyImo
 204:Generated_Source\PSoC4/CyLib.c ****                     {
 205:Generated_Source\PSoC4/CyLib.c ****                         freq = i + CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET;
 206:Generated_Source\PSoC4/CyLib.c ****                         break;
 207:Generated_Source\PSoC4/CyLib.c ****                     }
 208:Generated_Source\PSoC4/CyLib.c ****                 }
 209:Generated_Source\PSoC4/CyLib.c ****             #else
 210:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate frequency by shifting register field value and adding constant. */
 211:Generated_Source\PSoC4/CyLib.c ****                 #if(CY_IP_SRSSLT)
 212:Generated_Source\PSoC4/CyLib.c ****                     freq = (((uint32) ((CY_SYS_CLK_IMO_SELECT_REG & ((uint32) CY_SYS_CLK_IMO_SELECT
 213:Generated_Source\PSoC4/CyLib.c ****                                         CY_SYS_CLK_IMO_SELECT_FREQ_SHIFT) + CY_SYS_CLK_IMO_MIN_FREQ
 214:Generated_Source\PSoC4/CyLib.c ****                                       ((CY_SYS_CLK_SELECT_REG >> CY_SYS_CLK_SELECT_HFCLK_DIV_SHIFT)
 215:Generated_Source\PSoC4/CyLib.c ****                                        (uint32) CY_SYS_CLK_SELECT_HFCLK_DIV_MASK));
 216:Generated_Source\PSoC4/CyLib.c ****                 #else
 217:Generated_Source\PSoC4/CyLib.c ****                     freq = ((uint32) ((CY_SYS_CLK_IMO_SELECT_REG & ((uint32) CY_SYS_CLK_IMO_SELECT_
 218:Generated_Source\PSoC4/CyLib.c ****                                        CY_SYS_CLK_IMO_SELECT_FREQ_SHIFT) + CY_SYS_CLK_IMO_MIN_FREQ_
 219:Generated_Source\PSoC4/CyLib.c ****                 #endif  /* (CY_IP_SRSSLT) */
 220:Generated_Source\PSoC4/CyLib.c **** 
 221:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_SRSSV2) */
 222:Generated_Source\PSoC4/CyLib.c **** 
 223:Generated_Source\PSoC4/CyLib.c ****             /* For the WCO locking mode, the IMO gain needs to be CY_SYS_CLK_IMO_TRIM4_GAIN */
 224:Generated_Source\PSoC4/CyLib.c ****             #if(CY_IP_SRSSV2)
 225:Generated_Source\PSoC4/CyLib.c ****                 if ((CY_SYS_CLK_IMO_TRIM4_REG & CY_SYS_CLK_IMO_TRIM4_GAIN_MASK) == 0u)
 226:Generated_Source\PSoC4/CyLib.c ****                 {
 227:Generated_Source\PSoC4/CyLib.c **** 			         CY_SYS_CLK_IMO_TRIM4_REG = (CY_SYS_CLK_IMO_TRIM4_REG & (uint32) ~CY_SYS_CLK_IMO_TRIM4_G
 228:Generated_Source\PSoC4/CyLib.c **** 			                  				     CY_SYS_CLK_IMO_TRIM4_WCO_GAIN;
 229:Generated_Source\PSoC4/CyLib.c ****                 }
 230:Generated_Source\PSoC4/CyLib.c ****             #endif /* (CY_IP_SRSSV2) */
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\cc2xwxHk.s 			page 6


 231:Generated_Source\PSoC4/CyLib.c **** 
 232:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_WCO_DPLL_REG & ~(CY_SYS_CLK_WCO_DPLL_MULT_MASK |
 233:Generated_Source\PSoC4/CyLib.c ****                                                   CY_SYS_CLK_WCO_CONFIG_DPLL_LF_IGAIN_MASK |
 234:Generated_Source\PSoC4/CyLib.c ****                                                   CY_SYS_CLK_WCO_CONFIG_DPLL_LF_PGAIN_MASK |
 235:Generated_Source\PSoC4/CyLib.c ****                                                   CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MASK);
 236:Generated_Source\PSoC4/CyLib.c **** 
 237:Generated_Source\PSoC4/CyLib.c ****             /* Set multiplier to determine IMO frequency in multiples of the WCO frequency */
 238:Generated_Source\PSoC4/CyLib.c ****             regTmp |= (CY_SYS_CLK_WCO_DPLL_MULT_VALUE(freq) & CY_SYS_CLK_WCO_DPLL_MULT_MASK);
 239:Generated_Source\PSoC4/CyLib.c **** 
 240:Generated_Source\PSoC4/CyLib.c ****             /* Set DPLL Loop Filter Integral and Proportional Gains Setting */
 241:Generated_Source\PSoC4/CyLib.c ****             regTmp |= (CY_SYS_CLK_WCO_CONFIG_DPLL_LF_IGAIN | CY_SYS_CLK_WCO_CONFIG_DPLL_LF_PGAIN);
 242:Generated_Source\PSoC4/CyLib.c **** 
 243:Generated_Source\PSoC4/CyLib.c ****             /* Set maximum allowed IMO offset */
 244:Generated_Source\PSoC4/CyLib.c ****             if (freq < CY_SYS_CLK_IMO_FREQ_WCO_DPLL_SAFE_POINT)
 245:Generated_Source\PSoC4/CyLib.c ****             {
 246:Generated_Source\PSoC4/CyLib.c ****                 regTmp |= (CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MAX << CY_SYS_CLK_WCO_CONFIG_DPLL_LF
 247:Generated_Source\PSoC4/CyLib.c ****             }
 248:Generated_Source\PSoC4/CyLib.c ****             else
 249:Generated_Source\PSoC4/CyLib.c ****             {
 250:Generated_Source\PSoC4/CyLib.c ****                 lfLimit = (uint32) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) +
 251:Generated_Source\PSoC4/CyLib.c ****                     cyImoFreqMhz2DpllOffset[freq - CY_SYS_CLK_IMO_FREQ_WCO_DPLL_TABLE_OFFSET];
 252:Generated_Source\PSoC4/CyLib.c **** 
 253:Generated_Source\PSoC4/CyLib.c ****                 lfLimit = (lfLimit > CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MAX) ?
 254:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MAX : lfLimit;
 255:Generated_Source\PSoC4/CyLib.c **** 
 256:Generated_Source\PSoC4/CyLib.c ****                 regTmp |= (lfLimit << CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_SHIFT);
 257:Generated_Source\PSoC4/CyLib.c ****             }
 258:Generated_Source\PSoC4/CyLib.c **** 
 259:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_WCO_DPLL_REG = regTmp;
 260:Generated_Source\PSoC4/CyLib.c **** 
 261:Generated_Source\PSoC4/CyLib.c ****             flashCtlReg = CY_FLASH_CTL_REG;
 262:Generated_Source\PSoC4/CyLib.c ****             CySysFlashSetWaitCycles(CY_SYS_CLK_IMO_MAX_FREQ_MHZ);
 263:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_WCO_CONFIG_REG |= CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE;
 264:Generated_Source\PSoC4/CyLib.c ****             CyDelay(CY_SYS_CLK_WCO_IMO_TIMEOUT_MS);
 265:Generated_Source\PSoC4/CyLib.c ****             CY_FLASH_CTL_REG = flashCtlReg;
 266:Generated_Source\PSoC4/CyLib.c **** 
 267:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
 268:Generated_Source\PSoC4/CyLib.c ****         }
 269:Generated_Source\PSoC4/CyLib.c ****     }
 270:Generated_Source\PSoC4/CyLib.c **** 
 271:Generated_Source\PSoC4/CyLib.c **** 
 272:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 273:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoDisableWcoLock
 274:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 275:Generated_Source\PSoC4/CyLib.c ****     *
 276:Generated_Source\PSoC4/CyLib.c ****     * Disables the IMO to WCO lock feature.
 277:Generated_Source\PSoC4/CyLib.c ****     *
 278:Generated_Source\PSoC4/CyLib.c ****     * For PSoC 4200L devices, note that the IMO can lock to either WCO or USB
 279:Generated_Source\PSoC4/CyLib.c ****     * but not both.
 280:Generated_Source\PSoC4/CyLib.c ****     *
 281:Generated_Source\PSoC4/CyLib.c ****     * This function is applicable for PSoC 4100M / PSoC 4200M / PSoC 4000S /
 282:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4100S / PSoC 4400 / PSoC 4200L.
 283:Generated_Source\PSoC4/CyLib.c ****     *
 284:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 285:Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoDisableWcoLock(void)
 286:Generated_Source\PSoC4/CyLib.c ****     {
  55              		.loc 1 286 0
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\cc2xwxHk.s 			page 7


  56              		.cfi_startproc
 287:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_WCO_CONFIG_REG &= (uint32) ~CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE;
  57              		.loc 1 287 0
  58 0000 024A     		ldr	r2, .L5
  59 0002 034B     		ldr	r3, .L5+4
  60 0004 1168     		ldr	r1, [r2]
 288:Generated_Source\PSoC4/CyLib.c ****     }
  61              		.loc 1 288 0
  62              		@ sp needed
 287:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_WCO_CONFIG_REG &= (uint32) ~CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE;
  63              		.loc 1 287 0
  64 0006 0B40     		and	r3, r1
  65 0008 1360     		str	r3, [r2]
  66              		.loc 1 288 0
  67 000a 7047     		bx	lr
  68              	.L6:
  69              		.align	2
  70              	.L5:
  71 000c 00000640 		.word	1074135040
  72 0010 FFFFFFBF 		.word	-1073741825
  73              		.cfi_endproc
  74              	.LFE4:
  75              		.size	CySysClkImoDisableWcoLock, .-CySysClkImoDisableWcoLock
  76              		.section	.text.CySysClkImoStop,"ax",%progbits
  77              		.align	1
  78              		.global	CySysClkImoStop
  79              		.code	16
  80              		.thumb_func
  81              		.type	CySysClkImoStop, %function
  82              	CySysClkImoStop:
  83              	.LFB2:
 140:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
  84              		.loc 1 140 0
  85              		.cfi_startproc
  86 0000 08B5     		push	{r3, lr}
  87              		.cfi_def_cfa_offset 8
  88              		.cfi_offset 3, -8
  89              		.cfi_offset 14, -4
 142:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
  90              		.loc 1 142 0
  91 0002 FFF7FEFF 		bl	CySysClkImoDisableWcoLock
  92              	.LVL0:
 149:Generated_Source\PSoC4/CyLib.c **** }
  93              		.loc 1 149 0
  94 0006 034A     		ldr	r2, .L8
 150:Generated_Source\PSoC4/CyLib.c **** 
  95              		.loc 1 150 0
  96              		@ sp needed
 149:Generated_Source\PSoC4/CyLib.c **** }
  97              		.loc 1 149 0
  98 0008 1368     		ldr	r3, [r2]
  99 000a 5B00     		lsl	r3, r3, #1
 100 000c 5B08     		lsr	r3, r3, #1
 101 000e 1360     		str	r3, [r2]
 150:Generated_Source\PSoC4/CyLib.c **** 
 102              		.loc 1 150 0
 103 0010 08BD     		pop	{r3, pc}
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\cc2xwxHk.s 			page 8


 104              	.L9:
 105 0012 C046     		.align	2
 106              	.L8:
 107 0014 30000340 		.word	1073938480
 108              		.cfi_endproc
 109              	.LFE2:
 110              		.size	CySysClkImoStop, .-CySysClkImoStop
 111              		.section	.text.CySysClkImoGetWcoLock,"ax",%progbits
 112              		.align	1
 113              		.global	CySysClkImoGetWcoLock
 114              		.code	16
 115              		.thumb_func
 116              		.type	CySysClkImoGetWcoLock, %function
 117              	CySysClkImoGetWcoLock:
 118              	.LFB5:
 289:Generated_Source\PSoC4/CyLib.c **** 
 290:Generated_Source\PSoC4/CyLib.c **** 
 291:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 292:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoGetWcoLock
 293:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 294:Generated_Source\PSoC4/CyLib.c ****     *
 295:Generated_Source\PSoC4/CyLib.c ****     * Reports the IMO to WCO lock enable state.
 296:Generated_Source\PSoC4/CyLib.c ****     *
 297:Generated_Source\PSoC4/CyLib.c ****     * This function is applicable for PSoC 4100M / PSoC 4200M / PSoC 4000S /
 298:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4100S / PSoC 4400 / PSoC 4200L.
 299:Generated_Source\PSoC4/CyLib.c ****     *
 300:Generated_Source\PSoC4/CyLib.c ****     * \return 1 if IMO to WCO lock is enabled.
 301:Generated_Source\PSoC4/CyLib.c ****     * \return 0 if IMO to WCO lock is disabled.
 302:Generated_Source\PSoC4/CyLib.c ****     *
 303:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 304:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkImoGetWcoLock(void)
 305:Generated_Source\PSoC4/CyLib.c ****     {
 119              		.loc 1 305 0
 120              		.cfi_startproc
 306:Generated_Source\PSoC4/CyLib.c ****         return ((0u != (CY_SYS_CLK_WCO_CONFIG_REG & CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE)) ?
 121              		.loc 1 306 0
 122 0000 024B     		ldr	r3, .L11
 307:Generated_Source\PSoC4/CyLib.c ****                 (uint32) 1u :
 308:Generated_Source\PSoC4/CyLib.c ****                 (uint32) 0u);
 309:Generated_Source\PSoC4/CyLib.c ****     }
 123              		.loc 1 309 0
 124              		@ sp needed
 306:Generated_Source\PSoC4/CyLib.c ****         return ((0u != (CY_SYS_CLK_WCO_CONFIG_REG & CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE)) ?
 125              		.loc 1 306 0
 126 0002 1868     		ldr	r0, [r3]
 307:Generated_Source\PSoC4/CyLib.c ****                 (uint32) 1u :
 127              		.loc 1 307 0
 128 0004 4000     		lsl	r0, r0, #1
 129 0006 C00F     		lsr	r0, r0, #31
 130              		.loc 1 309 0
 131 0008 7047     		bx	lr
 132              	.L12:
 133 000a C046     		.align	2
 134              	.L11:
 135 000c 00000640 		.word	1074135040
 136              		.cfi_endproc
 137              	.LFE5:
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\cc2xwxHk.s 			page 9


 138              		.size	CySysClkImoGetWcoLock, .-CySysClkImoGetWcoLock
 139              		.section	.text.CySysClkWriteHfclkDirect,"ax",%progbits
 140              		.align	1
 141              		.global	CySysClkWriteHfclkDirect
 142              		.code	16
 143              		.thumb_func
 144              		.type	CySysClkWriteHfclkDirect, %function
 145              	CySysClkWriteHfclkDirect:
 146              	.LFB6:
 310:Generated_Source\PSoC4/CyLib.c **** 
 311:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 312:Generated_Source\PSoC4/CyLib.c **** 
 313:Generated_Source\PSoC4/CyLib.c **** 
 314:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 315:Generated_Source\PSoC4/CyLib.c **** 
 316:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 317:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoEnableUsbLock
 318:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 319:Generated_Source\PSoC4/CyLib.c ****     *
 320:Generated_Source\PSoC4/CyLib.c ****     * Enables the IMO to USB lock feature.
 321:Generated_Source\PSoC4/CyLib.c ****     *
 322:Generated_Source\PSoC4/CyLib.c ****     * This function must be called before CySysClkWriteImoFreq().
 323:Generated_Source\PSoC4/CyLib.c ****     *
 324:Generated_Source\PSoC4/CyLib.c ****     * This function is called from CySysClkImoStart() function if USB lock
 325:Generated_Source\PSoC4/CyLib.c ****     * selected in the Design Wide Resources tab.
 326:Generated_Source\PSoC4/CyLib.c ****     *
 327:Generated_Source\PSoC4/CyLib.c ****     * This is applicable for PSoC 4200L family of devices only. For PSoC 4200L
 328:Generated_Source\PSoC4/CyLib.c ****     * devices, the IMO can lock to either WCO or USB, but not both.
 329:Generated_Source\PSoC4/CyLib.c ****     *
 330:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 331:Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoEnableUsbLock(void)
 332:Generated_Source\PSoC4/CyLib.c ****     {
 333:Generated_Source\PSoC4/CyLib.c ****         /* Set oscillator interface control port to USB */
 334:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB)
 335:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_OSCINTF_CTL_REG = (CY_SYS_CLK_OSCINTF_CTL_REG & (uint32) ~CY_SYS_CLK_OSCINTF
 336:Generated_Source\PSoC4/CyLib.c ****                                           CY_SYS_CLK_OSCINTF_CTL_PORT_SEL_USB;
 337:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB) */
 338:Generated_Source\PSoC4/CyLib.c **** 
 339:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 340:Generated_Source\PSoC4/CyLib.c ****             /* Save CY_SYS_CLK_IMO_TRIM4_REG and set IMO gain for USB lock */
 341:Generated_Source\PSoC4/CyLib.c ****             CySysClkImoTrim4 = CY_SYS_CLK_IMO_TRIM4_REG & (uint32) ~CY_SYS_CLK_IMO_TRIM4_GAIN_MASK;
 342:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM4_REG = (CY_SYS_CLK_IMO_TRIM4_REG & (uint32) ~CY_SYS_CLK_IMO_TRIM4_G
 343:Generated_Source\PSoC4/CyLib.c ****                                         CY_SYS_CLK_IMO_TRIM4_USB_GAIN;
 344:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
 345:Generated_Source\PSoC4/CyLib.c **** 
 346:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_USBDEVv2_CR1_REG |= CY_SYS_CLK_USBDEVv2_CR1_ENABLE_LOCK;
 347:Generated_Source\PSoC4/CyLib.c ****     }
 348:Generated_Source\PSoC4/CyLib.c **** 
 349:Generated_Source\PSoC4/CyLib.c **** 
 350:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 351:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoDisableUsbLock
 352:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 353:Generated_Source\PSoC4/CyLib.c ****     *
 354:Generated_Source\PSoC4/CyLib.c ****     * Disables the IMO to USB lock feature.
 355:Generated_Source\PSoC4/CyLib.c ****     *
 356:Generated_Source\PSoC4/CyLib.c ****     * This function is called from CySysClkImoStop() function if USB lock selected
 357:Generated_Source\PSoC4/CyLib.c ****     * in the Design Wide Resources tab.
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\cc2xwxHk.s 			page 10


 358:Generated_Source\PSoC4/CyLib.c ****     *
 359:Generated_Source\PSoC4/CyLib.c ****     * This is applicable for PSoC 4200L family of devices only. For PSoC 4200L
 360:Generated_Source\PSoC4/CyLib.c ****     * devices, the IMO can lock to either WCO or USB, but not both.
 361:Generated_Source\PSoC4/CyLib.c ****     *
 362:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 363:Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoDisableUsbLock(void)
 364:Generated_Source\PSoC4/CyLib.c ****     {
 365:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_USBDEVv2_CR1_REG &= (uint32) ~CY_SYS_CLK_USBDEVv2_CR1_ENABLE_LOCK;
 366:Generated_Source\PSoC4/CyLib.c **** 
 367:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 368:Generated_Source\PSoC4/CyLib.c ****             /* Restore CY_SYS_CLK_IMO_TRIM4_REG */
 369:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM4_REG = (CY_SYS_CLK_IMO_TRIM4_REG & (uint32) ~CY_SYS_CLK_IMO_TRIM4_G
 370:Generated_Source\PSoC4/CyLib.c ****                                     CySysClkImoTrim4;
 371:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
 372:Generated_Source\PSoC4/CyLib.c ****     }
 373:Generated_Source\PSoC4/CyLib.c **** 
 374:Generated_Source\PSoC4/CyLib.c **** 
 375:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 376:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoGetUsbLock
 377:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 378:Generated_Source\PSoC4/CyLib.c ****     *
 379:Generated_Source\PSoC4/CyLib.c ****     * Reports the IMO to USB lock enable state.
 380:Generated_Source\PSoC4/CyLib.c ****     *
 381:Generated_Source\PSoC4/CyLib.c ****     * This is applicable for PSoC 4200L family of devices only. For PSoC 4200L
 382:Generated_Source\PSoC4/CyLib.c ****     * devices, the IMO can lock to either WCO or USB, but not both.
 383:Generated_Source\PSoC4/CyLib.c ****     *
 384:Generated_Source\PSoC4/CyLib.c ****     * \return 1 if IMO to USB lock is enabled.
 385:Generated_Source\PSoC4/CyLib.c ****     * \return 0 if IMO to USB lock is disabled.
 386:Generated_Source\PSoC4/CyLib.c ****     *
 387:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 388:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkImoGetUsbLock(void)
 389:Generated_Source\PSoC4/CyLib.c ****     {
 390:Generated_Source\PSoC4/CyLib.c ****         return ((0u != (CY_SYS_CLK_USBDEVv2_CR1_REG & CY_SYS_CLK_USBDEVv2_CR1_ENABLE_LOCK)) ?
 391:Generated_Source\PSoC4/CyLib.c ****                 (uint32) 1u :
 392:Generated_Source\PSoC4/CyLib.c ****                 (uint32) 0u);
 393:Generated_Source\PSoC4/CyLib.c ****     }
 394:Generated_Source\PSoC4/CyLib.c **** #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 395:Generated_Source\PSoC4/CyLib.c **** 
 396:Generated_Source\PSoC4/CyLib.c **** 
 397:Generated_Source\PSoC4/CyLib.c **** 
 398:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 399:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkWriteHfclkDirect
 400:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 401:Generated_Source\PSoC4/CyLib.c **** *
 402:Generated_Source\PSoC4/CyLib.c **** * Selects the direct source for the HFCLK.
 403:Generated_Source\PSoC4/CyLib.c **** *
 404:Generated_Source\PSoC4/CyLib.c **** * The new source must be running and stable before calling this function.
 405:Generated_Source\PSoC4/CyLib.c **** *
 406:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000:
 407:Generated_Source\PSoC4/CyLib.c **** * The SYSCLK has a maximum speed of 16 MHz, so HFCLK and SYSCLK dividers should
 408:Generated_Source\PSoC4/CyLib.c **** * be selected in a way to not to exceed 16 MHz for the System clock.
 409:Generated_Source\PSoC4/CyLib.c **** *
 410:Generated_Source\PSoC4/CyLib.c **** * If the SYSCLK clock frequency increases during device operation, call
 411:Generated_Source\PSoC4/CyLib.c **** * CySysFlashSetWaitCycles() with the appropriate parameter to adjust the number
 412:Generated_Source\PSoC4/CyLib.c **** * of clock cycles the cache will wait before sampling data comes back from
 413:Generated_Source\PSoC4/CyLib.c **** * Flash. If the SYSCLK clock frequency decreases, you can call
 414:Generated_Source\PSoC4/CyLib.c **** * CySysFlashSetWaitCycles() to improve the CPU performance. See
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\cc2xwxHk.s 			page 11


 415:Generated_Source\PSoC4/CyLib.c **** * CySysFlashSetWaitCycles() description for more information.
 416:Generated_Source\PSoC4/CyLib.c **** *
 417:Generated_Source\PSoC4/CyLib.c **** * Do not select PLL as the source for HFCLK if PLL output frequency exceeds
 418:Generated_Source\PSoC4/CyLib.c **** * maximum permissible value for HFCLK.
 419:Generated_Source\PSoC4/CyLib.c **** *
 420:Generated_Source\PSoC4/CyLib.c **** * \param clkSelect One of the available HFCLK direct sources.
 421:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_IMO     IMO.
 422:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_EXTCLK  External clock pin.
 423:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_ECO     External crystal oscillator. Applicable for
 424:Generated_Source\PSoC4/CyLib.c **** *                          PSoC 4100 BLE / PSoC 4200 BLE / PSoC 4200L.
 425:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_PLL0    PLL#0. Applicable for PSoC 4200L.
 426:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_PLL1    PLL#1. Applicable for PSoC 4200L.
 427:Generated_Source\PSoC4/CyLib.c **** *
 428:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 429:Generated_Source\PSoC4/CyLib.c **** void CySysClkWriteHfclkDirect(uint32 clkSelect)
 430:Generated_Source\PSoC4/CyLib.c **** {
 147              		.loc 1 430 0
 148              		.cfi_startproc
 149              	.LVL1:
 150 0000 10B5     		push	{r4, lr}
 151              		.cfi_def_cfa_offset 8
 152              		.cfi_offset 4, -8
 153              		.cfi_offset 14, -4
 154              		.loc 1 430 0
 155 0002 041C     		mov	r4, r0
 431:Generated_Source\PSoC4/CyLib.c ****     uint8  interruptState;
 432:Generated_Source\PSoC4/CyLib.c ****     uint32 tmpReg;
 433:Generated_Source\PSoC4/CyLib.c **** 
 434:Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
 156              		.loc 1 434 0
 157 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 158              	.LVL2:
 435:Generated_Source\PSoC4/CyLib.c **** 
 436:Generated_Source\PSoC4/CyLib.c **** 
 437:Generated_Source\PSoC4/CyLib.c ****     tmpReg = CY_SYS_CLK_SELECT_REG & ~(CY_SYS_CLK_SELECT_DIRECT_SEL_MASK |
 159              		.loc 1 437 0
 160 0008 0323     		mov	r3, #3
 161 000a 0449     		ldr	r1, .L14
 438:Generated_Source\PSoC4/CyLib.c ****                                        CY_SYS_CLK_SELECT_HFCLK_SEL_MASK);
 439:Generated_Source\PSoC4/CyLib.c **** 
 440:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_SRSSV2 && CY_IP_PLL)
 441:Generated_Source\PSoC4/CyLib.c ****     if ((CY_SYS_CLK_HFCLK_PLL0 == clkSelect) || (CY_SYS_CLK_HFCLK_PLL1 == clkSelect))
 442:Generated_Source\PSoC4/CyLib.c ****     {
 443:Generated_Source\PSoC4/CyLib.c ****         tmpReg |= (clkSelect & CY_SYS_CLK_SELECT_HFCLK_SEL_MASK);
 444:Generated_Source\PSoC4/CyLib.c ****     }
 445:Generated_Source\PSoC4/CyLib.c ****     else
 446:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2 && CY_IP_PLL) */
 447:Generated_Source\PSoC4/CyLib.c ****     {
 448:Generated_Source\PSoC4/CyLib.c ****         tmpReg |= (clkSelect & CY_SYS_CLK_SELECT_DIRECT_SEL_MASK);
 449:Generated_Source\PSoC4/CyLib.c ****     }
 450:Generated_Source\PSoC4/CyLib.c **** 
 451:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_SELECT_REG = tmpReg;
 452:Generated_Source\PSoC4/CyLib.c **** 
 453:Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
 454:Generated_Source\PSoC4/CyLib.c **** }
 162              		.loc 1 454 0
 163              		@ sp needed
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\cc2xwxHk.s 			page 12


 437:Generated_Source\PSoC4/CyLib.c ****                                        CY_SYS_CLK_SELECT_HFCLK_SEL_MASK);
 164              		.loc 1 437 0
 165 000c 0A68     		ldr	r2, [r1]
 166 000e 9A43     		bic	r2, r3
 167              	.LVL3:
 448:Generated_Source\PSoC4/CyLib.c ****     }
 168              		.loc 1 448 0
 169 0010 2340     		and	r3, r4
 170 0012 1343     		orr	r3, r2
 171              	.LVL4:
 451:Generated_Source\PSoC4/CyLib.c **** 
 172              		.loc 1 451 0
 173 0014 0B60     		str	r3, [r1]
 453:Generated_Source\PSoC4/CyLib.c **** }
 174              		.loc 1 453 0
 175 0016 FFF7FEFF 		bl	CyExitCriticalSection
 176              	.LVL5:
 177              	.LVL6:
 178              		.loc 1 454 0
 179 001a 10BD     		pop	{r4, pc}
 180              	.L15:
 181              		.align	2
 182              	.L14:
 183 001c 28000340 		.word	1073938472
 184              		.cfi_endproc
 185              	.LFE6:
 186              		.size	CySysClkWriteHfclkDirect, .-CySysClkWriteHfclkDirect
 187              		.section	.text.CySysEnablePumpClock,"ax",%progbits
 188              		.align	1
 189              		.global	CySysEnablePumpClock
 190              		.code	16
 191              		.thumb_func
 192              		.type	CySysEnablePumpClock, %function
 193              	CySysEnablePumpClock:
 194              	.LFB7:
 455:Generated_Source\PSoC4/CyLib.c **** 
 456:Generated_Source\PSoC4/CyLib.c **** 
 457:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 458:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysEnablePumpClock
 459:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 460:Generated_Source\PSoC4/CyLib.c **** *
 461:Generated_Source\PSoC4/CyLib.c **** * Enables / disables the pump clock.
 462:Generated_Source\PSoC4/CyLib.c **** *
 463:Generated_Source\PSoC4/CyLib.c **** * \param enable  
 464:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_PUMP_DISABLE - Disables the pump clock
 465:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_PUMP_ENABLE - Enables and restores the operating source of 
 466:Generated_Source\PSoC4/CyLib.c **** * the pump clock.
 467:Generated_Source\PSoC4/CyLib.c **** *
 468:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
 469:Generated_Source\PSoC4/CyLib.c **** *  Enabling/disabling the pump clock does not guarantee glitch free operation 
 470:Generated_Source\PSoC4/CyLib.c **** *  when changing the IMO parameters or clock divider settings.
 471:Generated_Source\PSoC4/CyLib.c **** *
 472:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 473:Generated_Source\PSoC4/CyLib.c **** void CySysEnablePumpClock(uint32 enable)
 474:Generated_Source\PSoC4/CyLib.c **** {
 195              		.loc 1 474 0
 196              		.cfi_startproc
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\cc2xwxHk.s 			page 13


 197              	.LVL7:
 198 0000 10B5     		push	{r4, lr}
 199              		.cfi_def_cfa_offset 8
 200              		.cfi_offset 4, -8
 201              		.cfi_offset 14, -4
 202 0002 094B     		ldr	r3, .L21
 203 0004 094C     		ldr	r4, .L21+4
 475:Generated_Source\PSoC4/CyLib.c ****     #if(CY_IP_SRSSV2)
 476:Generated_Source\PSoC4/CyLib.c ****         if (0u != (CY_SYS_CLK_PUMP_ENABLE & enable))
 477:Generated_Source\PSoC4/CyLib.c ****         {
 478:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_CONFIG_REG |= (CySysClkPumpConfig << CY_SYS_CLK_IMO_CONFIG_PUMP_SEL_SHIF
 479:Generated_Source\PSoC4/CyLib.c ****         }
 480:Generated_Source\PSoC4/CyLib.c ****         else
 481:Generated_Source\PSoC4/CyLib.c ****         {
 482:Generated_Source\PSoC4/CyLib.c ****             CySysClkPumpConfig = (CY_SYS_CLK_IMO_CONFIG_REG >> CY_SYS_CLK_IMO_CONFIG_PUMP_SEL_SHIFT
 483:Generated_Source\PSoC4/CyLib.c ****                                   CY_SYS_CLK_IMO_CONFIG_PUMP_SEL_MASK;
 484:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_CONFIG_REG &= ~(CY_SYS_CLK_IMO_CONFIG_PUMP_SEL_MASK << CY_SYS_CLK_IMO_CO
 485:Generated_Source\PSoC4/CyLib.c ****         }
 486:Generated_Source\PSoC4/CyLib.c ****     #else /* CY_IP_SRSSLT */
 487:Generated_Source\PSoC4/CyLib.c ****         if (0u != (CY_SYS_CLK_PUMP_ENABLE & enable))
 204              		.loc 1 487 0
 205 0006 C207     		lsl	r2, r0, #31
 206 0008 04D5     		bpl	.L17
 488:Generated_Source\PSoC4/CyLib.c ****         {
 489:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_SELECT_REG |= (CySysClkPumpConfig << CY_SYS_CLK_SELECT_PUMP_SEL_SHIFT);
 207              		.loc 1 489 0
 208 000a 2268     		ldr	r2, [r4]
 209 000c 1968     		ldr	r1, [r3]
 210 000e 1201     		lsl	r2, r2, #4
 211 0010 0A43     		orr	r2, r1
 212 0012 06E0     		b	.L19
 213              	.L17:
 490:Generated_Source\PSoC4/CyLib.c ****         }
 491:Generated_Source\PSoC4/CyLib.c ****         else
 492:Generated_Source\PSoC4/CyLib.c ****         {
 493:Generated_Source\PSoC4/CyLib.c ****             CySysClkPumpConfig = (CY_SYS_CLK_SELECT_REG >> CY_SYS_CLK_SELECT_PUMP_SEL_SHIFT) & 
 494:Generated_Source\PSoC4/CyLib.c ****                                   CY_SYS_CLK_SELECT_PUMP_SEL_MASK;
 495:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_SELECT_REG &= ~(CY_SYS_CLK_SELECT_PUMP_SEL_MASK << CY_SYS_CLK_SELECT_PUMP_SE
 214              		.loc 1 495 0
 215 0014 3021     		mov	r1, #48
 493:Generated_Source\PSoC4/CyLib.c ****                                   CY_SYS_CLK_SELECT_PUMP_SEL_MASK;
 216              		.loc 1 493 0
 217 0016 1A68     		ldr	r2, [r3]
 218 0018 9206     		lsl	r2, r2, #26
 219 001a 920F     		lsr	r2, r2, #30
 220 001c 2260     		str	r2, [r4]
 221              		.loc 1 495 0
 222 001e 1A68     		ldr	r2, [r3]
 223 0020 8A43     		bic	r2, r1
 224              	.L19:
 225 0022 1A60     		str	r2, [r3]
 496:Generated_Source\PSoC4/CyLib.c ****         }
 497:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_SRSSV2) */
 498:Generated_Source\PSoC4/CyLib.c **** }
 226              		.loc 1 498 0
 227              		@ sp needed
 228 0024 10BD     		pop	{r4, pc}
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\cc2xwxHk.s 			page 14


 229              	.L22:
 230 0026 C046     		.align	2
 231              	.L21:
 232 0028 28000340 		.word	1073938472
 233 002c 00000000 		.word	.LANCHOR0
 234              		.cfi_endproc
 235              	.LFE7:
 236              		.size	CySysEnablePumpClock, .-CySysEnablePumpClock
 237              		.section	.text.CySysClkGetSysclkSource,"ax",%progbits
 238              		.align	1
 239              		.global	CySysClkGetSysclkSource
 240              		.code	16
 241              		.thumb_func
 242              		.type	CySysClkGetSysclkSource, %function
 243              	CySysClkGetSysclkSource:
 244              	.LFB8:
 499:Generated_Source\PSoC4/CyLib.c **** 
 500:Generated_Source\PSoC4/CyLib.c **** 
 501:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 502:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkGetSysclkSource
 503:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 504:Generated_Source\PSoC4/CyLib.c **** *
 505:Generated_Source\PSoC4/CyLib.c **** * Returns the source of the System clock.
 506:Generated_Source\PSoC4/CyLib.c **** *
 507:Generated_Source\PSoC4/CyLib.c **** * \return The same as \ref CySysClkWriteHfclkDirect() function parameters.
 508:Generated_Source\PSoC4/CyLib.c **** *
 509:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 510:Generated_Source\PSoC4/CyLib.c **** uint32 CySysClkGetSysclkSource(void)
 511:Generated_Source\PSoC4/CyLib.c **** {
 245              		.loc 1 511 0
 246              		.cfi_startproc
 247 0000 10B5     		push	{r4, lr}
 248              		.cfi_def_cfa_offset 8
 249              		.cfi_offset 4, -8
 250              		.cfi_offset 14, -4
 512:Generated_Source\PSoC4/CyLib.c ****     uint8  interruptState;
 513:Generated_Source\PSoC4/CyLib.c ****     uint32 sysclkSource;
 514:Generated_Source\PSoC4/CyLib.c **** 
 515:Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
 251              		.loc 1 515 0
 252 0002 FFF7FEFF 		bl	CyEnterCriticalSection
 253              	.LVL8:
 516:Generated_Source\PSoC4/CyLib.c **** 
 517:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_SRSSV2 && CY_IP_PLL)
 518:Generated_Source\PSoC4/CyLib.c ****     if ((CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_HFCLK_SEL_MASK) != 0u)
 519:Generated_Source\PSoC4/CyLib.c ****     {
 520:Generated_Source\PSoC4/CyLib.c ****         sysclkSource = (CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_HFCLK_SEL_MASK);
 521:Generated_Source\PSoC4/CyLib.c ****     }
 522:Generated_Source\PSoC4/CyLib.c ****     else
 523:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2 && CY_IP_PLL) */
 524:Generated_Source\PSoC4/CyLib.c ****     {
 525:Generated_Source\PSoC4/CyLib.c ****         sysclkSource = (CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_DIRECT_SEL_MASK);
 254              		.loc 1 525 0
 255 0006 034B     		ldr	r3, .L24
 526:Generated_Source\PSoC4/CyLib.c ****     }
 527:Generated_Source\PSoC4/CyLib.c **** 
 528:Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\cc2xwxHk.s 			page 15


 529:Generated_Source\PSoC4/CyLib.c **** 
 530:Generated_Source\PSoC4/CyLib.c ****     return (sysclkSource);
 531:Generated_Source\PSoC4/CyLib.c **** }
 256              		.loc 1 531 0
 257              		@ sp needed
 525:Generated_Source\PSoC4/CyLib.c ****     }
 258              		.loc 1 525 0
 259 0008 1C68     		ldr	r4, [r3]
 260              	.LVL9:
 528:Generated_Source\PSoC4/CyLib.c **** 
 261              		.loc 1 528 0
 262 000a FFF7FEFF 		bl	CyExitCriticalSection
 263              	.LVL10:
 525:Generated_Source\PSoC4/CyLib.c ****     }
 264              		.loc 1 525 0
 265 000e 0320     		mov	r0, #3
 266 0010 2040     		and	r0, r4
 267              	.LVL11:
 268              		.loc 1 531 0
 269 0012 10BD     		pop	{r4, pc}
 270              	.L25:
 271              		.align	2
 272              	.L24:
 273 0014 28000340 		.word	1073938472
 274              		.cfi_endproc
 275              	.LFE8:
 276              		.size	CySysClkGetSysclkSource, .-CySysClkGetSysclkSource
 277              		.section	.text.CySysClkWriteSysclkDiv,"ax",%progbits
 278              		.align	1
 279              		.global	CySysClkWriteSysclkDiv
 280              		.code	16
 281              		.thumb_func
 282              		.type	CySysClkWriteSysclkDiv, %function
 283              	CySysClkWriteSysclkDiv:
 284              	.LFB9:
 532:Generated_Source\PSoC4/CyLib.c **** 
 533:Generated_Source\PSoC4/CyLib.c **** 
 534:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 535:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkWriteSysclkDiv
 536:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 537:Generated_Source\PSoC4/CyLib.c **** *
 538:Generated_Source\PSoC4/CyLib.c **** * Selects the prescaler divide amount for SYSCLK from HFCLK.
 539:Generated_Source\PSoC4/CyLib.c **** *
 540:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000: The SYSCLK has the speed of 16 MHz, so HFCLK and SYSCLK dividers
 541:Generated_Source\PSoC4/CyLib.c **** * should be selected in a way, not to exceed 16 MHz for SYSCLK.
 542:Generated_Source\PSoC4/CyLib.c **** *
 543:Generated_Source\PSoC4/CyLib.c **** * PSoC 4100 \ PSoC 4100 BLE \ PSoC 4100M: The SYSCLK has the speed of 24 MHz,
 544:Generated_Source\PSoC4/CyLib.c **** * so HFCLK and SYSCLK dividers should be selected in a way, not to exceed 24 MHz
 545:Generated_Source\PSoC4/CyLib.c **** * for SYSCLK.
 546:Generated_Source\PSoC4/CyLib.c **** *
 547:Generated_Source\PSoC4/CyLib.c **** * If the SYSCLK clock frequency increases during the device operation, call
 548:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() with the appropriate parameter to adjust the
 549:Generated_Source\PSoC4/CyLib.c **** * number of clock cycles the cache will wait before sampling data comes back
 550:Generated_Source\PSoC4/CyLib.c **** * from Flash. If the SYSCLK clock frequency decreases, you can call
 551:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() to improve the CPU performance. See
 552:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() description for more information.
 553:Generated_Source\PSoC4/CyLib.c **** *
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\cc2xwxHk.s 			page 16


 554:Generated_Source\PSoC4/CyLib.c **** * \param divider Power of 2 prescaler selection
 555:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV1        SYSCLK = HFCLK / 1
 556:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV2        SYSCLK = HFCLK / 2
 557:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV4        SYSCLK = HFCLK / 4
 558:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV8        SYSCLK = HFCLK / 8
 559:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV16       SYSCLK = HFCLK / 16  (N/A for 4000 Family)
 560:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV32       SYSCLK = HFCLK / 32  (N/A for 4000 Family)
 561:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV64       SYSCLK = HFCLK / 64  (N/A for 4000 Family)
 562:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV128      SYSCLK = HFCLK / 128 (N/A for 4000 Family)
 563:Generated_Source\PSoC4/CyLib.c **** *
 564:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 565:Generated_Source\PSoC4/CyLib.c **** void CySysClkWriteSysclkDiv(uint32 divider)
 566:Generated_Source\PSoC4/CyLib.c **** {
 285              		.loc 1 566 0
 286              		.cfi_startproc
 287              	.LVL12:
 288 0000 38B5     		push	{r3, r4, r5, lr}
 289              		.cfi_def_cfa_offset 16
 290              		.cfi_offset 3, -16
 291              		.cfi_offset 4, -12
 292              		.cfi_offset 5, -8
 293              		.cfi_offset 14, -4
 294              		.loc 1 566 0
 295 0002 041C     		mov	r4, r0
 567:Generated_Source\PSoC4/CyLib.c ****     uint8  interruptState;
 568:Generated_Source\PSoC4/CyLib.c **** 
 569:Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
 296              		.loc 1 569 0
 297 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 298              	.LVL13:
 570:Generated_Source\PSoC4/CyLib.c **** 
 571:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_SELECT_REG = ((uint32)(((uint32)divider & CY_SYS_CLK_SELECT_SYSCLK_DIV_MASK) <<
 299              		.loc 1 571 0
 300 0008 FF21     		mov	r1, #255
 572:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT)) |
 573:Generated_Source\PSoC4/CyLib.c ****                             (CY_SYS_CLK_SELECT_REG & ((uint32)(~(uint32)(CY_SYS_CLK_SELECT_SYSCLK_D
 301              		.loc 1 573 0
 302 000a 054D     		ldr	r5, .L27
 571:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT)) |
 303              		.loc 1 571 0
 304 000c A301     		lsl	r3, r4, #6
 305              		.loc 1 573 0
 306 000e 2A68     		ldr	r2, [r5]
 571:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT)) |
 307              		.loc 1 571 0
 308 0010 0B40     		and	r3, r1
 309              		.loc 1 573 0
 310 0012 3F39     		sub	r1, r1, #63
 311 0014 8A43     		bic	r2, r1
 572:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT)) |
 312              		.loc 1 572 0
 313 0016 1343     		orr	r3, r2
 571:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT)) |
 314              		.loc 1 571 0
 315 0018 2B60     		str	r3, [r5]
 574:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT))));
 575:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\cc2xwxHk.s 			page 17


 576:Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
 316              		.loc 1 576 0
 317 001a FFF7FEFF 		bl	CyExitCriticalSection
 318              	.LVL14:
 577:Generated_Source\PSoC4/CyLib.c **** }
 319              		.loc 1 577 0
 320              		@ sp needed
 321              	.LVL15:
 322 001e 38BD     		pop	{r3, r4, r5, pc}
 323              	.L28:
 324              		.align	2
 325              	.L27:
 326 0020 28000340 		.word	1073938472
 327              		.cfi_endproc
 328              	.LFE9:
 329              		.size	CySysClkWriteSysclkDiv, .-CySysClkWriteSysclkDiv
 330              		.section	.text.CySysClkWriteHfclkDiv,"ax",%progbits
 331              		.align	1
 332              		.global	CySysClkWriteHfclkDiv
 333              		.code	16
 334              		.thumb_func
 335              		.type	CySysClkWriteHfclkDiv, %function
 336              	CySysClkWriteHfclkDiv:
 337              	.LFB11:
 578:Generated_Source\PSoC4/CyLib.c **** 
 579:Generated_Source\PSoC4/CyLib.c **** 
 580:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 581:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkWriteImoFreq
 582:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 583:Generated_Source\PSoC4/CyLib.c **** *
 584:Generated_Source\PSoC4/CyLib.c **** * Sets the frequency of the IMO.
 585:Generated_Source\PSoC4/CyLib.c **** *
 586:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000: The SYSCLK has the speed of 16 MHz, so HFCLK and SYSCLK dividers
 587:Generated_Source\PSoC4/CyLib.c **** * should be selected in a way, not to exceed 16 MHz for SYSCLK.
 588:Generated_Source\PSoC4/CyLib.c **** *
 589:Generated_Source\PSoC4/CyLib.c **** * PSoC 4100 \ PSoC 4100 BLE \ PSoC 4100M: The SYSCLK has the speed of 24 MHz,
 590:Generated_Source\PSoC4/CyLib.c **** * so HFCLK and SYSCLK dividers should be selected in a way, not to exceed 24 MHz
 591:Generated_Source\PSoC4/CyLib.c **** * for SYSCLK.
 592:Generated_Source\PSoC4/CyLib.c **** *
 593:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4200M and PSoC 4200L device families, if WCO lock feature is enabled
 594:Generated_Source\PSoC4/CyLib.c **** * then this API will disable the lock, write the new IMO frequency and then
 595:Generated_Source\PSoC4/CyLib.c **** * re-enable the lock.
 596:Generated_Source\PSoC4/CyLib.c **** *
 597:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4200L device families, this function enables the USB lock when 24 or
 598:Generated_Source\PSoC4/CyLib.c **** * 48 MHz passed as a parameter if the USB lock option is enabled in Design Wide
 599:Generated_Source\PSoC4/CyLib.c **** * Resources tab or CySysClkImoEnableUsbLock() was called before. Note the USB
 600:Generated_Source\PSoC4/CyLib.c **** * lock is disabled during IMO frequency change.
 601:Generated_Source\PSoC4/CyLib.c **** *
 602:Generated_Source\PSoC4/CyLib.c **** * The CPU is halted if new frequency is invalid and project is compiled
 603:Generated_Source\PSoC4/CyLib.c **** * in debug mode.
 604:Generated_Source\PSoC4/CyLib.c **** *
 605:Generated_Source\PSoC4/CyLib.c **** * If the SYSCLK clock frequency increases during the device operation, call
 606:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() with the appropriate parameter to adjust the
 607:Generated_Source\PSoC4/CyLib.c **** * number of clock cycles the cache will wait before sampling data comes back
 608:Generated_Source\PSoC4/CyLib.c **** * from Flash. If the SYSCLK clock frequency decreases, you can call
 609:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() to improve the CPU performance. See
 610:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() description for more information.
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\cc2xwxHk.s 			page 18


 611:Generated_Source\PSoC4/CyLib.c **** *
 612:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000: The System Clock (SYSCLK) has maximum speed of 16 MHz, so HFCLK
 613:Generated_Source\PSoC4/CyLib.c **** * and SYSCLK dividers should be selected in a way, to not to exceed 16 MHz for
 614:Generated_Source\PSoC4/CyLib.c **** * the System clock.
 615:Generated_Source\PSoC4/CyLib.c **** *
 616:Generated_Source\PSoC4/CyLib.c **** * \param freq All PSoC 4 families excluding the following: Valid range [3-48]
 617:Generated_Source\PSoC4/CyLib.c **** * with step size equals 1. PSoC 4000: Valid values are 24, 32, and 48.
 618:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000S / PSoC 4100S / PSoC 4400: Valid range [24-48] with step size equals
 619:Generated_Source\PSoC4/CyLib.c **** * 4.
 620:Generated_Source\PSoC4/CyLib.c **** *
 621:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 622:Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSV2)
 623:Generated_Source\PSoC4/CyLib.c ****     void CySysClkWriteImoFreq(uint32 freq)
 624:Generated_Source\PSoC4/CyLib.c ****     {
 625:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_FMLT)
 626:Generated_Source\PSoC4/CyLib.c ****             volatile uint32   parameters[2u];
 627:Generated_Source\PSoC4/CyLib.c ****             volatile uint32   regValues[4u];
 628:Generated_Source\PSoC4/CyLib.c ****         #else
 629:Generated_Source\PSoC4/CyLib.c ****             uint8  bgTrim4;
 630:Generated_Source\PSoC4/CyLib.c ****             uint8  bgTrim5;
 631:Generated_Source\PSoC4/CyLib.c ****             uint8  newImoTrim2Value;
 632:Generated_Source\PSoC4/CyLib.c ****             uint8  currentImoTrim2Value;
 633:Generated_Source\PSoC4/CyLib.c ****             uint8  imoTrim1Value;
 634:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_FM) */
 635:Generated_Source\PSoC4/CyLib.c **** 
 636:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 637:Generated_Source\PSoC4/CyLib.c ****             uint32 wcoLock = 0u;
 638:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 639:Generated_Source\PSoC4/CyLib.c **** 
 640:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 641:Generated_Source\PSoC4/CyLib.c ****             uint32 usbLock = 0u;
 642:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 643:Generated_Source\PSoC4/CyLib.c **** 
 644:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 645:Generated_Source\PSoC4/CyLib.c **** 
 646:Generated_Source\PSoC4/CyLib.c **** 
 647:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
 648:Generated_Source\PSoC4/CyLib.c **** 
 649:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 650:Generated_Source\PSoC4/CyLib.c ****             if(0u != CySysClkImoGetWcoLock())
 651:Generated_Source\PSoC4/CyLib.c ****             {
 652:Generated_Source\PSoC4/CyLib.c ****                 wcoLock = 1u;
 653:Generated_Source\PSoC4/CyLib.c ****                 CySysClkImoDisableWcoLock();
 654:Generated_Source\PSoC4/CyLib.c ****             }
 655:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 656:Generated_Source\PSoC4/CyLib.c **** 
 657:Generated_Source\PSoC4/CyLib.c **** 
 658:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 659:Generated_Source\PSoC4/CyLib.c **** 
 660:Generated_Source\PSoC4/CyLib.c ****             #if (CYDEV_IMO_TRIMMED_BY_USB == 0u)
 661:Generated_Source\PSoC4/CyLib.c ****                 if(0u != CySysClkImoGetUsbLock())
 662:Generated_Source\PSoC4/CyLib.c ****                 {
 663:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 664:Generated_Source\PSoC4/CyLib.c **** 
 665:Generated_Source\PSoC4/CyLib.c ****                 if ((24u == freq) || (48u == freq))
 666:Generated_Source\PSoC4/CyLib.c ****                 {
 667:Generated_Source\PSoC4/CyLib.c ****                     usbLock = 1u;
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\cc2xwxHk.s 			page 19


 668:Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoDisableUsbLock();
 669:Generated_Source\PSoC4/CyLib.c ****                 }
 670:Generated_Source\PSoC4/CyLib.c **** 
 671:Generated_Source\PSoC4/CyLib.c ****             #if (CYDEV_IMO_TRIMMED_BY_USB == 0u)
 672:Generated_Source\PSoC4/CyLib.c ****                 }
 673:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 674:Generated_Source\PSoC4/CyLib.c **** 
 675:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 676:Generated_Source\PSoC4/CyLib.c **** 
 677:Generated_Source\PSoC4/CyLib.c **** 
 678:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_FMLT)
 679:Generated_Source\PSoC4/CyLib.c **** 
 680:Generated_Source\PSoC4/CyLib.c ****             /* FM-Lite Clock Restore */
 681:Generated_Source\PSoC4/CyLib.c ****             regValues[0u] = CY_SYS_CLK_IMO_CONFIG_REG;
 682:Generated_Source\PSoC4/CyLib.c ****             regValues[1u] = CY_SYS_CLK_SELECT_REG;
 683:Generated_Source\PSoC4/CyLib.c ****             regValues[2u] = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET];
 684:Generated_Source\PSoC4/CyLib.c ****             regValues[3u] = CY_FLASH_CTL_REG;
 685:Generated_Source\PSoC4/CyLib.c **** 
 686:Generated_Source\PSoC4/CyLib.c ****             parameters[0u] =
 687:Generated_Source\PSoC4/CyLib.c ****                 (uint32) ((CY_FLASH_KEY_TWO(CY_FLASH_API_OPCODE_CLK_RESTORE) <<  CY_FLASH_PARAM_KEY
 688:Generated_Source\PSoC4/CyLib.c ****                             CY_FLASH_KEY_ONE);
 689:Generated_Source\PSoC4/CyLib.c ****             parameters[1u] = (uint32) &regValues[0u];
 690:Generated_Source\PSoC4/CyLib.c **** 
 691:Generated_Source\PSoC4/CyLib.c ****             CY_FLASH_CPUSS_SYSARG_REG = (uint32) &parameters[0u];
 692:Generated_Source\PSoC4/CyLib.c ****             CY_FLASH_CPUSS_SYSREQ_REG = CY_FLASH_CPUSS_REQ_START | CY_FLASH_API_OPCODE_CLK_RESTORE;
 693:Generated_Source\PSoC4/CyLib.c ****             (void) CY_FLASH_CPUSS_SYSARG_REG;
 694:Generated_Source\PSoC4/CyLib.c **** 
 695:Generated_Source\PSoC4/CyLib.c ****         #else /* (CY_IP_FM) */
 696:Generated_Source\PSoC4/CyLib.c **** 
 697:Generated_Source\PSoC4/CyLib.c ****         if ((freq >= CY_SYS_CLK_IMO_MIN_FREQ_MHZ) && (freq <= CY_SYS_CLK_IMO_MAX_FREQ_MHZ))
 698:Generated_Source\PSoC4/CyLib.c ****         {
 699:Generated_Source\PSoC4/CyLib.c ****             if(freq <= CY_SFLASH_IMO_MAXF0_REG)
 700:Generated_Source\PSoC4/CyLib.c ****             {
 701:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS0_REG;
 702:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO0_REG;
 703:Generated_Source\PSoC4/CyLib.c ****             }
 704:Generated_Source\PSoC4/CyLib.c ****             else if(freq <= CY_SFLASH_IMO_MAXF1_REG)
 705:Generated_Source\PSoC4/CyLib.c ****             {
 706:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS1_REG;
 707:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO1_REG;
 708:Generated_Source\PSoC4/CyLib.c ****             }
 709:Generated_Source\PSoC4/CyLib.c ****             else if(freq <= CY_SFLASH_IMO_MAXF2_REG)
 710:Generated_Source\PSoC4/CyLib.c ****             {
 711:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS2_REG;
 712:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO2_REG;
 713:Generated_Source\PSoC4/CyLib.c ****             }
 714:Generated_Source\PSoC4/CyLib.c ****             else if(freq <= CY_SFLASH_IMO_MAXF3_REG)
 715:Generated_Source\PSoC4/CyLib.c ****             {
 716:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS3_REG;
 717:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO3_REG;
 718:Generated_Source\PSoC4/CyLib.c ****             }
 719:Generated_Source\PSoC4/CyLib.c ****             else
 720:Generated_Source\PSoC4/CyLib.c ****             {
 721:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS4_REG;
 722:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO4_REG;
 723:Generated_Source\PSoC4/CyLib.c ****             }
 724:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\cc2xwxHk.s 			page 20


 725:Generated_Source\PSoC4/CyLib.c ****             /* Get IMO_TRIM2 value for the new frequency */
 726:Generated_Source\PSoC4/CyLib.c ****             newImoTrim2Value = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET];
 727:Generated_Source\PSoC4/CyLib.c **** 
 728:Generated_Source\PSoC4/CyLib.c **** 
 729:Generated_Source\PSoC4/CyLib.c ****             /****************************************************************************
 730:Generated_Source\PSoC4/CyLib.c ****             * The IMO can have a different trim per frequency. To avoid possible corner
 731:Generated_Source\PSoC4/CyLib.c ****             * cases where a trim change can exceed the maximum frequency, the trim must
 732:Generated_Source\PSoC4/CyLib.c ****             * be applied at a frequency that is low enough.
 733:Generated_Source\PSoC4/CyLib.c ****             *
 734:Generated_Source\PSoC4/CyLib.c ****             * Comparing IMO_TRIM2 values for the current and new frequencies, since
 735:Generated_Source\PSoC4/CyLib.c ****             * IMO_TRIM2 value as a function of IMO frequency is a strictly increasing
 736:Generated_Source\PSoC4/CyLib.c ****             * function and is time-invariant.
 737:Generated_Source\PSoC4/CyLib.c ****             ***************************************************************************/
 738:Generated_Source\PSoC4/CyLib.c ****             if ((newImoTrim2Value >= CY_SYS_CLK_IMO_BOUNDARY_FREQ_TRIM2) && (freq >= CY_SYS_CLK_IMO
 739:Generated_Source\PSoC4/CyLib.c ****             {
 740:Generated_Source\PSoC4/CyLib.c ****                 /* Set boundary IMO frequency: safe for IMO above 48 MHZ trimming */
 741:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM2_REG = (uint32) cyImoFreqMhz2Reg[CY_SYS_CLK_IMO_TEMP_FREQ_MHZ -
 742:Generated_Source\PSoC4/CyLib.c ****                                                                      CY_SYS_CLK_IMO_FREQ_TABLE_OFFS
 743:Generated_Source\PSoC4/CyLib.c **** 
 744:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 745:Generated_Source\PSoC4/CyLib.c **** 
 746:Generated_Source\PSoC4/CyLib.c ****                 currentImoTrim2Value = CY_SYS_CLK_IMO_TEMP_FREQ_TRIM2;
 747:Generated_Source\PSoC4/CyLib.c ****             }
 748:Generated_Source\PSoC4/CyLib.c ****             else
 749:Generated_Source\PSoC4/CyLib.c ****             {
 750:Generated_Source\PSoC4/CyLib.c ****                 currentImoTrim2Value = (uint8) (CY_SYS_CLK_IMO_TRIM2_REG & CY_SYS_CLK_IMO_FREQ_BITS
 751:Generated_Source\PSoC4/CyLib.c ****             }
 752:Generated_Source\PSoC4/CyLib.c **** 
 753:Generated_Source\PSoC4/CyLib.c **** 
 754:Generated_Source\PSoC4/CyLib.c ****             /***************************************************************************
 755:Generated_Source\PSoC4/CyLib.c ****             * A trim change needs to be allowed to settle (within 5us) before the Freq
 756:Generated_Source\PSoC4/CyLib.c ****             * can be changed to a new frequency.
 757:Generated_Source\PSoC4/CyLib.c ****             *
 758:Generated_Source\PSoC4/CyLib.c ****             * Comparing IMO_TRIM2 values for the current and new frequencies, since
 759:Generated_Source\PSoC4/CyLib.c ****             * IMO_TRIM2 value as a function of IMO frequency is a strictly increasing
 760:Generated_Source\PSoC4/CyLib.c ****             * function and is time-invariant.
 761:Generated_Source\PSoC4/CyLib.c ****             ***************************************************************************/
 762:Generated_Source\PSoC4/CyLib.c ****             if (newImoTrim2Value < currentImoTrim2Value)
 763:Generated_Source\PSoC4/CyLib.c ****             {
 764:Generated_Source\PSoC4/CyLib.c ****                 /* Set new IMO frequency */
 765:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM2_REG = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET
 766:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 767:Generated_Source\PSoC4/CyLib.c ****             }
 768:Generated_Source\PSoC4/CyLib.c **** 
 769:Generated_Source\PSoC4/CyLib.c ****             /* Set trims for the new IMO frequency */
 770:Generated_Source\PSoC4/CyLib.c **** 
 771:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 772:Generated_Source\PSoC4/CyLib.c ****                 if ((1u == usbLock) && (48u == freq))
 773:Generated_Source\PSoC4/CyLib.c ****                 {
 774:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = CY_SFLASH_IMO_TRIM_USBMODE_48_REG;
 775:Generated_Source\PSoC4/CyLib.c ****                 }
 776:Generated_Source\PSoC4/CyLib.c ****                 else if ((1u == usbLock) && (24u == freq))
 777:Generated_Source\PSoC4/CyLib.c ****                 {
 778:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = CY_SFLASH_IMO_TRIM_USBMODE_24_REG;
 779:Generated_Source\PSoC4/CyLib.c ****                 }
 780:Generated_Source\PSoC4/CyLib.c ****                 else
 781:Generated_Source\PSoC4/CyLib.c ****                 {
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\cc2xwxHk.s 			page 21


 782:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = (uint8) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_FREQ_TABLE
 783:Generated_Source\PSoC4/CyLib.c ****                 }
 784:Generated_Source\PSoC4/CyLib.c ****             #else
 785:Generated_Source\PSoC4/CyLib.c ****                 imoTrim1Value = (uint8) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFF
 786:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 787:Generated_Source\PSoC4/CyLib.c **** 
 788:Generated_Source\PSoC4/CyLib.c **** 
 789:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM1_REG = (uint32) imoTrim1Value;
 790:Generated_Source\PSoC4/CyLib.c ****             CY_PWR_BG_TRIM4_REG  = bgTrim4;
 791:Generated_Source\PSoC4/CyLib.c ****             CY_PWR_BG_TRIM5_REG  = bgTrim5;
 792:Generated_Source\PSoC4/CyLib.c ****             CyDelayUs(CY_SYS_CLK_IMO_TRIM_TIMEOUT_US);
 793:Generated_Source\PSoC4/CyLib.c **** 
 794:Generated_Source\PSoC4/CyLib.c ****             if (newImoTrim2Value > currentImoTrim2Value)
 795:Generated_Source\PSoC4/CyLib.c ****             {
 796:Generated_Source\PSoC4/CyLib.c ****                 /* Set new IMO frequency */
 797:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM2_REG = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET
 798:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 799:Generated_Source\PSoC4/CyLib.c ****             }
 800:Generated_Source\PSoC4/CyLib.c ****         }
 801:Generated_Source\PSoC4/CyLib.c ****         else
 802:Generated_Source\PSoC4/CyLib.c ****         {
 803:Generated_Source\PSoC4/CyLib.c ****             /* Halt CPU in debug mode if new frequency is invalid */
 804:Generated_Source\PSoC4/CyLib.c ****             CYASSERT(0u != 0u);
 805:Generated_Source\PSoC4/CyLib.c ****         }
 806:Generated_Source\PSoC4/CyLib.c **** 
 807:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_FMLT) */
 808:Generated_Source\PSoC4/CyLib.c **** 
 809:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 810:Generated_Source\PSoC4/CyLib.c ****             if (1u == wcoLock)
 811:Generated_Source\PSoC4/CyLib.c ****             {
 812:Generated_Source\PSoC4/CyLib.c ****                 CySysClkImoEnableWcoLock();
 813:Generated_Source\PSoC4/CyLib.c ****             }
 814:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 815:Generated_Source\PSoC4/CyLib.c **** 
 816:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 817:Generated_Source\PSoC4/CyLib.c ****             if (1u == usbLock)
 818:Generated_Source\PSoC4/CyLib.c ****             {
 819:Generated_Source\PSoC4/CyLib.c ****                 CySysClkImoEnableUsbLock();
 820:Generated_Source\PSoC4/CyLib.c ****             }
 821:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 822:Generated_Source\PSoC4/CyLib.c **** 
 823:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
 824:Generated_Source\PSoC4/CyLib.c ****     }
 825:Generated_Source\PSoC4/CyLib.c **** 
 826:Generated_Source\PSoC4/CyLib.c **** #else
 827:Generated_Source\PSoC4/CyLib.c **** 
 828:Generated_Source\PSoC4/CyLib.c ****     void CySysClkWriteImoFreq(uint32 freq)
 829:Generated_Source\PSoC4/CyLib.c ****     {
 830:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 831:Generated_Source\PSoC4/CyLib.c ****         uint8  imoTrim1Value;
 832:Generated_Source\PSoC4/CyLib.c **** 
 833:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 834:Generated_Source\PSoC4/CyLib.c ****             uint32 wcoLock = 0u;
 835:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */        
 836:Generated_Source\PSoC4/CyLib.c ****         
 837:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 838:Generated_Source\PSoC4/CyLib.c ****             uint32 usbLock = 0u;
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\cc2xwxHk.s 			page 22


 839:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 840:Generated_Source\PSoC4/CyLib.c **** 
 841:Generated_Source\PSoC4/CyLib.c ****         #if (CY_PSOC4_4000)
 842:Generated_Source\PSoC4/CyLib.c ****             if ((freq == 24u) || (freq == 32u) || (freq == 48u))
 843:Generated_Source\PSoC4/CyLib.c ****         #elif (CY_CCG3)
 844:Generated_Source\PSoC4/CyLib.c ****             if ((freq == 24u) || (freq == 36u) || (freq == 48u))
 845:Generated_Source\PSoC4/CyLib.c ****         #else
 846:Generated_Source\PSoC4/CyLib.c ****             if ((freq == 24u) || (freq == 28u) || (freq == 32u) ||
 847:Generated_Source\PSoC4/CyLib.c ****                 (freq == 36u) || (freq == 40u) || (freq == 44u) ||
 848:Generated_Source\PSoC4/CyLib.c ****                 (freq == 48u))
 849:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_PSOC4_4000) */
 850:Generated_Source\PSoC4/CyLib.c ****         {
 851:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
 852:Generated_Source\PSoC4/CyLib.c **** 
 853:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 854:Generated_Source\PSoC4/CyLib.c ****                 if(0u != CySysClkImoGetWcoLock())
 855:Generated_Source\PSoC4/CyLib.c ****                 {
 856:Generated_Source\PSoC4/CyLib.c ****                     wcoLock = 1u;
 857:Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoDisableWcoLock();
 858:Generated_Source\PSoC4/CyLib.c ****                 }
 859:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 860:Generated_Source\PSoC4/CyLib.c **** 
 861:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 862:Generated_Source\PSoC4/CyLib.c **** 
 863:Generated_Source\PSoC4/CyLib.c ****                 #if (CYDEV_IMO_TRIMMED_BY_USB == 0u)
 864:Generated_Source\PSoC4/CyLib.c ****                     if(0u != CySysClkImoGetUsbLock())
 865:Generated_Source\PSoC4/CyLib.c ****                     {
 866:Generated_Source\PSoC4/CyLib.c ****                 #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 867:Generated_Source\PSoC4/CyLib.c **** 
 868:Generated_Source\PSoC4/CyLib.c ****                     if (48u == freq)
 869:Generated_Source\PSoC4/CyLib.c ****                     {
 870:Generated_Source\PSoC4/CyLib.c ****                         usbLock = 1u;
 871:Generated_Source\PSoC4/CyLib.c ****                         CySysClkImoDisableUsbLock();
 872:Generated_Source\PSoC4/CyLib.c ****                     }
 873:Generated_Source\PSoC4/CyLib.c **** 
 874:Generated_Source\PSoC4/CyLib.c ****                 #if (CYDEV_IMO_TRIMMED_BY_USB == 0u)
 875:Generated_Source\PSoC4/CyLib.c ****                     }
 876:Generated_Source\PSoC4/CyLib.c ****                 #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 877:Generated_Source\PSoC4/CyLib.c **** 
 878:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 879:Generated_Source\PSoC4/CyLib.c **** 
 880:Generated_Source\PSoC4/CyLib.c **** 
 881:Generated_Source\PSoC4/CyLib.c ****             /* Set IMO to 24 MHz - CLK_IMO_SELECT.FREQ = 0 */
 882:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_SELECT_REG &= ((uint32) ~CY_SYS_CLK_IMO_SELECT_FREQ_MASK);
 883:Generated_Source\PSoC4/CyLib.c **** 
 884:Generated_Source\PSoC4/CyLib.c **** 
 885:Generated_Source\PSoC4/CyLib.c ****             /* Apply coarse trim */
 886:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 887:Generated_Source\PSoC4/CyLib.c ****                 if ((1u == usbLock) && (48u == freq))
 888:Generated_Source\PSoC4/CyLib.c ****                 {
 889:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = CY_SFLASH_IMO_TRIM_USBMODE_48_REG;
 890:Generated_Source\PSoC4/CyLib.c ****                 }
 891:Generated_Source\PSoC4/CyLib.c ****                 else if ((1u == usbLock) && (24u == freq))
 892:Generated_Source\PSoC4/CyLib.c ****                 {
 893:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = CY_SFLASH_IMO_TRIM_USBMODE_24_REG;
 894:Generated_Source\PSoC4/CyLib.c ****                 }
 895:Generated_Source\PSoC4/CyLib.c ****                 else
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\cc2xwxHk.s 			page 23


 896:Generated_Source\PSoC4/CyLib.c ****                 {
 897:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = (uint8) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_M
 898:Generated_Source\PSoC4/CyLib.c ****                 }
 899:Generated_Source\PSoC4/CyLib.c ****             #else
 900:Generated_Source\PSoC4/CyLib.c ****                 imoTrim1Value = (uint8) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ);
 901:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 902:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM1_REG = (uint32) imoTrim1Value;
 903:Generated_Source\PSoC4/CyLib.c **** 
 904:Generated_Source\PSoC4/CyLib.c ****             /* Zero out fine trim */
 905:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM2_REG = CY_SYS_CLK_IMO_TRIM2_REG & ((uint32) ~CY_SYS_CLK_IMO_TRIM2_F
 906:Generated_Source\PSoC4/CyLib.c **** 
 907:Generated_Source\PSoC4/CyLib.c ****             /* Apply TC trim */
 908:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM3_REG = (CY_SYS_CLK_IMO_TRIM3_REG & ((uint32) ~CY_SYS_CLK_IMO_TRIM3_
 909:Generated_Source\PSoC4/CyLib.c ****                 (CY_SFLASH_IMO_TCTRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) & CY_SYS_CLK_IMO_TRIM
 910:Generated_Source\PSoC4/CyLib.c **** 
 911:Generated_Source\PSoC4/CyLib.c ****             CyDelayCycles(CY_SYS_CLK_IMO_TRIM_DELAY_CYCLES);
 912:Generated_Source\PSoC4/CyLib.c **** 
 913:Generated_Source\PSoC4/CyLib.c ****             if (freq > CY_SYS_CLK_IMO_MIN_FREQ_MHZ)
 914:Generated_Source\PSoC4/CyLib.c ****             {
 915:Generated_Source\PSoC4/CyLib.c ****                 /* Select nearby intermediate frequency */
 916:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_SELECT_REG = (CY_SYS_CLK_IMO_SELECT_REG & ((uint32) ~CY_SYS_CLK_IMO_
 917:Generated_Source\PSoC4/CyLib.c ****                     (((freq - 4u - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) >> 2u) & CY_SYS_CLK_IMO_SELECT_FREQ
 918:Generated_Source\PSoC4/CyLib.c **** 
 919:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_TRIM_DELAY_CYCLES);
 920:Generated_Source\PSoC4/CyLib.c **** 
 921:Generated_Source\PSoC4/CyLib.c ****                 /* Make small step to final frequency */
 922:Generated_Source\PSoC4/CyLib.c ****                 /* Select nearby intermediate frequency */
 923:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_SELECT_REG = (CY_SYS_CLK_IMO_SELECT_REG & ((uint32) ~CY_SYS_CLK_IMO_
 924:Generated_Source\PSoC4/CyLib.c ****                     (((freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) >> 2u) & CY_SYS_CLK_IMO_SELECT_FREQ_MASK
 925:Generated_Source\PSoC4/CyLib.c ****             }
 926:Generated_Source\PSoC4/CyLib.c **** 
 927:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 928:Generated_Source\PSoC4/CyLib.c ****                 if (1u == wcoLock)
 929:Generated_Source\PSoC4/CyLib.c ****                 {
 930:Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoEnableWcoLock();
 931:Generated_Source\PSoC4/CyLib.c ****                 }
 932:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 933:Generated_Source\PSoC4/CyLib.c ****         
 934:Generated_Source\PSoC4/CyLib.c ****         
 935:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 936:Generated_Source\PSoC4/CyLib.c ****                 if (1u == usbLock)
 937:Generated_Source\PSoC4/CyLib.c ****                 {
 938:Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoEnableUsbLock();
 939:Generated_Source\PSoC4/CyLib.c ****                 }
 940:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 941:Generated_Source\PSoC4/CyLib.c **** 
 942:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
 943:Generated_Source\PSoC4/CyLib.c ****         }
 944:Generated_Source\PSoC4/CyLib.c ****         else
 945:Generated_Source\PSoC4/CyLib.c ****         {
 946:Generated_Source\PSoC4/CyLib.c ****             /* Halt CPU in debug mode if new frequency is invalid */
 947:Generated_Source\PSoC4/CyLib.c ****             CYASSERT(0u != 0u);
 948:Generated_Source\PSoC4/CyLib.c ****         }
 949:Generated_Source\PSoC4/CyLib.c ****     }
 950:Generated_Source\PSoC4/CyLib.c **** 
 951:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2) */
 952:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\cc2xwxHk.s 			page 24


 953:Generated_Source\PSoC4/CyLib.c **** 
 954:Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSLT)
 955:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 956:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkWriteHfclkDiv
 957:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 958:Generated_Source\PSoC4/CyLib.c ****     *
 959:Generated_Source\PSoC4/CyLib.c ****     * Selects the pre-scaler divider value for HFCLK from IMO.
 960:Generated_Source\PSoC4/CyLib.c ****     *
 961:Generated_Source\PSoC4/CyLib.c ****     * The HFCLK predivider allows the device to divide the HFCLK selection mux
 962:Generated_Source\PSoC4/CyLib.c ****     * input before use as HFCLK. The predivider is capable of dividing the HFCLK by
 963:Generated_Source\PSoC4/CyLib.c ****     * powers of 2 between 1 and 8.
 964:Generated_Source\PSoC4/CyLib.c ****     *
 965:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4000: The SYSCLK has the speed of 16 MHz, so HFCLK and SYSCLK dividers
 966:Generated_Source\PSoC4/CyLib.c ****     * should be selected in a way, not to exceed 16 MHz for SYSCLK.
 967:Generated_Source\PSoC4/CyLib.c ****     *
 968:Generated_Source\PSoC4/CyLib.c ****     * If the SYSCLK clock frequency increases during the device operation, call
 969:Generated_Source\PSoC4/CyLib.c ****     * \ref CySysFlashSetWaitCycles() with the appropriate parameter to adjust the
 970:Generated_Source\PSoC4/CyLib.c ****     * number of clock cycles the cache will wait before sampling data comes back
 971:Generated_Source\PSoC4/CyLib.c ****     * from Flash. If the SYSCLK clock frequency decreases, you can call
 972:Generated_Source\PSoC4/CyLib.c ****     * \ref CySysFlashSetWaitCycles() to improve the CPU performance. See
 973:Generated_Source\PSoC4/CyLib.c ****     * \ref CySysFlashSetWaitCycles() description for more information.
 974:Generated_Source\PSoC4/CyLib.c ****     *
 975:Generated_Source\PSoC4/CyLib.c ****     * \param \ref CY_SYS_CLK_HFCLK_DIV_NODIV    Transparent mode (w/o dividing)
 976:Generated_Source\PSoC4/CyLib.c ****     * \param \ref CY_SYS_CLK_HFCLK_DIV_2        Divide selected clock source by 2
 977:Generated_Source\PSoC4/CyLib.c ****     * \param \ref CY_SYS_CLK_HFCLK_DIV_4        Divide selected clock source by 4
 978:Generated_Source\PSoC4/CyLib.c ****     * \param \ref CY_SYS_CLK_HFCLK_DIV_8        Divide selected clock source by 8
 979:Generated_Source\PSoC4/CyLib.c ****     *
 980:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 981:Generated_Source\PSoC4/CyLib.c ****     void CySysClkWriteHfclkDiv(uint32 divider)
 982:Generated_Source\PSoC4/CyLib.c ****     {
 338              		.loc 1 982 0
 339              		.cfi_startproc
 340              	.LVL16:
 341 0000 10B5     		push	{r4, lr}
 342              		.cfi_def_cfa_offset 8
 343              		.cfi_offset 4, -8
 344              		.cfi_offset 14, -4
 345              		.loc 1 982 0
 346 0002 041C     		mov	r4, r0
 983:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 984:Generated_Source\PSoC4/CyLib.c **** 
 985:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
 347              		.loc 1 985 0
 348 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 349              	.LVL17:
 986:Generated_Source\PSoC4/CyLib.c **** 
 987:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_SELECT_REG = ((CY_SYS_CLK_SELECT_REG & ((uint32) (~(CY_SYS_CLK_SELECT_HFCLK_DIV_
 988:Generated_Source\PSoC4/CyLib.c ****                                         CY_SYS_CLK_SELECT_HFCLK_DIV_SHIFT)))) |
 989:Generated_Source\PSoC4/CyLib.c ****                     ((uint32)((divider & CY_SYS_CLK_SELECT_HFCLK_DIV_MASK) << CY_SYS_CLK_SELECT_HFC
 350              		.loc 1 989 0
 351 0008 0323     		mov	r3, #3
 352 000a 2340     		and	r3, r4
 987:Generated_Source\PSoC4/CyLib.c ****                                         CY_SYS_CLK_SELECT_HFCLK_DIV_SHIFT)))) |
 353              		.loc 1 987 0
 354 000c 0C24     		mov	r4, #12
 355              	.LVL18:
 356 000e 0449     		ldr	r1, .L30
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\cc2xwxHk.s 			page 25


 357              		.loc 1 989 0
 358 0010 9B00     		lsl	r3, r3, #2
 987:Generated_Source\PSoC4/CyLib.c ****                                         CY_SYS_CLK_SELECT_HFCLK_DIV_SHIFT)))) |
 359              		.loc 1 987 0
 360 0012 0A68     		ldr	r2, [r1]
 990:Generated_Source\PSoC4/CyLib.c **** 
 991:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
 992:Generated_Source\PSoC4/CyLib.c ****     }
 361              		.loc 1 992 0
 362              		@ sp needed
 987:Generated_Source\PSoC4/CyLib.c ****                                         CY_SYS_CLK_SELECT_HFCLK_DIV_SHIFT)))) |
 363              		.loc 1 987 0
 364 0014 A243     		bic	r2, r4
 988:Generated_Source\PSoC4/CyLib.c ****                     ((uint32)((divider & CY_SYS_CLK_SELECT_HFCLK_DIV_MASK) << CY_SYS_CLK_SELECT_HFC
 365              		.loc 1 988 0
 366 0016 1343     		orr	r3, r2
 987:Generated_Source\PSoC4/CyLib.c ****                                         CY_SYS_CLK_SELECT_HFCLK_DIV_SHIFT)))) |
 367              		.loc 1 987 0
 368 0018 0B60     		str	r3, [r1]
 991:Generated_Source\PSoC4/CyLib.c ****     }
 369              		.loc 1 991 0
 370 001a FFF7FEFF 		bl	CyExitCriticalSection
 371              	.LVL19:
 372              		.loc 1 992 0
 373 001e 10BD     		pop	{r4, pc}
 374              	.L31:
 375              		.align	2
 376              	.L30:
 377 0020 28000340 		.word	1073938472
 378              		.cfi_endproc
 379              	.LFE11:
 380              		.size	CySysClkWriteHfclkDiv, .-CySysClkWriteHfclkDiv
 381              		.section	.text.CySysGetResetReason,"ax",%progbits
 382              		.align	1
 383              		.global	CySysGetResetReason
 384              		.code	16
 385              		.thumb_func
 386              		.type	CySysGetResetReason, %function
 387              	CySysGetResetReason:
 388              	.LFB12:
 993:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSLT) */
 994:Generated_Source\PSoC4/CyLib.c **** 
 995:Generated_Source\PSoC4/CyLib.c **** 
 996:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_ECO)
 997:Generated_Source\PSoC4/CyLib.c **** 
 998:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 999:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkEcoStart
1000:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1001:Generated_Source\PSoC4/CyLib.c ****     *
1002:Generated_Source\PSoC4/CyLib.c ****     * Starts the External Crystal Oscillator (ECO). Refer to the device datasheet
1003:Generated_Source\PSoC4/CyLib.c ****     * for the ECO startup time.
1004:Generated_Source\PSoC4/CyLib.c ****     *
1005:Generated_Source\PSoC4/CyLib.c ****     * The timeout interval is measured based on the system frequency defined by
1006:Generated_Source\PSoC4/CyLib.c ****     * PSoC Creator at build time. If System clock frequency is changed in
1007:Generated_Source\PSoC4/CyLib.c ****     * runtime, the \ref CyDelayFreq() with the appropriate parameter should be
1008:Generated_Source\PSoC4/CyLib.c ****     * called.
1009:Generated_Source\PSoC4/CyLib.c ****     *
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\cc2xwxHk.s 			page 26


1010:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4100 BLE / PSoC 4200 BLE: The WCO must be enabled prior to enabling ECO.
1011:Generated_Source\PSoC4/CyLib.c ****     *
1012:Generated_Source\PSoC4/CyLib.c ****     * \param timeoutUs Timeout in microseconds.
1013:Generated_Source\PSoC4/CyLib.c ****     *
1014:Generated_Source\PSoC4/CyLib.c ****     * If zero is specified, the function does not wait for timeout and returns
1015:Generated_Source\PSoC4/CyLib.c ****     * CYRET_SUCCESS. If non-zero is specified, the function waits for the timeout.
1016:Generated_Source\PSoC4/CyLib.c ****     *
1017:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_SUCCESS Completed successfully. The ECO is oscillating and
1018:Generated_Source\PSoC4/CyLib.c ****     * amplitude reached 60% and it does not mean 24 MHz crystal is within 50 ppm.
1019:Generated_Source\PSoC4/CyLib.c ****     *
1020:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_TIMEOUT Timeout occurred. If the crystal is not oscillating
1021:Generated_Source\PSoC4/CyLib.c ****     * or amplitude didn't reach 60% after specified amount of time, CYRET_TIMEOUT
1022:Generated_Source\PSoC4/CyLib.c ****     * is returned.
1023:Generated_Source\PSoC4/CyLib.c ****     *
1024:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_BAD_PARAM One or more invalid parameters.
1025:Generated_Source\PSoC4/CyLib.c ****     *
1026:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1027:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkEcoStart(uint32 timeoutUs)
1028:Generated_Source\PSoC4/CyLib.c ****     {
1029:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_SUCCESS;
1030:Generated_Source\PSoC4/CyLib.c **** 
1031:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_ECO_BLESS)
1032:Generated_Source\PSoC4/CyLib.c ****             /* Enable the RF oscillator band gap */
1033:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLESS_RF_CONFIG_REG |= CY_SYS_XTAL_BLESS_RF_CONFIG_RF_ENABLE;
1034:Generated_Source\PSoC4/CyLib.c **** 
1035:Generated_Source\PSoC4/CyLib.c ****             /* Update trimming register */
1036:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLERD_BB_XO_REG = CY_SYS_XTAL_BLERD_BB_XO_TRIM;
1037:Generated_Source\PSoC4/CyLib.c **** 
1038:Generated_Source\PSoC4/CyLib.c ****             /* Enable the Crystal */
1039:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLERD_DBUS_REG |= CY_SYS_XTAL_BLERD_DBUS_XTAL_ENABLE;
1040:Generated_Source\PSoC4/CyLib.c ****         
1041:Generated_Source\PSoC4/CyLib.c ****         #elif (CY_IP_ECO_BLESSV3)
1042:Generated_Source\PSoC4/CyLib.c ****             uint32 regConfig;
1043:Generated_Source\PSoC4/CyLib.c ****             uint32 intrRegMaskStore = 0u;
1044:Generated_Source\PSoC4/CyLib.c ****             
1045:Generated_Source\PSoC4/CyLib.c ****             if (0u != (CY_SYS_BLESS_MT_CFG_REG & (CY_SYS_BLESS_MT_CFG_ENABLE_BLERD <<  CYFLD_BLE_BL
1046:Generated_Source\PSoC4/CyLib.c ****             {
1047:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_BLESS_MT_CFG_REG |= (CY_SYS_BLESS_MT_CFG_DPSLP_ECO_ON  <<  CYFLD_BLE_BLESS_D
1048:Generated_Source\PSoC4/CyLib.c ****             }
1049:Generated_Source\PSoC4/CyLib.c ****             else
1050:Generated_Source\PSoC4/CyLib.c ****             {
1051:Generated_Source\PSoC4/CyLib.c ****                 /* Init BLE core */
1052:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_BLESS_MT_DELAY_CFG_REG = CY_SYS_BLESS_MT_DELAY_CFG_INIT;
1053:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_BLESS_MT_DELAY_CFG2_REG = CY_SYS_BLESS_MT_DELAY_CFG2_INIT;
1054:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_BLESS_MT_DELAY_CFG3_REG = CY_SYS_BLESS_MT_DELAY_CFG3_INIT;
1055:Generated_Source\PSoC4/CyLib.c ****             
1056:Generated_Source\PSoC4/CyLib.c ****                 /* RCB init */
1057:Generated_Source\PSoC4/CyLib.c ****                 regConfig = CY_SYS_RCB_CTRL_REG;
1058:Generated_Source\PSoC4/CyLib.c ****                 regConfig &= CY_SYS_RCB_CTRL_CLEAR;
1059:Generated_Source\PSoC4/CyLib.c ****                 regConfig |= CY_SYS_RCB_CTRL_INIT;
1060:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_CTRL_REG = regConfig;
1061:Generated_Source\PSoC4/CyLib.c ****                 
1062:Generated_Source\PSoC4/CyLib.c ****                 intrRegMaskStore = CY_SYS_BLESS_INTR_MASK_REG;
1063:Generated_Source\PSoC4/CyLib.c ****                 if(0u != (CY_SYS_BLESS_BLERD_ACTIVE_INTR_MASK & intrRegMaskStore))
1064:Generated_Source\PSoC4/CyLib.c ****                 {
1065:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_BLESS_INTR_MASK_REG &= ~CY_SYS_BLESS_BLERD_ACTIVE_INTR_MASK;
1066:Generated_Source\PSoC4/CyLib.c ****                 }
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\cc2xwxHk.s 			page 27


1067:Generated_Source\PSoC4/CyLib.c ****                 
1068:Generated_Source\PSoC4/CyLib.c ****                 /* Enable BLE core */
1069:Generated_Source\PSoC4/CyLib.c ****                 regConfig = CY_SYS_BLESS_MT_CFG_REG;
1070:Generated_Source\PSoC4/CyLib.c ****                 regConfig &= CY_SYS_BLESS_MT_CFG_CLEAR;
1071:Generated_Source\PSoC4/CyLib.c ****                 regConfig |= CY_SYS_BLESS_MT_CFG_INIT;
1072:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_BLESS_MT_CFG_REG = regConfig;
1073:Generated_Source\PSoC4/CyLib.c **** 
1074:Generated_Source\PSoC4/CyLib.c ****                 while(0u == ((CY_SYS_BLESS_BLERD_ACTIVE_INTR_STAT & CY_SYS_BLESS_INTR_STAT_REG)))
1075:Generated_Source\PSoC4/CyLib.c ****                 {
1076:Generated_Source\PSoC4/CyLib.c ****                     /* Wait until BLERD55 moves to active state */
1077:Generated_Source\PSoC4/CyLib.c ****                 }
1078:Generated_Source\PSoC4/CyLib.c **** 
1079:Generated_Source\PSoC4/CyLib.c ****                 if(0u != (CY_SYS_BLESS_BLERD_ACTIVE_INTR_MASK & intrRegMaskStore))
1080:Generated_Source\PSoC4/CyLib.c ****                 {
1081:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_BLESS_INTR_MASK_REG |= CY_SYS_BLESS_BLERD_ACTIVE_INTR_MASK;
1082:Generated_Source\PSoC4/CyLib.c ****                 }
1083:Generated_Source\PSoC4/CyLib.c ****                 
1084:Generated_Source\PSoC4/CyLib.c ****                 /* Send write commands to RBUS */
1085:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_TX_FIFO_WR_REG = CY_SYS_RCB_RBUS_FREQ_NRST_SET;
1086:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_TX_FIFO_WR_REG = CY_SYS_RCB_RBUS_DIG_CLK_SET;
1087:Generated_Source\PSoC4/CyLib.c ****                 
1088:Generated_Source\PSoC4/CyLib.c ****                 #if (CY_SYS_BLE_CLK_ECO_FREQ_32MHZ == CYDEV_ECO_CLK_MHZ)
1089:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_RCB_TX_FIFO_WR_REG = CY_SYS_RCB_RBUS_FREQ_XTAL_DIV_SET;
1090:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_RCB_TX_FIFO_WR_REG = (CY_SYS_RCB_RBUS_RF_DCXO_CFG_SET | CY_SYS_RCB_RBUS_
1091:Generated_Source\PSoC4/CyLib.c ****                 #else
1092:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_RCB_TX_FIFO_WR_REG = CY_SYS_RCB_RBUS_FREQ_XTAL_NODIV_SET;
1093:Generated_Source\PSoC4/CyLib.c ****                 #endif
1094:Generated_Source\PSoC4/CyLib.c ****                 
1095:Generated_Source\PSoC4/CyLib.c ****                 intrRegMaskStore = CY_SYS_BLESS_INTR_MASK_REG;
1096:Generated_Source\PSoC4/CyLib.c ****                 if(0u != (CY_SYS_RCB_INTR_RCB_DONE & intrRegMaskStore))
1097:Generated_Source\PSoC4/CyLib.c ****                 {
1098:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_BLESS_INTR_MASK_REG &= ~(CY_SYS_RCB_INTR_RCB_DONE | CY_SYS_RCB_INTR_RCB_
1099:Generated_Source\PSoC4/CyLib.c ****                 }
1100:Generated_Source\PSoC4/CyLib.c ****                 
1101:Generated_Source\PSoC4/CyLib.c ****                 /* Send read commands to RBUS */
1102:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_TX_FIFO_WR_REG = (CY_SYS_RCB_RBUS_RD_CMD | 
1103:Generated_Source\PSoC4/CyLib.c ****                                             (CY_SYS_RCB_RBUS_RF_DCXO_CFG_SET & ~CY_SYS_RCB_RBUS_VAL
1104:Generated_Source\PSoC4/CyLib.c ****                                             
1105:Generated_Source\PSoC4/CyLib.c ****                 while (0u == (CY_SYS_RCB_INTR_RCB_RX_FIFO_NOT_EMPTY & CY_SYS_RCB_INTR_REG))
1106:Generated_Source\PSoC4/CyLib.c ****                 {
1107:Generated_Source\PSoC4/CyLib.c ****                     /* Wait until RX_FIFO_NOT_EMPTY state */
1108:Generated_Source\PSoC4/CyLib.c ****                 }
1109:Generated_Source\PSoC4/CyLib.c **** 
1110:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_INTR_REG |= CY_SYS_RCB_INTR_RCB_DONE;
1111:Generated_Source\PSoC4/CyLib.c ****                 
1112:Generated_Source\PSoC4/CyLib.c ****                 regConfig = CY_SYS_RCB_RX_FIFO_RD_REG & CY_SYS_RCB_RBUS_TRIM_MASK;
1113:Generated_Source\PSoC4/CyLib.c ****                 
1114:Generated_Source\PSoC4/CyLib.c ****                 /* Send write commands to RBUS */
1115:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_TX_FIFO_WR_REG = (CY_SYS_RCB_RBUS_RF_DCXO_CFG_SET | regConfig | CY_SYS_R
1116:Generated_Source\PSoC4/CyLib.c ****                 
1117:Generated_Source\PSoC4/CyLib.c ****                 while (0u == (CY_SYS_RCB_INTR_RCB_DONE & CY_SYS_RCB_INTR_REG))
1118:Generated_Source\PSoC4/CyLib.c ****                 {
1119:Generated_Source\PSoC4/CyLib.c ****                     /* Wait until RCB_DONE state */
1120:Generated_Source\PSoC4/CyLib.c ****                 }
1121:Generated_Source\PSoC4/CyLib.c ****                 
1122:Generated_Source\PSoC4/CyLib.c ****                 /* Clear Interrupt */
1123:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_INTR_REG = CY_SYS_RCB_INTR_CLEAR;
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\cc2xwxHk.s 			page 28


1124:Generated_Source\PSoC4/CyLib.c ****                 
1125:Generated_Source\PSoC4/CyLib.c ****                 if(0u != ((CY_SYS_RCB_INTR_RCB_DONE | CY_SYS_RCB_INTR_RCB_RX_FIFO_NOT_EMPTY) & intr
1126:Generated_Source\PSoC4/CyLib.c ****                 {
1127:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_BLESS_INTR_MASK_REG |= intrRegMaskStore;
1128:Generated_Source\PSoC4/CyLib.c ****                 }
1129:Generated_Source\PSoC4/CyLib.c ****                 
1130:Generated_Source\PSoC4/CyLib.c ****             }
1131:Generated_Source\PSoC4/CyLib.c ****         #else /* CY_IP_ECO_SRSSV2 */
1132:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_CONFIG_REG |= CY_SYS_CLK_ECO_CONFIG_ENABLE;
1133:Generated_Source\PSoC4/CyLib.c ****             CyDelayUs(CY_SYS_CLK_ECO_CONFIG_CLK_EN_TIMEOUT_US);
1134:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_CONFIG_REG |= CY_SYS_CLK_ECO_CONFIG_CLK_EN;
1135:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_ECO_BLESS) */
1136:Generated_Source\PSoC4/CyLib.c **** 
1137:Generated_Source\PSoC4/CyLib.c ****         if(timeoutUs > 0u)
1138:Generated_Source\PSoC4/CyLib.c ****         {
1139:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_TIMEOUT;
1140:Generated_Source\PSoC4/CyLib.c **** 
1141:Generated_Source\PSoC4/CyLib.c ****             for( ; timeoutUs > 0u; timeoutUs--)
1142:Generated_Source\PSoC4/CyLib.c ****             {
1143:Generated_Source\PSoC4/CyLib.c ****                 CyDelayUs(1u);
1144:Generated_Source\PSoC4/CyLib.c **** 
1145:Generated_Source\PSoC4/CyLib.c ****                 if(0u != CySysClkEcoReadStatus())
1146:Generated_Source\PSoC4/CyLib.c ****                 {
1147:Generated_Source\PSoC4/CyLib.c ****                     returnStatus = CYRET_SUCCESS;
1148:Generated_Source\PSoC4/CyLib.c ****                     break;
1149:Generated_Source\PSoC4/CyLib.c ****                 }
1150:Generated_Source\PSoC4/CyLib.c ****             }
1151:Generated_Source\PSoC4/CyLib.c **** 
1152:Generated_Source\PSoC4/CyLib.c ****         }
1153:Generated_Source\PSoC4/CyLib.c **** 
1154:Generated_Source\PSoC4/CyLib.c ****         return(returnStatus);
1155:Generated_Source\PSoC4/CyLib.c ****     }
1156:Generated_Source\PSoC4/CyLib.c **** 
1157:Generated_Source\PSoC4/CyLib.c **** 
1158:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1159:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkEcoStop
1160:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1161:Generated_Source\PSoC4/CyLib.c ****     *
1162:Generated_Source\PSoC4/CyLib.c ****     * Stops the megahertz crystal.
1163:Generated_Source\PSoC4/CyLib.c ****     *
1164:Generated_Source\PSoC4/CyLib.c ****     * If ECO is disabled when it is sourcing HFCLK, the CPU will halt. In addition,
1165:Generated_Source\PSoC4/CyLib.c ****     * for PSoC 4100 BLE / PSoC 4200 BLE devices, the BLE sub-system will stop
1166:Generated_Source\PSoC4/CyLib.c ****     * functioning.
1167:Generated_Source\PSoC4/CyLib.c ****     *
1168:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1169:Generated_Source\PSoC4/CyLib.c ****     void CySysClkEcoStop(void)
1170:Generated_Source\PSoC4/CyLib.c ****     {
1171:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_WCO_BLESS)
1172:Generated_Source\PSoC4/CyLib.c ****             /* Disable the RF oscillator band gap */
1173:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLESS_RF_CONFIG_REG &= (uint32) ~CY_SYS_XTAL_BLESS_RF_CONFIG_RF_ENABLE;
1174:Generated_Source\PSoC4/CyLib.c **** 
1175:Generated_Source\PSoC4/CyLib.c ****             /* Disable the Crystal */
1176:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLERD_DBUS_REG &= (uint32) ~CY_SYS_XTAL_BLERD_DBUS_XTAL_ENABLE;
1177:Generated_Source\PSoC4/CyLib.c ****         #elif (CY_IP_ECO_BLESSV3)
1178:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_BLESS_MT_CFG_REG &= ~(CY_SYS_BLESS_MT_CFG_DPSLP_ECO_ON  <<  CYFLD_BLE_BLESS_DPSL
1179:Generated_Source\PSoC4/CyLib.c ****         #else
1180:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_CONFIG_REG &= (uint32) ~(CY_SYS_CLK_ECO_CONFIG_ENABLE | CY_SYS_CLK_ECO_C
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\cc2xwxHk.s 			page 29


1181:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_WCO_BLESS) */
1182:Generated_Source\PSoC4/CyLib.c ****     }
1183:Generated_Source\PSoC4/CyLib.c **** 
1184:Generated_Source\PSoC4/CyLib.c **** 
1185:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1186:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkEcoReadStatus
1187:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1188:Generated_Source\PSoC4/CyLib.c ****     *
1189:Generated_Source\PSoC4/CyLib.c ****     * Reads the status bit for the megahertz crystal.
1190:Generated_Source\PSoC4/CyLib.c ****     *
1191:Generated_Source\PSoC4/CyLib.c ****     * For PSoC 4100 BLE / PSoC 4200 BLE devices, the status bit is the
1192:Generated_Source\PSoC4/CyLib.c ****     * XO_AMP_DETECT bit in FSM register.
1193:Generated_Source\PSoC4/CyLib.c ****     *
1194:Generated_Source\PSoC4/CyLib.c ****     * For PSoC 4200L devices, the error status bit is the WATCHDOG_ERROR bit in
1195:Generated_Source\PSoC4/CyLib.c ****     * ECO_STATUS register.
1196:Generated_Source\PSoC4/CyLib.c ****     *
1197:Generated_Source\PSoC4/CyLib.c ****     * \return PSoC 4100 BLE/PSoC 4200 BLE: Non-zero indicates that ECO output
1198:Generated_Source\PSoC4/CyLib.c ****     * reached 50 ppm and is oscillating in valid range.
1199:Generated_Source\PSoC4/CyLib.c ****     *
1200:Generated_Source\PSoC4/CyLib.c ****     * \return PSoC 4200L: Non-zero indicates that ECO is running.
1201:Generated_Source\PSoC4/CyLib.c ****     *
1202:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1203:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkEcoReadStatus(void)
1204:Generated_Source\PSoC4/CyLib.c ****     {
1205:Generated_Source\PSoC4/CyLib.c ****         uint32 returnValue;
1206:Generated_Source\PSoC4/CyLib.c **** 
1207:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_WCO_BLESS)
1208:Generated_Source\PSoC4/CyLib.c ****             returnValue = CY_SYS_XTAL_BLERD_FSM_REG & CY_SYS_XTAL_BLERD_FSM_XO_AMP_DETECT;
1209:Generated_Source\PSoC4/CyLib.c ****         #elif (CY_IP_ECO_BLESSV3)
1210:Generated_Source\PSoC4/CyLib.c ****             returnValue = (CY_SYS_BLESS_MT_STATUS_REG & CY_SYS_BLESS_MT_STATUS_CURR_STATE_MASK) >> 
1211:Generated_Source\PSoC4/CyLib.c **** 
1212:Generated_Source\PSoC4/CyLib.c ****             returnValue =  ((CY_SYS_BLESS_MT_STATUS_BLERD_IDLE == returnValue) || 
1213:Generated_Source\PSoC4/CyLib.c ****                             (CY_SYS_BLESS_MT_STATUS_SWITCH_EN  == returnValue) ||
1214:Generated_Source\PSoC4/CyLib.c ****                             (CY_SYS_BLESS_MT_STATUS_ACTIVE  ==  returnValue) ||
1215:Generated_Source\PSoC4/CyLib.c ****                             (CY_SYS_BLESS_MT_STATUS_ISOLATE == returnValue));
1216:Generated_Source\PSoC4/CyLib.c ****         #else
1217:Generated_Source\PSoC4/CyLib.c ****             returnValue = (0u != (CY_SYS_CLK_ECO_STATUS_REG & CY_SYS_CLK_ECO_STATUS_WATCHDOG_ERROR)
1218:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_WCO_BLESS) */
1219:Generated_Source\PSoC4/CyLib.c **** 
1220:Generated_Source\PSoC4/CyLib.c ****         return (returnValue);
1221:Generated_Source\PSoC4/CyLib.c ****     }
1222:Generated_Source\PSoC4/CyLib.c **** 
1223:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_ECO_BLESS || CY_IP_ECO_BLESSV3)
1224:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
1225:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkWriteEcoDiv
1226:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
1227:Generated_Source\PSoC4/CyLib.c ****         *
1228:Generated_Source\PSoC4/CyLib.c ****         * Selects value for the ECO divider.
1229:Generated_Source\PSoC4/CyLib.c ****         *
1230:Generated_Source\PSoC4/CyLib.c ****         * The ECO must not be the HFCLK clock source when this function is called.
1231:Generated_Source\PSoC4/CyLib.c ****         * The HFCLK source can be changed to the other clock source by call to the
1232:Generated_Source\PSoC4/CyLib.c ****         * CySysClkWriteHfclkDirect() function. If the ECO sources the HFCLK this
1233:Generated_Source\PSoC4/CyLib.c ****         * function will not have any effect if compiler in release mode, and halt the
1234:Generated_Source\PSoC4/CyLib.c ****         * CPU when compiler in debug mode.
1235:Generated_Source\PSoC4/CyLib.c ****         *
1236:Generated_Source\PSoC4/CyLib.c ****         * If the SYSCLK clock frequency increases during the device operation, call
1237:Generated_Source\PSoC4/CyLib.c ****         * CySysFlashSetWaitCycles() with the appropriate parameter to adjust the number
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\cc2xwxHk.s 			page 30


1238:Generated_Source\PSoC4/CyLib.c ****         * of clock cycles the cache will wait before sampling data comes back from
1239:Generated_Source\PSoC4/CyLib.c ****         * Flash. If the SYSCLK clock frequency decreases, you can call
1240:Generated_Source\PSoC4/CyLib.c ****         * CySysFlashSetWaitCycles() to improve the CPU performance. See
1241:Generated_Source\PSoC4/CyLib.c ****         * CySysFlashSetWaitCycles() description for more information.
1242:Generated_Source\PSoC4/CyLib.c ****         *
1243:Generated_Source\PSoC4/CyLib.c ****         * \param divider Power of 2 divider selection.
1244:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_DIV1
1245:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_DIV2
1246:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_DIV4
1247:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_DIV8
1248:Generated_Source\PSoC4/CyLib.c ****         *
1249:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
1250:Generated_Source\PSoC4/CyLib.c ****         void CySysClkWriteEcoDiv(uint32 divider)
1251:Generated_Source\PSoC4/CyLib.c ****         {
1252:Generated_Source\PSoC4/CyLib.c ****             uint8  interruptState;
1253:Generated_Source\PSoC4/CyLib.c **** 
1254:Generated_Source\PSoC4/CyLib.c ****             if (CY_SYS_CLK_HFCLK_ECO != (CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_DIRECT_SEL_MASK)
1255:Generated_Source\PSoC4/CyLib.c ****             {
1256:Generated_Source\PSoC4/CyLib.c ****                 interruptState = CyEnterCriticalSection();
1257:Generated_Source\PSoC4/CyLib.c **** 
1258:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_XTAL_CLK_DIV_CONFIG_REG =  (divider & CY_SYS_CLK_XTAL_CLK_DIV_MASK) |
1259:Generated_Source\PSoC4/CyLib.c ****                                                       (CY_SYS_CLK_XTAL_CLK_DIV_CONFIG_REG & ((uint3
1260:Generated_Source\PSoC4/CyLib.c **** 
1261:Generated_Source\PSoC4/CyLib.c ****                 CyExitCriticalSection(interruptState);
1262:Generated_Source\PSoC4/CyLib.c ****             }
1263:Generated_Source\PSoC4/CyLib.c ****             else
1264:Generated_Source\PSoC4/CyLib.c ****             {
1265:Generated_Source\PSoC4/CyLib.c ****                 /* Halt CPU in debug mode if ECO sources HFCLK */
1266:Generated_Source\PSoC4/CyLib.c ****                 CYASSERT(0u != 0u);
1267:Generated_Source\PSoC4/CyLib.c ****             }
1268:Generated_Source\PSoC4/CyLib.c ****         }
1269:Generated_Source\PSoC4/CyLib.c **** 
1270:Generated_Source\PSoC4/CyLib.c ****     #else
1271:Generated_Source\PSoC4/CyLib.c **** 
1272:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
1273:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkConfigureEcoTrim
1274:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
1275:Generated_Source\PSoC4/CyLib.c ****         *
1276:Generated_Source\PSoC4/CyLib.c ****         * Selects trim setting values for ECO. This API is available only for PSoC
1277:Generated_Source\PSoC4/CyLib.c ****         * 4200L devices only.
1278:Generated_Source\PSoC4/CyLib.c ****         *
1279:Generated_Source\PSoC4/CyLib.c ****         * The following parameters can be trimmed for ECO. The affected registers are
1280:Generated_Source\PSoC4/CyLib.c ****         * ECO_TRIM0 and ECO_TRIM1.
1281:Generated_Source\PSoC4/CyLib.c ****         *
1282:Generated_Source\PSoC4/CyLib.c ****         * Watchdog trim - This bit field sets the error threshold below the steady
1283:Generated_Source\PSoC4/CyLib.c ****         * state amplitude level.
1284:Generated_Source\PSoC4/CyLib.c ****         *
1285:Generated_Source\PSoC4/CyLib.c ****         * Amplitude trim - This bit field is to set the crystal drive level when
1286:Generated_Source\PSoC4/CyLib.c ****         * ECO_CONFIG.AGC_EN = 1. WARNING: use care when setting this field because
1287:Generated_Source\PSoC4/CyLib.c ****         * driving a crystal beyond its rated limit can permanently damage the crystal.
1288:Generated_Source\PSoC4/CyLib.c ****         *
1289:Generated_Source\PSoC4/CyLib.c ****         * Filter frequency trim - This bit field sets LPF frequency trim and affects
1290:Generated_Source\PSoC4/CyLib.c ****         * the 3rd harmonic content.
1291:Generated_Source\PSoC4/CyLib.c ****         *
1292:Generated_Source\PSoC4/CyLib.c ****         * Feedback resistor trim - This bit field sets the feedback resistor trim and
1293:Generated_Source\PSoC4/CyLib.c ****         * impacts the oscillation amplitude.
1294:Generated_Source\PSoC4/CyLib.c ****         *
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\cc2xwxHk.s 			page 31


1295:Generated_Source\PSoC4/CyLib.c ****         * Amplifier gain trim - This bit field sets the amplifier gain trim and affects
1296:Generated_Source\PSoC4/CyLib.c ****         * the startup time of the crystal.
1297:Generated_Source\PSoC4/CyLib.c ****         *
1298:Generated_Source\PSoC4/CyLib.c ****         * Use care when setting the amplitude trim field because driving a crystal
1299:Generated_Source\PSoC4/CyLib.c ****         * beyond its rated limit can permanently damage the crystal.
1300:Generated_Source\PSoC4/CyLib.c ****         *
1301:Generated_Source\PSoC4/CyLib.c ****         * \param wDTrim: Watchdog trim
1302:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_WDTRIM0      Error threshold is 0.05 V
1303:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_WDTRIM1      Error threshold is 0.10 V
1304:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_WDTRIM2      Error threshold is 0.15 V
1305:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_WDTRIM3      Error threshold is 0.20 V
1306:Generated_Source\PSoC4/CyLib.c ****         *
1307:Generated_Source\PSoC4/CyLib.c ****         * \param aTrim: Amplitude trim
1308:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM0       Amplitude is 0.3 Vpp
1309:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM1       Amplitude is 0.4 Vpp
1310:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM2       Amplitude is 0.5 Vpp
1311:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM3       Amplitude is 0.6 Vpp
1312:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM4       Amplitude is 0.7 Vpp
1313:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM5       Amplitude is 0.8 Vpp
1314:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM6       Amplitude is 0.9 Vpp
1315:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM7       Amplitude is 1.0 Vpp
1316:Generated_Source\PSoC4/CyLib.c ****         *
1317:Generated_Source\PSoC4/CyLib.c ****         * \param fTrim: Filter frequency trim
1318:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_FTRIM0       Crystal frequency > 30 MHz
1319:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_FTRIM1       24 MHz < Crystal frequency <= 30 MHz
1320:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_FTRIM2       17 MHz < Crystal frequency <= 24 MHz
1321:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_FTRIM3       Crystal frequency <= 17 MHz
1322:Generated_Source\PSoC4/CyLib.c ****         *
1323:Generated_Source\PSoC4/CyLib.c ****         * \param rTrim: Feedback resistor trim
1324:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_RTRIM0       Crystal frequency > 30 MHz
1325:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_RTRIM1       24 MHz < Crystal frequency <= 30 MHz
1326:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_RTRIM2       17 MHz < Crystal frequency <= 24 MHz
1327:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_RTRIM3       Crystal frequency <= 17 MHz
1328:Generated_Source\PSoC4/CyLib.c ****         *
1329:Generated_Source\PSoC4/CyLib.c ****         * \param gTrim: Amplifier gain trim. Calculate the minimum required gm
1330:Generated_Source\PSoC4/CyLib.c ****         * (trans-conductance value). Divide the calculated gm value by 4.5 to
1331:Generated_Source\PSoC4/CyLib.c ****         * obtain an integer value 'result'. For more information please refer
1332:Generated_Source\PSoC4/CyLib.c ****         * to the device TRM.
1333:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_GTRIM0       If result = 1
1334:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_GTRIM1       If result = 0
1335:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_GTRIM2       If result = 2
1336:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_GTRIM2       If result = 3
1337:Generated_Source\PSoC4/CyLib.c ****         *
1338:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
1339:Generated_Source\PSoC4/CyLib.c ****         void CySysClkConfigureEcoTrim(uint32 wDTrim, uint32 aTrim, uint32 fTrim, uint32 rTrim, uint
1340:Generated_Source\PSoC4/CyLib.c ****         {
1341:Generated_Source\PSoC4/CyLib.c ****             uint8  interruptState;
1342:Generated_Source\PSoC4/CyLib.c ****             uint32 regTmp;
1343:Generated_Source\PSoC4/CyLib.c **** 
1344:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
1345:Generated_Source\PSoC4/CyLib.c **** 
1346:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_ECO_TRIM0_REG & ~(CY_SYS_CLK_ECO_TRIM0_WDTRIM_MASK | CY_SYS_CLK_EC
1347:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (wDTrim << CY_SYS_CLK_ECO_TRIM0_WDTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM
1348:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (aTrim << CY_SYS_CLK_ECO_TRIM0_ATRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM0_
1349:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_TRIM0_REG = regTmp;
1350:Generated_Source\PSoC4/CyLib.c **** 
1351:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_ECO_TRIM1_REG & ~(CY_SYS_CLK_ECO_TRIM1_FTRIM_MASK |
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\cc2xwxHk.s 			page 32


1352:Generated_Source\PSoC4/CyLib.c ****                                                    CY_SYS_CLK_ECO_TRIM1_RTRIM_MASK |
1353:Generated_Source\PSoC4/CyLib.c ****                                                    CY_SYS_CLK_ECO_TRIM1_GTRIM_MASK);
1354:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (fTrim << CY_SYS_CLK_ECO_TRIM1_FTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM1_
1355:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (rTrim << CY_SYS_CLK_ECO_TRIM1_RTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM1_
1356:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (gTrim << CY_SYS_CLK_ECO_TRIM1_GTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM1_
1357:Generated_Source\PSoC4/CyLib.c **** 
1358:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_TRIM1_REG = regTmp;
1359:Generated_Source\PSoC4/CyLib.c **** 
1360:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1361:Generated_Source\PSoC4/CyLib.c ****         }
1362:Generated_Source\PSoC4/CyLib.c **** 
1363:Generated_Source\PSoC4/CyLib.c **** 
1364:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
1365:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkConfigureEcoDrive
1366:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
1367:Generated_Source\PSoC4/CyLib.c ****         *
1368:Generated_Source\PSoC4/CyLib.c ****         * Selects trim setting values for ECO based on crystal parameters. Use care
1369:Generated_Source\PSoC4/CyLib.c ****         * when setting the driveLevel parameter because driving a crystal beyond its
1370:Generated_Source\PSoC4/CyLib.c ****         * rated limit can permanently damage the crystal.
1371:Generated_Source\PSoC4/CyLib.c ****         *
1372:Generated_Source\PSoC4/CyLib.c ****         * This API is available only for PSoC 4200L devices only.
1373:Generated_Source\PSoC4/CyLib.c ****         *
1374:Generated_Source\PSoC4/CyLib.c ****         * \param freq Frequency of the crystal in kHz.
1375:Generated_Source\PSoC4/CyLib.c ****         * \param cLoad Crystal load capacitance in pF.
1376:Generated_Source\PSoC4/CyLib.c ****         * \param esr Equivalent series resistance of the crystal in ohm.
1377:Generated_Source\PSoC4/CyLib.c ****         *  maxAmplitude: maximum amplitude level in mV. Calculate as
1378:Generated_Source\PSoC4/CyLib.c ****         *  ((sqrt(driveLevel in uW / 2 / esr))/(3.14 * freq * cLoad)) * 10^9.
1379:Generated_Source\PSoC4/CyLib.c ****         *
1380:Generated_Source\PSoC4/CyLib.c ****         *  The Automatic Gain Control (AGC) is disabled when the specified maximum
1381:Generated_Source\PSoC4/CyLib.c ****         *  amplitude level equals or above 2. In this case the amplitude is not
1382:Generated_Source\PSoC4/CyLib.c ****         *  explicitly controlled and will grow until it saturates to the supply rail
1383:Generated_Source\PSoC4/CyLib.c ****         *  (1.8V nom). WARNING: use care when disabling AGC because driving a crystal
1384:Generated_Source\PSoC4/CyLib.c ****         *  beyond its rated limit can permanently damage the crystal.
1385:Generated_Source\PSoC4/CyLib.c ****         *
1386:Generated_Source\PSoC4/CyLib.c ****         * \return \ref CYRET_SUCCESS ECO configuration completed successfully.
1387:Generated_Source\PSoC4/CyLib.c ****         * \return \ref CYRET_BAD_PARAM One or more invalid parameters.
1388:Generated_Source\PSoC4/CyLib.c ****         *
1389:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
1390:Generated_Source\PSoC4/CyLib.c ****         cystatus CySysClkConfigureEcoDrive(uint32 freq, uint32 cLoad, uint32 esr, uint32 maxAmplitu
1391:Generated_Source\PSoC4/CyLib.c ****         {
1392:Generated_Source\PSoC4/CyLib.c ****             cystatus returnStatus = CYRET_SUCCESS;
1393:Generated_Source\PSoC4/CyLib.c **** 
1394:Generated_Source\PSoC4/CyLib.c ****             uint32 wDTrim;
1395:Generated_Source\PSoC4/CyLib.c ****             uint32 aTrim;
1396:Generated_Source\PSoC4/CyLib.c ****             uint32 fTrim;
1397:Generated_Source\PSoC4/CyLib.c ****             uint32 rTrim;
1398:Generated_Source\PSoC4/CyLib.c ****             uint32 gTrim;
1399:Generated_Source\PSoC4/CyLib.c **** 
1400:Generated_Source\PSoC4/CyLib.c ****             uint32 gmMin;
1401:Generated_Source\PSoC4/CyLib.c **** 
1402:Generated_Source\PSoC4/CyLib.c **** 
1403:Generated_Source\PSoC4/CyLib.c ****             if ((maxAmplitude < CY_SYS_CLK_ECO_MAX_AMPL_MIN_mV) ||
1404:Generated_Source\PSoC4/CyLib.c ****                 (freq < CY_SYS_CLK_ECO_FREQ_KHZ_MIN) || (freq > CY_SYS_CLK_ECO_FREQ_KHZ_MAX))
1405:Generated_Source\PSoC4/CyLib.c ****             {
1406:Generated_Source\PSoC4/CyLib.c ****                 returnStatus = CYRET_BAD_PARAM;
1407:Generated_Source\PSoC4/CyLib.c ****             }
1408:Generated_Source\PSoC4/CyLib.c ****             else
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\cc2xwxHk.s 			page 33


1409:Generated_Source\PSoC4/CyLib.c ****             {
1410:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate amplitude trim */
1411:Generated_Source\PSoC4/CyLib.c ****                 aTrim = (maxAmplitude < CY_SYS_CLK_ECO_TRIM_BOUNDARY) ? ((maxAmplitude/100u) - 4u) 
1412:Generated_Source\PSoC4/CyLib.c **** 
1413:Generated_Source\PSoC4/CyLib.c ****                 if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM0)
1414:Generated_Source\PSoC4/CyLib.c ****                 {
1415:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM0;
1416:Generated_Source\PSoC4/CyLib.c ****                 }
1417:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM1)
1418:Generated_Source\PSoC4/CyLib.c ****                 {
1419:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM1;
1420:Generated_Source\PSoC4/CyLib.c ****                 }
1421:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM2)
1422:Generated_Source\PSoC4/CyLib.c ****                 {
1423:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM2;
1424:Generated_Source\PSoC4/CyLib.c ****                 }
1425:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM3)
1426:Generated_Source\PSoC4/CyLib.c ****                 {
1427:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM3;
1428:Generated_Source\PSoC4/CyLib.c ****                 }
1429:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM4)
1430:Generated_Source\PSoC4/CyLib.c ****                 {
1431:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM4;
1432:Generated_Source\PSoC4/CyLib.c ****                 }
1433:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM5)
1434:Generated_Source\PSoC4/CyLib.c ****                 {
1435:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM5;
1436:Generated_Source\PSoC4/CyLib.c ****                 }
1437:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM6)
1438:Generated_Source\PSoC4/CyLib.c ****                 {
1439:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM6;
1440:Generated_Source\PSoC4/CyLib.c ****                 }
1441:Generated_Source\PSoC4/CyLib.c ****                 else
1442:Generated_Source\PSoC4/CyLib.c ****                 {
1443:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM7;
1444:Generated_Source\PSoC4/CyLib.c ****                 }
1445:Generated_Source\PSoC4/CyLib.c **** 
1446:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate Watchdog trim. */
1447:Generated_Source\PSoC4/CyLib.c ****                 wDTrim = (maxAmplitude < CY_SYS_CLK_ECO_TRIM_BOUNDARY) ? ((maxAmplitude/200u) - 2u)
1448:Generated_Source\PSoC4/CyLib.c **** 
1449:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate amplifier gain trim. */
1450:Generated_Source\PSoC4/CyLib.c ****                 gmMin = (uint32) (((((CY_SYS_CLK_ECO_GMMIN_COEFFICIENT * freq * cLoad) / 1000) * ((
1451:Generated_Source\PSoC4/CyLib.c ****                 if (gmMin > 3u)
1452:Generated_Source\PSoC4/CyLib.c ****                 {
1453:Generated_Source\PSoC4/CyLib.c ****                     returnStatus = CYRET_BAD_PARAM;
1454:Generated_Source\PSoC4/CyLib.c ****                     gTrim = 0u;
1455:Generated_Source\PSoC4/CyLib.c ****                 }
1456:Generated_Source\PSoC4/CyLib.c ****                 else if (gmMin > 1u)
1457:Generated_Source\PSoC4/CyLib.c ****                 {
1458:Generated_Source\PSoC4/CyLib.c ****                     gTrim = gmMin;
1459:Generated_Source\PSoC4/CyLib.c ****                 }
1460:Generated_Source\PSoC4/CyLib.c ****                 else
1461:Generated_Source\PSoC4/CyLib.c ****                 {
1462:Generated_Source\PSoC4/CyLib.c ****                     gTrim = (gmMin == 1u) ? 0u : 1u;
1463:Generated_Source\PSoC4/CyLib.c ****                 }
1464:Generated_Source\PSoC4/CyLib.c **** 
1465:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate feedback resistor trim */
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\cc2xwxHk.s 			page 34


1466:Generated_Source\PSoC4/CyLib.c ****                 if (freq > CY_SYS_CLK_ECO_FREQ_FOR_FTRIM0)
1467:Generated_Source\PSoC4/CyLib.c ****                 {
1468:Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM0;
1469:Generated_Source\PSoC4/CyLib.c ****                 }
1470:Generated_Source\PSoC4/CyLib.c ****                 else if (freq > CY_SYS_CLK_ECO_FREQ_FOR_FTRIM1)
1471:Generated_Source\PSoC4/CyLib.c ****                 {
1472:Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM1;
1473:Generated_Source\PSoC4/CyLib.c ****                 }
1474:Generated_Source\PSoC4/CyLib.c ****                 else if (freq > CY_SYS_CLK_ECO_FREQ_FOR_FTRIM2)
1475:Generated_Source\PSoC4/CyLib.c ****                 {
1476:Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM2;
1477:Generated_Source\PSoC4/CyLib.c ****                 }
1478:Generated_Source\PSoC4/CyLib.c ****                 else
1479:Generated_Source\PSoC4/CyLib.c ****                 {
1480:Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM3;
1481:Generated_Source\PSoC4/CyLib.c ****                 }
1482:Generated_Source\PSoC4/CyLib.c **** 
1483:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate filter frequency trim */
1484:Generated_Source\PSoC4/CyLib.c ****                 fTrim = rTrim;
1485:Generated_Source\PSoC4/CyLib.c **** 
1486:Generated_Source\PSoC4/CyLib.c ****                 CySysClkConfigureEcoTrim(wDTrim, aTrim, fTrim, rTrim, gTrim);
1487:Generated_Source\PSoC4/CyLib.c **** 
1488:Generated_Source\PSoC4/CyLib.c ****                 /* Automatic Gain Control (AGC) enable */
1489:Generated_Source\PSoC4/CyLib.c ****                 if (maxAmplitude < 2u)
1490:Generated_Source\PSoC4/CyLib.c ****                 {
1491:Generated_Source\PSoC4/CyLib.c ****                     /* The oscillation amplitude is controlled to the level selected by amplitude t
1492:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_CLK_ECO_CONFIG_REG |= CY_SYS_CLK_ECO_CONFIG_AGC_EN;
1493:Generated_Source\PSoC4/CyLib.c ****                 }
1494:Generated_Source\PSoC4/CyLib.c ****                 else
1495:Generated_Source\PSoC4/CyLib.c ****                 {
1496:Generated_Source\PSoC4/CyLib.c ****                     /* The amplitude is not explicitly controlled and will grow until it saturates 
1497:Generated_Source\PSoC4/CyLib.c ****                     * supply rail (1.8V nom).
1498:Generated_Source\PSoC4/CyLib.c ****                     */
1499:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_CLK_ECO_CONFIG_REG &= (uint32) ~CY_SYS_CLK_ECO_CONFIG_AGC_EN;
1500:Generated_Source\PSoC4/CyLib.c ****                 }
1501:Generated_Source\PSoC4/CyLib.c ****             }
1502:Generated_Source\PSoC4/CyLib.c **** 
1503:Generated_Source\PSoC4/CyLib.c ****             return (returnStatus);
1504:Generated_Source\PSoC4/CyLib.c ****         }
1505:Generated_Source\PSoC4/CyLib.c **** 
1506:Generated_Source\PSoC4/CyLib.c ****     #endif /* CY_IP_ECO_BLESS */
1507:Generated_Source\PSoC4/CyLib.c **** 
1508:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_ECO) */
1509:Generated_Source\PSoC4/CyLib.c **** 
1510:Generated_Source\PSoC4/CyLib.c **** 
1511:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_SRSSV2 && CY_IP_PLL)
1512:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1513:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllStart
1514:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1515:Generated_Source\PSoC4/CyLib.c ****     *
1516:Generated_Source\PSoC4/CyLib.c ****     * Enables the PLL. Optionally waits for it to become stable. Waits at least
1517:Generated_Source\PSoC4/CyLib.c ****     * 250 us or until it is detected that the PLL is stable.
1518:Generated_Source\PSoC4/CyLib.c ****     *
1519:Generated_Source\PSoC4/CyLib.c ****     * Clears the unlock occurred status bit by calling CySysClkPllGetUnlockStatus(),
1520:Generated_Source\PSoC4/CyLib.c ****     * once the PLL is locked if the wait parameter is 1).
1521:Generated_Source\PSoC4/CyLib.c ****     *
1522:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L devices.
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\cc2xwxHk.s 			page 35


1523:Generated_Source\PSoC4/CyLib.c ****     *
1524:Generated_Source\PSoC4/CyLib.c ****     * \param PLL:
1525:Generated_Source\PSoC4/CyLib.c ****     * 0   PLL#0
1526:Generated_Source\PSoC4/CyLib.c ****     * 1   PLL#1
1527:Generated_Source\PSoC4/CyLib.c ****     *
1528:Generated_Source\PSoC4/CyLib.c ****     * \param wait:
1529:Generated_Source\PSoC4/CyLib.c ****     * 0 - Return immediately after configuration.
1530:Generated_Source\PSoC4/CyLib.c ****     * 1 - Wait for PLL lock or timeout. This API shall use the CyDelayUs() to
1531:Generated_Source\PSoC4/CyLib.c ****     * implement the timeout feature.
1532:Generated_Source\PSoC4/CyLib.c ****     *
1533:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_SUCCESS Completed successfully.
1534:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_TIMEOUT The timeout occurred without detecting a stable clock.
1535:Generated_Source\PSoC4/CyLib.c ****     * If the input source of the clock is jittery, then the lock indication may
1536:Generated_Source\PSoC4/CyLib.c ****     * not occur. However, after the timeout has expired, the generated PLL clock can
1537:Generated_Source\PSoC4/CyLib.c ****     * still be used.
1538:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_BAD_PARAM - Either the PLL or wait parameter is invalid.
1539:Generated_Source\PSoC4/CyLib.c ****     *
1540:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1541:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllStart(uint32 pll, uint32 wait)
1542:Generated_Source\PSoC4/CyLib.c ****     {
1543:Generated_Source\PSoC4/CyLib.c ****         uint32 counts = CY_SYS_CLK_PLL_MAX_STARTUP_US;
1544:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1545:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_SUCCESS;
1546:Generated_Source\PSoC4/CyLib.c **** 
1547:Generated_Source\PSoC4/CyLib.c ****         if((pll < CY_IP_PLL_NR) && (wait <= 1u))
1548:Generated_Source\PSoC4/CyLib.c ****         {
1549:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
1550:Generated_Source\PSoC4/CyLib.c **** 
1551:Generated_Source\PSoC4/CyLib.c ****             /* Isolate PLL outputs */
1552:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config &= (uint32) ~CY_SYS_CLK_PLL_CONFIG_ISOLATE;
1553:Generated_Source\PSoC4/CyLib.c **** 
1554:Generated_Source\PSoC4/CyLib.c ****             /* Enable PLL */
1555:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config |= CY_SYS_CLK_PLL_CONFIG_ENABLE;
1556:Generated_Source\PSoC4/CyLib.c **** 
1557:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1558:Generated_Source\PSoC4/CyLib.c **** 
1559:Generated_Source\PSoC4/CyLib.c ****             /* De-isolate >= CY_SYS_CLK_PLL_MIN_STARTUP_US after PLL enabled */
1560:Generated_Source\PSoC4/CyLib.c ****             CyDelayUs(CY_SYS_CLK_PLL_MIN_STARTUP_US);
1561:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
1562:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config |= CY_SYS_CLK_PLL_CONFIG_ISOLATE;
1563:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1564:Generated_Source\PSoC4/CyLib.c **** 
1565:Generated_Source\PSoC4/CyLib.c ****             if(wait != 0u)
1566:Generated_Source\PSoC4/CyLib.c ****             {
1567:Generated_Source\PSoC4/CyLib.c ****                 returnStatus = CYRET_TIMEOUT;
1568:Generated_Source\PSoC4/CyLib.c **** 
1569:Generated_Source\PSoC4/CyLib.c ****                 while(0u != counts)
1570:Generated_Source\PSoC4/CyLib.c ****                 {
1571:Generated_Source\PSoC4/CyLib.c **** 
1572:Generated_Source\PSoC4/CyLib.c ****                     if(0u != CySysClkPllGetLockStatus(pll))
1573:Generated_Source\PSoC4/CyLib.c ****                     {
1574:Generated_Source\PSoC4/CyLib.c ****                         returnStatus = CYRET_SUCCESS;
1575:Generated_Source\PSoC4/CyLib.c ****                         (void) CySysClkPllGetUnlockStatus(pll);
1576:Generated_Source\PSoC4/CyLib.c ****                         break;
1577:Generated_Source\PSoC4/CyLib.c ****                     }
1578:Generated_Source\PSoC4/CyLib.c **** 
1579:Generated_Source\PSoC4/CyLib.c ****                     CyDelayUs(1u);
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\cc2xwxHk.s 			page 36


1580:Generated_Source\PSoC4/CyLib.c ****                     counts--;
1581:Generated_Source\PSoC4/CyLib.c ****                 }
1582:Generated_Source\PSoC4/CyLib.c ****             }
1583:Generated_Source\PSoC4/CyLib.c ****         }
1584:Generated_Source\PSoC4/CyLib.c ****         else
1585:Generated_Source\PSoC4/CyLib.c ****         {
1586:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_BAD_PARAM;
1587:Generated_Source\PSoC4/CyLib.c ****         }
1588:Generated_Source\PSoC4/CyLib.c **** 
1589:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1590:Generated_Source\PSoC4/CyLib.c ****     }
1591:Generated_Source\PSoC4/CyLib.c **** 
1592:Generated_Source\PSoC4/CyLib.c **** 
1593:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1594:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllGetLockStatus
1595:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1596:Generated_Source\PSoC4/CyLib.c ****     *
1597:Generated_Source\PSoC4/CyLib.c ****     * Returns non-zero if the output of the specified PLL output is locked.
1598:Generated_Source\PSoC4/CyLib.c ****     *
1599:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L devices.
1600:Generated_Source\PSoC4/CyLib.c ****     *
1601:Generated_Source\PSoC4/CyLib.c ****     * PLL:
1602:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1603:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1
1604:Generated_Source\PSoC4/CyLib.c ****     *
1605:Generated_Source\PSoC4/CyLib.c ****     * \return A non-zero value when the specified PLL is locked.
1606:Generated_Source\PSoC4/CyLib.c ****     *
1607:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1608:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkPllGetLockStatus(uint32 pll)
1609:Generated_Source\PSoC4/CyLib.c ****     {
1610:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1611:Generated_Source\PSoC4/CyLib.c ****         uint32 returnStatus;
1612:Generated_Source\PSoC4/CyLib.c **** 
1613:Generated_Source\PSoC4/CyLib.c ****         CYASSERT(pll < CY_IP_PLL_NR);
1614:Generated_Source\PSoC4/CyLib.c **** 
1615:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1616:Generated_Source\PSoC4/CyLib.c **** 
1617:Generated_Source\PSoC4/CyLib.c ****         /* PLL is locked if reported so for two consecutive read. */
1618:Generated_Source\PSoC4/CyLib.c ****         returnStatus = CY_SYS_CLK_PLL_BASE.pll[pll].status & CY_SYS_CLK_PLL_STATUS_LOCKED;
1619:Generated_Source\PSoC4/CyLib.c ****         if(0u != returnStatus)
1620:Generated_Source\PSoC4/CyLib.c ****         {
1621:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CY_SYS_CLK_PLL_BASE.pll[pll].status & CY_SYS_CLK_PLL_STATUS_LOCKED;
1622:Generated_Source\PSoC4/CyLib.c ****         }
1623:Generated_Source\PSoC4/CyLib.c **** 
1624:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1625:Generated_Source\PSoC4/CyLib.c **** 
1626:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1627:Generated_Source\PSoC4/CyLib.c ****     }
1628:Generated_Source\PSoC4/CyLib.c **** 
1629:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1630:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllStop
1631:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1632:Generated_Source\PSoC4/CyLib.c ****     *
1633:Generated_Source\PSoC4/CyLib.c ****     * Disables the PLL.
1634:Generated_Source\PSoC4/CyLib.c ****     *
1635:Generated_Source\PSoC4/CyLib.c ****     * Ensures that either PLL is not the source of HFCLK before it is disabled,
1636:Generated_Source\PSoC4/CyLib.c ****     * otherwise, the CPU will halt.
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\cc2xwxHk.s 			page 37


1637:Generated_Source\PSoC4/CyLib.c ****     *
1638:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L devices.
1639:Generated_Source\PSoC4/CyLib.c ****     *
1640:Generated_Source\PSoC4/CyLib.c ****     * PLL:
1641:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1642:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1
1643:Generated_Source\PSoC4/CyLib.c ****     *
1644:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1645:Generated_Source\PSoC4/CyLib.c ****     void CySysClkPllStop(uint32 pll)
1646:Generated_Source\PSoC4/CyLib.c ****     {
1647:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1648:Generated_Source\PSoC4/CyLib.c **** 
1649:Generated_Source\PSoC4/CyLib.c ****         if (pll < CY_IP_PLL_NR)
1650:Generated_Source\PSoC4/CyLib.c ****         {
1651:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
1652:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config &= (uint32) ~(CY_SYS_CLK_PLL_CONFIG_ISOLATE | CY_SY
1653:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1654:Generated_Source\PSoC4/CyLib.c ****         }
1655:Generated_Source\PSoC4/CyLib.c ****     }
1656:Generated_Source\PSoC4/CyLib.c **** 
1657:Generated_Source\PSoC4/CyLib.c **** 
1658:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1659:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetPQ
1660:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1661:Generated_Source\PSoC4/CyLib.c ****     *
1662:Generated_Source\PSoC4/CyLib.c ****     * Sets feedback (P) and reference the (Q) divider value. This API also sets the
1663:Generated_Source\PSoC4/CyLib.c ****     * programmable charge pump current value. Note that the PLL has to be disabled
1664:Generated_Source\PSoC4/CyLib.c ****     * before calling this API. If this function is called while any PLL is sourcing,
1665:Generated_Source\PSoC4/CyLib.c ****     * the SYSCLK will return an error.
1666:Generated_Source\PSoC4/CyLib.c ****     *
1667:Generated_Source\PSoC4/CyLib.c ****     * The PLL must not be the system clock source when calling this function. The
1668:Generated_Source\PSoC4/CyLib.c ****     * PLL output will glitch during this function call.
1669:Generated_Source\PSoC4/CyLib.c ****     *
1670:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L devices.
1671:Generated_Source\PSoC4/CyLib.c ****     *
1672:Generated_Source\PSoC4/CyLib.c ****     * \param PLL:
1673:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1674:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1
1675:Generated_Source\PSoC4/CyLib.c ****     *
1676:Generated_Source\PSoC4/CyLib.c ****     * \param feedback The P divider. Range 4 - 259. Control bits for the feedback
1677:Generated_Source\PSoC4/CyLib.c ****     * divider.
1678:Generated_Source\PSoC4/CyLib.c ****     *
1679:Generated_Source\PSoC4/CyLib.c ****     * \param reference The Q divider. Range 1 - 64. Divide by the reference.
1680:Generated_Source\PSoC4/CyLib.c ****     *
1681:Generated_Source\PSoC4/CyLib.c ****     * \param current Charge the pump current in uA. The 2 uA for output frequencies
1682:Generated_Source\PSoC4/CyLib.c ****     * of 67 MHz or less, and 3 uA for higher output frequencies. The default
1683:Generated_Source\PSoC4/CyLib.c ****     * value is 2 uA.
1684:Generated_Source\PSoC4/CyLib.c ****     *
1685:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_SUCCESS Completed successfully.
1686:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_BAD_PARAM The parameters are out of range or the specified PLL
1687:Generated_Source\PSoC4/CyLib.c ****     * sources the system clock.
1688:Generated_Source\PSoC4/CyLib.c ****     *
1689:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1690:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllSetPQ(uint32 pll, uint32 feedback, uint32 reference, uint32 current)
1691:Generated_Source\PSoC4/CyLib.c ****     {
1692:Generated_Source\PSoC4/CyLib.c ****         uint32   regTmp;
1693:Generated_Source\PSoC4/CyLib.c ****         cystatus tmp;
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\cc2xwxHk.s 			page 38


1694:Generated_Source\PSoC4/CyLib.c ****         uint8    interruptState;
1695:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_BAD_PARAM;
1696:Generated_Source\PSoC4/CyLib.c **** 
1697:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1698:Generated_Source\PSoC4/CyLib.c **** 
1699:Generated_Source\PSoC4/CyLib.c ****         tmp = CySysClkPllConfigChangeAllowed(pll);
1700:Generated_Source\PSoC4/CyLib.c **** 
1701:Generated_Source\PSoC4/CyLib.c ****         if ((pll < CY_IP_PLL_NR) &&
1702:Generated_Source\PSoC4/CyLib.c ****             (feedback  >= CY_SYS_CLK_PLL_CONFIG_FEEDBACK_DIV_MIN)  && (feedback  <= CY_SYS_CLK_PLL_
1703:Generated_Source\PSoC4/CyLib.c ****             (reference >= CY_SYS_CLK_PLL_CONFIG_REFERENCE_DIV_MIN) && (reference <= CY_SYS_CLK_PLL_
1704:Generated_Source\PSoC4/CyLib.c ****             (current   >= CY_SYS_CLK_PLL_CONFIG_ICP_SEL_MIN )      && (current   <= CY_SYS_CLK_PLL_
1705:Generated_Source\PSoC4/CyLib.c ****             (CYRET_SUCCESS == tmp))
1706:Generated_Source\PSoC4/CyLib.c ****         {
1707:Generated_Source\PSoC4/CyLib.c ****             /* Set new feedback, reference and current values */
1708:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_PLL_BASE.pll[pll].config & (uint32) ~(CY_SYS_CLK_PLL_CONFIG_FEEDBA
1709:Generated_Source\PSoC4/CyLib.c ****                                                                        CY_SYS_CLK_PLL_CONFIG_REFERE
1710:Generated_Source\PSoC4/CyLib.c ****                                                                        CY_SYS_CLK_PLL_CONFIG_ICP_SE
1711:Generated_Source\PSoC4/CyLib.c **** 
1712:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((feedback << CY_SYS_CLK_PLL_CONFIG_FEEDBACK_DIV_SHIFT) & CY_SYS_CLK_PLL_CONF
1713:Generated_Source\PSoC4/CyLib.c ****             regTmp |= (((reference - 1u) << CY_SYS_CLK_PLL_CONFIG_REFERENCE_DIV_SHIFT) & CY_SYS_CLK
1714:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((current << CY_SYS_CLK_PLL_CONFIG_ICP_SEL_SHIFT) & CY_SYS_CLK_PLL_CONFIG_ICP
1715:Generated_Source\PSoC4/CyLib.c **** 
1716:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config = regTmp;
1717:Generated_Source\PSoC4/CyLib.c **** 
1718:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_SUCCESS;
1719:Generated_Source\PSoC4/CyLib.c ****         }
1720:Generated_Source\PSoC4/CyLib.c **** 
1721:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1722:Generated_Source\PSoC4/CyLib.c **** 
1723:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1724:Generated_Source\PSoC4/CyLib.c ****     }
1725:Generated_Source\PSoC4/CyLib.c **** 
1726:Generated_Source\PSoC4/CyLib.c **** 
1727:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1728:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetBypassMode
1729:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1730:Generated_Source\PSoC4/CyLib.c ****     *
1731:Generated_Source\PSoC4/CyLib.c ****     * Sets the bypass mode for the specified PLL.
1732:Generated_Source\PSoC4/CyLib.c ****     *
1733:Generated_Source\PSoC4/CyLib.c ****     * The PLL must not be the system clock source when calling this function.
1734:Generated_Source\PSoC4/CyLib.c ****     * The PLL output will glitch during this function call.
1735:Generated_Source\PSoC4/CyLib.c ****     *
1736:Generated_Source\PSoC4/CyLib.c ****     * When the PLL's reference input is higher than HFCLK frequency the device may 
1737:Generated_Source\PSoC4/CyLib.c ****     * lock due to incorrect flash wait cycle configuration and bypass switches from 
1738:Generated_Source\PSoC4/CyLib.c ****     * PLL output to the reference input. See description of 
1739:Generated_Source\PSoC4/CyLib.c ****     * CySysFlashSetWaitCycles() for more information.
1740:Generated_Source\PSoC4/CyLib.c ****     *
1741:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L devices.
1742:Generated_Source\PSoC4/CyLib.c ****     *
1743:Generated_Source\PSoC4/CyLib.c ****     * \param PLL:
1744:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1745:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1
1746:Generated_Source\PSoC4/CyLib.c ****     *
1747:Generated_Source\PSoC4/CyLib.c ****     * \param bypass: The bypass mode.
1748:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_BYPASS_AUTO - Automatic usage of the lock indicator. When unlocked,
1749:Generated_Source\PSoC4/CyLib.c ****     * automatically selects PLL the reference input (bypass mode). When locked,
1750:Generated_Source\PSoC4/CyLib.c ****     * automatically selects the PLL output.
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\cc2xwxHk.s 			page 39


1751:Generated_Source\PSoC4/CyLib.c ****     *
1752:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_BYPASS_PLL_REF - Selects the PLL reference input (bypass mode).
1753:Generated_Source\PSoC4/CyLib.c ****     * Ignores the lock indicator.
1754:Generated_Source\PSoC4/CyLib.c ****     *
1755:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_BYPASS_PLL_OUT - Selects the PLL output.  Ignores the lock indicator.
1756:Generated_Source\PSoC4/CyLib.c ****     *
1757:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1758:Generated_Source\PSoC4/CyLib.c ****     void CySysClkPllSetBypassMode(uint32 pll, uint32 bypass)
1759:Generated_Source\PSoC4/CyLib.c ****     {
1760:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
1761:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1762:Generated_Source\PSoC4/CyLib.c **** 
1763:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1764:Generated_Source\PSoC4/CyLib.c **** 
1765:Generated_Source\PSoC4/CyLib.c ****         if ((pll < CY_IP_PLL_NR) && (bypass <= CY_SYS_PLL_BYPASS_PLL_OUT))
1766:Generated_Source\PSoC4/CyLib.c ****         {
1767:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_PLL_BASE.pll[pll].config & (uint32) ~CY_SYS_CLK_PLL_CONFIG_BYPASS_
1768:Generated_Source\PSoC4/CyLib.c ****             regTmp |=  (uint32)(bypass << CY_SYS_CLK_PLL_CONFIG_BYPASS_SEL_SHIFT);
1769:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config = regTmp;
1770:Generated_Source\PSoC4/CyLib.c ****         }
1771:Generated_Source\PSoC4/CyLib.c **** 
1772:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1773:Generated_Source\PSoC4/CyLib.c ****     }
1774:Generated_Source\PSoC4/CyLib.c **** 
1775:Generated_Source\PSoC4/CyLib.c **** 
1776:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1777:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllGetBypassMode
1778:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1779:Generated_Source\PSoC4/CyLib.c ****     *
1780:Generated_Source\PSoC4/CyLib.c ****     *  Gets the bypass mode for the specified PLL.
1781:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L devices.
1782:Generated_Source\PSoC4/CyLib.c ****     *
1783:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
1784:Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
1785:Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1
1786:Generated_Source\PSoC4/CyLib.c ****     *
1787:Generated_Source\PSoC4/CyLib.c ****     *  \param bypass: Bypass mode.
1788:Generated_Source\PSoC4/CyLib.c ****     *   The same as the parameter of the CySysClkPllSetBypassMode().
1789:Generated_Source\PSoC4/CyLib.c ****     *
1790:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1791:Generated_Source\PSoC4/CyLib.c ****     static uint32 CySysClkPllGetBypassMode(uint32 pll)
1792:Generated_Source\PSoC4/CyLib.c ****     {
1793:Generated_Source\PSoC4/CyLib.c ****         uint32 returnValue;
1794:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1795:Generated_Source\PSoC4/CyLib.c **** 
1796:Generated_Source\PSoC4/CyLib.c ****         CYASSERT(pll < CY_IP_PLL_NR);
1797:Generated_Source\PSoC4/CyLib.c **** 
1798:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1799:Generated_Source\PSoC4/CyLib.c **** 
1800:Generated_Source\PSoC4/CyLib.c ****         returnValue = CY_SYS_CLK_PLL_BASE.pll[pll].config & CY_SYS_CLK_PLL_CONFIG_BYPASS_SEL_MASK;
1801:Generated_Source\PSoC4/CyLib.c ****         returnValue =  returnValue >> CY_SYS_CLK_PLL_CONFIG_BYPASS_SEL_SHIFT;
1802:Generated_Source\PSoC4/CyLib.c **** 
1803:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1804:Generated_Source\PSoC4/CyLib.c **** 
1805:Generated_Source\PSoC4/CyLib.c ****         return (returnValue);
1806:Generated_Source\PSoC4/CyLib.c ****     }
1807:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\cc2xwxHk.s 			page 40


1808:Generated_Source\PSoC4/CyLib.c **** 
1809:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1810:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllConfigChangeAllowed
1811:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1812:Generated_Source\PSoC4/CyLib.c ****     *
1813:Generated_Source\PSoC4/CyLib.c ****     *  The function returns non-zero value if the specified PLL sources the System
1814:Generated_Source\PSoC4/CyLib.c ****     *  clock and the PLL is not in the bypass mode.
1815:Generated_Source\PSoC4/CyLib.c ****     *
1816:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L devices.
1817:Generated_Source\PSoC4/CyLib.c ****     *
1818:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
1819:Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
1820:Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1
1821:Generated_Source\PSoC4/CyLib.c ****     *
1822:Generated_Source\PSoC4/CyLib.c ****     * \return Non-zero value when the specified PLL sources the System clock and
1823:Generated_Source\PSoC4/CyLib.c ****     * the PLL is not in the bypass mode.
1824:Generated_Source\PSoC4/CyLib.c ****     *
1825:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1826:Generated_Source\PSoC4/CyLib.c ****     static cystatus CySysClkPllConfigChangeAllowed(uint32 pll)
1827:Generated_Source\PSoC4/CyLib.c ****     {
1828:Generated_Source\PSoC4/CyLib.c ****         uint32   pllBypassMode;
1829:Generated_Source\PSoC4/CyLib.c ****         uint32   sysclkSource;
1830:Generated_Source\PSoC4/CyLib.c ****         cystatus returnValue = CYRET_LOCKED;
1831:Generated_Source\PSoC4/CyLib.c **** 
1832:Generated_Source\PSoC4/CyLib.c ****         sysclkSource  = CySysClkGetSysclkSource();
1833:Generated_Source\PSoC4/CyLib.c ****         pllBypassMode = CySysClkPllGetBypassMode(pll);
1834:Generated_Source\PSoC4/CyLib.c **** 
1835:Generated_Source\PSoC4/CyLib.c ****         if ((CY_SYS_PLL_BYPASS_PLL_REF == pllBypassMode)             ||
1836:Generated_Source\PSoC4/CyLib.c ****             ((CY_SYS_CLK_HFCLK_PLL0 != sysclkSource) && (0u == pll)) ||
1837:Generated_Source\PSoC4/CyLib.c ****             ((CY_SYS_CLK_HFCLK_PLL1 != sysclkSource) && (1u == pll)))
1838:Generated_Source\PSoC4/CyLib.c ****         {
1839:Generated_Source\PSoC4/CyLib.c ****             returnValue = CYRET_SUCCESS;
1840:Generated_Source\PSoC4/CyLib.c ****         }
1841:Generated_Source\PSoC4/CyLib.c **** 
1842:Generated_Source\PSoC4/CyLib.c ****         return (returnValue);
1843:Generated_Source\PSoC4/CyLib.c ****     }
1844:Generated_Source\PSoC4/CyLib.c **** 
1845:Generated_Source\PSoC4/CyLib.c **** 
1846:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1847:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllGetUnlockStatus
1848:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1849:Generated_Source\PSoC4/CyLib.c ****     *
1850:Generated_Source\PSoC4/CyLib.c ****     *  Returns a non-zero value if the specified PLL output was unlocked.
1851:Generated_Source\PSoC4/CyLib.c ****     *  The unlock status is an indicator that the PLL has lost a lock at least once
1852:Generated_Source\PSoC4/CyLib.c ****     *  during its operation. The unlock status is cleared once it is read using
1853:Generated_Source\PSoC4/CyLib.c ****     *  this API.
1854:Generated_Source\PSoC4/CyLib.c ****     *
1855:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L devices.
1856:Generated_Source\PSoC4/CyLib.c ****     *
1857:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
1858:Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
1859:Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1
1860:Generated_Source\PSoC4/CyLib.c ****     *
1861:Generated_Source\PSoC4/CyLib.c ****     * \return Non-zero value when the specified PLL was unlocked.
1862:Generated_Source\PSoC4/CyLib.c ****     *
1863:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1864:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkPllGetUnlockStatus(uint32 pll)
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\cc2xwxHk.s 			page 41


1865:Generated_Source\PSoC4/CyLib.c ****     {
1866:Generated_Source\PSoC4/CyLib.c ****         uint32 returnStatus = 0u;
1867:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1868:Generated_Source\PSoC4/CyLib.c **** 
1869:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1870:Generated_Source\PSoC4/CyLib.c **** 
1871:Generated_Source\PSoC4/CyLib.c ****         returnStatus = CY_SYS_CLK_PLL_BASE.pll[pll].test & CY_SYS_CLK_PLL_TEST_UNLOCK_OCCURRED_MASK
1872:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_PLL_BASE.pll[pll].test |= CY_SYS_CLK_PLL_TEST_UNLOCK_OCCURRED_MASK;
1873:Generated_Source\PSoC4/CyLib.c **** 
1874:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1875:Generated_Source\PSoC4/CyLib.c **** 
1876:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1877:Generated_Source\PSoC4/CyLib.c ****     }
1878:Generated_Source\PSoC4/CyLib.c **** 
1879:Generated_Source\PSoC4/CyLib.c **** 
1880:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1881:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetFrequency
1882:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1883:Generated_Source\PSoC4/CyLib.c ****     *
1884:Generated_Source\PSoC4/CyLib.c ****     * Configures either PLL#0 or PLL#1 for the requested input/output frequencies.
1885:Generated_Source\PSoC4/CyLib.c ****     * The input frequency is the frequency of the source to the PLL. The source is
1886:Generated_Source\PSoC4/CyLib.c ****     * set using the CySysClkPllSetSource() function.
1887:Generated_Source\PSoC4/CyLib.c ****     *
1888:Generated_Source\PSoC4/CyLib.c ****     * The PLL must not be the system clock source when calling this function. The
1889:Generated_Source\PSoC4/CyLib.c ****     * PLL output will glitch during this function call.
1890:Generated_Source\PSoC4/CyLib.c ****     *
1891:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L devices.
1892:Generated_Source\PSoC4/CyLib.c ****     *
1893:Generated_Source\PSoC4/CyLib.c ****     * \param pll:
1894:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1895:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1
1896:Generated_Source\PSoC4/CyLib.c ****     *
1897:Generated_Source\PSoC4/CyLib.c ****     * \param inputFreq The reference frequency in KHz. The valid range is from 1000 to 49152 KHz.
1898:Generated_Source\PSoC4/CyLib.c ****     *
1899:Generated_Source\PSoC4/CyLib.c ****     * \param pllFreq The target frequency in KHz. The valid range is from 22500 to 49152 KHz.
1900:Generated_Source\PSoC4/CyLib.c ****     *
1901:Generated_Source\PSoC4/CyLib.c ****     * \param divider The output clock divider for the PLL:
1902:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_OUTPUT_DIVPASS    Pass Through
1903:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_OUTPUT_DIV2       Divide by 2
1904:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_OUTPUT_DIV4       Divide by 4
1905:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_OUTPUT_DIV8       Divide by 8
1906:Generated_Source\PSoC4/CyLib.c ****     *
1907:Generated_Source\PSoC4/CyLib.c ****     * \param freqTol The tolerance in ppm, 10 ppm is equal to 0.001%.
1908:Generated_Source\PSoC4/CyLib.c ****     *
1909:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_SUCCESS The PLL was successfully configured for the requested
1910:Generated_Source\PSoC4/CyLib.c ****     * frequency.
1911:Generated_Source\PSoC4/CyLib.c ****     *
1912:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_BAD_PARAM The PLL was not able to successfully configure for the
1913:Generated_Source\PSoC4/CyLib.c ****     * requested frequency.
1914:Generated_Source\PSoC4/CyLib.c ****     *
1915:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1916:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllSetFrequency(uint32 pll, uint32 inputFreq, uint32 pllFreq, uint32 divider, 
1917:Generated_Source\PSoC4/CyLib.c ****     {
1918:Generated_Source\PSoC4/CyLib.c ****         uint32 qMin;
1919:Generated_Source\PSoC4/CyLib.c ****         uint32 qMax;
1920:Generated_Source\PSoC4/CyLib.c **** 
1921:Generated_Source\PSoC4/CyLib.c ****         uint32 qVal = CY_SYS_CLK_PLL_INVALID;
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\cc2xwxHk.s 			page 42


1922:Generated_Source\PSoC4/CyLib.c ****         uint32 pVal = CY_SYS_CLK_PLL_INVALID;
1923:Generated_Source\PSoC4/CyLib.c **** 
1924:Generated_Source\PSoC4/CyLib.c ****         uint32 q;
1925:Generated_Source\PSoC4/CyLib.c ****         uint32 p;
1926:Generated_Source\PSoC4/CyLib.c **** 
1927:Generated_Source\PSoC4/CyLib.c ****         uint32 fvco;
1928:Generated_Source\PSoC4/CyLib.c ****         int32 ferr;
1929:Generated_Source\PSoC4/CyLib.c **** 
1930:Generated_Source\PSoC4/CyLib.c ****         cystatus tmp;
1931:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_BAD_PARAM;
1932:Generated_Source\PSoC4/CyLib.c **** 
1933:Generated_Source\PSoC4/CyLib.c **** 
1934:Generated_Source\PSoC4/CyLib.c ****         tmp = CySysClkPllConfigChangeAllowed(pll);
1935:Generated_Source\PSoC4/CyLib.c **** 
1936:Generated_Source\PSoC4/CyLib.c ****         if ((pll < CY_IP_PLL_NR) &&
1937:Generated_Source\PSoC4/CyLib.c ****             (inputFreq  >= CY_SYS_CLK_PLL_INPUT_FREQ_MIN )  && (inputFreq  <= CY_SYS_CLK_PLL_INPUT_
1938:Generated_Source\PSoC4/CyLib.c ****             (pllFreq >= CY_SYS_CLK_PLL_OUTPUT_FREQ_MIN ) && (pllFreq <= CY_SYS_CLK_PLL_OUTPUT_FREQ_
1939:Generated_Source\PSoC4/CyLib.c ****             (divider <= CY_SYS_PLL_OUTPUT_DIV8) &&
1940:Generated_Source\PSoC4/CyLib.c ****             (CYRET_SUCCESS == tmp))
1941:Generated_Source\PSoC4/CyLib.c ****         {
1942:Generated_Source\PSoC4/CyLib.c **** 
1943:Generated_Source\PSoC4/CyLib.c ****             /* Minimum feed forward loop divisor */
1944:Generated_Source\PSoC4/CyLib.c ****             qMin = (inputFreq + (CY_SYS_CLK_PLL_FPFDMAX - 1u)) / CY_SYS_CLK_PLL_FPFDMAX;
1945:Generated_Source\PSoC4/CyLib.c ****             qMin = (qMin < CY_SYS_CLK_PLL_QMINIP) ? CY_SYS_CLK_PLL_QMINIP : qMin;
1946:Generated_Source\PSoC4/CyLib.c **** 
1947:Generated_Source\PSoC4/CyLib.c ****             /* Maximum feed forward loop divisor */
1948:Generated_Source\PSoC4/CyLib.c ****             qMax = inputFreq / CY_SYS_CLK_PLL_FPFDMIN;
1949:Generated_Source\PSoC4/CyLib.c ****             qMax = (qMax > CY_SYS_CLK_PLL_QMAXIP) ? CY_SYS_CLK_PLL_QMAXIP : qMax;
1950:Generated_Source\PSoC4/CyLib.c **** 
1951:Generated_Source\PSoC4/CyLib.c ****             if (qMin <= qMax)
1952:Generated_Source\PSoC4/CyLib.c ****             {
1953:Generated_Source\PSoC4/CyLib.c ****                 for(q = qMin; q <= qMax; q++)
1954:Generated_Source\PSoC4/CyLib.c ****                 {
1955:Generated_Source\PSoC4/CyLib.c ****                     /* Solve for the feedback divisor value */
1956:Generated_Source\PSoC4/CyLib.c **** 
1957:Generated_Source\PSoC4/CyLib.c ****                     /* INT((pllFreq * q ) / inputFreq), where INT is normal rounding  */
1958:Generated_Source\PSoC4/CyLib.c ****                     p = ((pllFreq * q) + (inputFreq / 2u)) / inputFreq;
1959:Generated_Source\PSoC4/CyLib.c **** 
1960:Generated_Source\PSoC4/CyLib.c ****                     /* Calculate the actual VCO frequency (FVCO) */
1961:Generated_Source\PSoC4/CyLib.c ****                     fvco = ((inputFreq * p) / q);
1962:Generated_Source\PSoC4/CyLib.c **** 
1963:Generated_Source\PSoC4/CyLib.c ****                     /* Calculate the frequency error (FERR) */
1964:Generated_Source\PSoC4/CyLib.c ****                     ferr = ((1000000 * ((int32) fvco - (int32) pllFreq))/ (int32) pllFreq);
1965:Generated_Source\PSoC4/CyLib.c **** 
1966:Generated_Source\PSoC4/CyLib.c ****                     /* Bound check the frequency error and decide next action */
1967:Generated_Source\PSoC4/CyLib.c ****                     if ((( -1 * (int32) freqTol) <= ferr) && (ferr <= (int32) freqTol))
1968:Generated_Source\PSoC4/CyLib.c ****                     {
1969:Generated_Source\PSoC4/CyLib.c ****                         qVal = q;
1970:Generated_Source\PSoC4/CyLib.c ****                         pVal = p;
1971:Generated_Source\PSoC4/CyLib.c ****                         break;
1972:Generated_Source\PSoC4/CyLib.c ****                     }
1973:Generated_Source\PSoC4/CyLib.c ****                 }
1974:Generated_Source\PSoC4/CyLib.c **** 
1975:Generated_Source\PSoC4/CyLib.c **** 
1976:Generated_Source\PSoC4/CyLib.c ****                 if ((pVal != CY_SYS_CLK_PLL_INVALID) && (qVal != CY_SYS_CLK_PLL_INVALID))
1977:Generated_Source\PSoC4/CyLib.c ****                 {
1978:Generated_Source\PSoC4/CyLib.c ****                     if (CySysClkPllSetPQ(pll, pVal, qVal, CY_SYS_CLK_PLL_CURRENT_DEFAULT) == CYRET_
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\cc2xwxHk.s 			page 43


1979:Generated_Source\PSoC4/CyLib.c ****                     {
1980:Generated_Source\PSoC4/CyLib.c ****                         returnStatus = CySysClkPllSetOutputDivider(pll, divider);
1981:Generated_Source\PSoC4/CyLib.c ****                     }
1982:Generated_Source\PSoC4/CyLib.c ****                 }
1983:Generated_Source\PSoC4/CyLib.c ****             }
1984:Generated_Source\PSoC4/CyLib.c **** 
1985:Generated_Source\PSoC4/CyLib.c ****         }
1986:Generated_Source\PSoC4/CyLib.c **** 
1987:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1988:Generated_Source\PSoC4/CyLib.c ****     }
1989:Generated_Source\PSoC4/CyLib.c **** 
1990:Generated_Source\PSoC4/CyLib.c **** 
1991:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1992:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetSource
1993:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1994:Generated_Source\PSoC4/CyLib.c ****     *
1995:Generated_Source\PSoC4/CyLib.c ****     *  Sets the input clock source to the PLL. The PLL must be disabled before
1996:Generated_Source\PSoC4/CyLib.c ****     *  calling this function.
1997:Generated_Source\PSoC4/CyLib.c ****     *
1998:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L devices.
1999:Generated_Source\PSoC4/CyLib.c ****     *
2000:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
2001:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
2002:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1
2003:Generated_Source\PSoC4/CyLib.c ****     *
2004:Generated_Source\PSoC4/CyLib.c ****     * \param source:
2005:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_IMO        IMO
2006:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_EXTCLK     External Clock
2007:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_ECO        ECO
2008:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI0       DSI_OUT[0]
2009:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI1       DSI_OUT[1]
2010:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI2       DSI_OUT[2]
2011:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI3       DSI_OUT[3]
2012:Generated_Source\PSoC4/CyLib.c ****     *
2013:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2014:Generated_Source\PSoC4/CyLib.c ****     void CySysClkPllSetSource(uint32 pll, uint32 source)
2015:Generated_Source\PSoC4/CyLib.c ****     {
2016:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
2017:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
2018:Generated_Source\PSoC4/CyLib.c **** 
2019:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
2020:Generated_Source\PSoC4/CyLib.c **** 
2021:Generated_Source\PSoC4/CyLib.c ****         if (pll < CY_IP_PLL_NR)
2022:Generated_Source\PSoC4/CyLib.c ****         {
2023:Generated_Source\PSoC4/CyLib.c ****             regTmp = CY_SYS_CLK_SELECT_REG & (uint32) ~CY_SYS_CLK_SELECT_PLL_MASK(pll);
2024:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((source << CY_SYS_CLK_SELECT_PLL_SHIFT(pll)) & CY_SYS_CLK_SELECT_PLL_MASK(pl
2025:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_SELECT_REG = regTmp;
2026:Generated_Source\PSoC4/CyLib.c ****         }
2027:Generated_Source\PSoC4/CyLib.c **** 
2028:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
2029:Generated_Source\PSoC4/CyLib.c ****     }
2030:Generated_Source\PSoC4/CyLib.c **** 
2031:Generated_Source\PSoC4/CyLib.c **** 
2032:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2033:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetOutputDivider
2034:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2035:Generated_Source\PSoC4/CyLib.c ****     *
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\cc2xwxHk.s 			page 44


2036:Generated_Source\PSoC4/CyLib.c ****     *  Sets the output clock divider for the PLL.
2037:Generated_Source\PSoC4/CyLib.c ****     *
2038:Generated_Source\PSoC4/CyLib.c ****     *  The PLL must not be the System Clock source when calling this function. The
2039:Generated_Source\PSoC4/CyLib.c ****     *  PLL output will glitch during this function call.
2040:Generated_Source\PSoC4/CyLib.c ****     *
2041:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L devices.
2042:Generated_Source\PSoC4/CyLib.c ****     *
2043:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
2044:Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
2045:Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1
2046:Generated_Source\PSoC4/CyLib.c ****     *
2047:Generated_Source\PSoC4/CyLib.c ****     * \param divider:
2048:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIVPASS    Pass through
2049:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIV2       Divide by 2
2050:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIV4       Divide by 4
2051:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIV8       Divide by 8
2052:Generated_Source\PSoC4/CyLib.c ****     *
2053:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_SUCCESS    Completed successfully.
2054:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_BAD_PARAM  The parameters are out of range or the
2055:Generated_Source\PSoC4/CyLib.c ****     * specified PLL sources the System clock.
2056:Generated_Source\PSoC4/CyLib.c ****     *
2057:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2058:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllSetOutputDivider(uint32 pll, uint32 divider)
2059:Generated_Source\PSoC4/CyLib.c ****     {
2060:Generated_Source\PSoC4/CyLib.c ****         uint32   tmpReg;
2061:Generated_Source\PSoC4/CyLib.c ****         uint8    interruptState;
2062:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_BAD_PARAM;
2063:Generated_Source\PSoC4/CyLib.c ****         cystatus tmp;
2064:Generated_Source\PSoC4/CyLib.c **** 
2065:Generated_Source\PSoC4/CyLib.c **** 
2066:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
2067:Generated_Source\PSoC4/CyLib.c **** 
2068:Generated_Source\PSoC4/CyLib.c ****         tmp = CySysClkPllConfigChangeAllowed(pll);
2069:Generated_Source\PSoC4/CyLib.c **** 
2070:Generated_Source\PSoC4/CyLib.c ****         if ((pll < CY_IP_PLL_NR) && (CYRET_SUCCESS == tmp) && (divider <= CY_SYS_PLL_OUTPUT_DIV8))
2071:Generated_Source\PSoC4/CyLib.c ****         {
2072:Generated_Source\PSoC4/CyLib.c ****             tmpReg  = CY_SYS_CLK_PLL_BASE.pll[pll].config & (uint32) ~(CY_SYS_CLK_PLL_CONFIG_OUTPUT
2073:Generated_Source\PSoC4/CyLib.c ****             tmpReg |= ((divider << CY_SYS_CLK_PLL_CONFIG_OUTPUT_DIV_SHIFT) & CY_SYS_CLK_PLL_CONFIG_
2074:Generated_Source\PSoC4/CyLib.c **** 
2075:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config = tmpReg;
2076:Generated_Source\PSoC4/CyLib.c **** 
2077:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_SUCCESS;
2078:Generated_Source\PSoC4/CyLib.c ****         }
2079:Generated_Source\PSoC4/CyLib.c **** 
2080:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
2081:Generated_Source\PSoC4/CyLib.c **** 
2082:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
2083:Generated_Source\PSoC4/CyLib.c ****     }
2084:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2 && CY_IP_PLL) */
2085:Generated_Source\PSoC4/CyLib.c **** 
2086:Generated_Source\PSoC4/CyLib.c **** 
2087:Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSV2)
2088:Generated_Source\PSoC4/CyLib.c **** 
2089:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2090:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdEnable
2091:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2092:Generated_Source\PSoC4/CyLib.c ****     *
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\cc2xwxHk.s 			page 45


2093:Generated_Source\PSoC4/CyLib.c ****     *  Enables the output of the low-voltage monitor when Vddd is at or below the
2094:Generated_Source\PSoC4/CyLib.c ****     *  trip point, configures the device to generate an interrupt, and sets the
2095:Generated_Source\PSoC4/CyLib.c ****     *  voltage trip level.
2096:Generated_Source\PSoC4/CyLib.c ****     *
2097:Generated_Source\PSoC4/CyLib.c ****     *  \param threshold: Threshold selection for Low Voltage Detect circuit.
2098:Generated_Source\PSoC4/CyLib.c ****     *  Threshold variation is +/- 2.5% from these typical voltage choices.
2099:Generated_Source\PSoC4/CyLib.c ****     *         Define                     Voltage threshold
2100:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_1_75_V       1.7500 V
2101:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_1_80_V       1.8000 V
2102:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_1_90_V       1.9000 V
2103:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_00_V       2.0000 V
2104:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_10_V       2.1000 V
2105:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_20_V       2.2000 V
2106:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_30_V       2.3000 V
2107:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_40_V       2.4000 V
2108:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_50_V       2.5000 V
2109:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_60_V       2.6000 V
2110:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_70_V       2.7000 V
2111:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_80_V       2.8000 V
2112:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_90_V       2.9000 V
2113:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_3_00_V       3.0000 V
2114:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_3_20_V       3.2000 V
2115:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_4_50_V       4.5000 V
2116:Generated_Source\PSoC4/CyLib.c ****     *
2117:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2118:Generated_Source\PSoC4/CyLib.c ****     void CySysLvdEnable(uint32 threshold)
2119:Generated_Source\PSoC4/CyLib.c ****     {
2120:Generated_Source\PSoC4/CyLib.c ****         /* Prevent propagating a false interrupt */
2121:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_MASK_REG   &= (uint32) ~CY_LVD_PROPAGATE_INT_TO_CPU;
2122:Generated_Source\PSoC4/CyLib.c **** 
2123:Generated_Source\PSoC4/CyLib.c ****         /* Set specified threshold */
2124:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_VMON_CONFIG_REG = (CY_LVD_PWR_VMON_CONFIG_REG & ~CY_LVD_PWR_VMON_CONFIG_LVD_SEL_
2125:Generated_Source\PSoC4/CyLib.c ****                 ((threshold << CY_LVD_PWR_VMON_CONFIG_LVD_SEL_SHIFT) & CY_LVD_PWR_VMON_CONFIG_LVD_S
2126:Generated_Source\PSoC4/CyLib.c **** 
2127:Generated_Source\PSoC4/CyLib.c ****         /* Enable the LVD. This may cause a false LVD event. */
2128:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_VMON_CONFIG_REG |= CY_LVD_PWR_VMON_CONFIG_LVD_EN;
2129:Generated_Source\PSoC4/CyLib.c **** 
2130:Generated_Source\PSoC4/CyLib.c ****         /* Wait for the circuit to stabilize */
2131:Generated_Source\PSoC4/CyLib.c ****         CyDelayUs(CY_LVD_STABILIZE_TIMEOUT_US);
2132:Generated_Source\PSoC4/CyLib.c **** 
2133:Generated_Source\PSoC4/CyLib.c ****         /* Clear the false event */
2134:Generated_Source\PSoC4/CyLib.c ****         CySysLvdClearInterrupt();
2135:Generated_Source\PSoC4/CyLib.c **** 
2136:Generated_Source\PSoC4/CyLib.c ****         /* Unmask the interrupt */
2137:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_MASK_REG   |= CY_LVD_PROPAGATE_INT_TO_CPU;
2138:Generated_Source\PSoC4/CyLib.c ****     }
2139:Generated_Source\PSoC4/CyLib.c **** 
2140:Generated_Source\PSoC4/CyLib.c **** 
2141:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2142:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdDisable
2143:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2144:Generated_Source\PSoC4/CyLib.c ****     *
2145:Generated_Source\PSoC4/CyLib.c ****     *  Disables the low voltage detection. A low voltage interrupt is disabled.
2146:Generated_Source\PSoC4/CyLib.c ****     *
2147:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2148:Generated_Source\PSoC4/CyLib.c ****     void CySysLvdDisable(void)
2149:Generated_Source\PSoC4/CyLib.c ****     {
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\cc2xwxHk.s 			page 46


2150:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_MASK_REG   &= ~CY_LVD_PROPAGATE_INT_TO_CPU;
2151:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_VMON_CONFIG_REG &= ~CY_LVD_PWR_VMON_CONFIG_LVD_EN;
2152:Generated_Source\PSoC4/CyLib.c ****     }
2153:Generated_Source\PSoC4/CyLib.c **** 
2154:Generated_Source\PSoC4/CyLib.c **** 
2155:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2156:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdGetInterruptSource
2157:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2158:Generated_Source\PSoC4/CyLib.c ****     *
2159:Generated_Source\PSoC4/CyLib.c ****     *  Gets the low voltage detection interrupt status (without clearing).
2160:Generated_Source\PSoC4/CyLib.c ****     *
2161:Generated_Source\PSoC4/CyLib.c ****     * \return
2162:Generated_Source\PSoC4/CyLib.c ****     *  Interrupt request value:
2163:Generated_Source\PSoC4/CyLib.c ****     *    CY_SYS_LVD_INT - Indicates an Low Voltage Detect interrupt
2164:Generated_Source\PSoC4/CyLib.c ****     *
2165:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2166:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysLvdGetInterruptSource(void)
2167:Generated_Source\PSoC4/CyLib.c ****     {
2168:Generated_Source\PSoC4/CyLib.c ****         return (CY_LVD_PWR_INTR_REG & CY_SYS_LVD_INT);
2169:Generated_Source\PSoC4/CyLib.c ****     }
2170:Generated_Source\PSoC4/CyLib.c **** 
2171:Generated_Source\PSoC4/CyLib.c **** 
2172:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2173:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdClearInterrupt
2174:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2175:Generated_Source\PSoC4/CyLib.c ****     *
2176:Generated_Source\PSoC4/CyLib.c ****     *  Clears the low voltage detection interrupt status.
2177:Generated_Source\PSoC4/CyLib.c ****     *
2178:Generated_Source\PSoC4/CyLib.c ****     * \return
2179:Generated_Source\PSoC4/CyLib.c ****     *  None
2180:Generated_Source\PSoC4/CyLib.c ****     *
2181:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2182:Generated_Source\PSoC4/CyLib.c ****     void CySysLvdClearInterrupt(void)
2183:Generated_Source\PSoC4/CyLib.c ****     {
2184:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_REG = CY_SYS_LVD_INT;
2185:Generated_Source\PSoC4/CyLib.c ****     }
2186:Generated_Source\PSoC4/CyLib.c **** 
2187:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2) */
2188:Generated_Source\PSoC4/CyLib.c **** 
2189:Generated_Source\PSoC4/CyLib.c **** 
2190:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2191:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysGetResetReason
2192:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2193:Generated_Source\PSoC4/CyLib.c **** *
2194:Generated_Source\PSoC4/CyLib.c **** *  Reports the cause for the latest reset(s) that occurred in the system. All
2195:Generated_Source\PSoC4/CyLib.c **** *  the bits in the RES_CAUSE register assert when the corresponding reset cause
2196:Generated_Source\PSoC4/CyLib.c **** *  occurs and must be cleared by the firmware. These bits are cleared by the
2197:Generated_Source\PSoC4/CyLib.c **** *  hardware only during XRES, POR, or a detected brown-out.
2198:Generated_Source\PSoC4/CyLib.c **** *
2199:Generated_Source\PSoC4/CyLib.c **** *  \param reason: bits in the RES_CAUSE register to clear.
2200:Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_RESET_WDT       - WDT caused a reset
2201:Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_RESET_PROTFAULT - Occured protection violation that requires reset
2202:Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_RESET_SW        - Cortex-M0 requested a system reset.
2203:Generated_Source\PSoC4/CyLib.c **** *
2204:Generated_Source\PSoC4/CyLib.c **** * \return
2205:Generated_Source\PSoC4/CyLib.c **** *  Status. Same enumerated bit values as used for the reason parameter.
2206:Generated_Source\PSoC4/CyLib.c **** *
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\cc2xwxHk.s 			page 47


2207:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2208:Generated_Source\PSoC4/CyLib.c **** uint32 CySysGetResetReason(uint32 reason)
2209:Generated_Source\PSoC4/CyLib.c **** {
 389              		.loc 1 2209 0
 390              		.cfi_startproc
 391              	.LVL20:
2210:Generated_Source\PSoC4/CyLib.c ****     uint32 returnStatus;
2211:Generated_Source\PSoC4/CyLib.c **** 
2212:Generated_Source\PSoC4/CyLib.c ****     reason &= (CY_SYS_RESET_WDT | CY_SYS_RESET_PROTFAULT | CY_SYS_RESET_SW);
 392              		.loc 1 2212 0
 393 0000 1923     		mov	r3, #25
 394 0002 021C     		mov	r2, r0
2213:Generated_Source\PSoC4/CyLib.c ****     returnStatus = CY_SYS_RES_CAUSE_REG &
 395              		.loc 1 2213 0
 396 0004 0249     		ldr	r1, .L33
2212:Generated_Source\PSoC4/CyLib.c ****     returnStatus = CY_SYS_RES_CAUSE_REG &
 397              		.loc 1 2212 0
 398 0006 1A40     		and	r2, r3
 399              	.LVL21:
 400              		.loc 1 2213 0
 401 0008 0868     		ldr	r0, [r1]
 402              	.LVL22:
2214:Generated_Source\PSoC4/CyLib.c ****                   (CY_SYS_RESET_WDT | CY_SYS_RESET_PROTFAULT | CY_SYS_RESET_SW);
2215:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_RES_CAUSE_REG = reason;
2216:Generated_Source\PSoC4/CyLib.c **** 
2217:Generated_Source\PSoC4/CyLib.c ****     return (returnStatus);
2218:Generated_Source\PSoC4/CyLib.c **** }
 403              		.loc 1 2218 0
 404              		@ sp needed
2213:Generated_Source\PSoC4/CyLib.c ****                   (CY_SYS_RESET_WDT | CY_SYS_RESET_PROTFAULT | CY_SYS_RESET_SW);
 405              		.loc 1 2213 0
 406 000a 1840     		and	r0, r3
 407              	.LVL23:
2215:Generated_Source\PSoC4/CyLib.c **** 
 408              		.loc 1 2215 0
 409 000c 0A60     		str	r2, [r1]
 410              		.loc 1 2218 0
 411 000e 7047     		bx	lr
 412              	.L34:
 413              		.align	2
 414              	.L33:
 415 0010 54000340 		.word	1073938516
 416              		.cfi_endproc
 417              	.LFE12:
 418              		.size	CySysGetResetReason, .-CySysGetResetReason
 419              		.section	.text.CyDisableInts,"ax",%progbits
 420              		.align	1
 421              		.global	CyDisableInts
 422              		.code	16
 423              		.thumb_func
 424              		.type	CyDisableInts, %function
 425              	CyDisableInts:
 426              	.LFB13:
2219:Generated_Source\PSoC4/CyLib.c **** 
2220:Generated_Source\PSoC4/CyLib.c **** 
2221:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2222:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDisableInts
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\cc2xwxHk.s 			page 48


2223:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2224:Generated_Source\PSoC4/CyLib.c **** *
2225:Generated_Source\PSoC4/CyLib.c **** *  Disables all interrupts.
2226:Generated_Source\PSoC4/CyLib.c **** *
2227:Generated_Source\PSoC4/CyLib.c **** * \return
2228:Generated_Source\PSoC4/CyLib.c **** *  32 bit mask of previously enabled interrupts.
2229:Generated_Source\PSoC4/CyLib.c **** *
2230:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2231:Generated_Source\PSoC4/CyLib.c **** uint32 CyDisableInts(void)
2232:Generated_Source\PSoC4/CyLib.c **** {
 427              		.loc 1 2232 0
 428              		.cfi_startproc
2233:Generated_Source\PSoC4/CyLib.c ****     uint32 intState;
2234:Generated_Source\PSoC4/CyLib.c **** 
2235:Generated_Source\PSoC4/CyLib.c ****     /* Get current interrupt state. */
2236:Generated_Source\PSoC4/CyLib.c ****     intState = CY_INT_CLEAR_REG;
2237:Generated_Source\PSoC4/CyLib.c **** 
2238:Generated_Source\PSoC4/CyLib.c ****     /* Disable all interrupts. */
2239:Generated_Source\PSoC4/CyLib.c ****     CY_INT_CLEAR_REG = CY_INT_CLEAR_DISABLE_ALL;
 429              		.loc 1 2239 0
 430 0000 0122     		mov	r2, #1
2236:Generated_Source\PSoC4/CyLib.c **** 
 431              		.loc 1 2236 0
 432 0002 024B     		ldr	r3, .L36
 433              		.loc 1 2239 0
 434 0004 5242     		neg	r2, r2
2236:Generated_Source\PSoC4/CyLib.c **** 
 435              		.loc 1 2236 0
 436 0006 1868     		ldr	r0, [r3]
 437              	.LVL24:
2240:Generated_Source\PSoC4/CyLib.c **** 
2241:Generated_Source\PSoC4/CyLib.c ****     return (intState);
2242:Generated_Source\PSoC4/CyLib.c **** }
 438              		.loc 1 2242 0
 439              		@ sp needed
2239:Generated_Source\PSoC4/CyLib.c **** 
 440              		.loc 1 2239 0
 441 0008 1A60     		str	r2, [r3]
 442              		.loc 1 2242 0
 443 000a 7047     		bx	lr
 444              	.L37:
 445              		.align	2
 446              	.L36:
 447 000c 80E100E0 		.word	-536813184
 448              		.cfi_endproc
 449              	.LFE13:
 450              		.size	CyDisableInts, .-CyDisableInts
 451              		.section	.text.CyEnableInts,"ax",%progbits
 452              		.align	1
 453              		.global	CyEnableInts
 454              		.code	16
 455              		.thumb_func
 456              		.type	CyEnableInts, %function
 457              	CyEnableInts:
 458              	.LFB14:
2243:Generated_Source\PSoC4/CyLib.c **** 
2244:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\cc2xwxHk.s 			page 49


2245:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2246:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyEnableInts
2247:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2248:Generated_Source\PSoC4/CyLib.c **** *
2249:Generated_Source\PSoC4/CyLib.c **** *  Enables interrupts to a given state.
2250:Generated_Source\PSoC4/CyLib.c **** *
2251:Generated_Source\PSoC4/CyLib.c **** *  \param mask The 32 bit mask of interrupts to enable.
2252:Generated_Source\PSoC4/CyLib.c **** *
2253:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2254:Generated_Source\PSoC4/CyLib.c **** void CyEnableInts(uint32 mask)
2255:Generated_Source\PSoC4/CyLib.c **** {
 459              		.loc 1 2255 0
 460              		.cfi_startproc
 461              	.LVL25:
2256:Generated_Source\PSoC4/CyLib.c ****     CY_INT_ENABLE_REG = mask;
 462              		.loc 1 2256 0
 463 0000 014B     		ldr	r3, .L39
2257:Generated_Source\PSoC4/CyLib.c **** }
 464              		.loc 1 2257 0
 465              		@ sp needed
2256:Generated_Source\PSoC4/CyLib.c ****     CY_INT_ENABLE_REG = mask;
 466              		.loc 1 2256 0
 467 0002 1860     		str	r0, [r3]
 468              		.loc 1 2257 0
 469 0004 7047     		bx	lr
 470              	.L40:
 471 0006 C046     		.align	2
 472              	.L39:
 473 0008 00E100E0 		.word	-536813312
 474              		.cfi_endproc
 475              	.LFE14:
 476              		.size	CyEnableInts, .-CyEnableInts
 477              		.section	.text.CyIntSetSysVector,"ax",%progbits
 478              		.align	1
 479              		.global	CyIntSetSysVector
 480              		.code	16
 481              		.thumb_func
 482              		.type	CyIntSetSysVector, %function
 483              	CyIntSetSysVector:
 484              	.LFB15:
2258:Generated_Source\PSoC4/CyLib.c **** 
2259:Generated_Source\PSoC4/CyLib.c **** 
2260:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2261:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetSysVector
2262:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2263:Generated_Source\PSoC4/CyLib.c **** *
2264:Generated_Source\PSoC4/CyLib.c **** *  Sets the interrupt vector of the specified system interrupt number. These
2265:Generated_Source\PSoC4/CyLib.c **** *  interrupts are for SysTick, PendSV and others.
2266:Generated_Source\PSoC4/CyLib.c **** *
2267:Generated_Source\PSoC4/CyLib.c **** *  \param number: System interrupt number:
2268:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_NMI_IRQN        - Non Maskable Interrupt
2269:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_HARD_FAULT_IRQN - Hard Fault Interrupt
2270:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SVCALL_IRQN     - SV Call Interrupt
2271:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_PEND_SV_IRQN    - Pend SV Interrupt
2272:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SYSTICK_IRQN    - System Tick Interrupt
2273:Generated_Source\PSoC4/CyLib.c **** *
2274:Generated_Source\PSoC4/CyLib.c **** *  \param address Pointer to an interrupt service routine.
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\cc2xwxHk.s 			page 50


2275:Generated_Source\PSoC4/CyLib.c **** *
2276:Generated_Source\PSoC4/CyLib.c **** * \return The old ISR vector at this location.
2277:Generated_Source\PSoC4/CyLib.c **** *
2278:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2279:Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntSetSysVector(uint8 number, cyisraddress address)
2280:Generated_Source\PSoC4/CyLib.c **** {
 485              		.loc 1 2280 0
 486              		.cfi_startproc
 487              	.LVL26:
2281:Generated_Source\PSoC4/CyLib.c ****     cyisraddress oldIsr;
2282:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
2283:Generated_Source\PSoC4/CyLib.c **** 
2284:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_INT_IRQ_BASE);
2285:Generated_Source\PSoC4/CyLib.c **** 
2286:Generated_Source\PSoC4/CyLib.c ****     /* Save old Interrupt service routine. */
2287:Generated_Source\PSoC4/CyLib.c ****     oldIsr = ramVectorTable[number];
 488              		.loc 1 2287 0
 489 0000 8023     		mov	r3, #128
 490 0002 8000     		lsl	r0, r0, #2
 491              	.LVL27:
 492 0004 9B05     		lsl	r3, r3, #22
 493 0006 C318     		add	r3, r0, r3
 494 0008 1868     		ldr	r0, [r3]
 495              	.LVL28:
2288:Generated_Source\PSoC4/CyLib.c **** 
2289:Generated_Source\PSoC4/CyLib.c ****     /* Set new Interrupt service routine. */
2290:Generated_Source\PSoC4/CyLib.c ****     ramVectorTable[number] = address;
2291:Generated_Source\PSoC4/CyLib.c **** 
2292:Generated_Source\PSoC4/CyLib.c ****     return(oldIsr);
2293:Generated_Source\PSoC4/CyLib.c **** }
 496              		.loc 1 2293 0
 497              		@ sp needed
2290:Generated_Source\PSoC4/CyLib.c **** 
 498              		.loc 1 2290 0
 499 000a 1960     		str	r1, [r3]
 500              		.loc 1 2293 0
 501 000c 7047     		bx	lr
 502              		.cfi_endproc
 503              	.LFE15:
 504              		.size	CyIntSetSysVector, .-CyIntSetSysVector
 505              		.section	.text.CyIntGetSysVector,"ax",%progbits
 506              		.align	1
 507              		.global	CyIntGetSysVector
 508              		.code	16
 509              		.thumb_func
 510              		.type	CyIntGetSysVector, %function
 511              	CyIntGetSysVector:
 512              	.LFB16:
2294:Generated_Source\PSoC4/CyLib.c **** 
2295:Generated_Source\PSoC4/CyLib.c **** 
2296:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2297:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetSysVector
2298:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2299:Generated_Source\PSoC4/CyLib.c **** *
2300:Generated_Source\PSoC4/CyLib.c **** *   Gets the interrupt vector of the specified system interrupt number. These
2301:Generated_Source\PSoC4/CyLib.c **** *   interrupts are for SysTick, PendSV and others.
2302:Generated_Source\PSoC4/CyLib.c **** *
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\cc2xwxHk.s 			page 51


2303:Generated_Source\PSoC4/CyLib.c **** *  \param number: System interrupt number:
2304:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_NMI_IRQN        - Non Maskable Interrupt
2305:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_HARD_FAULT_IRQN - Hard Fault Interrupt
2306:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SVCALL_IRQN     - SV Call Interrupt
2307:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_PEND_SV_IRQN    - Pend SV Interrupt
2308:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SYSTICK_IRQN    - System Tick Interrupt
2309:Generated_Source\PSoC4/CyLib.c **** *
2310:Generated_Source\PSoC4/CyLib.c **** * \return Address of the ISR in the interrupt vector table.
2311:Generated_Source\PSoC4/CyLib.c **** *
2312:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2313:Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntGetSysVector(uint8 number)
2314:Generated_Source\PSoC4/CyLib.c **** {
 513              		.loc 1 2314 0
 514              		.cfi_startproc
 515              	.LVL29:
2315:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
2316:Generated_Source\PSoC4/CyLib.c **** 
2317:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_INT_IRQ_BASE);
2318:Generated_Source\PSoC4/CyLib.c **** 
2319:Generated_Source\PSoC4/CyLib.c ****     return(ramVectorTable[number]);
 516              		.loc 1 2319 0
 517 0000 8023     		mov	r3, #128
 518 0002 8000     		lsl	r0, r0, #2
 519              	.LVL30:
 520 0004 9B05     		lsl	r3, r3, #22
 521 0006 C018     		add	r0, r0, r3
 522 0008 0068     		ldr	r0, [r0]
2320:Generated_Source\PSoC4/CyLib.c **** }
 523              		.loc 1 2320 0
 524              		@ sp needed
 525 000a 7047     		bx	lr
 526              		.cfi_endproc
 527              	.LFE16:
 528              		.size	CyIntGetSysVector, .-CyIntGetSysVector
 529              		.section	.text.CyIntSetVector,"ax",%progbits
 530              		.align	1
 531              		.global	CyIntSetVector
 532              		.code	16
 533              		.thumb_func
 534              		.type	CyIntSetVector, %function
 535              	CyIntSetVector:
 536              	.LFB17:
2321:Generated_Source\PSoC4/CyLib.c **** 
2322:Generated_Source\PSoC4/CyLib.c **** 
2323:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2324:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetVector
2325:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2326:Generated_Source\PSoC4/CyLib.c **** *
2327:Generated_Source\PSoC4/CyLib.c **** *  Sets the interrupt vector of the specified interrupt number.
2328:Generated_Source\PSoC4/CyLib.c **** *
2329:Generated_Source\PSoC4/CyLib.c **** *  \param number Valid range [0-31].  Interrupt number
2330:Generated_Source\PSoC4/CyLib.c **** *  \param address Pointer to an interrupt service routine
2331:Generated_Source\PSoC4/CyLib.c **** *
2332:Generated_Source\PSoC4/CyLib.c **** * \return Previous interrupt vector value.
2333:Generated_Source\PSoC4/CyLib.c **** *
2334:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2335:Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntSetVector(uint8 number, cyisraddress address)
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\cc2xwxHk.s 			page 52


2336:Generated_Source\PSoC4/CyLib.c **** {
 537              		.loc 1 2336 0
 538              		.cfi_startproc
 539              	.LVL31:
2337:Generated_Source\PSoC4/CyLib.c ****     cyisraddress oldIsr;
2338:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
2339:Generated_Source\PSoC4/CyLib.c **** 
2340:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
2341:Generated_Source\PSoC4/CyLib.c **** 
2342:Generated_Source\PSoC4/CyLib.c ****     /* Save old Interrupt service routine. */
2343:Generated_Source\PSoC4/CyLib.c ****     oldIsr = ramVectorTable[CY_INT_IRQ_BASE + number];
 540              		.loc 1 2343 0
 541 0000 024B     		ldr	r3, .L44
 542 0002 8000     		lsl	r0, r0, #2
 543              	.LVL32:
 544 0004 C318     		add	r3, r0, r3
 545 0006 1868     		ldr	r0, [r3]
 546              	.LVL33:
2344:Generated_Source\PSoC4/CyLib.c **** 
2345:Generated_Source\PSoC4/CyLib.c ****     /* Set new Interrupt service routine. */
2346:Generated_Source\PSoC4/CyLib.c ****     ramVectorTable[CY_INT_IRQ_BASE + number] = address;
2347:Generated_Source\PSoC4/CyLib.c **** 
2348:Generated_Source\PSoC4/CyLib.c ****     return(oldIsr);
2349:Generated_Source\PSoC4/CyLib.c **** }
 547              		.loc 1 2349 0
 548              		@ sp needed
2346:Generated_Source\PSoC4/CyLib.c **** 
 549              		.loc 1 2346 0
 550 0008 1960     		str	r1, [r3]
 551              		.loc 1 2349 0
 552 000a 7047     		bx	lr
 553              	.L45:
 554              		.align	2
 555              	.L44:
 556 000c 40000020 		.word	536870976
 557              		.cfi_endproc
 558              	.LFE17:
 559              		.size	CyIntSetVector, .-CyIntSetVector
 560              		.section	.text.CyIntGetVector,"ax",%progbits
 561              		.align	1
 562              		.global	CyIntGetVector
 563              		.code	16
 564              		.thumb_func
 565              		.type	CyIntGetVector, %function
 566              	CyIntGetVector:
 567              	.LFB18:
2350:Generated_Source\PSoC4/CyLib.c **** 
2351:Generated_Source\PSoC4/CyLib.c **** 
2352:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2353:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetVector
2354:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2355:Generated_Source\PSoC4/CyLib.c **** *
2356:Generated_Source\PSoC4/CyLib.c **** *  Gets the interrupt vector of the specified interrupt number.
2357:Generated_Source\PSoC4/CyLib.c **** *
2358:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number
2359:Generated_Source\PSoC4/CyLib.c **** *
2360:Generated_Source\PSoC4/CyLib.c **** * \return Address of the ISR in the interrupt vector table.
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\cc2xwxHk.s 			page 53


2361:Generated_Source\PSoC4/CyLib.c **** *
2362:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2363:Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntGetVector(uint8 number)
2364:Generated_Source\PSoC4/CyLib.c **** {
 568              		.loc 1 2364 0
 569              		.cfi_startproc
 570              	.LVL34:
2365:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
2366:Generated_Source\PSoC4/CyLib.c **** 
2367:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
2368:Generated_Source\PSoC4/CyLib.c **** 
2369:Generated_Source\PSoC4/CyLib.c ****     return (ramVectorTable[CY_INT_IRQ_BASE + number]);
 571              		.loc 1 2369 0
 572 0000 024B     		ldr	r3, .L47
 573 0002 8000     		lsl	r0, r0, #2
 574              	.LVL35:
 575 0004 C018     		add	r0, r0, r3
 576 0006 0068     		ldr	r0, [r0]
2370:Generated_Source\PSoC4/CyLib.c **** }
 577              		.loc 1 2370 0
 578              		@ sp needed
 579 0008 7047     		bx	lr
 580              	.L48:
 581 000a C046     		.align	2
 582              	.L47:
 583 000c 40000020 		.word	536870976
 584              		.cfi_endproc
 585              	.LFE18:
 586              		.size	CyIntGetVector, .-CyIntGetVector
 587              		.section	.text.CyIntSetPriority,"ax",%progbits
 588              		.align	1
 589              		.global	CyIntSetPriority
 590              		.code	16
 591              		.thumb_func
 592              		.type	CyIntSetPriority, %function
 593              	CyIntSetPriority:
 594              	.LFB19:
2371:Generated_Source\PSoC4/CyLib.c **** 
2372:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2373:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetPriority
2374:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2375:Generated_Source\PSoC4/CyLib.c **** *
2376:Generated_Source\PSoC4/CyLib.c **** *  Sets the priority of the interrupt.
2377:Generated_Source\PSoC4/CyLib.c **** *
2378:Generated_Source\PSoC4/CyLib.c **** *  \param priority: Priority of the interrupt. 0 - 3, 0 being the highest.
2379:Generated_Source\PSoC4/CyLib.c **** *  \param number: The number of the interrupt, 0 - 31.
2380:Generated_Source\PSoC4/CyLib.c **** *
2381:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2382:Generated_Source\PSoC4/CyLib.c **** void CyIntSetPriority(uint8 number, uint8 priority)
2383:Generated_Source\PSoC4/CyLib.c **** {
 595              		.loc 1 2383 0
 596              		.cfi_startproc
 597              	.LVL36:
 598 0000 38B5     		push	{r3, r4, r5, lr}
 599              		.cfi_def_cfa_offset 16
 600              		.cfi_offset 3, -16
 601              		.cfi_offset 4, -12
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\cc2xwxHk.s 			page 54


 602              		.cfi_offset 5, -8
 603              		.cfi_offset 14, -4
 604              		.loc 1 2383 0
 605 0002 041C     		mov	r4, r0
 606              	.LVL37:
 607 0004 0D1C     		mov	r5, r1
2384:Generated_Source\PSoC4/CyLib.c ****     uint8 interruptState;
2385:Generated_Source\PSoC4/CyLib.c ****     uint32 shift;
2386:Generated_Source\PSoC4/CyLib.c ****     uint32 value;
2387:Generated_Source\PSoC4/CyLib.c **** 
2388:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(priority <= CY_MIN_PRIORITY);
2389:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
2390:Generated_Source\PSoC4/CyLib.c **** 
2391:Generated_Source\PSoC4/CyLib.c ****     shift = CY_INT_PRIORITY_SHIFT(number);
2392:Generated_Source\PSoC4/CyLib.c **** 
2393:Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
 608              		.loc 1 2393 0
 609 0006 FFF7FEFF 		bl	CyEnterCriticalSection
 610              	.LVL38:
2394:Generated_Source\PSoC4/CyLib.c **** 
2395:Generated_Source\PSoC4/CyLib.c ****     value = CY_INT_PRIORITY_REG(number);
 611              		.loc 1 2395 0
 612 000a A308     		lsr	r3, r4, #2
 613 000c 074A     		ldr	r2, .L50
 614 000e 9B00     		lsl	r3, r3, #2
 615 0010 9B18     		add	r3, r3, r2
2391:Generated_Source\PSoC4/CyLib.c **** 
 616              		.loc 1 2391 0
 617 0012 0322     		mov	r2, #3
 618 0014 1440     		and	r4, r2
 619              	.LVL39:
 620 0016 9440     		lsl	r4, r4, r2
 621 0018 0634     		add	r4, r4, #6
2396:Generated_Source\PSoC4/CyLib.c ****     value &= (uint32)(~((uint32)(CY_INT_PRIORITY_MASK << shift)));
 622              		.loc 1 2396 0
 623 001a A240     		lsl	r2, r2, r4
2397:Generated_Source\PSoC4/CyLib.c ****     value |= ((uint32)priority << shift);
 624              		.loc 1 2397 0
 625 001c A540     		lsl	r5, r5, r4
2395:Generated_Source\PSoC4/CyLib.c ****     value &= (uint32)(~((uint32)(CY_INT_PRIORITY_MASK << shift)));
 626              		.loc 1 2395 0
 627 001e 1968     		ldr	r1, [r3]
 628              	.LVL40:
2398:Generated_Source\PSoC4/CyLib.c ****     CY_INT_PRIORITY_REG(number) = value;
2399:Generated_Source\PSoC4/CyLib.c **** 
2400:Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
2401:Generated_Source\PSoC4/CyLib.c **** }
 629              		.loc 1 2401 0
 630              		@ sp needed
2396:Generated_Source\PSoC4/CyLib.c ****     value |= ((uint32)priority << shift);
 631              		.loc 1 2396 0
 632 0020 9143     		bic	r1, r2
 633              	.LVL41:
2397:Generated_Source\PSoC4/CyLib.c ****     CY_INT_PRIORITY_REG(number) = value;
 634              		.loc 1 2397 0
 635 0022 2943     		orr	r1, r5
 636              	.LVL42:
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\cc2xwxHk.s 			page 55


2398:Generated_Source\PSoC4/CyLib.c ****     CY_INT_PRIORITY_REG(number) = value;
 637              		.loc 1 2398 0
 638 0024 1960     		str	r1, [r3]
2400:Generated_Source\PSoC4/CyLib.c **** }
 639              		.loc 1 2400 0
 640 0026 FFF7FEFF 		bl	CyExitCriticalSection
 641              	.LVL43:
 642              		.loc 1 2401 0
 643 002a 38BD     		pop	{r3, r4, r5, pc}
 644              	.L51:
 645              		.align	2
 646              	.L50:
 647 002c 00E400E0 		.word	-536812544
 648              		.cfi_endproc
 649              	.LFE19:
 650              		.size	CyIntSetPriority, .-CyIntSetPriority
 651              		.section	.text.CyIntGetPriority,"ax",%progbits
 652              		.align	1
 653              		.global	CyIntGetPriority
 654              		.code	16
 655              		.thumb_func
 656              		.type	CyIntGetPriority, %function
 657              	CyIntGetPriority:
 658              	.LFB20:
2402:Generated_Source\PSoC4/CyLib.c **** 
2403:Generated_Source\PSoC4/CyLib.c **** 
2404:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2405:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetPriority
2406:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2407:Generated_Source\PSoC4/CyLib.c **** *
2408:Generated_Source\PSoC4/CyLib.c **** *  Gets the priority of the interrupt.
2409:Generated_Source\PSoC4/CyLib.c **** *
2410:Generated_Source\PSoC4/CyLib.c **** *  \param number: The number of the interrupt, 0 - 31.
2411:Generated_Source\PSoC4/CyLib.c **** *
2412:Generated_Source\PSoC4/CyLib.c **** * \return
2413:Generated_Source\PSoC4/CyLib.c **** *  Priority of the interrupt. 0 - 3, 0 being the highest.
2414:Generated_Source\PSoC4/CyLib.c **** *
2415:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2416:Generated_Source\PSoC4/CyLib.c **** uint8 CyIntGetPriority(uint8 number)
2417:Generated_Source\PSoC4/CyLib.c **** {
 659              		.loc 1 2417 0
 660              		.cfi_startproc
 661              	.LVL44:
2418:Generated_Source\PSoC4/CyLib.c ****     uint8 priority;
2419:Generated_Source\PSoC4/CyLib.c **** 
2420:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
2421:Generated_Source\PSoC4/CyLib.c **** 
2422:Generated_Source\PSoC4/CyLib.c ****     priority = (uint8) (CY_INT_PRIORITY_REG(number) >> CY_INT_PRIORITY_SHIFT(number));
 662              		.loc 1 2422 0
 663 0000 8308     		lsr	r3, r0, #2
 664 0002 064A     		ldr	r2, .L53
 665 0004 9B00     		lsl	r3, r3, #2
 666 0006 9B18     		add	r3, r3, r2
 667 0008 1968     		ldr	r1, [r3]
 668              	.LVL45:
 669 000a 0322     		mov	r2, #3
 670 000c 031C     		mov	r3, r0
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\cc2xwxHk.s 			page 56


 671 000e 1340     		and	r3, r2
 672 0010 9340     		lsl	r3, r3, r2
 673 0012 0633     		add	r3, r3, #6
 674 0014 D940     		lsr	r1, r1, r3
 675              	.LVL46:
 676 0016 081C     		mov	r0, r1
 677              	.LVL47:
2423:Generated_Source\PSoC4/CyLib.c **** 
2424:Generated_Source\PSoC4/CyLib.c ****     return (priority & (uint8) CY_INT_PRIORITY_MASK);
2425:Generated_Source\PSoC4/CyLib.c **** }
 678              		.loc 1 2425 0
 679              		@ sp needed
2424:Generated_Source\PSoC4/CyLib.c **** }
 680              		.loc 1 2424 0
 681 0018 1040     		and	r0, r2
 682              		.loc 1 2425 0
 683 001a 7047     		bx	lr
 684              	.L54:
 685              		.align	2
 686              	.L53:
 687 001c 00E400E0 		.word	-536812544
 688              		.cfi_endproc
 689              	.LFE20:
 690              		.size	CyIntGetPriority, .-CyIntGetPriority
 691              		.section	.text.CyIntEnable,"ax",%progbits
 692              		.align	1
 693              		.global	CyIntEnable
 694              		.code	16
 695              		.thumb_func
 696              		.type	CyIntEnable, %function
 697              	CyIntEnable:
 698              	.LFB21:
2426:Generated_Source\PSoC4/CyLib.c **** 
2427:Generated_Source\PSoC4/CyLib.c **** 
2428:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2429:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntEnable
2430:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2431:Generated_Source\PSoC4/CyLib.c **** *
2432:Generated_Source\PSoC4/CyLib.c **** *  Enables the specified interrupt number.
2433:Generated_Source\PSoC4/CyLib.c **** *
2434:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number
2435:Generated_Source\PSoC4/CyLib.c **** *
2436:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2437:Generated_Source\PSoC4/CyLib.c **** void CyIntEnable(uint8 number)
2438:Generated_Source\PSoC4/CyLib.c **** {
 699              		.loc 1 2438 0
 700              		.cfi_startproc
 701              	.LVL48:
2439:Generated_Source\PSoC4/CyLib.c ****     CY_INT_ENABLE_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 702              		.loc 1 2439 0
 703 0000 1F23     		mov	r3, #31
 704 0002 1840     		and	r0, r3
 705              	.LVL49:
 706 0004 1E3B     		sub	r3, r3, #30
 707 0006 8340     		lsl	r3, r3, r0
 708 0008 181C     		mov	r0, r3
 709 000a 014B     		ldr	r3, .L56
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\cc2xwxHk.s 			page 57


2440:Generated_Source\PSoC4/CyLib.c **** }
 710              		.loc 1 2440 0
 711              		@ sp needed
2439:Generated_Source\PSoC4/CyLib.c ****     CY_INT_ENABLE_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 712              		.loc 1 2439 0
 713 000c 1860     		str	r0, [r3]
 714              		.loc 1 2440 0
 715 000e 7047     		bx	lr
 716              	.L57:
 717              		.align	2
 718              	.L56:
 719 0010 00E100E0 		.word	-536813312
 720              		.cfi_endproc
 721              	.LFE21:
 722              		.size	CyIntEnable, .-CyIntEnable
 723              		.section	.text.CyIntGetState,"ax",%progbits
 724              		.align	1
 725              		.global	CyIntGetState
 726              		.code	16
 727              		.thumb_func
 728              		.type	CyIntGetState, %function
 729              	CyIntGetState:
 730              	.LFB22:
2441:Generated_Source\PSoC4/CyLib.c **** 
2442:Generated_Source\PSoC4/CyLib.c **** 
2443:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2444:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetState
2445:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2446:Generated_Source\PSoC4/CyLib.c **** *
2447:Generated_Source\PSoC4/CyLib.c **** *  Gets the enable state of the specified interrupt number.
2448:Generated_Source\PSoC4/CyLib.c **** *
2449:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number.
2450:Generated_Source\PSoC4/CyLib.c **** *
2451:Generated_Source\PSoC4/CyLib.c **** * \return
2452:Generated_Source\PSoC4/CyLib.c **** *  Enable status: 1 if enabled, 0 if disabled
2453:Generated_Source\PSoC4/CyLib.c **** *
2454:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2455:Generated_Source\PSoC4/CyLib.c **** uint8 CyIntGetState(uint8 number)
2456:Generated_Source\PSoC4/CyLib.c **** {
 731              		.loc 1 2456 0
 732              		.cfi_startproc
 733              	.LVL50:
2457:Generated_Source\PSoC4/CyLib.c ****     /* Get state of interrupt. */
2458:Generated_Source\PSoC4/CyLib.c ****     return ((0u != (CY_INT_ENABLE_REG & ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number)))) ?
 734              		.loc 1 2458 0
 735 0000 1F22     		mov	r2, #31
 736 0002 044B     		ldr	r3, .L59
 737 0004 1040     		and	r0, r2
 738              	.LVL51:
 739 0006 1B68     		ldr	r3, [r3]
2459:Generated_Source\PSoC4/CyLib.c **** }
 740              		.loc 1 2459 0
 741              		@ sp needed
2458:Generated_Source\PSoC4/CyLib.c **** }
 742              		.loc 1 2458 0
 743 0008 C340     		lsr	r3, r3, r0
 744 000a 181C     		mov	r0, r3
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\cc2xwxHk.s 			page 58


 745 000c 0123     		mov	r3, #1
 746 000e 1840     		and	r0, r3
 747              		.loc 1 2459 0
 748 0010 7047     		bx	lr
 749              	.L60:
 750 0012 C046     		.align	2
 751              	.L59:
 752 0014 00E100E0 		.word	-536813312
 753              		.cfi_endproc
 754              	.LFE22:
 755              		.size	CyIntGetState, .-CyIntGetState
 756              		.section	.text.CyIntDisable,"ax",%progbits
 757              		.align	1
 758              		.global	CyIntDisable
 759              		.code	16
 760              		.thumb_func
 761              		.type	CyIntDisable, %function
 762              	CyIntDisable:
 763              	.LFB23:
2460:Generated_Source\PSoC4/CyLib.c **** 
2461:Generated_Source\PSoC4/CyLib.c **** 
2462:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2463:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntDisable
2464:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2465:Generated_Source\PSoC4/CyLib.c **** *
2466:Generated_Source\PSoC4/CyLib.c **** *   Disables the specified interrupt number.
2467:Generated_Source\PSoC4/CyLib.c **** *
2468:Generated_Source\PSoC4/CyLib.c **** *   \param number: Valid range [0-31].  Interrupt number.
2469:Generated_Source\PSoC4/CyLib.c **** *
2470:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2471:Generated_Source\PSoC4/CyLib.c **** void CyIntDisable(uint8 number)
2472:Generated_Source\PSoC4/CyLib.c **** {
 764              		.loc 1 2472 0
 765              		.cfi_startproc
 766              	.LVL52:
2473:Generated_Source\PSoC4/CyLib.c ****     CY_INT_CLEAR_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 767              		.loc 1 2473 0
 768 0000 1F23     		mov	r3, #31
 769 0002 1840     		and	r0, r3
 770              	.LVL53:
 771 0004 1E3B     		sub	r3, r3, #30
 772 0006 8340     		lsl	r3, r3, r0
 773 0008 181C     		mov	r0, r3
 774 000a 014B     		ldr	r3, .L62
2474:Generated_Source\PSoC4/CyLib.c **** }
 775              		.loc 1 2474 0
 776              		@ sp needed
2473:Generated_Source\PSoC4/CyLib.c ****     CY_INT_CLEAR_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 777              		.loc 1 2473 0
 778 000c 1860     		str	r0, [r3]
 779              		.loc 1 2474 0
 780 000e 7047     		bx	lr
 781              	.L63:
 782              		.align	2
 783              	.L62:
 784 0010 80E100E0 		.word	-536813184
 785              		.cfi_endproc
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\cc2xwxHk.s 			page 59


 786              	.LFE23:
 787              		.size	CyIntDisable, .-CyIntDisable
 788              		.section	.text.CyIntSetPending,"ax",%progbits
 789              		.align	1
 790              		.global	CyIntSetPending
 791              		.code	16
 792              		.thumb_func
 793              		.type	CyIntSetPending, %function
 794              	CyIntSetPending:
 795              	.LFB24:
2475:Generated_Source\PSoC4/CyLib.c **** 
2476:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2477:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetPending
2478:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2479:Generated_Source\PSoC4/CyLib.c **** *
2480:Generated_Source\PSoC4/CyLib.c **** *  Forces the specified interrupt number to be pending.
2481:Generated_Source\PSoC4/CyLib.c **** *
2482:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number.
2483:Generated_Source\PSoC4/CyLib.c **** *
2484:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2485:Generated_Source\PSoC4/CyLib.c **** void CyIntSetPending(uint8 number)
2486:Generated_Source\PSoC4/CyLib.c **** {
 796              		.loc 1 2486 0
 797              		.cfi_startproc
 798              	.LVL54:
2487:Generated_Source\PSoC4/CyLib.c ****     CY_INT_SET_PEND_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 799              		.loc 1 2487 0
 800 0000 1F23     		mov	r3, #31
 801 0002 1840     		and	r0, r3
 802              	.LVL55:
 803 0004 1E3B     		sub	r3, r3, #30
 804 0006 8340     		lsl	r3, r3, r0
 805 0008 181C     		mov	r0, r3
 806 000a 014B     		ldr	r3, .L65
2488:Generated_Source\PSoC4/CyLib.c **** }
 807              		.loc 1 2488 0
 808              		@ sp needed
2487:Generated_Source\PSoC4/CyLib.c ****     CY_INT_SET_PEND_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 809              		.loc 1 2487 0
 810 000c 1860     		str	r0, [r3]
 811              		.loc 1 2488 0
 812 000e 7047     		bx	lr
 813              	.L66:
 814              		.align	2
 815              	.L65:
 816 0010 00E200E0 		.word	-536813056
 817              		.cfi_endproc
 818              	.LFE24:
 819              		.size	CyIntSetPending, .-CyIntSetPending
 820              		.section	.text.CyIntClearPending,"ax",%progbits
 821              		.align	1
 822              		.global	CyIntClearPending
 823              		.code	16
 824              		.thumb_func
 825              		.type	CyIntClearPending, %function
 826              	CyIntClearPending:
 827              	.LFB25:
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\cc2xwxHk.s 			page 60


2489:Generated_Source\PSoC4/CyLib.c **** 
2490:Generated_Source\PSoC4/CyLib.c **** 
2491:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2492:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntClearPending
2493:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2494:Generated_Source\PSoC4/CyLib.c **** *
2495:Generated_Source\PSoC4/CyLib.c **** *  Clears any pending interrupt for the specified interrupt number.
2496:Generated_Source\PSoC4/CyLib.c **** *
2497:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number.
2498:Generated_Source\PSoC4/CyLib.c **** *
2499:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2500:Generated_Source\PSoC4/CyLib.c **** void CyIntClearPending(uint8 number)
2501:Generated_Source\PSoC4/CyLib.c **** {
 828              		.loc 1 2501 0
 829              		.cfi_startproc
 830              	.LVL56:
2502:Generated_Source\PSoC4/CyLib.c ****     CY_INT_CLR_PEND_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 831              		.loc 1 2502 0
 832 0000 1F23     		mov	r3, #31
 833 0002 1840     		and	r0, r3
 834              	.LVL57:
 835 0004 1E3B     		sub	r3, r3, #30
 836 0006 8340     		lsl	r3, r3, r0
 837 0008 181C     		mov	r0, r3
 838 000a 014B     		ldr	r3, .L68
2503:Generated_Source\PSoC4/CyLib.c **** }
 839              		.loc 1 2503 0
 840              		@ sp needed
2502:Generated_Source\PSoC4/CyLib.c ****     CY_INT_CLR_PEND_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 841              		.loc 1 2502 0
 842 000c 1860     		str	r0, [r3]
 843              		.loc 1 2503 0
 844 000e 7047     		bx	lr
 845              	.L69:
 846              		.align	2
 847              	.L68:
 848 0010 80E200E0 		.word	-536812928
 849              		.cfi_endproc
 850              	.LFE25:
 851              		.size	CyIntClearPending, .-CyIntClearPending
 852              		.section	.text.CyHalt,"ax",%progbits
 853              		.align	1
 854              		.global	CyHalt
 855              		.code	16
 856              		.thumb_func
 857              		.type	CyHalt, %function
 858              	CyHalt:
 859              	.LFB26:
2504:Generated_Source\PSoC4/CyLib.c **** 
2505:Generated_Source\PSoC4/CyLib.c **** 
2506:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2507:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyHalt
2508:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2509:Generated_Source\PSoC4/CyLib.c **** *
2510:Generated_Source\PSoC4/CyLib.c **** *  Halts the CPU.
2511:Generated_Source\PSoC4/CyLib.c **** *
2512:Generated_Source\PSoC4/CyLib.c **** *  \param reason: Value to be used during debugging.
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\cc2xwxHk.s 			page 61


2513:Generated_Source\PSoC4/CyLib.c **** *
2514:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2515:Generated_Source\PSoC4/CyLib.c **** void CyHalt(uint8 reason)
2516:Generated_Source\PSoC4/CyLib.c **** {
 860              		.loc 1 2516 0
 861              		.cfi_startproc
 862              	.LVL58:
2517:Generated_Source\PSoC4/CyLib.c ****     if(0u != reason)
2518:Generated_Source\PSoC4/CyLib.c ****     {
2519:Generated_Source\PSoC4/CyLib.c ****         /* To remove unreferenced local variable warning */
2520:Generated_Source\PSoC4/CyLib.c ****     }
2521:Generated_Source\PSoC4/CyLib.c **** 
2522:Generated_Source\PSoC4/CyLib.c ****     #if defined (__ARMCC_VERSION)
2523:Generated_Source\PSoC4/CyLib.c ****         __breakpoint(0x0);
2524:Generated_Source\PSoC4/CyLib.c ****     #elif defined(__GNUC__) || defined (__ICCARM__)
2525:Generated_Source\PSoC4/CyLib.c ****         __asm("    bkpt    1");
 863              		.loc 1 2525 0
 864              	@ 2525 "Generated_Source\PSoC4\CyLib.c" 1
 865 0000 01BE     		    bkpt    1
 866              	@ 0 "" 2
2526:Generated_Source\PSoC4/CyLib.c ****     #elif defined(__C51__)
2527:Generated_Source\PSoC4/CyLib.c ****         CYDEV_HALT_CPU;
2528:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (__ARMCC_VERSION) */
2529:Generated_Source\PSoC4/CyLib.c **** }
 867              		.loc 1 2529 0
 868              		.code	16
 869              		@ sp needed
 870 0002 7047     		bx	lr
 871              		.cfi_endproc
 872              	.LFE26:
 873              		.size	CyHalt, .-CyHalt
 874              		.section	.text.CySoftwareReset,"ax",%progbits
 875              		.align	1
 876              		.global	CySoftwareReset
 877              		.code	16
 878              		.thumb_func
 879              		.type	CySoftwareReset, %function
 880              	CySoftwareReset:
 881              	.LFB27:
2530:Generated_Source\PSoC4/CyLib.c **** 
2531:Generated_Source\PSoC4/CyLib.c **** 
2532:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2533:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySoftwareReset
2534:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2535:Generated_Source\PSoC4/CyLib.c **** *
2536:Generated_Source\PSoC4/CyLib.c **** *  Forces a software reset of the device.
2537:Generated_Source\PSoC4/CyLib.c **** *
2538:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2539:Generated_Source\PSoC4/CyLib.c **** void CySoftwareReset(void)
2540:Generated_Source\PSoC4/CyLib.c **** {
 882              		.loc 1 2540 0
 883              		.cfi_startproc
2541:Generated_Source\PSoC4/CyLib.c ****     /***************************************************************************
2542:Generated_Source\PSoC4/CyLib.c ****     * Setting the system reset request bit. The vector key value must be written
2543:Generated_Source\PSoC4/CyLib.c ****     * to the register, otherwise the register write is unpredictable.
2544:Generated_Source\PSoC4/CyLib.c ****     ***************************************************************************/
2545:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_AIRCR_REG = (CY_SYS_AIRCR_REG & (uint32)(~CY_SYS_AIRCR_VECTKEY_MASK)) |
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\cc2xwxHk.s 			page 62


 884              		.loc 1 2545 0
 885 0000 034A     		ldr	r2, .L72
2546:Generated_Source\PSoC4/CyLib.c ****                             CY_SYS_AIRCR_VECTKEY | CY_SYS_AIRCR_SYSRESETREQ;
 886              		.loc 1 2546 0
 887 0002 0449     		ldr	r1, .L72+4
2545:Generated_Source\PSoC4/CyLib.c ****                             CY_SYS_AIRCR_VECTKEY | CY_SYS_AIRCR_SYSRESETREQ;
 888              		.loc 1 2545 0
 889 0004 1368     		ldr	r3, [r2]
2547:Generated_Source\PSoC4/CyLib.c **** }
 890              		.loc 1 2547 0
 891              		@ sp needed
2545:Generated_Source\PSoC4/CyLib.c ****                             CY_SYS_AIRCR_VECTKEY | CY_SYS_AIRCR_SYSRESETREQ;
 892              		.loc 1 2545 0
 893 0006 9BB2     		uxth	r3, r3
2546:Generated_Source\PSoC4/CyLib.c ****                             CY_SYS_AIRCR_VECTKEY | CY_SYS_AIRCR_SYSRESETREQ;
 894              		.loc 1 2546 0
 895 0008 0B43     		orr	r3, r1
2545:Generated_Source\PSoC4/CyLib.c ****                             CY_SYS_AIRCR_VECTKEY | CY_SYS_AIRCR_SYSRESETREQ;
 896              		.loc 1 2545 0
 897 000a 1360     		str	r3, [r2]
 898              		.loc 1 2547 0
 899 000c 7047     		bx	lr
 900              	.L73:
 901 000e C046     		.align	2
 902              	.L72:
 903 0010 0CED00E0 		.word	-536810228
 904 0014 0400FA05 		.word	100270084
 905              		.cfi_endproc
 906              	.LFE27:
 907              		.size	CySoftwareReset, .-CySoftwareReset
 908              		.section	.text.CyDelay,"ax",%progbits
 909              		.align	1
 910              		.global	CyDelay
 911              		.code	16
 912              		.thumb_func
 913              		.type	CyDelay, %function
 914              	CyDelay:
 915              	.LFB28:
2548:Generated_Source\PSoC4/CyLib.c **** 
2549:Generated_Source\PSoC4/CyLib.c **** 
2550:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2551:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDelay
2552:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2553:Generated_Source\PSoC4/CyLib.c **** *
2554:Generated_Source\PSoC4/CyLib.c **** *  Blocks for milliseconds.
2555:Generated_Source\PSoC4/CyLib.c **** *
2556:Generated_Source\PSoC4/CyLib.c **** *  \param milliseconds: number of milliseconds to delay.
2557:Generated_Source\PSoC4/CyLib.c **** *
2558:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2559:Generated_Source\PSoC4/CyLib.c **** void CyDelay(uint32 milliseconds)
2560:Generated_Source\PSoC4/CyLib.c **** {
 916              		.loc 1 2560 0
 917              		.cfi_startproc
 918              	.LVL59:
 919 0000 10B5     		push	{r4, lr}
 920              		.cfi_def_cfa_offset 8
 921              		.cfi_offset 4, -8
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\cc2xwxHk.s 			page 63


 922              		.cfi_offset 14, -4
 923 0002 041C     		mov	r4, r0
 924              	.LVL60:
 925              	.L75:
2561:Generated_Source\PSoC4/CyLib.c ****     while (milliseconds > CY_DELAY_MS_OVERFLOW)
 926              		.loc 1 2561 0
 927 0004 8022     		mov	r2, #128
 928 0006 074B     		ldr	r3, .L78
 929 0008 1202     		lsl	r2, r2, #8
 930 000a 9442     		cmp	r4, r2
 931 000c 05D9     		bls	.L77
2562:Generated_Source\PSoC4/CyLib.c ****     {
2563:Generated_Source\PSoC4/CyLib.c ****         /* This loop prevents overflow.
2564:Generated_Source\PSoC4/CyLib.c ****          * At 100MHz, milliseconds * cydelayFreqKhz overflows at about 42 seconds
2565:Generated_Source\PSoC4/CyLib.c ****          */
2566:Generated_Source\PSoC4/CyLib.c ****         CyDelayCycles(cydelay32kMs);
 932              		.loc 1 2566 0
 933 000e 5868     		ldr	r0, [r3, #4]
 934 0010 FFF7FEFF 		bl	CyDelayCycles
 935              	.LVL61:
2567:Generated_Source\PSoC4/CyLib.c ****         milliseconds -= CY_DELAY_MS_OVERFLOW;
 936              		.loc 1 2567 0
 937 0014 044B     		ldr	r3, .L78+4
 938 0016 E418     		add	r4, r4, r3
 939              	.LVL62:
 940 0018 F4E7     		b	.L75
 941              	.L77:
2568:Generated_Source\PSoC4/CyLib.c ****     }
2569:Generated_Source\PSoC4/CyLib.c **** 
2570:Generated_Source\PSoC4/CyLib.c ****     CyDelayCycles(milliseconds * cydelayFreqKhz);
 942              		.loc 1 2570 0
 943 001a 9868     		ldr	r0, [r3, #8]
2571:Generated_Source\PSoC4/CyLib.c **** }
 944              		.loc 1 2571 0
 945              		@ sp needed
2570:Generated_Source\PSoC4/CyLib.c **** }
 946              		.loc 1 2570 0
 947 001c 6043     		mul	r0, r4
 948 001e FFF7FEFF 		bl	CyDelayCycles
 949              	.LVL63:
 950              	.LVL64:
 951              		.loc 1 2571 0
 952 0022 10BD     		pop	{r4, pc}
 953              	.L79:
 954              		.align	2
 955              	.L78:
 956 0024 00000000 		.word	.LANCHOR0
 957 0028 0080FFFF 		.word	-32768
 958              		.cfi_endproc
 959              	.LFE28:
 960              		.size	CyDelay, .-CyDelay
 961              		.section	.text.CySysClkImoEnableWcoLock,"ax",%progbits
 962              		.align	1
 963              		.global	CySysClkImoEnableWcoLock
 964              		.code	16
 965              		.thumb_func
 966              		.type	CySysClkImoEnableWcoLock, %function
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\cc2xwxHk.s 			page 64


 967              	CySysClkImoEnableWcoLock:
 968              	.LFB3:
 176:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 969              		.loc 1 176 0
 970              		.cfi_startproc
 971              	.LVL65:
 972 0000 37B5     		push	{r0, r1, r2, r4, r5, lr}
 973              		.cfi_def_cfa_offset 24
 974              		.cfi_offset 0, -24
 975              		.cfi_offset 1, -20
 976              		.cfi_offset 2, -16
 977              		.cfi_offset 4, -12
 978              		.cfi_offset 5, -8
 979              		.cfi_offset 14, -4
 187:Generated_Source\PSoC4/CyLib.c ****         {
 980              		.loc 1 187 0
 981 0002 FFF7FEFF 		bl	CySysClkWcoEnabled
 982              	.LVL66:
 983 0006 0028     		cmp	r0, #0
 984 0008 47D0     		beq	.L80
 985              	.LBB8:
 986              	.LBB9:
 189:Generated_Source\PSoC4/CyLib.c **** 
 987              		.loc 1 189 0
 988 000a FFF7FEFF 		bl	CyEnterCriticalSection
 989              	.LVL67:
 214:Generated_Source\PSoC4/CyLib.c ****                                        (uint32) CY_SYS_CLK_SELECT_HFCLK_DIV_MASK));
 990              		.loc 1 214 0
 991 000e 234A     		ldr	r2, .L89
 212:Generated_Source\PSoC4/CyLib.c ****                                         CY_SYS_CLK_IMO_SELECT_FREQ_SHIFT) + CY_SYS_CLK_IMO_MIN_FREQ
 992              		.loc 1 212 0
 993 0010 234B     		ldr	r3, .L89+4
 189:Generated_Source\PSoC4/CyLib.c **** 
 994              		.loc 1 189 0
 995 0012 041C     		mov	r4, r0
 996              	.LVL68:
 212:Generated_Source\PSoC4/CyLib.c ****                                         CY_SYS_CLK_IMO_SELECT_FREQ_SHIFT) + CY_SYS_CLK_IMO_MIN_FREQ
 997              		.loc 1 212 0
 998 0014 1B68     		ldr	r3, [r3]
 214:Generated_Source\PSoC4/CyLib.c ****                                        (uint32) CY_SYS_CLK_SELECT_HFCLK_DIV_MASK));
 999              		.loc 1 214 0
 1000 0016 1168     		ldr	r1, [r2]
 212:Generated_Source\PSoC4/CyLib.c ****                                         CY_SYS_CLK_IMO_SELECT_FREQ_SHIFT) + CY_SYS_CLK_IMO_MIN_FREQ
 1001              		.loc 1 212 0
 1002 0018 0722     		mov	r2, #7
 1003 001a 1340     		and	r3, r2
 1004 001c 9B00     		lsl	r3, r3, #2
 213:Generated_Source\PSoC4/CyLib.c ****                                       ((CY_SYS_CLK_SELECT_REG >> CY_SYS_CLK_SELECT_HFCLK_DIV_SHIFT)
 1005              		.loc 1 213 0
 1006 001e 1833     		add	r3, r3, #24
 1007 0020 1A1C     		mov	r2, r3
 1008 0022 0B07     		lsl	r3, r1, #28
 1009 0024 9B0F     		lsr	r3, r3, #30
 212:Generated_Source\PSoC4/CyLib.c ****                                         CY_SYS_CLK_IMO_SELECT_FREQ_SHIFT) + CY_SYS_CLK_IMO_MIN_FREQ
 1010              		.loc 1 212 0
 1011 0026 DA40     		lsr	r2, r2, r3
 232:Generated_Source\PSoC4/CyLib.c ****                                                   CY_SYS_CLK_WCO_CONFIG_DPLL_LF_IGAIN_MASK |
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\cc2xwxHk.s 			page 65


 1012              		.loc 1 232 0
 1013 0028 1E48     		ldr	r0, .L89+8
 212:Generated_Source\PSoC4/CyLib.c ****                                         CY_SYS_CLK_IMO_SELECT_FREQ_SHIFT) + CY_SYS_CLK_IMO_MIN_FREQ
 1014              		.loc 1 212 0
 1015 002a 131C     		mov	r3, r2
 1016              	.LVL69:
 232:Generated_Source\PSoC4/CyLib.c ****                                                   CY_SYS_CLK_WCO_CONFIG_DPLL_LF_IGAIN_MASK |
 1017              		.loc 1 232 0
 1018 002c 0168     		ldr	r1, [r0]
 1019 002e 1E4A     		ldr	r2, .L89+12
 1020              	.LVL70:
 1021 0030 1140     		and	r1, r2
 238:Generated_Source\PSoC4/CyLib.c **** 
 1022              		.loc 1 238 0
 1023 0032 8022     		mov	r2, #128
 232:Generated_Source\PSoC4/CyLib.c ****                                                   CY_SYS_CLK_WCO_CONFIG_DPLL_LF_IGAIN_MASK |
 1024              		.loc 1 232 0
 1025 0034 0D1C     		mov	r5, r1
 1026              	.LVL71:
 238:Generated_Source\PSoC4/CyLib.c **** 
 1027              		.loc 1 238 0
 1028 0036 1D49     		ldr	r1, .L89+16
 1029              	.LVL72:
 1030 0038 D201     		lsl	r2, r2, #7
 1031 003a 5943     		mul	r1, r3
 1032 003c 8918     		add	r1, r1, r2
 1033 003e C90B     		lsr	r1, r1, #15
 1034 0040 4A1E     		sub	r2, r1, #1
 1035 0042 2A43     		orr	r2, r5
 1036 0044 111C     		mov	r1, r2
 1037              	.LVL73:
 244:Generated_Source\PSoC4/CyLib.c ****             {
 1038              		.loc 1 244 0
 1039 0046 192B     		cmp	r3, #25
 1040 0048 02D8     		bhi	.L82
 246:Generated_Source\PSoC4/CyLib.c ****             }
 1041              		.loc 1 246 0
 1042 004a 194A     		ldr	r2, .L89+20
 1043 004c 131C     		mov	r3, r2
 1044              	.LVL74:
 1045 004e 0EE0     		b	.L88
 1046              	.LVL75:
 1047              	.L82:
 251:Generated_Source\PSoC4/CyLib.c **** 
 1048              		.loc 1 251 0
 1049 0050 184D     		ldr	r5, .L89+24
 250:Generated_Source\PSoC4/CyLib.c ****                     cyImoFreqMhz2DpllOffset[freq - CY_SYS_CLK_IMO_FREQ_WCO_DPLL_TABLE_OFFSET];
 1050              		.loc 1 250 0
 1051 0052 194A     		ldr	r2, .L89+28
 1052 0054 9A18     		add	r2, r3, r2
 251:Generated_Source\PSoC4/CyLib.c **** 
 1053              		.loc 1 251 0
 1054 0056 EB18     		add	r3, r5, r3
 1055              	.LVL76:
 1056 0058 1A3B     		sub	r3, r3, #26
 250:Generated_Source\PSoC4/CyLib.c ****                     cyImoFreqMhz2DpllOffset[freq - CY_SYS_CLK_IMO_FREQ_WCO_DPLL_TABLE_OFFSET];
 1057              		.loc 1 250 0
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\cc2xwxHk.s 			page 66


 1058 005a 1D78     		ldrb	r5, [r3]
 241:Generated_Source\PSoC4/CyLib.c **** 
 1059              		.loc 1 241 0
 1060 005c A023     		mov	r3, #160
 250:Generated_Source\PSoC4/CyLib.c ****                     cyImoFreqMhz2DpllOffset[freq - CY_SYS_CLK_IMO_FREQ_WCO_DPLL_TABLE_OFFSET];
 1061              		.loc 1 250 0
 1062 005e 1278     		ldrb	r2, [r2]
 1063              	.LVL77:
 241:Generated_Source\PSoC4/CyLib.c **** 
 1064              		.loc 1 241 0
 1065 0060 5B03     		lsl	r3, r3, #13
 1066 0062 1943     		orr	r1, r3
 1067              	.LVL78:
 253:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MAX : lfLimit;
 1068              		.loc 1 253 0
 1069 0064 AB18     		add	r3, r5, r2
 1070 0066 FF2B     		cmp	r3, #255
 1071 0068 00D9     		bls	.L84
 1072 006a FF23     		mov	r3, #255
 1073              	.L84:
 256:Generated_Source\PSoC4/CyLib.c ****             }
 1074              		.loc 1 256 0
 1075 006c 9B05     		lsl	r3, r3, #22
 1076              	.LVL79:
 1077              	.L88:
 1078 006e 0B43     		orr	r3, r1
 1079              	.LVL80:
 261:Generated_Source\PSoC4/CyLib.c ****             CySysFlashSetWaitCycles(CY_SYS_CLK_IMO_MAX_FREQ_MHZ);
 1080              		.loc 1 261 0
 1081 0070 124D     		ldr	r5, .L89+32
 259:Generated_Source\PSoC4/CyLib.c **** 
 1082              		.loc 1 259 0
 1083 0072 0360     		str	r3, [r0]
 261:Generated_Source\PSoC4/CyLib.c ****             CySysFlashSetWaitCycles(CY_SYS_CLK_IMO_MAX_FREQ_MHZ);
 1084              		.loc 1 261 0
 1085 0074 2B68     		ldr	r3, [r5]
 1086              	.LVL81:
 262:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_WCO_CONFIG_REG |= CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE;
 1087              		.loc 1 262 0
 1088 0076 3020     		mov	r0, #48
 1089              	.LVL82:
 261:Generated_Source\PSoC4/CyLib.c ****             CySysFlashSetWaitCycles(CY_SYS_CLK_IMO_MAX_FREQ_MHZ);
 1090              		.loc 1 261 0
 1091 0078 0193     		str	r3, [sp, #4]
 1092              	.LVL83:
 262:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_WCO_CONFIG_REG |= CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE;
 1093              		.loc 1 262 0
 1094 007a FFF7FEFF 		bl	CySysFlashSetWaitCycles
 1095              	.LVL84:
 263:Generated_Source\PSoC4/CyLib.c ****             CyDelay(CY_SYS_CLK_WCO_IMO_TIMEOUT_MS);
 1096              		.loc 1 263 0
 1097 007e 8021     		mov	r1, #128
 1098 0080 0F4A     		ldr	r2, .L89+36
 1099 0082 C905     		lsl	r1, r1, #23
 1100 0084 1368     		ldr	r3, [r2]
 264:Generated_Source\PSoC4/CyLib.c ****             CY_FLASH_CTL_REG = flashCtlReg;
 1101              		.loc 1 264 0
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\cc2xwxHk.s 			page 67


 1102 0086 1420     		mov	r0, #20
 263:Generated_Source\PSoC4/CyLib.c ****             CyDelay(CY_SYS_CLK_WCO_IMO_TIMEOUT_MS);
 1103              		.loc 1 263 0
 1104 0088 0B43     		orr	r3, r1
 1105 008a 1360     		str	r3, [r2]
 264:Generated_Source\PSoC4/CyLib.c ****             CY_FLASH_CTL_REG = flashCtlReg;
 1106              		.loc 1 264 0
 1107 008c FFF7FEFF 		bl	CyDelay
 1108              	.LVL85:
 265:Generated_Source\PSoC4/CyLib.c **** 
 1109              		.loc 1 265 0
 1110 0090 019B     		ldr	r3, [sp, #4]
 267:Generated_Source\PSoC4/CyLib.c ****         }
 1111              		.loc 1 267 0
 1112 0092 201C     		mov	r0, r4
 265:Generated_Source\PSoC4/CyLib.c **** 
 1113              		.loc 1 265 0
 1114 0094 2B60     		str	r3, [r5]
 267:Generated_Source\PSoC4/CyLib.c ****         }
 1115              		.loc 1 267 0
 1116 0096 FFF7FEFF 		bl	CyExitCriticalSection
 1117              	.LVL86:
 1118              	.L80:
 1119              	.LBE9:
 1120              	.LBE8:
 269:Generated_Source\PSoC4/CyLib.c **** 
 1121              		.loc 1 269 0
 1122              		@ sp needed
 1123 009a 37BD     		pop	{r0, r1, r2, r4, r5, pc}
 1124              	.L90:
 1125              		.align	2
 1126              	.L89:
 1127 009c 28000340 		.word	1073938472
 1128 00a0 080F0340 		.word	1073942280
 1129 00a4 08000640 		.word	1074135048
 1130 00a8 00F800C0 		.word	-1073678336
 1131 00ac 40420F00 		.word	1000000
 1132 00b0 0000D43F 		.word	1070858240
 1133 00b4 00000000 		.word	.LANCHOR1
 1134 00b8 CDF1FF0F 		.word	268431821
 1135 00bc 30001040 		.word	1074790448
 1136 00c0 00000640 		.word	1074135040
 1137              		.cfi_endproc
 1138              	.LFE3:
 1139              		.size	CySysClkImoEnableWcoLock, .-CySysClkImoEnableWcoLock
 1140              		.section	.text.CySysClkWriteImoFreq,"ax",%progbits
 1141              		.align	1
 1142              		.global	CySysClkWriteImoFreq
 1143              		.code	16
 1144              		.thumb_func
 1145              		.type	CySysClkWriteImoFreq, %function
 1146              	CySysClkWriteImoFreq:
 1147              	.LFB10:
 829:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 1148              		.loc 1 829 0
 1149              		.cfi_startproc
 1150              	.LVL87:
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\cc2xwxHk.s 			page 68


 1151 0000 F7B5     		push	{r0, r1, r2, r4, r5, r6, r7, lr}
 1152              		.cfi_def_cfa_offset 32
 1153              		.cfi_offset 0, -32
 1154              		.cfi_offset 1, -28
 1155              		.cfi_offset 2, -24
 1156              		.cfi_offset 4, -20
 1157              		.cfi_offset 5, -16
 1158              		.cfi_offset 6, -12
 1159              		.cfi_offset 7, -8
 1160              		.cfi_offset 14, -4
 846:Generated_Source\PSoC4/CyLib.c ****                 (freq == 36u) || (freq == 40u) || (freq == 44u) ||
 1161              		.loc 1 846 0
 1162 0002 0423     		mov	r3, #4
 1163 0004 021C     		mov	r2, r0
 1164 0006 9A43     		bic	r2, r3
 1165 0008 182A     		cmp	r2, #24
 1166 000a 06D0     		beq	.L92
 846:Generated_Source\PSoC4/CyLib.c ****                 (freq == 36u) || (freq == 40u) || (freq == 44u) ||
 1167              		.loc 1 846 0 is_stmt 0 discriminator 2
 1168 000c 0C23     		mov	r3, #12
 1169 000e 021C     		mov	r2, r0
 1170 0010 9A43     		bic	r2, r3
 1171 0012 202A     		cmp	r2, #32
 1172 0014 01D0     		beq	.L92
 847:Generated_Source\PSoC4/CyLib.c ****                 (freq == 48u))
 1173              		.loc 1 847 0 is_stmt 1 discriminator 2
 1174 0016 3028     		cmp	r0, #48
 1175 0018 42D1     		bne	.L91
 1176              	.L92:
 1177 001a 041C     		mov	r4, r0
 851:Generated_Source\PSoC4/CyLib.c **** 
 1178              		.loc 1 851 0
 1179 001c FFF7FEFF 		bl	CyEnterCriticalSection
 1180              	.LVL88:
 834:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */        
 1181              		.loc 1 834 0
 1182 0020 0027     		mov	r7, #0
 851:Generated_Source\PSoC4/CyLib.c **** 
 1183              		.loc 1 851 0
 1184 0022 0190     		str	r0, [sp, #4]
 1185              	.LVL89:
 854:Generated_Source\PSoC4/CyLib.c ****                 {
 1186              		.loc 1 854 0
 1187 0024 FFF7FEFF 		bl	CySysClkImoGetWcoLock
 1188              	.LVL90:
 1189 0028 B842     		cmp	r0, r7
 1190 002a 02D0     		beq	.L94
 1191              	.LVL91:
 857:Generated_Source\PSoC4/CyLib.c ****                 }
 1192              		.loc 1 857 0
 1193 002c FFF7FEFF 		bl	CySysClkImoDisableWcoLock
 1194              	.LVL92:
 856:Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoDisableWcoLock();
 1195              		.loc 1 856 0
 1196 0030 0137     		add	r7, r7, #1
 1197              	.LVL93:
 1198              	.L94:
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\cc2xwxHk.s 			page 69


 882:Generated_Source\PSoC4/CyLib.c **** 
 1199              		.loc 1 882 0
 1200 0032 0726     		mov	r6, #7
 909:Generated_Source\PSoC4/CyLib.c **** 
 1201              		.loc 1 909 0
 1202 0034 7F20     		mov	r0, #127
 882:Generated_Source\PSoC4/CyLib.c **** 
 1203              		.loc 1 882 0
 1204 0036 1B4D     		ldr	r5, .L105
 902:Generated_Source\PSoC4/CyLib.c **** 
 1205              		.loc 1 902 0
 1206 0038 1B4A     		ldr	r2, .L105+4
 882:Generated_Source\PSoC4/CyLib.c **** 
 1207              		.loc 1 882 0
 1208 003a 2B68     		ldr	r3, [r5]
 908:Generated_Source\PSoC4/CyLib.c ****                 (CY_SFLASH_IMO_TCTRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) & CY_SYS_CLK_IMO_TRIM
 1209              		.loc 1 908 0
 1210 003c 1B49     		ldr	r1, .L105+8
 882:Generated_Source\PSoC4/CyLib.c **** 
 1211              		.loc 1 882 0
 1212 003e B343     		bic	r3, r6
 1213 0040 2B60     		str	r3, [r5]
 900:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 1214              		.loc 1 900 0
 1215 0042 1B4B     		ldr	r3, .L105+12
 1216 0044 E318     		add	r3, r4, r3
 1217 0046 1B78     		ldrb	r3, [r3]
 1218 0048 DBB2     		uxtb	r3, r3
 1219              	.LVL94:
 902:Generated_Source\PSoC4/CyLib.c **** 
 1220              		.loc 1 902 0
 1221 004a 1360     		str	r3, [r2]
 905:Generated_Source\PSoC4/CyLib.c **** 
 1222              		.loc 1 905 0
 1223 004c 194A     		ldr	r2, .L105+16
 1224 004e 1368     		ldr	r3, [r2]
 1225              	.LVL95:
 1226 0050 B343     		bic	r3, r6
 1227 0052 1360     		str	r3, [r2]
 1228              	.LVL96:
 909:Generated_Source\PSoC4/CyLib.c **** 
 1229              		.loc 1 909 0
 1230 0054 184A     		ldr	r2, .L105+20
 908:Generated_Source\PSoC4/CyLib.c ****                 (CY_SFLASH_IMO_TCTRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) & CY_SYS_CLK_IMO_TRIM
 1231              		.loc 1 908 0
 1232 0056 0B68     		ldr	r3, [r1]
 909:Generated_Source\PSoC4/CyLib.c **** 
 1233              		.loc 1 909 0
 1234 0058 A218     		add	r2, r4, r2
 1235 005a 1278     		ldrb	r2, [r2]
 908:Generated_Source\PSoC4/CyLib.c ****                 (CY_SFLASH_IMO_TCTRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) & CY_SYS_CLK_IMO_TRIM
 1236              		.loc 1 908 0
 1237 005c 8343     		bic	r3, r0
 909:Generated_Source\PSoC4/CyLib.c **** 
 1238              		.loc 1 909 0
 1239 005e 0240     		and	r2, r0
 908:Generated_Source\PSoC4/CyLib.c ****                 (CY_SFLASH_IMO_TCTRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) & CY_SYS_CLK_IMO_TRIM
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\cc2xwxHk.s 			page 70


 1240              		.loc 1 908 0
 1241 0060 1343     		orr	r3, r2
 1242 0062 0B60     		str	r3, [r1]
 911:Generated_Source\PSoC4/CyLib.c **** 
 1243              		.loc 1 911 0
 1244 0064 4D38     		sub	r0, r0, #77
 1245 0066 FFF7FEFF 		bl	CyDelayCycles
 1246              	.LVL97:
 913:Generated_Source\PSoC4/CyLib.c ****             {
 1247              		.loc 1 913 0
 1248 006a 182C     		cmp	r4, #24
 1249 006c 11D9     		bls	.L95
 917:Generated_Source\PSoC4/CyLib.c **** 
 1250              		.loc 1 917 0
 1251 006e 231C     		mov	r3, r4
 916:Generated_Source\PSoC4/CyLib.c ****                     (((freq - 4u - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) >> 2u) & CY_SYS_CLK_IMO_SELECT_FREQ
 1252              		.loc 1 916 0
 1253 0070 2A68     		ldr	r2, [r5]
 917:Generated_Source\PSoC4/CyLib.c **** 
 1254              		.loc 1 917 0
 1255 0072 1C3B     		sub	r3, r3, #28
 1256 0074 9B08     		lsr	r3, r3, #2
 916:Generated_Source\PSoC4/CyLib.c ****                     (((freq - 4u - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) >> 2u) & CY_SYS_CLK_IMO_SELECT_FREQ
 1257              		.loc 1 916 0
 1258 0076 B243     		bic	r2, r6
 917:Generated_Source\PSoC4/CyLib.c **** 
 1259              		.loc 1 917 0
 1260 0078 3340     		and	r3, r6
 916:Generated_Source\PSoC4/CyLib.c ****                     (((freq - 4u - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) >> 2u) & CY_SYS_CLK_IMO_SELECT_FREQ
 1261              		.loc 1 916 0
 1262 007a 1343     		orr	r3, r2
 919:Generated_Source\PSoC4/CyLib.c **** 
 1263              		.loc 1 919 0
 1264 007c 3220     		mov	r0, #50
 916:Generated_Source\PSoC4/CyLib.c ****                     (((freq - 4u - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) >> 2u) & CY_SYS_CLK_IMO_SELECT_FREQ
 1265              		.loc 1 916 0
 1266 007e 2B60     		str	r3, [r5]
 919:Generated_Source\PSoC4/CyLib.c **** 
 1267              		.loc 1 919 0
 1268 0080 FFF7FEFF 		bl	CyDelayCycles
 1269              	.LVL98:
 924:Generated_Source\PSoC4/CyLib.c ****             }
 1270              		.loc 1 924 0
 1271 0084 183C     		sub	r4, r4, #24
 1272              	.LVL99:
 923:Generated_Source\PSoC4/CyLib.c ****                     (((freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) >> 2u) & CY_SYS_CLK_IMO_SELECT_FREQ_MASK
 1273              		.loc 1 923 0
 1274 0086 2868     		ldr	r0, [r5]
 924:Generated_Source\PSoC4/CyLib.c ****             }
 1275              		.loc 1 924 0
 1276 0088 A408     		lsr	r4, r4, #2
 1277              	.LVL100:
 1278 008a 3440     		and	r4, r6
 923:Generated_Source\PSoC4/CyLib.c ****                     (((freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) >> 2u) & CY_SYS_CLK_IMO_SELECT_FREQ_MASK
 1279              		.loc 1 923 0
 1280 008c B043     		bic	r0, r6
 1281 008e 0443     		orr	r4, r0
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\cc2xwxHk.s 			page 71


 1282 0090 2C60     		str	r4, [r5]
 1283              	.L95:
 928:Generated_Source\PSoC4/CyLib.c ****                 {
 1284              		.loc 1 928 0
 1285 0092 012F     		cmp	r7, #1
 1286 0094 01D1     		bne	.L96
 930:Generated_Source\PSoC4/CyLib.c ****                 }
 1287              		.loc 1 930 0
 1288 0096 FFF7FEFF 		bl	CySysClkImoEnableWcoLock
 1289              	.LVL101:
 1290              	.L96:
 942:Generated_Source\PSoC4/CyLib.c ****         }
 1291              		.loc 1 942 0
 1292 009a 0198     		ldr	r0, [sp, #4]
 1293 009c FFF7FEFF 		bl	CyExitCriticalSection
 1294              	.LVL102:
 1295              	.L91:
 949:Generated_Source\PSoC4/CyLib.c **** 
 1296              		.loc 1 949 0
 1297              		@ sp needed
 1298 00a0 F7BD     		pop	{r0, r1, r2, r4, r5, r6, r7, pc}
 1299              	.L106:
 1300 00a2 C046     		.align	2
 1301              	.L105:
 1302 00a4 080F0340 		.word	1073942280
 1303 00a8 0C0F0340 		.word	1073942284
 1304 00ac 180F0340 		.word	1073942296
 1305 00b0 CDF1FF0F 		.word	268431821
 1306 00b4 100F0340 		.word	1073942288
 1307 00b8 B4F1FF0F 		.word	268431796
 1308              		.cfi_endproc
 1309              	.LFE10:
 1310              		.size	CySysClkWriteImoFreq, .-CySysClkWriteImoFreq
 1311              		.section	.text.CyDelayUs,"ax",%progbits
 1312              		.align	1
 1313              		.global	CyDelayUs
 1314              		.code	16
 1315              		.thumb_func
 1316              		.type	CyDelayUs, %function
 1317              	CyDelayUs:
 1318              	.LFB29:
2572:Generated_Source\PSoC4/CyLib.c **** 
2573:Generated_Source\PSoC4/CyLib.c **** 
2574:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2575:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDelayUs
2576:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2577:Generated_Source\PSoC4/CyLib.c **** *  Blocks for microseconds.
2578:Generated_Source\PSoC4/CyLib.c **** *
2579:Generated_Source\PSoC4/CyLib.c **** *  \param microseconds: number of microseconds to delay.
2580:Generated_Source\PSoC4/CyLib.c **** *
2581:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2582:Generated_Source\PSoC4/CyLib.c **** void CyDelayUs(uint16 microseconds)
2583:Generated_Source\PSoC4/CyLib.c **** {
 1319              		.loc 1 2583 0
 1320              		.cfi_startproc
 1321              	.LVL103:
 1322 0000 08B5     		push	{r3, lr}
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\cc2xwxHk.s 			page 72


 1323              		.cfi_def_cfa_offset 8
 1324              		.cfi_offset 3, -8
 1325              		.cfi_offset 14, -4
2584:Generated_Source\PSoC4/CyLib.c ****     CyDelayCycles((uint32)microseconds * cydelayFreqMhz);
 1326              		.loc 1 2584 0
 1327 0002 034B     		ldr	r3, .L108
2585:Generated_Source\PSoC4/CyLib.c **** }
 1328              		.loc 1 2585 0
 1329              		@ sp needed
2584:Generated_Source\PSoC4/CyLib.c ****     CyDelayCycles((uint32)microseconds * cydelayFreqMhz);
 1330              		.loc 1 2584 0
 1331 0004 1B7B     		ldrb	r3, [r3, #12]
 1332 0006 5843     		mul	r0, r3
 1333              	.LVL104:
 1334 0008 FFF7FEFF 		bl	CyDelayCycles
 1335              	.LVL105:
 1336              		.loc 1 2585 0
 1337 000c 08BD     		pop	{r3, pc}
 1338              	.L109:
 1339 000e C046     		.align	2
 1340              	.L108:
 1341 0010 00000000 		.word	.LANCHOR0
 1342              		.cfi_endproc
 1343              	.LFE29:
 1344              		.size	CyDelayUs, .-CyDelayUs
 1345              		.global	__aeabi_uidiv
 1346              		.section	.text.CyDelayFreq,"ax",%progbits
 1347              		.align	1
 1348              		.global	CyDelayFreq
 1349              		.code	16
 1350              		.thumb_func
 1351              		.type	CyDelayFreq, %function
 1352              	CyDelayFreq:
 1353              	.LFB30:
2586:Generated_Source\PSoC4/CyLib.c **** 
2587:Generated_Source\PSoC4/CyLib.c **** 
2588:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2589:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDelayFreq
2590:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2591:Generated_Source\PSoC4/CyLib.c **** *  Sets clock frequency for CyDelay.
2592:Generated_Source\PSoC4/CyLib.c **** *
2593:Generated_Source\PSoC4/CyLib.c **** *  \param freq: Frequency of bus clock in Hertz.
2594:Generated_Source\PSoC4/CyLib.c **** *
2595:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2596:Generated_Source\PSoC4/CyLib.c **** void CyDelayFreq(uint32 freq)
2597:Generated_Source\PSoC4/CyLib.c **** {
 1354              		.loc 1 2597 0
 1355              		.cfi_startproc
 1356              	.LVL106:
 1357 0000 38B5     		push	{r3, r4, r5, lr}
 1358              		.cfi_def_cfa_offset 16
 1359              		.cfi_offset 3, -16
 1360              		.cfi_offset 4, -12
 1361              		.cfi_offset 5, -8
 1362              		.cfi_offset 14, -4
 1363 0002 0C4C     		ldr	r4, .L113
2598:Generated_Source\PSoC4/CyLib.c ****     if (freq != 0u)
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\cc2xwxHk.s 			page 73


 1364              		.loc 1 2598 0
 1365 0004 0028     		cmp	r0, #0
 1366 0006 01D0     		beq	.L111
2599:Generated_Source\PSoC4/CyLib.c ****     {
2600:Generated_Source\PSoC4/CyLib.c ****         cydelayFreqHz = freq;
 1367              		.loc 1 2600 0
 1368 0008 2061     		str	r0, [r4, #16]
 1369 000a 01E0     		b	.L112
 1370              	.L111:
2601:Generated_Source\PSoC4/CyLib.c ****     }
2602:Generated_Source\PSoC4/CyLib.c ****     else
2603:Generated_Source\PSoC4/CyLib.c ****     {
2604:Generated_Source\PSoC4/CyLib.c ****         cydelayFreqHz = CYDEV_BCLK__SYSCLK__HZ;
 1371              		.loc 1 2604 0
 1372 000c 0A4B     		ldr	r3, .L113+4
 1373 000e 2361     		str	r3, [r4, #16]
 1374              	.L112:
2605:Generated_Source\PSoC4/CyLib.c ****     }
2606:Generated_Source\PSoC4/CyLib.c **** 
2607:Generated_Source\PSoC4/CyLib.c ****     cydelayFreqMhz = (uint8)((cydelayFreqHz + CY_DELAY_1M_MINUS_1_THRESHOLD) / CY_DELAY_1M_THRESHOL
 1375              		.loc 1 2607 0
 1376 0010 2569     		ldr	r5, [r4, #16]
 1377 0012 0A4B     		ldr	r3, .L113+8
 1378 0014 0A49     		ldr	r1, .L113+12
 1379 0016 E818     		add	r0, r5, r3
 1380              	.LVL107:
 1381 0018 FFF7FEFF 		bl	__aeabi_uidiv
 1382              	.LVL108:
2608:Generated_Source\PSoC4/CyLib.c ****     cydelayFreqKhz = (cydelayFreqHz + CY_DELAY_1K_MINUS_1_THRESHOLD) / CY_DELAY_1K_THRESHOLD;
 1383              		.loc 1 2608 0
 1384 001c FA21     		mov	r1, #250
 1385 001e 094B     		ldr	r3, .L113+16
2607:Generated_Source\PSoC4/CyLib.c ****     cydelayFreqKhz = (cydelayFreqHz + CY_DELAY_1K_MINUS_1_THRESHOLD) / CY_DELAY_1K_THRESHOLD;
 1386              		.loc 1 2607 0
 1387 0020 2073     		strb	r0, [r4, #12]
 1388              		.loc 1 2608 0
 1389 0022 8900     		lsl	r1, r1, #2
 1390 0024 E818     		add	r0, r5, r3
 1391 0026 FFF7FEFF 		bl	__aeabi_uidiv
 1392              	.LVL109:
 1393 002a A060     		str	r0, [r4, #8]
2609:Generated_Source\PSoC4/CyLib.c ****     cydelay32kMs   = CY_DELAY_MS_OVERFLOW * cydelayFreqKhz;
 1394              		.loc 1 2609 0
 1395 002c C003     		lsl	r0, r0, #15
 1396 002e 6060     		str	r0, [r4, #4]
2610:Generated_Source\PSoC4/CyLib.c **** }
 1397              		.loc 1 2610 0
 1398              		@ sp needed
 1399 0030 38BD     		pop	{r3, r4, r5, pc}
 1400              	.L114:
 1401 0032 C046     		.align	2
 1402              	.L113:
 1403 0034 00000000 		.word	.LANCHOR0
 1404 0038 00366E01 		.word	24000000
 1405 003c 3F420F00 		.word	999999
 1406 0040 40420F00 		.word	1000000
 1407 0044 E7030000 		.word	999
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\cc2xwxHk.s 			page 74


 1408              		.cfi_endproc
 1409              	.LFE30:
 1410              		.size	CyDelayFreq, .-CyDelayFreq
 1411              		.section	.text.CySysTickInit,"ax",%progbits
 1412              		.align	1
 1413              		.global	CySysTickInit
 1414              		.code	16
 1415              		.thumb_func
 1416              		.type	CySysTickInit, %function
 1417              	CySysTickInit:
 1418              	.LFB32:
2611:Generated_Source\PSoC4/CyLib.c **** 
2612:Generated_Source\PSoC4/CyLib.c **** 
2613:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2614:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTick_Start
2615:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2616:Generated_Source\PSoC4/CyLib.c **** *
2617:Generated_Source\PSoC4/CyLib.c **** *  Starts the system timer (SysTick): configures SysTick to generate interrupt
2618:Generated_Source\PSoC4/CyLib.c **** *  every 1 ms and enables the interrupt.
2619:Generated_Source\PSoC4/CyLib.c **** *
2620:Generated_Source\PSoC4/CyLib.c **** *  There are components (LIN, CapSense Gesture) that relies on the default 
2621:Generated_Source\PSoC4/CyLib.c **** *  interval (1 ms). And that changing the interval will negatively impact 
2622:Generated_Source\PSoC4/CyLib.c **** *  their functionality.
2623:Generated_Source\PSoC4/CyLib.c **** *
2624:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2625:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set.
2626:Generated_Source\PSoC4/CyLib.c **** *
2627:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2628:Generated_Source\PSoC4/CyLib.c **** void CySysTickStart(void)
2629:Generated_Source\PSoC4/CyLib.c **** {
2630:Generated_Source\PSoC4/CyLib.c ****     if (0u == CySysTickInitVar)
2631:Generated_Source\PSoC4/CyLib.c ****     {
2632:Generated_Source\PSoC4/CyLib.c ****         CySysTickInit();
2633:Generated_Source\PSoC4/CyLib.c ****         CySysTickInitVar = 1u;
2634:Generated_Source\PSoC4/CyLib.c ****     }
2635:Generated_Source\PSoC4/CyLib.c **** 
2636:Generated_Source\PSoC4/CyLib.c ****     CySysTickEnable();
2637:Generated_Source\PSoC4/CyLib.c **** }
2638:Generated_Source\PSoC4/CyLib.c **** 
2639:Generated_Source\PSoC4/CyLib.c **** 
2640:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2641:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickInit
2642:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2643:Generated_Source\PSoC4/CyLib.c **** *
2644:Generated_Source\PSoC4/CyLib.c **** *  Initializes the callback addresses with pointers to NULL, associates the
2645:Generated_Source\PSoC4/CyLib.c **** *  SysTick system vector with the function that is responsible for calling
2646:Generated_Source\PSoC4/CyLib.c **** *  registered callback functions, configures SysTick timer to generate interrupt
2647:Generated_Source\PSoC4/CyLib.c **** *  every 1 ms.
2648:Generated_Source\PSoC4/CyLib.c **** *
2649:Generated_Source\PSoC4/CyLib.c **** *  The 1 ms interrupt interval is configured based on the frequency determined
2650:Generated_Source\PSoC4/CyLib.c **** *  by PSoC Creator at build time. If System clock frequency is changed in
2651:Generated_Source\PSoC4/CyLib.c **** *  runtime, the CyDelayFreq() with the appropriate parameter should be called.
2652:Generated_Source\PSoC4/CyLib.c **** *
2653:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2654:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set.
2655:Generated_Source\PSoC4/CyLib.c **** *
2656:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\cc2xwxHk.s 			page 75


2657:Generated_Source\PSoC4/CyLib.c **** void CySysTickInit(void)
2658:Generated_Source\PSoC4/CyLib.c **** {
 1419              		.loc 1 2658 0
 1420              		.cfi_startproc
 1421              	.LVL110:
 1422 0000 10B5     		push	{r4, lr}
 1423              		.cfi_def_cfa_offset 8
 1424              		.cfi_offset 4, -8
 1425              		.cfi_offset 14, -4
2659:Generated_Source\PSoC4/CyLib.c ****     uint32 i;
2660:Generated_Source\PSoC4/CyLib.c **** 
2661:Generated_Source\PSoC4/CyLib.c ****     for (i = 0u; i<CY_SYS_SYST_NUM_OF_CALLBACKS; i++)
2662:Generated_Source\PSoC4/CyLib.c ****     {
2663:Generated_Source\PSoC4/CyLib.c ****         CySysTickCallbacks[i] = (void *) 0;
 1426              		.loc 1 2663 0
 1427 0002 0024     		mov	r4, #0
 1428              	.LBB22:
 1429              	.LBB23:
 1430              	.LBB24:
2664:Generated_Source\PSoC4/CyLib.c ****     }
2665:Generated_Source\PSoC4/CyLib.c **** 
2666:Generated_Source\PSoC4/CyLib.c ****     (void) CyIntSetSysVector(CY_INT_SYSTICK_IRQN, &CySysTickServiceCallbacks);
2667:Generated_Source\PSoC4/CyLib.c **** 
2668:Generated_Source\PSoC4/CyLib.c ****     #if(CY_SYSTICK_LFCLK_SOURCE)
2669:Generated_Source\PSoC4/CyLib.c ****         CySysTickSetClockSource(CY_SYS_SYST_CSR_CLK_SRC_SYSCLK);
2670:Generated_Source\PSoC4/CyLib.c ****     #endif /* (CY_SYSTICK_LFCLK_SOURCE) */
2671:Generated_Source\PSoC4/CyLib.c **** 
2672:Generated_Source\PSoC4/CyLib.c ****     CySysTickSetReload(cydelayFreqHz/1000u);
2673:Generated_Source\PSoC4/CyLib.c ****     CySysTickClear();
2674:Generated_Source\PSoC4/CyLib.c ****     CyIntEnable(CY_INT_SYSTICK_IRQN);
2675:Generated_Source\PSoC4/CyLib.c **** }
2676:Generated_Source\PSoC4/CyLib.c **** 
2677:Generated_Source\PSoC4/CyLib.c **** 
2678:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2679:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickEnable
2680:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2681:Generated_Source\PSoC4/CyLib.c **** *
2682:Generated_Source\PSoC4/CyLib.c **** *  Enables the SysTick timer and its interrupt.
2683:Generated_Source\PSoC4/CyLib.c **** *
2684:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2685:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
2686:Generated_Source\PSoC4/CyLib.c **** *
2687:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2688:Generated_Source\PSoC4/CyLib.c **** void CySysTickEnable(void)
2689:Generated_Source\PSoC4/CyLib.c **** {
2690:Generated_Source\PSoC4/CyLib.c ****     CySysTickEnableInterrupt();
2691:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG |= CY_SYS_SYST_CSR_ENABLE;
2692:Generated_Source\PSoC4/CyLib.c **** }
2693:Generated_Source\PSoC4/CyLib.c **** 
2694:Generated_Source\PSoC4/CyLib.c **** 
2695:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2696:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickStop
2697:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2698:Generated_Source\PSoC4/CyLib.c **** *
2699:Generated_Source\PSoC4/CyLib.c **** *  Stops the system timer (SysTick).
2700:Generated_Source\PSoC4/CyLib.c **** *
2701:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\cc2xwxHk.s 			page 76


2702:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
2703:Generated_Source\PSoC4/CyLib.c **** *
2704:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2705:Generated_Source\PSoC4/CyLib.c **** void CySysTickStop(void)
2706:Generated_Source\PSoC4/CyLib.c **** {
2707:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG &= ((uint32) ~(CY_SYS_SYST_CSR_ENABLE));
2708:Generated_Source\PSoC4/CyLib.c **** }
2709:Generated_Source\PSoC4/CyLib.c **** 
2710:Generated_Source\PSoC4/CyLib.c **** 
2711:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2712:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickEnableInterrupt
2713:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2714:Generated_Source\PSoC4/CyLib.c **** *
2715:Generated_Source\PSoC4/CyLib.c **** *  Enables the SysTick interrupt.
2716:Generated_Source\PSoC4/CyLib.c **** *
2717:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2718:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
2719:Generated_Source\PSoC4/CyLib.c **** *
2720:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2721:Generated_Source\PSoC4/CyLib.c **** void CySysTickEnableInterrupt(void)
2722:Generated_Source\PSoC4/CyLib.c **** {
2723:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG |= CY_SYS_SYST_CSR_ENABLE_INT;
2724:Generated_Source\PSoC4/CyLib.c **** }
2725:Generated_Source\PSoC4/CyLib.c **** 
2726:Generated_Source\PSoC4/CyLib.c **** 
2727:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2728:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickDisableInterrupt
2729:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2730:Generated_Source\PSoC4/CyLib.c **** *
2731:Generated_Source\PSoC4/CyLib.c **** *  Disables the SysTick interrupt.
2732:Generated_Source\PSoC4/CyLib.c **** *
2733:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2734:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
2735:Generated_Source\PSoC4/CyLib.c **** *
2736:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2737:Generated_Source\PSoC4/CyLib.c **** void CySysTickDisableInterrupt(void)
2738:Generated_Source\PSoC4/CyLib.c **** {
2739:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG &= ((uint32) ~(CY_SYS_SYST_CSR_ENABLE_INT));
2740:Generated_Source\PSoC4/CyLib.c **** }
2741:Generated_Source\PSoC4/CyLib.c **** 
2742:Generated_Source\PSoC4/CyLib.c **** 
2743:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2744:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickSetReload
2745:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2746:Generated_Source\PSoC4/CyLib.c **** *
2747:Generated_Source\PSoC4/CyLib.c **** *  Sets value the counter is set to on startup and after it reaches zero. This
2748:Generated_Source\PSoC4/CyLib.c **** *  function do not change or reset current sysTick counter value, so it should
2749:Generated_Source\PSoC4/CyLib.c **** *  be cleared using CySysTickClear() API.
2750:Generated_Source\PSoC4/CyLib.c **** *
2751:Generated_Source\PSoC4/CyLib.c **** *  \param value: Valid range [0x0-0x00FFFFFF]. Counter reset value
2752:Generated_Source\PSoC4/CyLib.c **** *
2753:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2754:Generated_Source\PSoC4/CyLib.c **** void CySysTickSetReload(uint32 value)
2755:Generated_Source\PSoC4/CyLib.c **** {
2756:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_RVR_REG = (value & CY_SYS_SYST_RVR_CNT_MASK);
2757:Generated_Source\PSoC4/CyLib.c **** }
2758:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\cc2xwxHk.s 			page 77


2759:Generated_Source\PSoC4/CyLib.c **** 
2760:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2761:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetReload
2762:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2763:Generated_Source\PSoC4/CyLib.c **** *
2764:Generated_Source\PSoC4/CyLib.c **** *  Gets value the counter is set to on startup and after it reaches zero.
2765:Generated_Source\PSoC4/CyLib.c **** *
2766:Generated_Source\PSoC4/CyLib.c **** * \return
2767:Generated_Source\PSoC4/CyLib.c **** *  Counter reset value.
2768:Generated_Source\PSoC4/CyLib.c **** *
2769:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2770:Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickGetReload(void)
2771:Generated_Source\PSoC4/CyLib.c **** {
2772:Generated_Source\PSoC4/CyLib.c ****     return(CY_SYS_SYST_RVR_REG & CY_SYS_SYST_RVR_CNT_MASK);
2773:Generated_Source\PSoC4/CyLib.c **** }
2774:Generated_Source\PSoC4/CyLib.c **** 
2775:Generated_Source\PSoC4/CyLib.c **** 
2776:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2777:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetValue
2778:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2779:Generated_Source\PSoC4/CyLib.c **** *
2780:Generated_Source\PSoC4/CyLib.c **** *  Gets current SysTick counter value.
2781:Generated_Source\PSoC4/CyLib.c **** *
2782:Generated_Source\PSoC4/CyLib.c **** * \return
2783:Generated_Source\PSoC4/CyLib.c **** *  Current SysTick counter value
2784:Generated_Source\PSoC4/CyLib.c **** *
2785:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2786:Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickGetValue(void)
2787:Generated_Source\PSoC4/CyLib.c **** {
2788:Generated_Source\PSoC4/CyLib.c ****     return(CY_SYS_SYST_CVR_REG & CY_SYS_SYST_CVR_CNT_MASK);
2789:Generated_Source\PSoC4/CyLib.c **** }
2790:Generated_Source\PSoC4/CyLib.c **** 
2791:Generated_Source\PSoC4/CyLib.c **** 
2792:Generated_Source\PSoC4/CyLib.c **** #if(CY_SYSTICK_LFCLK_SOURCE)
2793:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2794:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysTickSetClockSource
2795:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2796:Generated_Source\PSoC4/CyLib.c ****     *
2797:Generated_Source\PSoC4/CyLib.c ****     *  Sets the clock source for the SysTick counter.
2798:Generated_Source\PSoC4/CyLib.c ****     *
2799:Generated_Source\PSoC4/CyLib.c ****     *  Clears SysTick count flag if it was set. If clock source is not ready this
2800:Generated_Source\PSoC4/CyLib.c ****     *  function call will have no effect. After changing clock source to the low
2801:Generated_Source\PSoC4/CyLib.c ****     *  frequency clock the counter and reload register values will remain unchanged
2802:Generated_Source\PSoC4/CyLib.c ****     *  so time to the interrupt will be significantly longer and vice versa.
2803:Generated_Source\PSoC4/CyLib.c ****     *
2804:Generated_Source\PSoC4/CyLib.c ****     *  The changing of SysTick clock source and\or its frequency will change 
2805:Generated_Source\PSoC4/CyLib.c ****     *  the interrupt interval and that CySysTickSetReload() should be 
2806:Generated_Source\PSoC4/CyLib.c ****     *  called to compensate this change.    
2807:Generated_Source\PSoC4/CyLib.c ****     *
2808:Generated_Source\PSoC4/CyLib.c ****     *  The function is not available on PSoC 4000, PSoC 4100, and PSoC 42000
2809:Generated_Source\PSoC4/CyLib.c ****     *  devices. The SysTick timer clocked by the System clock on these devices.
2810:Generated_Source\PSoC4/CyLib.c ****     *
2811:Generated_Source\PSoC4/CyLib.c ****     *  \param clockSource Clock source for SysTick counter
2812:Generated_Source\PSoC4/CyLib.c ****     *         Define                     Clock Source
2813:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_SYST_CSR_CLK_SRC_SYSCLK     SysTick is clocked by the CPU clock.
2814:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_SYST_CSR_CLK_SRC_LFCLK      SysTick is clocked by the low frequency
2815:Generated_Source\PSoC4/CyLib.c ****     *                                      clock. (ILO 100 KHz for PSoC 5LP, and
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\cc2xwxHk.s 			page 78


2816:Generated_Source\PSoC4/CyLib.c ****     *                                      LFCLK for PSoC 4).
2817:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2818:Generated_Source\PSoC4/CyLib.c ****     void CySysTickSetClockSource(uint32 clockSource)
2819:Generated_Source\PSoC4/CyLib.c ****     {
2820:Generated_Source\PSoC4/CyLib.c ****         if (clockSource == CY_SYS_SYST_CSR_CLK_SRC_SYSCLK)
2821:Generated_Source\PSoC4/CyLib.c ****         {
2822:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_SYST_CSR_REG |= (uint32)(CY_SYS_SYST_CSR_CLK_SRC_SYSCLK << CY_SYS_SYST_CSR_CLK_S
 1431              		.loc 1 2822 0
 1432 0004 0421     		mov	r1, #4
 1433              	.LBE24:
 1434              	.LBE23:
 1435              	.LBE22:
2663:Generated_Source\PSoC4/CyLib.c ****     }
 1436              		.loc 1 2663 0
 1437 0006 0E4B     		ldr	r3, .L116
 1438              	.LBB29:
 1439              	.LBB30:
2290:Generated_Source\PSoC4/CyLib.c **** 
 1440              		.loc 1 2290 0
 1441 0008 0E4A     		ldr	r2, .L116+4
 1442              	.LBE30:
 1443              	.LBE29:
2663:Generated_Source\PSoC4/CyLib.c ****     }
 1444              		.loc 1 2663 0
 1445 000a 1C60     		str	r4, [r3]
 1446              	.LVL111:
 1447 000c 1C61     		str	r4, [r3, #16]
 1448 000e 5C60     		str	r4, [r3, #4]
 1449              	.LVL112:
 1450 0010 9C60     		str	r4, [r3, #8]
 1451              	.LVL113:
 1452 0012 DC60     		str	r4, [r3, #12]
 1453              	.LVL114:
 1454              	.LBB33:
 1455              	.LBB31:
2290:Generated_Source\PSoC4/CyLib.c **** 
 1456              		.loc 1 2290 0
 1457 0014 0C4B     		ldr	r3, .L116+8
 1458              	.LVL115:
 1459              	.LBE31:
 1460              	.LBE33:
2675:Generated_Source\PSoC4/CyLib.c **** 
 1461              		.loc 1 2675 0
 1462              		@ sp needed
 1463              	.LBB34:
 1464              	.LBB32:
2290:Generated_Source\PSoC4/CyLib.c **** 
 1465              		.loc 1 2290 0
 1466 0016 1A60     		str	r2, [r3]
 1467              	.LVL116:
 1468              	.LBE32:
 1469              	.LBE34:
 1470              	.LBB35:
 1471              	.LBB27:
 1472              	.LBB25:
 1473              		.loc 1 2822 0
 1474 0018 0C4A     		ldr	r2, .L116+12
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\cc2xwxHk.s 			page 79


 1475 001a 1368     		ldr	r3, [r2]
 1476 001c 0B43     		orr	r3, r1
 1477              	.LBE25:
 1478              	.LBE27:
 1479              	.LBE35:
2672:Generated_Source\PSoC4/CyLib.c ****     CySysTickClear();
 1480              		.loc 1 2672 0
 1481 001e FA21     		mov	r1, #250
 1482              	.LBB36:
 1483              	.LBB28:
 1484              	.LBB26:
 1485              		.loc 1 2822 0
 1486 0020 1360     		str	r3, [r2]
 1487              	.LBE26:
 1488              	.LBE28:
 1489              	.LBE36:
2672:Generated_Source\PSoC4/CyLib.c ****     CySysTickClear();
 1490              		.loc 1 2672 0
 1491 0022 0B4B     		ldr	r3, .L116+16
 1492 0024 8900     		lsl	r1, r1, #2
 1493 0026 1869     		ldr	r0, [r3, #16]
 1494 0028 FFF7FEFF 		bl	__aeabi_uidiv
 1495              	.LVL117:
 1496              	.LBB37:
 1497              	.LBB38:
2439:Generated_Source\PSoC4/CyLib.c **** }
 1498              		.loc 1 2439 0
 1499 002c 8022     		mov	r2, #128
 1500              	.LBE38:
 1501              	.LBE37:
 1502              	.LBB41:
 1503              	.LBB42:
2756:Generated_Source\PSoC4/CyLib.c **** }
 1504              		.loc 1 2756 0
 1505 002e 094B     		ldr	r3, .L116+20
 1506              	.LBE42:
 1507              	.LBE41:
 1508              	.LBB44:
 1509              	.LBB39:
2439:Generated_Source\PSoC4/CyLib.c **** }
 1510              		.loc 1 2439 0
 1511 0030 1202     		lsl	r2, r2, #8
 1512              	.LBE39:
 1513              	.LBE44:
 1514              	.LBB45:
 1515              	.LBB43:
2756:Generated_Source\PSoC4/CyLib.c **** }
 1516              		.loc 1 2756 0
 1517 0032 1860     		str	r0, [r3]
 1518              	.LBE43:
 1519              	.LBE45:
 1520              	.LBB46:
 1521              	.LBB47:
2823:Generated_Source\PSoC4/CyLib.c ****         }
2824:Generated_Source\PSoC4/CyLib.c ****         else
2825:Generated_Source\PSoC4/CyLib.c ****         {
2826:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_SYST_CSR_REG &= ((uint32) ~((uint32)(CY_SYS_SYST_CSR_CLK_SRC_SYSCLK << CY_SYS_SY
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\cc2xwxHk.s 			page 80


2827:Generated_Source\PSoC4/CyLib.c ****         }
2828:Generated_Source\PSoC4/CyLib.c ****     }
2829:Generated_Source\PSoC4/CyLib.c **** 
2830:Generated_Source\PSoC4/CyLib.c ****     
2831:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2832:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysTickGetClockSource
2833:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2834:Generated_Source\PSoC4/CyLib.c ****     *
2835:Generated_Source\PSoC4/CyLib.c ****     *  Returns the current clock source of the SysTick counter.
2836:Generated_Source\PSoC4/CyLib.c ****     *
2837:Generated_Source\PSoC4/CyLib.c ****     *  \return 
2838:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_SYST_CSR_CLK_SRC_SYSCLK     SysTick is clocked by CPU clock.
2839:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_SYST_CSR_CLK_SRC_LFCLK      SysTick is clocked by the low frequency
2840:Generated_Source\PSoC4/CyLib.c ****     *                                      clock. (ILO 100 KHz for PSoC 5LP, and
2841:Generated_Source\PSoC4/CyLib.c ****     *                                      LFCLK for PSoC 4).
2842:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2843:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysTickGetClockSource(void)
2844:Generated_Source\PSoC4/CyLib.c ****     {
2845:Generated_Source\PSoC4/CyLib.c ****         return ((CY_SYS_SYST_CSR_REG >> CY_SYS_SYST_CSR_CLK_SOURCE_SHIFT) & CY_SYS_SYST_CSR_CLK_SRC
2846:Generated_Source\PSoC4/CyLib.c ****     }
2847:Generated_Source\PSoC4/CyLib.c ****     
2848:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_SYSTICK_LFCLK_SOURCE) */
2849:Generated_Source\PSoC4/CyLib.c **** 
2850:Generated_Source\PSoC4/CyLib.c **** 
2851:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2852:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetCountFlag
2853:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2854:Generated_Source\PSoC4/CyLib.c **** *
2855:Generated_Source\PSoC4/CyLib.c **** *  The count flag is set once SysTick counter reaches zero.
2856:Generated_Source\PSoC4/CyLib.c **** *  The flag cleared on read.
2857:Generated_Source\PSoC4/CyLib.c **** *
2858:Generated_Source\PSoC4/CyLib.c **** * \return
2859:Generated_Source\PSoC4/CyLib.c ****     *  Returns non-zero value if flag is set, otherwise zero is returned.
2860:Generated_Source\PSoC4/CyLib.c **** *
2861:Generated_Source\PSoC4/CyLib.c **** *
2862:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2863:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set.
2864:Generated_Source\PSoC4/CyLib.c **** *
2865:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2866:Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickGetCountFlag(void)
2867:Generated_Source\PSoC4/CyLib.c **** {
2868:Generated_Source\PSoC4/CyLib.c ****     return ((CY_SYS_SYST_CSR_REG >> CY_SYS_SYST_CSR_COUNTFLAG_SHIFT) & 0x01u);
2869:Generated_Source\PSoC4/CyLib.c **** }
2870:Generated_Source\PSoC4/CyLib.c **** 
2871:Generated_Source\PSoC4/CyLib.c **** 
2872:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2873:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickClear
2874:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2875:Generated_Source\PSoC4/CyLib.c **** *
2876:Generated_Source\PSoC4/CyLib.c **** *  Clears the SysTick counter for well-defined startup.
2877:Generated_Source\PSoC4/CyLib.c **** *
2878:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2879:Generated_Source\PSoC4/CyLib.c **** void CySysTickClear(void)
2880:Generated_Source\PSoC4/CyLib.c **** {
2881:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CVR_REG = 0u;
 1522              		.loc 1 2881 0
 1523 0034 084B     		ldr	r3, .L116+24
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\cc2xwxHk.s 			page 81


 1524 0036 1C60     		str	r4, [r3]
 1525              	.LVL118:
 1526              	.LBE47:
 1527              	.LBE46:
 1528              	.LBB48:
 1529              	.LBB40:
2439:Generated_Source\PSoC4/CyLib.c **** }
 1530              		.loc 1 2439 0
 1531 0038 084B     		ldr	r3, .L116+28
 1532 003a 1A60     		str	r2, [r3]
 1533              	.LBE40:
 1534              	.LBE48:
2675:Generated_Source\PSoC4/CyLib.c **** 
 1535              		.loc 1 2675 0
 1536 003c 10BD     		pop	{r4, pc}
 1537              	.L117:
 1538 003e C046     		.align	2
 1539              	.L116:
 1540 0040 00000000 		.word	.LANCHOR2
 1541 0044 00000000 		.word	CySysTickServiceCallbacks
 1542 0048 3C000020 		.word	536870972
 1543 004c 10E000E0 		.word	-536813552
 1544 0050 00000000 		.word	.LANCHOR0
 1545 0054 14E000E0 		.word	-536813548
 1546 0058 18E000E0 		.word	-536813544
 1547 005c 00E100E0 		.word	-536813312
 1548              		.cfi_endproc
 1549              	.LFE32:
 1550              		.size	CySysTickInit, .-CySysTickInit
 1551              		.section	.text.CySysTickStop,"ax",%progbits
 1552              		.align	1
 1553              		.global	CySysTickStop
 1554              		.code	16
 1555              		.thumb_func
 1556              		.type	CySysTickStop, %function
 1557              	CySysTickStop:
 1558              	.LFB34:
2706:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG &= ((uint32) ~(CY_SYS_SYST_CSR_ENABLE));
 1559              		.loc 1 2706 0
 1560              		.cfi_startproc
2707:Generated_Source\PSoC4/CyLib.c **** }
 1561              		.loc 1 2707 0
 1562 0000 0121     		mov	r1, #1
 1563 0002 024A     		ldr	r2, .L119
2708:Generated_Source\PSoC4/CyLib.c **** 
 1564              		.loc 1 2708 0
 1565              		@ sp needed
2707:Generated_Source\PSoC4/CyLib.c **** }
 1566              		.loc 1 2707 0
 1567 0004 1368     		ldr	r3, [r2]
 1568 0006 8B43     		bic	r3, r1
 1569 0008 1360     		str	r3, [r2]
2708:Generated_Source\PSoC4/CyLib.c **** 
 1570              		.loc 1 2708 0
 1571 000a 7047     		bx	lr
 1572              	.L120:
 1573              		.align	2
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\cc2xwxHk.s 			page 82


 1574              	.L119:
 1575 000c 10E000E0 		.word	-536813552
 1576              		.cfi_endproc
 1577              	.LFE34:
 1578              		.size	CySysTickStop, .-CySysTickStop
 1579              		.section	.text.CySysTickEnableInterrupt,"ax",%progbits
 1580              		.align	1
 1581              		.global	CySysTickEnableInterrupt
 1582              		.code	16
 1583              		.thumb_func
 1584              		.type	CySysTickEnableInterrupt, %function
 1585              	CySysTickEnableInterrupt:
 1586              	.LFB35:
2722:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG |= CY_SYS_SYST_CSR_ENABLE_INT;
 1587              		.loc 1 2722 0
 1588              		.cfi_startproc
2723:Generated_Source\PSoC4/CyLib.c **** }
 1589              		.loc 1 2723 0
 1590 0000 0221     		mov	r1, #2
 1591 0002 024A     		ldr	r2, .L122
2724:Generated_Source\PSoC4/CyLib.c **** 
 1592              		.loc 1 2724 0
 1593              		@ sp needed
2723:Generated_Source\PSoC4/CyLib.c **** }
 1594              		.loc 1 2723 0
 1595 0004 1368     		ldr	r3, [r2]
 1596 0006 0B43     		orr	r3, r1
 1597 0008 1360     		str	r3, [r2]
2724:Generated_Source\PSoC4/CyLib.c **** 
 1598              		.loc 1 2724 0
 1599 000a 7047     		bx	lr
 1600              	.L123:
 1601              		.align	2
 1602              	.L122:
 1603 000c 10E000E0 		.word	-536813552
 1604              		.cfi_endproc
 1605              	.LFE35:
 1606              		.size	CySysTickEnableInterrupt, .-CySysTickEnableInterrupt
 1607              		.section	.text.CySysTickEnable,"ax",%progbits
 1608              		.align	1
 1609              		.global	CySysTickEnable
 1610              		.code	16
 1611              		.thumb_func
 1612              		.type	CySysTickEnable, %function
 1613              	CySysTickEnable:
 1614              	.LFB33:
2689:Generated_Source\PSoC4/CyLib.c ****     CySysTickEnableInterrupt();
 1615              		.loc 1 2689 0
 1616              		.cfi_startproc
 1617 0000 08B5     		push	{r3, lr}
 1618              		.cfi_def_cfa_offset 8
 1619              		.cfi_offset 3, -8
 1620              		.cfi_offset 14, -4
2690:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG |= CY_SYS_SYST_CSR_ENABLE;
 1621              		.loc 1 2690 0
 1622 0002 FFF7FEFF 		bl	CySysTickEnableInterrupt
 1623              	.LVL119:
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\cc2xwxHk.s 			page 83


2691:Generated_Source\PSoC4/CyLib.c **** }
 1624              		.loc 1 2691 0
 1625 0006 0121     		mov	r1, #1
 1626 0008 024A     		ldr	r2, .L125
2692:Generated_Source\PSoC4/CyLib.c **** 
 1627              		.loc 1 2692 0
 1628              		@ sp needed
2691:Generated_Source\PSoC4/CyLib.c **** }
 1629              		.loc 1 2691 0
 1630 000a 1368     		ldr	r3, [r2]
 1631 000c 0B43     		orr	r3, r1
 1632 000e 1360     		str	r3, [r2]
2692:Generated_Source\PSoC4/CyLib.c **** 
 1633              		.loc 1 2692 0
 1634 0010 08BD     		pop	{r3, pc}
 1635              	.L126:
 1636 0012 C046     		.align	2
 1637              	.L125:
 1638 0014 10E000E0 		.word	-536813552
 1639              		.cfi_endproc
 1640              	.LFE33:
 1641              		.size	CySysTickEnable, .-CySysTickEnable
 1642              		.section	.text.CySysTickStart,"ax",%progbits
 1643              		.align	1
 1644              		.global	CySysTickStart
 1645              		.code	16
 1646              		.thumb_func
 1647              		.type	CySysTickStart, %function
 1648              	CySysTickStart:
 1649              	.LFB31:
2629:Generated_Source\PSoC4/CyLib.c ****     if (0u == CySysTickInitVar)
 1650              		.loc 1 2629 0
 1651              		.cfi_startproc
 1652 0000 10B5     		push	{r4, lr}
 1653              		.cfi_def_cfa_offset 8
 1654              		.cfi_offset 4, -8
 1655              		.cfi_offset 14, -4
2630:Generated_Source\PSoC4/CyLib.c ****     {
 1656              		.loc 1 2630 0
 1657 0002 054C     		ldr	r4, .L129
 1658 0004 6369     		ldr	r3, [r4, #20]
 1659 0006 002B     		cmp	r3, #0
 1660 0008 03D1     		bne	.L128
2632:Generated_Source\PSoC4/CyLib.c ****         CySysTickInitVar = 1u;
 1661              		.loc 1 2632 0
 1662 000a FFF7FEFF 		bl	CySysTickInit
 1663              	.LVL120:
2633:Generated_Source\PSoC4/CyLib.c ****     }
 1664              		.loc 1 2633 0
 1665 000e 0123     		mov	r3, #1
 1666 0010 6361     		str	r3, [r4, #20]
 1667              	.L128:
2636:Generated_Source\PSoC4/CyLib.c **** }
 1668              		.loc 1 2636 0
 1669 0012 FFF7FEFF 		bl	CySysTickEnable
 1670              	.LVL121:
2637:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\cc2xwxHk.s 			page 84


 1671              		.loc 1 2637 0
 1672              		@ sp needed
 1673 0016 10BD     		pop	{r4, pc}
 1674              	.L130:
 1675              		.align	2
 1676              	.L129:
 1677 0018 00000000 		.word	.LANCHOR2
 1678              		.cfi_endproc
 1679              	.LFE31:
 1680              		.size	CySysTickStart, .-CySysTickStart
 1681              		.section	.text.CySysTickDisableInterrupt,"ax",%progbits
 1682              		.align	1
 1683              		.global	CySysTickDisableInterrupt
 1684              		.code	16
 1685              		.thumb_func
 1686              		.type	CySysTickDisableInterrupt, %function
 1687              	CySysTickDisableInterrupt:
 1688              	.LFB36:
2738:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG &= ((uint32) ~(CY_SYS_SYST_CSR_ENABLE_INT));
 1689              		.loc 1 2738 0
 1690              		.cfi_startproc
2739:Generated_Source\PSoC4/CyLib.c **** }
 1691              		.loc 1 2739 0
 1692 0000 0221     		mov	r1, #2
 1693 0002 024A     		ldr	r2, .L132
2740:Generated_Source\PSoC4/CyLib.c **** 
 1694              		.loc 1 2740 0
 1695              		@ sp needed
2739:Generated_Source\PSoC4/CyLib.c **** }
 1696              		.loc 1 2739 0
 1697 0004 1368     		ldr	r3, [r2]
 1698 0006 8B43     		bic	r3, r1
 1699 0008 1360     		str	r3, [r2]
2740:Generated_Source\PSoC4/CyLib.c **** 
 1700              		.loc 1 2740 0
 1701 000a 7047     		bx	lr
 1702              	.L133:
 1703              		.align	2
 1704              	.L132:
 1705 000c 10E000E0 		.word	-536813552
 1706              		.cfi_endproc
 1707              	.LFE36:
 1708              		.size	CySysTickDisableInterrupt, .-CySysTickDisableInterrupt
 1709              		.section	.text.CySysTickSetReload,"ax",%progbits
 1710              		.align	1
 1711              		.global	CySysTickSetReload
 1712              		.code	16
 1713              		.thumb_func
 1714              		.type	CySysTickSetReload, %function
 1715              	CySysTickSetReload:
 1716              	.LFB37:
2755:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_RVR_REG = (value & CY_SYS_SYST_RVR_CNT_MASK);
 1717              		.loc 1 2755 0
 1718              		.cfi_startproc
 1719              	.LVL122:
2756:Generated_Source\PSoC4/CyLib.c **** }
 1720              		.loc 1 2756 0
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\cc2xwxHk.s 			page 85


 1721 0000 024B     		ldr	r3, .L135
 1722 0002 0002     		lsl	r0, r0, #8
 1723              	.LVL123:
 1724 0004 000A     		lsr	r0, r0, #8
 1725 0006 1860     		str	r0, [r3]
2757:Generated_Source\PSoC4/CyLib.c **** 
 1726              		.loc 1 2757 0
 1727              		@ sp needed
 1728 0008 7047     		bx	lr
 1729              	.L136:
 1730 000a C046     		.align	2
 1731              	.L135:
 1732 000c 14E000E0 		.word	-536813548
 1733              		.cfi_endproc
 1734              	.LFE37:
 1735              		.size	CySysTickSetReload, .-CySysTickSetReload
 1736              		.section	.text.CySysTickGetReload,"ax",%progbits
 1737              		.align	1
 1738              		.global	CySysTickGetReload
 1739              		.code	16
 1740              		.thumb_func
 1741              		.type	CySysTickGetReload, %function
 1742              	CySysTickGetReload:
 1743              	.LFB38:
2771:Generated_Source\PSoC4/CyLib.c ****     return(CY_SYS_SYST_RVR_REG & CY_SYS_SYST_RVR_CNT_MASK);
 1744              		.loc 1 2771 0
 1745              		.cfi_startproc
2772:Generated_Source\PSoC4/CyLib.c **** }
 1746              		.loc 1 2772 0
 1747 0000 024B     		ldr	r3, .L138
2773:Generated_Source\PSoC4/CyLib.c **** 
 1748              		.loc 1 2773 0
 1749              		@ sp needed
2772:Generated_Source\PSoC4/CyLib.c **** }
 1750              		.loc 1 2772 0
 1751 0002 1868     		ldr	r0, [r3]
 1752 0004 0002     		lsl	r0, r0, #8
 1753 0006 000A     		lsr	r0, r0, #8
2773:Generated_Source\PSoC4/CyLib.c **** 
 1754              		.loc 1 2773 0
 1755 0008 7047     		bx	lr
 1756              	.L139:
 1757 000a C046     		.align	2
 1758              	.L138:
 1759 000c 14E000E0 		.word	-536813548
 1760              		.cfi_endproc
 1761              	.LFE38:
 1762              		.size	CySysTickGetReload, .-CySysTickGetReload
 1763              		.section	.text.CySysTickGetValue,"ax",%progbits
 1764              		.align	1
 1765              		.global	CySysTickGetValue
 1766              		.code	16
 1767              		.thumb_func
 1768              		.type	CySysTickGetValue, %function
 1769              	CySysTickGetValue:
 1770              	.LFB39:
2787:Generated_Source\PSoC4/CyLib.c ****     return(CY_SYS_SYST_CVR_REG & CY_SYS_SYST_CVR_CNT_MASK);
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\cc2xwxHk.s 			page 86


 1771              		.loc 1 2787 0
 1772              		.cfi_startproc
2788:Generated_Source\PSoC4/CyLib.c **** }
 1773              		.loc 1 2788 0
 1774 0000 024B     		ldr	r3, .L141
2789:Generated_Source\PSoC4/CyLib.c **** 
 1775              		.loc 1 2789 0
 1776              		@ sp needed
2788:Generated_Source\PSoC4/CyLib.c **** }
 1777              		.loc 1 2788 0
 1778 0002 1868     		ldr	r0, [r3]
 1779 0004 0002     		lsl	r0, r0, #8
 1780 0006 000A     		lsr	r0, r0, #8
2789:Generated_Source\PSoC4/CyLib.c **** 
 1781              		.loc 1 2789 0
 1782 0008 7047     		bx	lr
 1783              	.L142:
 1784 000a C046     		.align	2
 1785              	.L141:
 1786 000c 18E000E0 		.word	-536813544
 1787              		.cfi_endproc
 1788              	.LFE39:
 1789              		.size	CySysTickGetValue, .-CySysTickGetValue
 1790              		.section	.text.CySysTickSetClockSource,"ax",%progbits
 1791              		.align	1
 1792              		.global	CySysTickSetClockSource
 1793              		.code	16
 1794              		.thumb_func
 1795              		.type	CySysTickSetClockSource, %function
 1796              	CySysTickSetClockSource:
 1797              	.LFB40:
2819:Generated_Source\PSoC4/CyLib.c ****         if (clockSource == CY_SYS_SYST_CSR_CLK_SRC_SYSCLK)
 1798              		.loc 1 2819 0
 1799              		.cfi_startproc
 1800              	.LVL124:
 1801 0000 044B     		ldr	r3, .L147
 1802 0002 0421     		mov	r1, #4
 1803              	.LBB51:
 1804              	.LBB52:
2822:Generated_Source\PSoC4/CyLib.c ****         }
 1805              		.loc 1 2822 0
 1806 0004 1A68     		ldr	r2, [r3]
 1807              	.LBE52:
 1808              	.LBE51:
2820:Generated_Source\PSoC4/CyLib.c ****         {
 1809              		.loc 1 2820 0
 1810 0006 0128     		cmp	r0, #1
 1811 0008 01D1     		bne	.L144
 1812              	.LVL125:
 1813              	.LBB54:
 1814              	.LBB53:
2822:Generated_Source\PSoC4/CyLib.c ****         }
 1815              		.loc 1 2822 0
 1816 000a 0A43     		orr	r2, r1
 1817 000c 00E0     		b	.L146
 1818              	.LVL126:
 1819              	.L144:
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\cc2xwxHk.s 			page 87


 1820              	.LBE53:
 1821              	.LBE54:
2826:Generated_Source\PSoC4/CyLib.c ****         }
 1822              		.loc 1 2826 0
 1823 000e 8A43     		bic	r2, r1
 1824              	.L146:
 1825 0010 1A60     		str	r2, [r3]
2828:Generated_Source\PSoC4/CyLib.c **** 
 1826              		.loc 1 2828 0
 1827              		@ sp needed
 1828 0012 7047     		bx	lr
 1829              	.L148:
 1830              		.align	2
 1831              	.L147:
 1832 0014 10E000E0 		.word	-536813552
 1833              		.cfi_endproc
 1834              	.LFE40:
 1835              		.size	CySysTickSetClockSource, .-CySysTickSetClockSource
 1836              		.section	.text.CySysTickGetClockSource,"ax",%progbits
 1837              		.align	1
 1838              		.global	CySysTickGetClockSource
 1839              		.code	16
 1840              		.thumb_func
 1841              		.type	CySysTickGetClockSource, %function
 1842              	CySysTickGetClockSource:
 1843              	.LFB41:
2844:Generated_Source\PSoC4/CyLib.c ****         return ((CY_SYS_SYST_CSR_REG >> CY_SYS_SYST_CSR_CLK_SOURCE_SHIFT) & CY_SYS_SYST_CSR_CLK_SRC
 1844              		.loc 1 2844 0
 1845              		.cfi_startproc
2845:Generated_Source\PSoC4/CyLib.c ****     }
 1846              		.loc 1 2845 0
 1847 0000 024B     		ldr	r3, .L150
2846:Generated_Source\PSoC4/CyLib.c ****     
 1848              		.loc 1 2846 0
 1849              		@ sp needed
2845:Generated_Source\PSoC4/CyLib.c ****     }
 1850              		.loc 1 2845 0
 1851 0002 1868     		ldr	r0, [r3]
 1852 0004 4007     		lsl	r0, r0, #29
 1853 0006 C00F     		lsr	r0, r0, #31
2846:Generated_Source\PSoC4/CyLib.c ****     
 1854              		.loc 1 2846 0
 1855 0008 7047     		bx	lr
 1856              	.L151:
 1857 000a C046     		.align	2
 1858              	.L150:
 1859 000c 10E000E0 		.word	-536813552
 1860              		.cfi_endproc
 1861              	.LFE41:
 1862              		.size	CySysTickGetClockSource, .-CySysTickGetClockSource
 1863              		.section	.text.CySysTickGetCountFlag,"ax",%progbits
 1864              		.align	1
 1865              		.global	CySysTickGetCountFlag
 1866              		.code	16
 1867              		.thumb_func
 1868              		.type	CySysTickGetCountFlag, %function
 1869              	CySysTickGetCountFlag:
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\cc2xwxHk.s 			page 88


 1870              	.LFB42:
2867:Generated_Source\PSoC4/CyLib.c ****     return ((CY_SYS_SYST_CSR_REG >> CY_SYS_SYST_CSR_COUNTFLAG_SHIFT) & 0x01u);
 1871              		.loc 1 2867 0
 1872              		.cfi_startproc
2868:Generated_Source\PSoC4/CyLib.c **** }
 1873              		.loc 1 2868 0
 1874 0000 024B     		ldr	r3, .L153
2869:Generated_Source\PSoC4/CyLib.c **** 
 1875              		.loc 1 2869 0
 1876              		@ sp needed
2868:Generated_Source\PSoC4/CyLib.c **** }
 1877              		.loc 1 2868 0
 1878 0002 1868     		ldr	r0, [r3]
 1879 0004 C003     		lsl	r0, r0, #15
 1880 0006 C00F     		lsr	r0, r0, #31
2869:Generated_Source\PSoC4/CyLib.c **** 
 1881              		.loc 1 2869 0
 1882 0008 7047     		bx	lr
 1883              	.L154:
 1884 000a C046     		.align	2
 1885              	.L153:
 1886 000c 10E000E0 		.word	-536813552
 1887              		.cfi_endproc
 1888              	.LFE42:
 1889              		.size	CySysTickGetCountFlag, .-CySysTickGetCountFlag
 1890              		.section	.text.CySysTickServiceCallbacks,"ax",%progbits
 1891              		.align	1
 1892              		.code	16
 1893              		.thumb_func
 1894              		.type	CySysTickServiceCallbacks, %function
 1895              	CySysTickServiceCallbacks:
 1896              	.LFB46:
2882:Generated_Source\PSoC4/CyLib.c **** }
2883:Generated_Source\PSoC4/CyLib.c **** 
2884:Generated_Source\PSoC4/CyLib.c **** 
2885:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2886:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickSetCallback
2887:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2888:Generated_Source\PSoC4/CyLib.c **** *
2889:Generated_Source\PSoC4/CyLib.c **** *  This function allows up to five user-defined interrupt service routine
2890:Generated_Source\PSoC4/CyLib.c **** *  functions to be associated with the SysTick interrupt. These are specified
2891:Generated_Source\PSoC4/CyLib.c **** *  through the use of pointers to the function.
2892:Generated_Source\PSoC4/CyLib.c **** *
2893:Generated_Source\PSoC4/CyLib.c **** *  To set a custom callback function without the overhead of the system provided
2894:Generated_Source\PSoC4/CyLib.c **** *  one, use CyIntSetSysVector(CY_INT_SYSTICK_IRQN, cyisraddress <address>),
2895:Generated_Source\PSoC4/CyLib.c **** *  where <address> is address of the custom defined interrupt service routine.
2896:Generated_Source\PSoC4/CyLib.c **** *  Note: a custom callback function overrides the system defined callback
2897:Generated_Source\PSoC4/CyLib.c **** *  functions.
2898:Generated_Source\PSoC4/CyLib.c **** *
2899:Generated_Source\PSoC4/CyLib.c **** *  \param number: The number of the callback function addresses to be set. The valid
2900:Generated_Source\PSoC4/CyLib.c **** *          range is from 0 to 4.
2901:Generated_Source\PSoC4/CyLib.c **** *
2902:Generated_Source\PSoC4/CyLib.c **** *  void(*CallbackFunction(void): A pointer to the function that will be
2903:Generated_Source\PSoC4/CyLib.c **** *                                associated with the SysTick ISR for the
2904:Generated_Source\PSoC4/CyLib.c **** *                                specified number.
2905:Generated_Source\PSoC4/CyLib.c **** *
2906:Generated_Source\PSoC4/CyLib.c **** * \return
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\cc2xwxHk.s 			page 89


2907:Generated_Source\PSoC4/CyLib.c **** *  Returns the address of the previous callback function.
2908:Generated_Source\PSoC4/CyLib.c **** *  The NULL is returned if the specified address in not set.
2909:Generated_Source\PSoC4/CyLib.c **** *
2910:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2911:Generated_Source\PSoC4/CyLib.c **** *  The registered callback functions will be executed in the interrupt.
2912:Generated_Source\PSoC4/CyLib.c **** *
2913:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2914:Generated_Source\PSoC4/CyLib.c **** cySysTickCallback CySysTickSetCallback(uint32 number, cySysTickCallback function)
2915:Generated_Source\PSoC4/CyLib.c **** {
2916:Generated_Source\PSoC4/CyLib.c ****     cySysTickCallback retVal;
2917:Generated_Source\PSoC4/CyLib.c **** 
2918:Generated_Source\PSoC4/CyLib.c ****     retVal = CySysTickCallbacks[number];
2919:Generated_Source\PSoC4/CyLib.c ****     CySysTickCallbacks[number] = function;
2920:Generated_Source\PSoC4/CyLib.c ****     return (retVal);
2921:Generated_Source\PSoC4/CyLib.c **** }
2922:Generated_Source\PSoC4/CyLib.c **** 
2923:Generated_Source\PSoC4/CyLib.c **** 
2924:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2925:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetCallback
2926:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2927:Generated_Source\PSoC4/CyLib.c **** *
2928:Generated_Source\PSoC4/CyLib.c **** *  The function get the specified callback pointer.
2929:Generated_Source\PSoC4/CyLib.c **** *
2930:Generated_Source\PSoC4/CyLib.c **** *  \param number: The number of callback function address to get. The valid
2931:Generated_Source\PSoC4/CyLib.c **** *          range is from 0 to 4.
2932:Generated_Source\PSoC4/CyLib.c **** *
2933:Generated_Source\PSoC4/CyLib.c **** * \return
2934:Generated_Source\PSoC4/CyLib.c **** *  Returns the address of the specified callback function.
2935:Generated_Source\PSoC4/CyLib.c **** *  The NULL is returned if the specified address in not initialized.
2936:Generated_Source\PSoC4/CyLib.c **** *
2937:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2938:Generated_Source\PSoC4/CyLib.c **** cySysTickCallback CySysTickGetCallback(uint32 number)
2939:Generated_Source\PSoC4/CyLib.c **** {
2940:Generated_Source\PSoC4/CyLib.c ****     return ((cySysTickCallback) CySysTickCallbacks[number]);
2941:Generated_Source\PSoC4/CyLib.c **** }
2942:Generated_Source\PSoC4/CyLib.c **** 
2943:Generated_Source\PSoC4/CyLib.c **** 
2944:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2945:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickServiceCallbacks
2946:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2947:Generated_Source\PSoC4/CyLib.c **** *
2948:Generated_Source\PSoC4/CyLib.c **** *  System Tick timer interrupt routine
2949:Generated_Source\PSoC4/CyLib.c **** *
2950:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2951:Generated_Source\PSoC4/CyLib.c **** static void CySysTickServiceCallbacks(void)
2952:Generated_Source\PSoC4/CyLib.c **** {
 1897              		.loc 1 2952 0
 1898              		.cfi_startproc
 1899 0000 10B5     		push	{r4, lr}
 1900              		.cfi_def_cfa_offset 8
 1901              		.cfi_offset 4, -8
 1902              		.cfi_offset 14, -4
2953:Generated_Source\PSoC4/CyLib.c ****     uint32 i;
2954:Generated_Source\PSoC4/CyLib.c **** 
2955:Generated_Source\PSoC4/CyLib.c ****     /* Verify that tick timer flag was set */
2956:Generated_Source\PSoC4/CyLib.c ****     if (1u == CySysTickGetCountFlag())
 1903              		.loc 1 2956 0
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\cc2xwxHk.s 			page 90


 1904 0002 FFF7FEFF 		bl	CySysTickGetCountFlag
 1905              	.LVL127:
 1906 0006 0128     		cmp	r0, #1
 1907 0008 08D1     		bne	.L155
 1908 000a 0024     		mov	r4, #0
 1909              	.L156:
 1910              	.LBB57:
2957:Generated_Source\PSoC4/CyLib.c ****     {
2958:Generated_Source\PSoC4/CyLib.c ****         for (i=0u; i < CY_SYS_SYST_NUM_OF_CALLBACKS; i++)
2959:Generated_Source\PSoC4/CyLib.c ****         {
2960:Generated_Source\PSoC4/CyLib.c ****             if (CySysTickCallbacks[i] != (void *) 0)
 1911              		.loc 1 2960 0
 1912 000c 044B     		ldr	r3, .L163
 1913 000e E358     		ldr	r3, [r4, r3]
 1914 0010 002B     		cmp	r3, #0
 1915 0012 00D0     		beq	.L157
2961:Generated_Source\PSoC4/CyLib.c ****             {
2962:Generated_Source\PSoC4/CyLib.c ****                 (void)(CySysTickCallbacks[i])();
 1916              		.loc 1 2962 0
 1917 0014 9847     		blx	r3
 1918              	.LVL128:
 1919              	.L157:
 1920 0016 0434     		add	r4, r4, #4
2958:Generated_Source\PSoC4/CyLib.c ****         {
 1921              		.loc 1 2958 0
 1922 0018 142C     		cmp	r4, #20
 1923 001a F7D1     		bne	.L156
 1924              	.L155:
 1925              	.LBE57:
2963:Generated_Source\PSoC4/CyLib.c ****             }
2964:Generated_Source\PSoC4/CyLib.c ****         }
2965:Generated_Source\PSoC4/CyLib.c ****     }
2966:Generated_Source\PSoC4/CyLib.c **** }
 1926              		.loc 1 2966 0
 1927              		@ sp needed
 1928 001c 10BD     		pop	{r4, pc}
 1929              	.L164:
 1930 001e C046     		.align	2
 1931              	.L163:
 1932 0020 00000000 		.word	.LANCHOR2
 1933              		.cfi_endproc
 1934              	.LFE46:
 1935              		.size	CySysTickServiceCallbacks, .-CySysTickServiceCallbacks
 1936              		.section	.text.CySysTickClear,"ax",%progbits
 1937              		.align	1
 1938              		.global	CySysTickClear
 1939              		.code	16
 1940              		.thumb_func
 1941              		.type	CySysTickClear, %function
 1942              	CySysTickClear:
 1943              	.LFB43:
2880:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CVR_REG = 0u;
 1944              		.loc 1 2880 0
 1945              		.cfi_startproc
2881:Generated_Source\PSoC4/CyLib.c **** }
 1946              		.loc 1 2881 0
 1947 0000 0022     		mov	r2, #0
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\cc2xwxHk.s 			page 91


 1948 0002 014B     		ldr	r3, .L166
2882:Generated_Source\PSoC4/CyLib.c **** 
 1949              		.loc 1 2882 0
 1950              		@ sp needed
2881:Generated_Source\PSoC4/CyLib.c **** }
 1951              		.loc 1 2881 0
 1952 0004 1A60     		str	r2, [r3]
2882:Generated_Source\PSoC4/CyLib.c **** 
 1953              		.loc 1 2882 0
 1954 0006 7047     		bx	lr
 1955              	.L167:
 1956              		.align	2
 1957              	.L166:
 1958 0008 18E000E0 		.word	-536813544
 1959              		.cfi_endproc
 1960              	.LFE43:
 1961              		.size	CySysTickClear, .-CySysTickClear
 1962              		.section	.text.CySysTickSetCallback,"ax",%progbits
 1963              		.align	1
 1964              		.global	CySysTickSetCallback
 1965              		.code	16
 1966              		.thumb_func
 1967              		.type	CySysTickSetCallback, %function
 1968              	CySysTickSetCallback:
 1969              	.LFB44:
2915:Generated_Source\PSoC4/CyLib.c ****     cySysTickCallback retVal;
 1970              		.loc 1 2915 0
 1971              		.cfi_startproc
 1972              	.LVL129:
2918:Generated_Source\PSoC4/CyLib.c ****     CySysTickCallbacks[number] = function;
 1973              		.loc 1 2918 0
 1974 0000 024A     		ldr	r2, .L169
 1975 0002 8300     		lsl	r3, r0, #2
 1976 0004 9858     		ldr	r0, [r3, r2]
 1977              	.LVL130:
2921:Generated_Source\PSoC4/CyLib.c **** 
 1978              		.loc 1 2921 0
 1979              		@ sp needed
2919:Generated_Source\PSoC4/CyLib.c ****     return (retVal);
 1980              		.loc 1 2919 0
 1981 0006 9950     		str	r1, [r3, r2]
2921:Generated_Source\PSoC4/CyLib.c **** 
 1982              		.loc 1 2921 0
 1983 0008 7047     		bx	lr
 1984              	.L170:
 1985 000a C046     		.align	2
 1986              	.L169:
 1987 000c 00000000 		.word	.LANCHOR2
 1988              		.cfi_endproc
 1989              	.LFE44:
 1990              		.size	CySysTickSetCallback, .-CySysTickSetCallback
 1991              		.section	.text.CySysTickGetCallback,"ax",%progbits
 1992              		.align	1
 1993              		.global	CySysTickGetCallback
 1994              		.code	16
 1995              		.thumb_func
 1996              		.type	CySysTickGetCallback, %function
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\cc2xwxHk.s 			page 92


 1997              	CySysTickGetCallback:
 1998              	.LFB45:
2939:Generated_Source\PSoC4/CyLib.c ****     return ((cySysTickCallback) CySysTickCallbacks[number]);
 1999              		.loc 1 2939 0
 2000              		.cfi_startproc
 2001              	.LVL131:
2940:Generated_Source\PSoC4/CyLib.c **** }
 2002              		.loc 1 2940 0
 2003 0000 014B     		ldr	r3, .L172
 2004 0002 8000     		lsl	r0, r0, #2
 2005              	.LVL132:
 2006 0004 C058     		ldr	r0, [r0, r3]
2941:Generated_Source\PSoC4/CyLib.c **** 
 2007              		.loc 1 2941 0
 2008              		@ sp needed
 2009 0006 7047     		bx	lr
 2010              	.L173:
 2011              		.align	2
 2012              	.L172:
 2013 0008 00000000 		.word	.LANCHOR2
 2014              		.cfi_endproc
 2015              	.LFE45:
 2016              		.size	CySysTickGetCallback, .-CySysTickGetCallback
 2017              		.section	.text.CyGetUniqueId,"ax",%progbits
 2018              		.align	1
 2019              		.global	CyGetUniqueId
 2020              		.code	16
 2021              		.thumb_func
 2022              		.type	CyGetUniqueId, %function
 2023              	CyGetUniqueId:
 2024              	.LFB47:
2967:Generated_Source\PSoC4/CyLib.c **** 
2968:Generated_Source\PSoC4/CyLib.c **** 
2969:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2970:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyGetUniqueId
2971:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2972:Generated_Source\PSoC4/CyLib.c **** *
2973:Generated_Source\PSoC4/CyLib.c **** *  Returns the 64-bit unique ID of the device. The uniqueness of the number is
2974:Generated_Source\PSoC4/CyLib.c **** *  guaranteed for 10 years due to the die lot number having a cycle life of 10
2975:Generated_Source\PSoC4/CyLib.c **** *  years and even after 10 years, the probability of getting two identical
2976:Generated_Source\PSoC4/CyLib.c **** *  numbers is very small.
2977:Generated_Source\PSoC4/CyLib.c **** *
2978:Generated_Source\PSoC4/CyLib.c **** *  \param uniqueId: The pointer to a two element 32-bit unsigned integer array. Returns
2979:Generated_Source\PSoC4/CyLib.c **** *  the 64-bit unique ID of the device by loading them into the integer array
2980:Generated_Source\PSoC4/CyLib.c **** *  pointed to by uniqueId.
2981:Generated_Source\PSoC4/CyLib.c **** *
2982:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2983:Generated_Source\PSoC4/CyLib.c **** void CyGetUniqueId(uint32* uniqueId)
2984:Generated_Source\PSoC4/CyLib.c **** {
 2025              		.loc 1 2984 0
 2026              		.cfi_startproc
 2027              	.LVL133:
2985:Generated_Source\PSoC4/CyLib.c **** #if(CY_PSOC4)
2986:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u]  =  (uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT0  );
 2028              		.loc 1 2986 0
 2029 0000 134B     		ldr	r3, .L175
2987:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT1  ) <<  8u);
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\cc2xwxHk.s 			page 93


2988:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT2  ) << 16u);
2989:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_WAFER ) << 24u);
2990:Generated_Source\PSoC4/CyLib.c **** 
2991:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u]  =  (uint32)(* (reg8 *) CYREG_SFLASH_DIE_X     );
2992:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_Y     ) <<  8u);
2993:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_SORT  ) << 16u);
2994:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_MINOR ) << 24u);
2995:Generated_Source\PSoC4/CyLib.c **** #else
2996:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u]  =  (uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_LOT_LSB   )
2997:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_LOT_MSB   )
2998:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_MLOGIC_REV_ID                )
2999:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_WAFER_NUM )
3000:Generated_Source\PSoC4/CyLib.c **** 
3001:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u]  =  (uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_X_LOC     )
3002:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_Y_LOC     )
3003:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_WRK_WK    )
3004:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_FAB_YR    )
3005:Generated_Source\PSoC4/CyLib.c **** #endif  /* (CY_PSOC4) */
3006:Generated_Source\PSoC4/CyLib.c **** }
 2030              		.loc 1 3006 0
 2031              		@ sp needed
2986:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT1  ) <<  8u);
 2032              		.loc 1 2986 0
 2033 0002 1B78     		ldrb	r3, [r3]
 2034 0004 DAB2     		uxtb	r2, r3
2987:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT1  ) <<  8u);
 2035              		.loc 1 2987 0
 2036 0006 134B     		ldr	r3, .L175+4
2986:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT1  ) <<  8u);
 2037              		.loc 1 2986 0
 2038 0008 0260     		str	r2, [r0]
2987:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT1  ) <<  8u);
 2039              		.loc 1 2987 0
 2040 000a 1B78     		ldrb	r3, [r3]
 2041 000c 1B02     		lsl	r3, r3, #8
 2042 000e 1343     		orr	r3, r2
2988:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_WAFER ) << 24u);
 2043              		.loc 1 2988 0
 2044 0010 114A     		ldr	r2, .L175+8
2987:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT1  ) <<  8u);
 2045              		.loc 1 2987 0
 2046 0012 0360     		str	r3, [r0]
2988:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_WAFER ) << 24u);
 2047              		.loc 1 2988 0
 2048 0014 1278     		ldrb	r2, [r2]
 2049 0016 1204     		lsl	r2, r2, #16
 2050 0018 1343     		orr	r3, r2
2989:Generated_Source\PSoC4/CyLib.c **** 
 2051              		.loc 1 2989 0
 2052 001a 104A     		ldr	r2, .L175+12
2988:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_WAFER ) << 24u);
 2053              		.loc 1 2988 0
 2054 001c 0360     		str	r3, [r0]
2989:Generated_Source\PSoC4/CyLib.c **** 
 2055              		.loc 1 2989 0
 2056 001e 1278     		ldrb	r2, [r2]
 2057 0020 1206     		lsl	r2, r2, #24
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\cc2xwxHk.s 			page 94


 2058 0022 1343     		orr	r3, r2
 2059 0024 0360     		str	r3, [r0]
2991:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_Y     ) <<  8u);
 2060              		.loc 1 2991 0
 2061 0026 0E4B     		ldr	r3, .L175+16
 2062 0028 1B78     		ldrb	r3, [r3]
 2063 002a DAB2     		uxtb	r2, r3
2992:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_SORT  ) << 16u);
 2064              		.loc 1 2992 0
 2065 002c 0D4B     		ldr	r3, .L175+20
2991:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_Y     ) <<  8u);
 2066              		.loc 1 2991 0
 2067 002e 4260     		str	r2, [r0, #4]
2992:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_SORT  ) << 16u);
 2068              		.loc 1 2992 0
 2069 0030 1B78     		ldrb	r3, [r3]
 2070 0032 1B02     		lsl	r3, r3, #8
 2071 0034 1343     		orr	r3, r2
2993:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_MINOR ) << 24u);
 2072              		.loc 1 2993 0
 2073 0036 0C4A     		ldr	r2, .L175+24
2992:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_SORT  ) << 16u);
 2074              		.loc 1 2992 0
 2075 0038 4360     		str	r3, [r0, #4]
2993:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_MINOR ) << 24u);
 2076              		.loc 1 2993 0
 2077 003a 1278     		ldrb	r2, [r2]
 2078 003c 1204     		lsl	r2, r2, #16
 2079 003e 1343     		orr	r3, r2
2994:Generated_Source\PSoC4/CyLib.c **** #else
 2080              		.loc 1 2994 0
 2081 0040 0A4A     		ldr	r2, .L175+28
2993:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_MINOR ) << 24u);
 2082              		.loc 1 2993 0
 2083 0042 4360     		str	r3, [r0, #4]
2994:Generated_Source\PSoC4/CyLib.c **** #else
 2084              		.loc 1 2994 0
 2085 0044 1278     		ldrb	r2, [r2]
 2086 0046 1206     		lsl	r2, r2, #24
 2087 0048 1343     		orr	r3, r2
 2088 004a 4360     		str	r3, [r0, #4]
 2089              		.loc 1 3006 0
 2090 004c 7047     		bx	lr
 2091              	.L176:
 2092 004e C046     		.align	2
 2093              	.L175:
 2094 0050 78F1FF0F 		.word	268431736
 2095 0054 79F1FF0F 		.word	268431737
 2096 0058 7AF1FF0F 		.word	268431738
 2097 005c 7BF1FF0F 		.word	268431739
 2098 0060 7CF1FF0F 		.word	268431740
 2099 0064 7DF1FF0F 		.word	268431741
 2100 0068 7EF1FF0F 		.word	268431742
 2101 006c 7FF1FF0F 		.word	268431743
 2102              		.cfi_endproc
 2103              	.LFE47:
 2104              		.size	CyGetUniqueId, .-CyGetUniqueId
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\cc2xwxHk.s 			page 95


 2105              		.section	.text.CySysSetRamAccessArbPriority,"ax",%progbits
 2106              		.align	1
 2107              		.global	CySysSetRamAccessArbPriority
 2108              		.code	16
 2109              		.thumb_func
 2110              		.type	CySysSetRamAccessArbPriority, %function
 2111              	CySysSetRamAccessArbPriority:
 2112              	.LFB48:
3007:Generated_Source\PSoC4/CyLib.c **** 
3008:Generated_Source\PSoC4/CyLib.c **** 
3009:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_DMAC_PRESENT)
3010:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
3011:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysSetRamAccessArbPriority
3012:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
3013:Generated_Source\PSoC4/CyLib.c ****     *
3014:Generated_Source\PSoC4/CyLib.c ****     *  Sets RAM access priority between CPU and DMA. The RAM_CTL register is
3015:Generated_Source\PSoC4/CyLib.c ****     *  configured to set the priority. Please refer to the device TRM for more
3016:Generated_Source\PSoC4/CyLib.c ****     *  details.
3017:Generated_Source\PSoC4/CyLib.c ****     *
3018:Generated_Source\PSoC4/CyLib.c ****     *  This API is applicable for PSoC 4200M and PSoC 4200L devices only.
3019:Generated_Source\PSoC4/CyLib.c ****     *
3020:Generated_Source\PSoC4/CyLib.c ****     *  \param source:
3021:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_CPU              CPU has priority (Default)
3022:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_DMA              DMA has priority
3023:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_ROUND            Round robin
3024:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_ROUND_STICKY     Round robin sticky
3025:Generated_Source\PSoC4/CyLib.c ****     *
3026:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
3027:Generated_Source\PSoC4/CyLib.c ****     void CySysSetRamAccessArbPriority(uint32 source)
3028:Generated_Source\PSoC4/CyLib.c ****     {
 2113              		.loc 1 3028 0
 2114              		.cfi_startproc
 2115              	.LVL134:
3029:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
3030:Generated_Source\PSoC4/CyLib.c **** 
3031:Generated_Source\PSoC4/CyLib.c ****         regTmp  = CY_SYS_CPUSS_RAM_CTL_REG & ~CY_SYS_CPUSS_RAM_CTL_ARB_MASK;
 2116              		.loc 1 3031 0
 2117 0000 0549     		ldr	r1, .L178
 2118 0002 064B     		ldr	r3, .L178+4
 2119 0004 0A68     		ldr	r2, [r1]
3032:Generated_Source\PSoC4/CyLib.c ****         regTmp |= ((uint32) (source << CY_SYS_CPUSS_RAM_CTL_ARB_SHIFT) & CY_SYS_CPUSS_RAM_CTL_ARB_M
 2120              		.loc 1 3032 0
 2121 0006 4004     		lsl	r0, r0, #17
 2122              	.LVL135:
3031:Generated_Source\PSoC4/CyLib.c ****         regTmp |= ((uint32) (source << CY_SYS_CPUSS_RAM_CTL_ARB_SHIFT) & CY_SYS_CPUSS_RAM_CTL_ARB_M
 2123              		.loc 1 3031 0
 2124 0008 1340     		and	r3, r2
 2125              	.LVL136:
 2126              		.loc 1 3032 0
 2127 000a C022     		mov	r2, #192
 2128 000c D202     		lsl	r2, r2, #11
 2129 000e 1040     		and	r0, r2
 2130 0010 1843     		orr	r0, r3
 2131              	.LVL137:
3033:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CPUSS_RAM_CTL_REG = regTmp;
 2132              		.loc 1 3033 0
 2133 0012 0860     		str	r0, [r1]
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\cc2xwxHk.s 			page 96


3034:Generated_Source\PSoC4/CyLib.c ****     }
 2134              		.loc 1 3034 0
 2135              		@ sp needed
 2136 0014 7047     		bx	lr
 2137              	.L179:
 2138 0016 C046     		.align	2
 2139              	.L178:
 2140 0018 38001040 		.word	1074790456
 2141 001c FFFFF9FF 		.word	-393217
 2142              		.cfi_endproc
 2143              	.LFE48:
 2144              		.size	CySysSetRamAccessArbPriority, .-CySysSetRamAccessArbPriority
 2145              		.section	.text.CySysSetFlashAccessArbPriority,"ax",%progbits
 2146              		.align	1
 2147              		.global	CySysSetFlashAccessArbPriority
 2148              		.code	16
 2149              		.thumb_func
 2150              		.type	CySysSetFlashAccessArbPriority, %function
 2151              	CySysSetFlashAccessArbPriority:
 2152              	.LFB49:
3035:Generated_Source\PSoC4/CyLib.c **** 
3036:Generated_Source\PSoC4/CyLib.c **** 
3037:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
3038:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysSetFlashAccessArbPriority
3039:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
3040:Generated_Source\PSoC4/CyLib.c ****     *
3041:Generated_Source\PSoC4/CyLib.c ****     *  Sets flash access priority between CPU and DMA. The FLASH_CTL register is
3042:Generated_Source\PSoC4/CyLib.c ****     *  configured to set the priority. Please refer to the device TRM for more
3043:Generated_Source\PSoC4/CyLib.c ****     *  details.
3044:Generated_Source\PSoC4/CyLib.c ****     *
3045:Generated_Source\PSoC4/CyLib.c ****     *  This API is applicable for PSoC 4200M and PSoC 4200L devices only.
3046:Generated_Source\PSoC4/CyLib.c ****     *
3047:Generated_Source\PSoC4/CyLib.c ****     *  \param source:
3048:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_CPU              CPU has priority (Default)
3049:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_DMA              DMA has priority
3050:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_ROUND            Round robin
3051:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_ROUND_STICKY     Round robin sticky
3052:Generated_Source\PSoC4/CyLib.c ****     *
3053:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
3054:Generated_Source\PSoC4/CyLib.c ****     void CySysSetFlashAccessArbPriority(uint32 source)
3055:Generated_Source\PSoC4/CyLib.c ****     {
 2153              		.loc 1 3055 0
 2154              		.cfi_startproc
 2155              	.LVL138:
3056:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
3057:Generated_Source\PSoC4/CyLib.c **** 
3058:Generated_Source\PSoC4/CyLib.c ****         regTmp  = CY_SYS_CPUSS_FLASH_CTL_REG & ~CY_SYS_CPUSS_FLASH_CTL_ARB_MASK;
 2156              		.loc 1 3058 0
 2157 0000 0549     		ldr	r1, .L181
 2158 0002 064B     		ldr	r3, .L181+4
 2159 0004 0A68     		ldr	r2, [r1]
3059:Generated_Source\PSoC4/CyLib.c ****         regTmp |= ((uint32) (source << CY_SYS_CPUSS_FLASH_CTL_ARB_SHIFT) & CY_SYS_CPUSS_FLASH_CTL_A
 2160              		.loc 1 3059 0
 2161 0006 4004     		lsl	r0, r0, #17
 2162              	.LVL139:
3058:Generated_Source\PSoC4/CyLib.c ****         regTmp |= ((uint32) (source << CY_SYS_CPUSS_FLASH_CTL_ARB_SHIFT) & CY_SYS_CPUSS_FLASH_CTL_A
 2163              		.loc 1 3058 0
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\cc2xwxHk.s 			page 97


 2164 0008 1340     		and	r3, r2
 2165              	.LVL140:
 2166              		.loc 1 3059 0
 2167 000a C022     		mov	r2, #192
 2168 000c D202     		lsl	r2, r2, #11
 2169 000e 1040     		and	r0, r2
 2170 0010 1843     		orr	r0, r3
 2171              	.LVL141:
3060:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CPUSS_FLASH_CTL_REG = regTmp;
 2172              		.loc 1 3060 0
 2173 0012 0860     		str	r0, [r1]
3061:Generated_Source\PSoC4/CyLib.c ****     }
 2174              		.loc 1 3061 0
 2175              		@ sp needed
 2176 0014 7047     		bx	lr
 2177              	.L182:
 2178 0016 C046     		.align	2
 2179              	.L181:
 2180 0018 30001040 		.word	1074790448
 2181 001c FFFFF9FF 		.word	-393217
 2182              		.cfi_endproc
 2183              	.LFE49:
 2184              		.size	CySysSetFlashAccessArbPriority, .-CySysSetFlashAccessArbPriority
 2185              		.section	.text.CySysSetDmacAccessArbPriority,"ax",%progbits
 2186              		.align	1
 2187              		.global	CySysSetDmacAccessArbPriority
 2188              		.code	16
 2189              		.thumb_func
 2190              		.type	CySysSetDmacAccessArbPriority, %function
 2191              	CySysSetDmacAccessArbPriority:
 2192              	.LFB50:
3062:Generated_Source\PSoC4/CyLib.c **** 
3063:Generated_Source\PSoC4/CyLib.c **** 
3064:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
3065:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysSetDmacAccessArbPriority
3066:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
3067:Generated_Source\PSoC4/CyLib.c ****     *
3068:Generated_Source\PSoC4/CyLib.c ****     *  Sets DMAC slave interface access priority between CPU and DMA. The DMAC_CTL
3069:Generated_Source\PSoC4/CyLib.c ****     *  register is configured to set the priority. Please refer to the device TRM
3070:Generated_Source\PSoC4/CyLib.c ****     *  for more details.
3071:Generated_Source\PSoC4/CyLib.c ****     *
3072:Generated_Source\PSoC4/CyLib.c ****     *  This API is applicable for PSoC 4200M and PSoC 4200L devices only.
3073:Generated_Source\PSoC4/CyLib.c ****     *
3074:Generated_Source\PSoC4/CyLib.c ****     *  \param source:
3075:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_CPU              CPU has priority (Default)
3076:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_DMA              DMA has priority
3077:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_ROUND            Round robin
3078:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_ROUND_STICKY     Round robin sticky
3079:Generated_Source\PSoC4/CyLib.c ****     *
3080:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
3081:Generated_Source\PSoC4/CyLib.c ****     void CySysSetDmacAccessArbPriority(uint32 source)
3082:Generated_Source\PSoC4/CyLib.c ****     {
 2193              		.loc 1 3082 0
 2194              		.cfi_startproc
 2195              	.LVL142:
3083:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
3084:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\cc2xwxHk.s 			page 98


3085:Generated_Source\PSoC4/CyLib.c ****         regTmp  = CY_SYS_CPUSS_DMAC_CTL_REG & ~CY_SYS_CPUSS_DMAC_CTL_ARB_MASK;
 2196              		.loc 1 3085 0
 2197 0000 0549     		ldr	r1, .L184
 2198 0002 064B     		ldr	r3, .L184+4
 2199 0004 0A68     		ldr	r2, [r1]
3086:Generated_Source\PSoC4/CyLib.c ****         regTmp |= ((uint32) (source << CY_SYS_CPUSS_DMAC_CTL_ARB_SHIFT) & CY_SYS_CPUSS_DMAC_CTL_ARB
 2200              		.loc 1 3086 0
 2201 0006 4004     		lsl	r0, r0, #17
 2202              	.LVL143:
3085:Generated_Source\PSoC4/CyLib.c ****         regTmp |= ((uint32) (source << CY_SYS_CPUSS_DMAC_CTL_ARB_SHIFT) & CY_SYS_CPUSS_DMAC_CTL_ARB
 2203              		.loc 1 3085 0
 2204 0008 1340     		and	r3, r2
 2205              	.LVL144:
 2206              		.loc 1 3086 0
 2207 000a C022     		mov	r2, #192
 2208 000c D202     		lsl	r2, r2, #11
 2209 000e 1040     		and	r0, r2
 2210 0010 1843     		orr	r0, r3
 2211              	.LVL145:
3087:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CPUSS_DMAC_CTL_REG = regTmp;
 2212              		.loc 1 3087 0
 2213 0012 0860     		str	r0, [r1]
3088:Generated_Source\PSoC4/CyLib.c ****     }
 2214              		.loc 1 3088 0
 2215              		@ sp needed
 2216 0014 7047     		bx	lr
 2217              	.L185:
 2218 0016 C046     		.align	2
 2219              	.L184:
 2220 0018 3C001040 		.word	1074790460
 2221 001c FFFFF9FF 		.word	-393217
 2222              		.cfi_endproc
 2223              	.LFE50:
 2224              		.size	CySysSetDmacAccessArbPriority, .-CySysSetDmacAccessArbPriority
 2225              		.section	.text.CySysSetPeripheralAccessArbPriority,"ax",%progbits
 2226              		.align	1
 2227              		.global	CySysSetPeripheralAccessArbPriority
 2228              		.code	16
 2229              		.thumb_func
 2230              		.type	CySysSetPeripheralAccessArbPriority, %function
 2231              	CySysSetPeripheralAccessArbPriority:
 2232              	.LFB51:
3089:Generated_Source\PSoC4/CyLib.c **** 
3090:Generated_Source\PSoC4/CyLib.c **** 
3091:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
3092:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysSetPeripheralAccessArbPriority
3093:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
3094:Generated_Source\PSoC4/CyLib.c ****     *
3095:Generated_Source\PSoC4/CyLib.c ****     *  Sets slave peripheral interface access priority between CPU and DMA.
3096:Generated_Source\PSoC4/CyLib.c ****     *  The SL_CTL register is configured to set the priority. Please refer to the
3097:Generated_Source\PSoC4/CyLib.c ****     *  device TRM for more details.
3098:Generated_Source\PSoC4/CyLib.c ****     *
3099:Generated_Source\PSoC4/CyLib.c ****     *  This API is applicable for PSoC 4200M and PSoC 4200L devices only.
3100:Generated_Source\PSoC4/CyLib.c ****     *
3101:Generated_Source\PSoC4/CyLib.c ****     *  \param  interfaceNumber: the slave interface number. Please refer to the
3102:Generated_Source\PSoC4/CyLib.c ****     *  device TRM for more details.
3103:Generated_Source\PSoC4/CyLib.c ****     *  \param source:
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\cc2xwxHk.s 			page 99


3104:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_CPU              CPU has priority (Default)
3105:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_DMA              DMA has priority
3106:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_ROUND            Round robin
3107:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_ROUND_STICKY     Round robin sticky
3108:Generated_Source\PSoC4/CyLib.c ****     *
3109:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
3110:Generated_Source\PSoC4/CyLib.c ****     void CySysSetPeripheralAccessArbPriority(uint32 interfaceNumber, uint32 source)
3111:Generated_Source\PSoC4/CyLib.c ****     {
 2233              		.loc 1 3111 0
 2234              		.cfi_startproc
 2235              	.LVL146:
3112:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
3113:Generated_Source\PSoC4/CyLib.c **** 
3114:Generated_Source\PSoC4/CyLib.c ****         if (interfaceNumber == 0u)
 2236              		.loc 1 3114 0
 2237 0000 0028     		cmp	r0, #0
 2238 0002 01D1     		bne	.L187
3115:Generated_Source\PSoC4/CyLib.c ****         {
3116:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CPUSS_SL_CTL0_REG & ~CY_SYS_CPUSS_SL_CTL_ARB_MASK;
 2239              		.loc 1 3116 0
 2240 0004 0748     		ldr	r0, .L190
 2241              	.LVL147:
 2242 0006 02E0     		b	.L189
 2243              	.LVL148:
 2244              	.L187:
3117:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (source << CY_SYS_CPUSS_SL_CTL_ARB_SHIFT) & CY_SYS_CPUSS_SL_CTL_ARB
3118:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CPUSS_SL_CTL0_REG = regTmp;
3119:Generated_Source\PSoC4/CyLib.c ****         } else
3120:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_SL_NR >= 2)
3121:Generated_Source\PSoC4/CyLib.c ****         if (interfaceNumber == 1u)
 2245              		.loc 1 3121 0
 2246 0008 0128     		cmp	r0, #1
 2247 000a 09D1     		bne	.L186
3122:Generated_Source\PSoC4/CyLib.c ****         {
3123:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CPUSS_SL_CTL1_REG & ~CY_SYS_CPUSS_SL_CTL_ARB_MASK;
 2248              		.loc 1 3123 0
 2249 000c 0648     		ldr	r0, .L190+4
 2250              	.LVL149:
 2251              	.L189:
 2252 000e 0268     		ldr	r2, [r0]
 2253 0010 064B     		ldr	r3, .L190+8
3124:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (source << CY_SYS_CPUSS_SL_CTL_ARB_SHIFT) & CY_SYS_CPUSS_SL_CTL_ARB
 2254              		.loc 1 3124 0
 2255 0012 4904     		lsl	r1, r1, #17
 2256              	.LVL150:
3123:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (source << CY_SYS_CPUSS_SL_CTL_ARB_SHIFT) & CY_SYS_CPUSS_SL_CTL_ARB
 2257              		.loc 1 3123 0
 2258 0014 1340     		and	r3, r2
 2259              	.LVL151:
 2260              		.loc 1 3124 0
 2261 0016 C022     		mov	r2, #192
 2262 0018 D202     		lsl	r2, r2, #11
 2263 001a 1140     		and	r1, r2
 2264 001c 1943     		orr	r1, r3
 2265              	.LVL152:
3125:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CPUSS_SL_CTL1_REG = regTmp;
 2266              		.loc 1 3125 0
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\cc2xwxHk.s 			page 100


 2267 001e 0160     		str	r1, [r0]
 2268              	.LVL153:
 2269              	.L186:
3126:Generated_Source\PSoC4/CyLib.c ****         } else
3127:Generated_Source\PSoC4/CyLib.c ****     #endif /* (CY_IP_SL_NR >= 1) */
3128:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_SL_NR >= 3)
3129:Generated_Source\PSoC4/CyLib.c ****         if (interfaceNumber == 2u)
3130:Generated_Source\PSoC4/CyLib.c ****         {
3131:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CPUSS_SL_CTL2_REG & ~CY_SYS_CPUSS_SL_CTL_ARB_MASK;
3132:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (source << CY_SYS_CPUSS_SL_CTL_ARB_SHIFT) & CY_SYS_CPUSS_SL_CTL_ARB
3133:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CPUSS_SL_CTL2_REG = regTmp;
3134:Generated_Source\PSoC4/CyLib.c ****         } else
3135:Generated_Source\PSoC4/CyLib.c ****     #endif /* (CY_IP_SL_NR >= 1) */
3136:Generated_Source\PSoC4/CyLib.c ****         {
3137:Generated_Source\PSoC4/CyLib.c ****             /* Halt CPU in debug mode if interface is invalid */
3138:Generated_Source\PSoC4/CyLib.c ****             CYASSERT(0u != 0u);
3139:Generated_Source\PSoC4/CyLib.c ****         }
3140:Generated_Source\PSoC4/CyLib.c ****     }
 2270              		.loc 1 3140 0
 2271              		@ sp needed
 2272 0020 7047     		bx	lr
 2273              	.L191:
 2274 0022 C046     		.align	2
 2275              	.L190:
 2276 0024 00011040 		.word	1074790656
 2277 0028 04011040 		.word	1074790660
 2278 002c FFFFF9FF 		.word	-393217
 2279              		.cfi_endproc
 2280              	.LFE51:
 2281              		.size	CySysSetPeripheralAccessArbPriority, .-CySysSetPeripheralAccessArbPriority
 2282              		.section	.text.CySysPrbSetGlobalVrefSource,"ax",%progbits
 2283              		.align	1
 2284              		.global	CySysPrbSetGlobalVrefSource
 2285              		.code	16
 2286              		.thumb_func
 2287              		.type	CySysPrbSetGlobalVrefSource, %function
 2288              	CySysPrbSetGlobalVrefSource:
 2289              	.LFB52:
3141:Generated_Source\PSoC4/CyLib.c **** 
3142:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_DMAC_PRESENT) */
3143:Generated_Source\PSoC4/CyLib.c **** 
3144:Generated_Source\PSoC4/CyLib.c **** 
3145:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_PASS)
3146:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
3147:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysPrbSetGlobalVrefSource
3148:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
3149:Generated_Source\PSoC4/CyLib.c ****     *
3150:Generated_Source\PSoC4/CyLib.c ****     *  Selects the source of the global voltage reference.
3151:Generated_Source\PSoC4/CyLib.c ****     *
3152:Generated_Source\PSoC4/CyLib.c ****     *  \note The global voltage reference uses one of the available programmable
3153:Generated_Source\PSoC4/CyLib.c ****     *  voltage reference lines.
3154:Generated_Source\PSoC4/CyLib.c ****     *
3155:Generated_Source\PSoC4/CyLib.c ****     *  This API is applicable for PSoC 4 devices that support the programmable
3156:Generated_Source\PSoC4/CyLib.c ****     *  reference block. Please refer to the device TRM for more details.
3157:Generated_Source\PSoC4/CyLib.c ****     *
3158:Generated_Source\PSoC4/CyLib.c ****     *  This API affects the voltage values available in
3159:Generated_Source\PSoC4/CyLib.c ****     *  \ref CySysPrbSetGlobalVrefVoltage().
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\cc2xwxHk.s 			page 101


3160:Generated_Source\PSoC4/CyLib.c ****     *
3161:Generated_Source\PSoC4/CyLib.c ****     *  This API is applicable for PSoC 4200M, PSoC 4200L and PSoC 4400 devices only.
3162:Generated_Source\PSoC4/CyLib.c ****     *
3163:Generated_Source\PSoC4/CyLib.c ****     *  \param source:
3164:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_VREF_SOURCE_BG   Sets bandgap as the source of the global voltage
3165:Generated_Source\PSoC4/CyLib.c ****     *   reference.
3166:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_VREF_SOURCE_VDDA Sets VDDA as the source of the global voltage
3167:Generated_Source\PSoC4/CyLib.c ****     *   reference.
3168:Generated_Source\PSoC4/CyLib.c ****     *
3169:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
3170:Generated_Source\PSoC4/CyLib.c ****     #ifdef CyDesignWideVoltageReference_PRB_REF
3171:Generated_Source\PSoC4/CyLib.c ****         void CySysPrbSetGlobalVrefSource(uint32 source)
3172:Generated_Source\PSoC4/CyLib.c ****         {
 2290              		.loc 1 3172 0
 2291              		.cfi_startproc
 2292              	.LVL154:
3173:Generated_Source\PSoC4/CyLib.c ****             CY_SET_REG32_FIELD(CYREG_PASS_PRB_REF, CYFLD_PASS_VREF_SUP_SEL, source);
 2293              		.loc 1 3173 0
 2294 0000 0221     		mov	r1, #2
 2295 0002 044A     		ldr	r2, .L193
 2296 0004 4000     		lsl	r0, r0, #1
 2297              	.LVL155:
 2298 0006 1368     		ldr	r3, [r2]
 2299 0008 0840     		and	r0, r1
 2300 000a 8B43     		bic	r3, r1
 2301 000c 1843     		orr	r0, r3
 2302 000e 1060     		str	r0, [r2]
3174:Generated_Source\PSoC4/CyLib.c ****         }
 2303              		.loc 1 3174 0
 2304              		@ sp needed
 2305 0010 7047     		bx	lr
 2306              	.L194:
 2307 0012 C046     		.align	2
 2308              	.L193:
 2309 0014 04023F40 		.word	1077871108
 2310              		.cfi_endproc
 2311              	.LFE52:
 2312              		.size	CySysPrbSetGlobalVrefSource, .-CySysPrbSetGlobalVrefSource
 2313              		.section	.text.CySysPrbSetBgGain,"ax",%progbits
 2314              		.align	1
 2315              		.global	CySysPrbSetBgGain
 2316              		.code	16
 2317              		.thumb_func
 2318              		.type	CySysPrbSetBgGain, %function
 2319              	CySysPrbSetBgGain:
 2320              	.LFB53:
3175:Generated_Source\PSoC4/CyLib.c ****     #endif
3176:Generated_Source\PSoC4/CyLib.c **** 
3177:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
3178:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysPrbSetBgGain
3179:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
3180:Generated_Source\PSoC4/CyLib.c ****     *
3181:Generated_Source\PSoC4/CyLib.c ****     * Selects the gain of bandgap reference buffer. Note that this API is effective
3182:Generated_Source\PSoC4/CyLib.c ****     * only when the bandgap is set as the source of global voltage reference.
3183:Generated_Source\PSoC4/CyLib.c ****     *
3184:Generated_Source\PSoC4/CyLib.c ****     * \note This API affects the voltage values available in \ref
3185:Generated_Source\PSoC4/CyLib.c ****     * CySysPrbSetGlobalVrefVoltage() API.
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\cc2xwxHk.s 			page 102


3186:Generated_Source\PSoC4/CyLib.c ****     *
3187:Generated_Source\PSoC4/CyLib.c ****     * This API is applicable for PSoC 4 devices that support the programmable
3188:Generated_Source\PSoC4/CyLib.c ****     * reference block. Please refer to the device TRM for more details.
3189:Generated_Source\PSoC4/CyLib.c ****     *
3190:Generated_Source\PSoC4/CyLib.c ****     * \param gain:
3191:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_VREF_BG_GAINx1  Gain is 1.
3192:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_VREF_BG_GAINx2  Gain is 2.
3193:Generated_Source\PSoC4/CyLib.c ****     *
3194:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
3195:Generated_Source\PSoC4/CyLib.c ****     void CySysPrbSetBgGain(uint32 gain)
3196:Generated_Source\PSoC4/CyLib.c ****     {
 2321              		.loc 1 3196 0
 2322              		.cfi_startproc
 2323              	.LVL156:
3197:Generated_Source\PSoC4/CyLib.c ****         CY_SET_REG32_FIELD(CYREG_PASS_PRB_CTRL, CYFLD_PASS_VBGR_BUF_GAIN, gain);
 2324              		.loc 1 3197 0
 2325 0000 0321     		mov	r1, #3
 2326 0002 034A     		ldr	r2, .L196
 2327 0004 0840     		and	r0, r1
 2328              	.LVL157:
 2329 0006 1368     		ldr	r3, [r2]
3198:Generated_Source\PSoC4/CyLib.c ****     }
 2330              		.loc 1 3198 0
 2331              		@ sp needed
3197:Generated_Source\PSoC4/CyLib.c ****         CY_SET_REG32_FIELD(CYREG_PASS_PRB_CTRL, CYFLD_PASS_VBGR_BUF_GAIN, gain);
 2332              		.loc 1 3197 0
 2333 0008 8B43     		bic	r3, r1
 2334 000a 1843     		orr	r0, r3
 2335 000c 1060     		str	r0, [r2]
 2336              		.loc 1 3198 0
 2337 000e 7047     		bx	lr
 2338              	.L197:
 2339              		.align	2
 2340              	.L196:
 2341 0010 00023F40 		.word	1077871104
 2342              		.cfi_endproc
 2343              	.LFE53:
 2344              		.size	CySysPrbSetBgGain, .-CySysPrbSetBgGain
 2345              		.section	.text.CySysPrbSetGlobalVrefVoltage,"ax",%progbits
 2346              		.align	1
 2347              		.global	CySysPrbSetGlobalVrefVoltage
 2348              		.code	16
 2349              		.thumb_func
 2350              		.type	CySysPrbSetGlobalVrefVoltage, %function
 2351              	CySysPrbSetGlobalVrefVoltage:
 2352              	.LFB54:
3199:Generated_Source\PSoC4/CyLib.c **** 
3200:Generated_Source\PSoC4/CyLib.c **** 
3201:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
3202:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysPrbSetGlobalVrefVoltage
3203:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
3204:Generated_Source\PSoC4/CyLib.c ****     *
3205:Generated_Source\PSoC4/CyLib.c ****     * Selects the value of global voltage reference. Set the source of the global
3206:Generated_Source\PSoC4/CyLib.c ****     * voltage reference and bandgap buffer gain (if applicable) before calling this
3207:Generated_Source\PSoC4/CyLib.c ****     * API.
3208:Generated_Source\PSoC4/CyLib.c ****     *
3209:Generated_Source\PSoC4/CyLib.c ****     * This API is applicable for PSoC 4 devices that support the programmable
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\cc2xwxHk.s 			page 103


3210:Generated_Source\PSoC4/CyLib.c ****     * reference block. Please refer to the device TRM for more details.
3211:Generated_Source\PSoC4/CyLib.c ****     *
3212:Generated_Source\PSoC4/CyLib.c ****     * \param voltageTap The range is from 1 to 16 that corresponds to:
3213:Generated_Source\PSoC4/CyLib.c ****     * Source is bandgap (x1): 0.08 V to 1.20 V in steps of 0.07 V approximately.
3214:Generated_Source\PSoC4/CyLib.c ****     * Source is bandgap (x2): 0.16 V to 2.40 V in steps of 0.14 V approximately.
3215:Generated_Source\PSoC4/CyLib.c ****     * Source is Vdda: 0.21 V to 3.30 in steps of 0.21 V approximately. The Vdda
3216:Generated_Source\PSoC4/CyLib.c ****     * is equal to 3.3 V. Voltage value will change according to value of Vdda.
3217:Generated_Source\PSoC4/CyLib.c ****     *
3218:Generated_Source\PSoC4/CyLib.c ****     *   voltageTap  | If bandgap (x1), V| If bandgap (x2), V| If Vdda
3219:Generated_Source\PSoC4/CyLib.c ****     *   ------------|-------------------|-------------------|-------------------
3220:Generated_Source\PSoC4/CyLib.c ****     *       1       |       0.08        |       0.16        |       0.21
3221:Generated_Source\PSoC4/CyLib.c ****     *       2       |       0.15        |       0.30        |       0.41
3222:Generated_Source\PSoC4/CyLib.c ****     *       3       |       0.23        |       0.46        |       0.62
3223:Generated_Source\PSoC4/CyLib.c ****     *       4       |       0.30        |       0.60        |       0.83
3224:Generated_Source\PSoC4/CyLib.c ****     *       5       |       0.38        |       0.76        |       1.03
3225:Generated_Source\PSoC4/CyLib.c ****     *       6       |       0.45        |       0.90        |       1.24
3226:Generated_Source\PSoC4/CyLib.c ****     *       7       |       0.53        |       1.06        |       1.44
3227:Generated_Source\PSoC4/CyLib.c ****     *       8       |       0.60        |       1.20        |       1.65
3228:Generated_Source\PSoC4/CyLib.c ****     *       9       |       0.68        |       1.36        |       1.86
3229:Generated_Source\PSoC4/CyLib.c ****     *       10      |       0.75        |       1.50        |       2.06
3230:Generated_Source\PSoC4/CyLib.c ****     *       11      |       0.83        |       1.66        |       2.27
3231:Generated_Source\PSoC4/CyLib.c ****     *       12      |       0.90        |       1.80        |       2.48
3232:Generated_Source\PSoC4/CyLib.c ****     *       13      |       0.98        |       1.96        |       2.68
3233:Generated_Source\PSoC4/CyLib.c ****     *       14      |       1.05        |       2.10        |       2.89
3234:Generated_Source\PSoC4/CyLib.c ****     *       15      |       1.13        |       2.26        |       3.09
3235:Generated_Source\PSoC4/CyLib.c ****     *       16      |       1.20        |       2.40        |       3.30
3236:Generated_Source\PSoC4/CyLib.c ****     *
3237:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
3238:Generated_Source\PSoC4/CyLib.c ****     #ifdef CyDesignWideVoltageReference_PRB_REF
3239:Generated_Source\PSoC4/CyLib.c ****         void CySysPrbSetGlobalVrefVoltage(uint32 voltageTap)
3240:Generated_Source\PSoC4/CyLib.c ****         {
 2353              		.loc 1 3240 0
 2354              		.cfi_startproc
 2355              	.LVL158:
3241:Generated_Source\PSoC4/CyLib.c ****             CY_SET_REG32_FIELD(CYREG_PASS_PRB_REF, CYFLD_PASS_VREF_SEL, voltageTap);
 2356              		.loc 1 3241 0
 2357 0000 FF22     		mov	r2, #255
 2358 0002 0449     		ldr	r1, .L199
 2359 0004 0001     		lsl	r0, r0, #4
 2360              	.LVL159:
 2361 0006 0B68     		ldr	r3, [r1]
 2362 0008 1040     		and	r0, r2
 2363 000a 0F3A     		sub	r2, r2, #15
 2364 000c 9343     		bic	r3, r2
 2365 000e 1843     		orr	r0, r3
 2366 0010 0860     		str	r0, [r1]
3242:Generated_Source\PSoC4/CyLib.c ****         }
 2367              		.loc 1 3242 0
 2368              		@ sp needed
 2369 0012 7047     		bx	lr
 2370              	.L200:
 2371              		.align	2
 2372              	.L199:
 2373 0014 04023F40 		.word	1077871108
 2374              		.cfi_endproc
 2375              	.LFE54:
 2376              		.size	CySysPrbSetGlobalVrefVoltage, .-CySysPrbSetGlobalVrefVoltage
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\cc2xwxHk.s 			page 104


 2377              		.section	.text.CySysPrbEnableDeepsleepVddaRef,"ax",%progbits
 2378              		.align	1
 2379              		.global	CySysPrbEnableDeepsleepVddaRef
 2380              		.code	16
 2381              		.thumb_func
 2382              		.type	CySysPrbEnableDeepsleepVddaRef, %function
 2383              	CySysPrbEnableDeepsleepVddaRef:
 2384              	.LFB55:
3243:Generated_Source\PSoC4/CyLib.c ****     #endif
3244:Generated_Source\PSoC4/CyLib.c **** 
3245:Generated_Source\PSoC4/CyLib.c **** 
3246:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
3247:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysPrbEnableDeepsleepVddaRef
3248:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
3249:Generated_Source\PSoC4/CyLib.c ****     *
3250:Generated_Source\PSoC4/CyLib.c ****     * Enables the Vdda reference in deep sleep mode. The Vdda reference is by
3251:Generated_Source\PSoC4/CyLib.c ****     * default disabled when entering deep sleep mode.
3252:Generated_Source\PSoC4/CyLib.c ****     *
3253:Generated_Source\PSoC4/CyLib.c ****     * This API is applicable for PSoC 4 devices that support the programmable
3254:Generated_Source\PSoC4/CyLib.c ****     * reference block. Please refer to the device TRM for more details.
3255:Generated_Source\PSoC4/CyLib.c ****     *
3256:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
3257:Generated_Source\PSoC4/CyLib.c ****     void CySysPrbEnableDeepsleepVddaRef(void)
3258:Generated_Source\PSoC4/CyLib.c ****     {
 2385              		.loc 1 3258 0
 2386              		.cfi_startproc
3259:Generated_Source\PSoC4/CyLib.c ****         CY_SET_REG32_FIELD(CYREG_PASS_PRB_CTRL, CYFLD_PASS_DEEPSLEEP_ON, 1u);
 2387              		.loc 1 3259 0
 2388 0000 8021     		mov	r1, #128
 2389 0002 034A     		ldr	r2, .L202
 2390 0004 C905     		lsl	r1, r1, #23
 2391 0006 1368     		ldr	r3, [r2]
3260:Generated_Source\PSoC4/CyLib.c ****     }
 2392              		.loc 1 3260 0
 2393              		@ sp needed
3259:Generated_Source\PSoC4/CyLib.c ****         CY_SET_REG32_FIELD(CYREG_PASS_PRB_CTRL, CYFLD_PASS_DEEPSLEEP_ON, 1u);
 2394              		.loc 1 3259 0
 2395 0008 0B43     		orr	r3, r1
 2396 000a 1360     		str	r3, [r2]
 2397              		.loc 1 3260 0
 2398 000c 7047     		bx	lr
 2399              	.L203:
 2400 000e C046     		.align	2
 2401              	.L202:
 2402 0010 00023F40 		.word	1077871104
 2403              		.cfi_endproc
 2404              	.LFE55:
 2405              		.size	CySysPrbEnableDeepsleepVddaRef, .-CySysPrbEnableDeepsleepVddaRef
 2406              		.section	.text.CySysPrbDisableDeepsleepVddaRef,"ax",%progbits
 2407              		.align	1
 2408              		.global	CySysPrbDisableDeepsleepVddaRef
 2409              		.code	16
 2410              		.thumb_func
 2411              		.type	CySysPrbDisableDeepsleepVddaRef, %function
 2412              	CySysPrbDisableDeepsleepVddaRef:
 2413              	.LFB56:
3261:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\cc2xwxHk.s 			page 105


3262:Generated_Source\PSoC4/CyLib.c **** 
3263:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
3264:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysPrbDisableDeepsleepVddaRef
3265:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
3266:Generated_Source\PSoC4/CyLib.c ****     *
3267:Generated_Source\PSoC4/CyLib.c ****     * Disables the Vdda reference in deep sleep mode. The Vdda reference is by
3268:Generated_Source\PSoC4/CyLib.c ****     * default disabled when entering deep sleep mode.
3269:Generated_Source\PSoC4/CyLib.c ****     *
3270:Generated_Source\PSoC4/CyLib.c ****     * This API is applicable for PSoC 4 devices that support the programmable
3271:Generated_Source\PSoC4/CyLib.c ****     * reference block. Please refer to the device TRM for more details.
3272:Generated_Source\PSoC4/CyLib.c ****     *
3273:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
3274:Generated_Source\PSoC4/CyLib.c ****     void CySysPrbDisableDeepsleepVddaRef(void)
3275:Generated_Source\PSoC4/CyLib.c ****     {
 2414              		.loc 1 3275 0
 2415              		.cfi_startproc
3276:Generated_Source\PSoC4/CyLib.c ****         CY_CLEAR_REG32_FIELD(CYREG_PASS_PRB_CTRL, CYFLD_PASS_DEEPSLEEP_ON);
 2416              		.loc 1 3276 0
 2417 0000 024A     		ldr	r2, .L205
 2418 0002 034B     		ldr	r3, .L205+4
 2419 0004 1168     		ldr	r1, [r2]
3277:Generated_Source\PSoC4/CyLib.c ****     }
 2420              		.loc 1 3277 0
 2421              		@ sp needed
3276:Generated_Source\PSoC4/CyLib.c ****         CY_CLEAR_REG32_FIELD(CYREG_PASS_PRB_CTRL, CYFLD_PASS_DEEPSLEEP_ON);
 2422              		.loc 1 3276 0
 2423 0006 0B40     		and	r3, r1
 2424 0008 1360     		str	r3, [r2]
 2425              		.loc 1 3277 0
 2426 000a 7047     		bx	lr
 2427              	.L206:
 2428              		.align	2
 2429              	.L205:
 2430 000c 00023F40 		.word	1077871104
 2431 0010 FFFFFFBF 		.word	-1073741825
 2432              		.cfi_endproc
 2433              	.LFE56:
 2434              		.size	CySysPrbDisableDeepsleepVddaRef, .-CySysPrbDisableDeepsleepVddaRef
 2435              		.section	.text.CySysPrbEnableVddaRef,"ax",%progbits
 2436              		.align	1
 2437              		.global	CySysPrbEnableVddaRef
 2438              		.code	16
 2439              		.thumb_func
 2440              		.type	CySysPrbEnableVddaRef, %function
 2441              	CySysPrbEnableVddaRef:
 2442              	.LFB57:
3278:Generated_Source\PSoC4/CyLib.c **** 
3279:Generated_Source\PSoC4/CyLib.c **** 
3280:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
3281:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysPrbEnableVddaRef
3282:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
3283:Generated_Source\PSoC4/CyLib.c ****     *
3284:Generated_Source\PSoC4/CyLib.c ****     * Enables the Vdda reference. The Vdda reference is by default not enabled.
3285:Generated_Source\PSoC4/CyLib.c ****     *
3286:Generated_Source\PSoC4/CyLib.c ****     * This API is applicable for PSoC 4 devices that support the programmable
3287:Generated_Source\PSoC4/CyLib.c ****     * reference block. Please refer to the device TRM for more details.
3288:Generated_Source\PSoC4/CyLib.c ****     *
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\cc2xwxHk.s 			page 106


3289:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
3290:Generated_Source\PSoC4/CyLib.c ****     void CySysPrbEnableVddaRef(void)
3291:Generated_Source\PSoC4/CyLib.c ****     {
 2443              		.loc 1 3291 0
 2444              		.cfi_startproc
3292:Generated_Source\PSoC4/CyLib.c ****         CY_SET_REG32_FIELD(CYREG_PASS_PRB_CTRL, CYFLD_PASS_VDDA_ENABLE, 1u);
 2445              		.loc 1 3292 0
 2446 0000 1021     		mov	r1, #16
 2447 0002 024A     		ldr	r2, .L208
3293:Generated_Source\PSoC4/CyLib.c ****     }
 2448              		.loc 1 3293 0
 2449              		@ sp needed
3292:Generated_Source\PSoC4/CyLib.c ****         CY_SET_REG32_FIELD(CYREG_PASS_PRB_CTRL, CYFLD_PASS_VDDA_ENABLE, 1u);
 2450              		.loc 1 3292 0
 2451 0004 1368     		ldr	r3, [r2]
 2452 0006 0B43     		orr	r3, r1
 2453 0008 1360     		str	r3, [r2]
 2454              		.loc 1 3293 0
 2455 000a 7047     		bx	lr
 2456              	.L209:
 2457              		.align	2
 2458              	.L208:
 2459 000c 00023F40 		.word	1077871104
 2460              		.cfi_endproc
 2461              	.LFE57:
 2462              		.size	CySysPrbEnableVddaRef, .-CySysPrbEnableVddaRef
 2463              		.section	.text.CySysPrbDisableVddaRef,"ax",%progbits
 2464              		.align	1
 2465              		.global	CySysPrbDisableVddaRef
 2466              		.code	16
 2467              		.thumb_func
 2468              		.type	CySysPrbDisableVddaRef, %function
 2469              	CySysPrbDisableVddaRef:
 2470              	.LFB58:
3294:Generated_Source\PSoC4/CyLib.c **** 
3295:Generated_Source\PSoC4/CyLib.c **** 
3296:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
3297:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysPrbDisableVddaRef
3298:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
3299:Generated_Source\PSoC4/CyLib.c ****     *
3300:Generated_Source\PSoC4/CyLib.c ****     * Disables the Vdda reference. The Vdda reference is by default not enabled.
3301:Generated_Source\PSoC4/CyLib.c ****     *
3302:Generated_Source\PSoC4/CyLib.c ****     * This API is applicable for PSoC 4 devices that support the programmable
3303:Generated_Source\PSoC4/CyLib.c ****     * reference block. Please refer to the device TRM for more details.
3304:Generated_Source\PSoC4/CyLib.c ****     *
3305:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
3306:Generated_Source\PSoC4/CyLib.c ****     void CySysPrbDisableVddaRef(void)
3307:Generated_Source\PSoC4/CyLib.c ****     {
 2471              		.loc 1 3307 0
 2472              		.cfi_startproc
3308:Generated_Source\PSoC4/CyLib.c ****         CY_CLEAR_REG32_FIELD(CYREG_PASS_PRB_CTRL, CYFLD_PASS_VDDA_ENABLE);
 2473              		.loc 1 3308 0
 2474 0000 1021     		mov	r1, #16
 2475 0002 024A     		ldr	r2, .L211
3309:Generated_Source\PSoC4/CyLib.c ****     }
 2476              		.loc 1 3309 0
 2477              		@ sp needed
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\cc2xwxHk.s 			page 107


3308:Generated_Source\PSoC4/CyLib.c ****         CY_CLEAR_REG32_FIELD(CYREG_PASS_PRB_CTRL, CYFLD_PASS_VDDA_ENABLE);
 2478              		.loc 1 3308 0
 2479 0004 1368     		ldr	r3, [r2]
 2480 0006 8B43     		bic	r3, r1
 2481 0008 1360     		str	r3, [r2]
 2482              		.loc 1 3309 0
 2483 000a 7047     		bx	lr
 2484              	.L212:
 2485              		.align	2
 2486              	.L211:
 2487 000c 00023F40 		.word	1077871104
 2488              		.cfi_endproc
 2489              	.LFE58:
 2490              		.size	CySysPrbDisableVddaRef, .-CySysPrbDisableVddaRef
 2491              		.section	.text.CySysPrbSetBgBufferTrim,"ax",%progbits
 2492              		.align	1
 2493              		.global	CySysPrbSetBgBufferTrim
 2494              		.code	16
 2495              		.thumb_func
 2496              		.type	CySysPrbSetBgBufferTrim, %function
 2497              	CySysPrbSetBgBufferTrim:
 2498              	.LFB59:
3310:Generated_Source\PSoC4/CyLib.c **** 
3311:Generated_Source\PSoC4/CyLib.c **** 
3312:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
3313:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysPrbSetBgBufferTrim
3314:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
3315:Generated_Source\PSoC4/CyLib.c ****     *
3316:Generated_Source\PSoC4/CyLib.c ****     * Sets the trim for the bandgap reference buffer.
3317:Generated_Source\PSoC4/CyLib.c ****     *
3318:Generated_Source\PSoC4/CyLib.c ****     * \note Affects all bandgap sourced references.
3319:Generated_Source\PSoC4/CyLib.c ****     *
3320:Generated_Source\PSoC4/CyLib.c ****     * \param bgTrim The trim value from -32 to 31. Step size is approximately 1 mV.
3321:Generated_Source\PSoC4/CyLib.c ****     *
3322:Generated_Source\PSoC4/CyLib.c ****     * This API is applicable for PSoC 4 devices that support the programmable
3323:Generated_Source\PSoC4/CyLib.c ****     * reference block. Please refer to the device TRM for more details.
3324:Generated_Source\PSoC4/CyLib.c ****     *
3325:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
3326:Generated_Source\PSoC4/CyLib.c ****     void CySysPrbSetBgBufferTrim(int32 bgTrim)
3327:Generated_Source\PSoC4/CyLib.c ****     {
 2499              		.loc 1 3327 0
 2500              		.cfi_startproc
 2501              	.LVL160:
 2502 0000 074A     		ldr	r2, .L217
 2503 0002 10B5     		push	{r4, lr}
 2504              		.cfi_def_cfa_offset 8
 2505              		.cfi_offset 4, -8
 2506              		.cfi_offset 14, -4
 2507 0004 3F21     		mov	r1, #63
3328:Generated_Source\PSoC4/CyLib.c ****         uint8 tmp = 0u;
3329:Generated_Source\PSoC4/CyLib.c **** 
3330:Generated_Source\PSoC4/CyLib.c ****         if (bgTrim >= 0)
3331:Generated_Source\PSoC4/CyLib.c ****         {
3332:Generated_Source\PSoC4/CyLib.c ****             CY_SET_REG32_FIELD(CYREG_PASS_PRB_TRIM, CYFLD_PASS_VBGR_BUF_TRIM, (uint32) bgTrim);
 2508              		.loc 1 3332 0
 2509 0006 1368     		ldr	r3, [r2]
3330:Generated_Source\PSoC4/CyLib.c ****         {
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\cc2xwxHk.s 			page 108


 2510              		.loc 1 3330 0
 2511 0008 0028     		cmp	r0, #0
 2512 000a 01DB     		blt	.L214
 2513              		.loc 1 3332 0
 2514 000c 0840     		and	r0, r1
 2515              	.LVL161:
 2516 000e 02E0     		b	.L216
 2517              	.LVL162:
 2518              	.L214:
3333:Generated_Source\PSoC4/CyLib.c ****         }
3334:Generated_Source\PSoC4/CyLib.c ****         else
3335:Generated_Source\PSoC4/CyLib.c ****         {
3336:Generated_Source\PSoC4/CyLib.c ****             tmp = (uint8)((int32) bgTrim * (int8) (-1));   /* Make positive */
3337:Generated_Source\PSoC4/CyLib.c ****             tmp = (uint8) ~tmp + 1u;                      /* Two's complement */
3338:Generated_Source\PSoC4/CyLib.c ****             tmp |= (uint8) CY_SYS_VREF_BG_BUFFER_TRIM_SIGN_BIT;
3339:Generated_Source\PSoC4/CyLib.c **** 
3340:Generated_Source\PSoC4/CyLib.c ****             CY_SET_REG32_FIELD(CYREG_PASS_PRB_TRIM, CYFLD_PASS_VBGR_BUF_TRIM, tmp);
 2519              		.loc 1 3340 0
 2520 0010 2024     		mov	r4, #32
 2521 0012 0840     		and	r0, r1
 2522              	.LVL163:
 2523 0014 2043     		orr	r0, r4
 2524              	.L216:
 2525 0016 8B43     		bic	r3, r1
 2526 0018 1843     		orr	r0, r3
 2527 001a 1060     		str	r0, [r2]
3341:Generated_Source\PSoC4/CyLib.c ****         }
3342:Generated_Source\PSoC4/CyLib.c ****     }
 2528              		.loc 1 3342 0
 2529              		@ sp needed
 2530 001c 10BD     		pop	{r4, pc}
 2531              	.L218:
 2532 001e C046     		.align	2
 2533              	.L217:
 2534 0020 040F3F40 		.word	1077874436
 2535              		.cfi_endproc
 2536              	.LFE59:
 2537              		.size	CySysPrbSetBgBufferTrim, .-CySysPrbSetBgBufferTrim
 2538              		.section	.text.CySysPrbGetBgBufferTrim,"ax",%progbits
 2539              		.align	1
 2540              		.global	CySysPrbGetBgBufferTrim
 2541              		.code	16
 2542              		.thumb_func
 2543              		.type	CySysPrbGetBgBufferTrim, %function
 2544              	CySysPrbGetBgBufferTrim:
 2545              	.LFB60:
3343:Generated_Source\PSoC4/CyLib.c **** 
3344:Generated_Source\PSoC4/CyLib.c **** 
3345:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
3346:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysPrbGetBgBufferTrim
3347:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
3348:Generated_Source\PSoC4/CyLib.c ****     *
3349:Generated_Source\PSoC4/CyLib.c ****     * Returns the current trim of the bandgap reference buffer.
3350:Generated_Source\PSoC4/CyLib.c ****     *
3351:Generated_Source\PSoC4/CyLib.c ****     * This API is applicable for PSoC 4 devices that support the programmable
3352:Generated_Source\PSoC4/CyLib.c ****     * reference block. Please refer to the device TRM for more details.
3353:Generated_Source\PSoC4/CyLib.c ****     *
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\cc2xwxHk.s 			page 109


3354:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
3355:Generated_Source\PSoC4/CyLib.c ****     int32 CySysPrbGetBgBufferTrim(void)
3356:Generated_Source\PSoC4/CyLib.c ****     {
 2546              		.loc 1 3356 0
 2547              		.cfi_startproc
3357:Generated_Source\PSoC4/CyLib.c ****         uint8 tmp;
3358:Generated_Source\PSoC4/CyLib.c ****         int32 returnValue;
3359:Generated_Source\PSoC4/CyLib.c **** 
3360:Generated_Source\PSoC4/CyLib.c ****         tmp = (uint8) CY_GET_REG32_FIELD(CYREG_PASS_PRB_TRIM, CYFLD_PASS_VBGR_BUF_TRIM);
3361:Generated_Source\PSoC4/CyLib.c ****         if ((tmp & CY_SYS_VREF_BG_BUFFER_TRIM_SIGN_BIT) != 0u)
3362:Generated_Source\PSoC4/CyLib.c ****         {
3363:Generated_Source\PSoC4/CyLib.c ****             tmp = ((uint8) ~tmp) + 1u;          /* Make positive */
3364:Generated_Source\PSoC4/CyLib.c ****             returnValue = (int32) tmp * (-1);   /* Make negative */
3365:Generated_Source\PSoC4/CyLib.c ****         }
3366:Generated_Source\PSoC4/CyLib.c ****         else
3367:Generated_Source\PSoC4/CyLib.c ****         {
3368:Generated_Source\PSoC4/CyLib.c ****             returnValue = (int32) tmp;
 2548              		.loc 1 3368 0
 2549 0000 3F20     		mov	r0, #63
3360:Generated_Source\PSoC4/CyLib.c ****         if ((tmp & CY_SYS_VREF_BG_BUFFER_TRIM_SIGN_BIT) != 0u)
 2550              		.loc 1 3360 0
 2551 0002 054B     		ldr	r3, .L223
 2552 0004 1B68     		ldr	r3, [r3]
 2553 0006 DBB2     		uxtb	r3, r3
 2554              	.LVL164:
 2555              		.loc 1 3368 0
 2556 0008 1840     		and	r0, r3
 2557              	.LVL165:
3361:Generated_Source\PSoC4/CyLib.c ****         {
 2558              		.loc 1 3361 0
 2559 000a 9B06     		lsl	r3, r3, #26
 2560 000c 02D5     		bpl	.L221
 2561              	.LVL166:
3363:Generated_Source\PSoC4/CyLib.c ****             returnValue = (int32) tmp * (-1);   /* Make negative */
 2562              		.loc 1 3363 0
 2563 000e 4042     		neg	r0, r0
 2564              	.LVL167:
3364:Generated_Source\PSoC4/CyLib.c ****         }
 2565              		.loc 1 3364 0
 2566 0010 C0B2     		uxtb	r0, r0
 2567              	.LVL168:
 2568 0012 4042     		neg	r0, r0
 2569              	.LVL169:
 2570              	.L221:
3369:Generated_Source\PSoC4/CyLib.c ****         }
3370:Generated_Source\PSoC4/CyLib.c **** 
3371:Generated_Source\PSoC4/CyLib.c ****         return (returnValue);
3372:Generated_Source\PSoC4/CyLib.c ****     }
 2571              		.loc 1 3372 0
 2572              		@ sp needed
 2573 0014 7047     		bx	lr
 2574              	.L224:
 2575 0016 C046     		.align	2
 2576              	.L223:
 2577 0018 040F3F40 		.word	1077874436
 2578              		.cfi_endproc
 2579              	.LFE60:
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\cc2xwxHk.s 			page 110


 2580              		.size	CySysPrbGetBgBufferTrim, .-CySysPrbGetBgBufferTrim
 2581              		.global	CySysClkPumpConfig
 2582              		.global	cyImoFreqMhz2DpllOffset
 2583              		.global	CySysTickInitVar
 2584              		.global	cydelay32kMs
 2585              		.global	cydelayFreqMhz
 2586              		.global	cydelayFreqKhz
 2587              		.global	cydelayFreqHz
 2588              		.section	.rodata
 2589              		.set	.LANCHOR1,. + 0
 2590              		.type	cyImoFreqMhz2DpllOffset, %object
 2591              		.size	cyImoFreqMhz2DpllOffset, 23
 2592              	cyImoFreqMhz2DpllOffset:
 2593 0000 EE       		.byte	-18
 2594 0001 DB       		.byte	-37
 2595 0002 C9       		.byte	-55
 2596 0003 B9       		.byte	-71
 2597 0004 AA       		.byte	-86
 2598 0005 9B       		.byte	-101
 2599 0006 8E       		.byte	-114
 2600 0007 82       		.byte	-126
 2601 0008 76       		.byte	118
 2602 0009 6B       		.byte	107
 2603 000a 60       		.byte	96
 2604 000b 56       		.byte	86
 2605 000c 4D       		.byte	77
 2606 000d 44       		.byte	68
 2607 000e 3B       		.byte	59
 2608 000f 33       		.byte	51
 2609 0010 2C       		.byte	44
 2610 0011 24       		.byte	36
 2611 0012 1D       		.byte	29
 2612 0013 17       		.byte	23
 2613 0014 10       		.byte	16
 2614 0015 0A       		.byte	10
 2615 0016 04       		.byte	4
 2616              		.data
 2617              		.align	2
 2618              		.set	.LANCHOR0,. + 0
 2619              		.type	CySysClkPumpConfig, %object
 2620              		.size	CySysClkPumpConfig, 4
 2621              	CySysClkPumpConfig:
 2622 0000 01000000 		.word	1
 2623              		.type	cydelay32kMs, %object
 2624              		.size	cydelay32kMs, 4
 2625              	cydelay32kMs:
 2626 0004 0000E02E 		.word	786432000
 2627              		.type	cydelayFreqKhz, %object
 2628              		.size	cydelayFreqKhz, 4
 2629              	cydelayFreqKhz:
 2630 0008 C05D0000 		.word	24000
 2631              		.type	cydelayFreqMhz, %object
 2632              		.size	cydelayFreqMhz, 1
 2633              	cydelayFreqMhz:
 2634 000c 18       		.byte	24
 2635 000d 000000   		.space	3
 2636              		.type	cydelayFreqHz, %object
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\cc2xwxHk.s 			page 111


 2637              		.size	cydelayFreqHz, 4
 2638              	cydelayFreqHz:
 2639 0010 00366E01 		.word	24000000
 2640              		.bss
 2641              		.align	2
 2642              		.set	.LANCHOR2,. + 0
 2643              		.type	CySysTickCallbacks, %object
 2644              		.size	CySysTickCallbacks, 20
 2645              	CySysTickCallbacks:
 2646 0000 00000000 		.space	20
 2646      00000000 
 2646      00000000 
 2646      00000000 
 2646      00000000 
 2647              		.type	CySysTickInitVar, %object
 2648              		.size	CySysTickInitVar, 4
 2649              	CySysTickInitVar:
 2650 0014 00000000 		.space	4
 2651              		.text
 2652              	.Letext0:
 2653              		.file 2 "Generated_Source\\PSoC4\\cytypes.h"
 2654              		.file 3 "Generated_Source\\PSoC4\\CyLib.h"
 2655              		.file 4 "Generated_Source\\PSoC4\\CyFlash.h"
 2656              		.file 5 "Generated_Source\\PSoC4\\CyLFClk.h"
 2657              		.section	.debug_info,"",%progbits
 2658              	.Ldebug_info0:
 2659 0000 B80E0000 		.4byte	0xeb8
 2660 0004 0400     		.2byte	0x4
 2661 0006 00000000 		.4byte	.Ldebug_abbrev0
 2662 000a 04       		.byte	0x4
 2663 000b 01       		.uleb128 0x1
 2664 000c BB030000 		.4byte	.LASF127
 2665 0010 01       		.byte	0x1
 2666 0011 5D080000 		.4byte	.LASF128
 2667 0015 E9050000 		.4byte	.LASF129
 2668 0019 90000000 		.4byte	.Ldebug_ranges0+0x90
 2669 001d 00000000 		.4byte	0
 2670 0021 00000000 		.4byte	.Ldebug_line0
 2671 0025 02       		.uleb128 0x2
 2672 0026 01       		.byte	0x1
 2673 0027 06       		.byte	0x6
 2674 0028 17010000 		.4byte	.LASF0
 2675 002c 02       		.uleb128 0x2
 2676 002d 01       		.byte	0x1
 2677 002e 08       		.byte	0x8
 2678 002f 32060000 		.4byte	.LASF1
 2679 0033 02       		.uleb128 0x2
 2680 0034 02       		.byte	0x2
 2681 0035 05       		.byte	0x5
 2682 0036 47060000 		.4byte	.LASF2
 2683 003a 02       		.uleb128 0x2
 2684 003b 02       		.byte	0x2
 2685 003c 07       		.byte	0x7
 2686 003d 5D030000 		.4byte	.LASF3
 2687 0041 02       		.uleb128 0x2
 2688 0042 04       		.byte	0x4
 2689 0043 05       		.byte	0x5
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\cc2xwxHk.s 			page 112


 2690 0044 85010000 		.4byte	.LASF4
 2691 0048 02       		.uleb128 0x2
 2692 0049 04       		.byte	0x4
 2693 004a 07       		.byte	0x7
 2694 004b F1020000 		.4byte	.LASF5
 2695 004f 02       		.uleb128 0x2
 2696 0050 08       		.byte	0x8
 2697 0051 05       		.byte	0x5
 2698 0052 09010000 		.4byte	.LASF6
 2699 0056 02       		.uleb128 0x2
 2700 0057 08       		.byte	0x8
 2701 0058 07       		.byte	0x7
 2702 0059 8D000000 		.4byte	.LASF7
 2703 005d 03       		.uleb128 0x3
 2704 005e 04       		.byte	0x4
 2705 005f 05       		.byte	0x5
 2706 0060 696E7400 		.ascii	"int\000"
 2707 0064 02       		.uleb128 0x2
 2708 0065 04       		.byte	0x4
 2709 0066 07       		.byte	0x7
 2710 0067 BF020000 		.4byte	.LASF8
 2711 006b 04       		.uleb128 0x4
 2712 006c D0010000 		.4byte	.LASF9
 2713 0070 02       		.byte	0x2
 2714 0071 B901     		.2byte	0x1b9
 2715 0073 2C000000 		.4byte	0x2c
 2716 0077 04       		.uleb128 0x4
 2717 0078 0F000000 		.4byte	.LASF10
 2718 007c 02       		.byte	0x2
 2719 007d BA01     		.2byte	0x1ba
 2720 007f 3A000000 		.4byte	0x3a
 2721 0083 04       		.uleb128 0x4
 2722 0084 F9010000 		.4byte	.LASF11
 2723 0088 02       		.byte	0x2
 2724 0089 BB01     		.2byte	0x1bb
 2725 008b 48000000 		.4byte	0x48
 2726 008f 04       		.uleb128 0x4
 2727 0090 A6030000 		.4byte	.LASF12
 2728 0094 02       		.byte	0x2
 2729 0095 BC01     		.2byte	0x1bc
 2730 0097 25000000 		.4byte	0x25
 2731 009b 04       		.uleb128 0x4
 2732 009c 43010000 		.4byte	.LASF13
 2733 00a0 02       		.byte	0x2
 2734 00a1 BE01     		.2byte	0x1be
 2735 00a3 41000000 		.4byte	0x41
 2736 00a7 02       		.uleb128 0x2
 2737 00a8 04       		.byte	0x4
 2738 00a9 04       		.byte	0x4
 2739 00aa 69050000 		.4byte	.LASF14
 2740 00ae 02       		.uleb128 0x2
 2741 00af 08       		.byte	0x8
 2742 00b0 04       		.byte	0x4
 2743 00b1 EC010000 		.4byte	.LASF15
 2744 00b5 02       		.uleb128 0x2
 2745 00b6 01       		.byte	0x1
 2746 00b7 08       		.byte	0x8
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\cc2xwxHk.s 			page 113


 2747 00b8 BA060000 		.4byte	.LASF16
 2748 00bc 04       		.uleb128 0x4
 2749 00bd DD050000 		.4byte	.LASF17
 2750 00c1 02       		.byte	0x2
 2751 00c2 6302     		.2byte	0x263
 2752 00c4 C8000000 		.4byte	0xc8
 2753 00c8 05       		.uleb128 0x5
 2754 00c9 6B000000 		.4byte	0x6b
 2755 00cd 04       		.uleb128 0x4
 2756 00ce AD040000 		.4byte	.LASF18
 2757 00d2 02       		.byte	0x2
 2758 00d3 6502     		.2byte	0x265
 2759 00d5 D9000000 		.4byte	0xd9
 2760 00d9 05       		.uleb128 0x5
 2761 00da 83000000 		.4byte	0x83
 2762 00de 04       		.uleb128 0x4
 2763 00df D7060000 		.4byte	.LASF19
 2764 00e3 02       		.byte	0x2
 2765 00e4 7502     		.2byte	0x275
 2766 00e6 EA000000 		.4byte	0xea
 2767 00ea 06       		.uleb128 0x6
 2768 00eb 04       		.byte	0x4
 2769 00ec F0000000 		.4byte	0xf0
 2770 00f0 07       		.uleb128 0x7
 2771 00f1 02       		.uleb128 0x2
 2772 00f2 04       		.byte	0x4
 2773 00f3 07       		.byte	0x7
 2774 00f4 D6040000 		.4byte	.LASF20
 2775 00f8 08       		.uleb128 0x8
 2776 00f9 85050000 		.4byte	.LASF21
 2777 00fd 03       		.byte	0x3
 2778 00fe F5       		.byte	0xf5
 2779 00ff EA000000 		.4byte	0xea
 2780 0103 09       		.uleb128 0x9
 2781 0104 2C020000 		.4byte	.LASF27
 2782 0108 01       		.byte	0x1
 2783 0109 AF       		.byte	0xaf
 2784 010a 01       		.byte	0x1
 2785 010b 47010000 		.4byte	0x147
 2786 010f 0A       		.uleb128 0xa
 2787 0110 23010000 		.4byte	.LASF22
 2788 0114 01       		.byte	0x1
 2789 0115 B5       		.byte	0xb5
 2790 0116 83000000 		.4byte	0x83
 2791 011a 0A       		.uleb128 0xa
 2792 011b 34010000 		.4byte	.LASF23
 2793 011f 01       		.byte	0x1
 2794 0120 B6       		.byte	0xb6
 2795 0121 6B000000 		.4byte	0x6b
 2796 0125 0A       		.uleb128 0xa
 2797 0126 70030000 		.4byte	.LASF24
 2798 012a 01       		.byte	0x1
 2799 012b B7       		.byte	0xb7
 2800 012c 83000000 		.4byte	0x83
 2801 0130 0A       		.uleb128 0xa
 2802 0131 41030000 		.4byte	.LASF25
 2803 0135 01       		.byte	0x1
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\cc2xwxHk.s 			page 114


 2804 0136 B8       		.byte	0xb8
 2805 0137 83000000 		.4byte	0x83
 2806 013b 0A       		.uleb128 0xa
 2807 013c 60070000 		.4byte	.LASF26
 2808 0140 01       		.byte	0x1
 2809 0141 B9       		.byte	0xb9
 2810 0142 D9000000 		.4byte	0xd9
 2811 0146 00       		.byte	0
 2812 0147 0B       		.uleb128 0xb
 2813 0148 8E030000 		.4byte	.LASF28
 2814 014c 01       		.byte	0x1
 2815 014d 020B     		.2byte	0xb02
 2816 014f 01       		.byte	0x1
 2817 0150 61010000 		.4byte	0x161
 2818 0154 0C       		.uleb128 0xc
 2819 0155 8F020000 		.4byte	.LASF30
 2820 0159 01       		.byte	0x1
 2821 015a 020B     		.2byte	0xb02
 2822 015c 83000000 		.4byte	0x83
 2823 0160 00       		.byte	0
 2824 0161 0D       		.uleb128 0xd
 2825 0162 83060000 		.4byte	.LASF130
 2826 0166 01       		.byte	0x1
 2827 0167 870B     		.2byte	0xb87
 2828 0169 01       		.byte	0x1
 2829 016a 79010000 		.4byte	0x179
 2830 016e 0E       		.uleb128 0xe
 2831 016f 6900     		.ascii	"i\000"
 2832 0171 01       		.byte	0x1
 2833 0172 890B     		.2byte	0xb89
 2834 0174 83000000 		.4byte	0x83
 2835 0178 00       		.byte	0
 2836 0179 0B       		.uleb128 0xb
 2837 017a 90080000 		.4byte	.LASF29
 2838 017e 01       		.byte	0x1
 2839 017f C20A     		.2byte	0xac2
 2840 0181 01       		.byte	0x1
 2841 0182 93010000 		.4byte	0x193
 2842 0186 0C       		.uleb128 0xc
 2843 0187 89020000 		.4byte	.LASF31
 2844 018b 01       		.byte	0x1
 2845 018c C20A     		.2byte	0xac2
 2846 018e 83000000 		.4byte	0x83
 2847 0192 00       		.byte	0
 2848 0193 0F       		.uleb128 0xf
 2849 0194 E2020000 		.4byte	.LASF131
 2850 0198 01       		.byte	0x1
 2851 0199 3F0B     		.2byte	0xb3f
 2852 019b 01       		.byte	0x1
 2853 019c 10       		.uleb128 0x10
 2854 019d 03080000 		.4byte	.LASF32
 2855 01a1 01       		.byte	0x1
 2856 01a2 6B       		.byte	0x6b
 2857 01a3 00000000 		.4byte	.LFB1
 2858 01a7 14000000 		.4byte	.LFE1-.LFB1
 2859 01ab 01       		.uleb128 0x1
 2860 01ac 9C       		.byte	0x9c
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\cc2xwxHk.s 			page 115


 2861 01ad 11       		.uleb128 0x11
 2862 01ae 93040000 		.4byte	.LASF33
 2863 01b2 01       		.byte	0x1
 2864 01b3 1D01     		.2byte	0x11d
 2865 01b5 00000000 		.4byte	.LFB4
 2866 01b9 14000000 		.4byte	.LFE4-.LFB4
 2867 01bd 01       		.uleb128 0x1
 2868 01be 9C       		.byte	0x9c
 2869 01bf 12       		.uleb128 0x12
 2870 01c0 0A030000 		.4byte	.LASF34
 2871 01c4 01       		.byte	0x1
 2872 01c5 8B       		.byte	0x8b
 2873 01c6 00000000 		.4byte	.LFB2
 2874 01ca 18000000 		.4byte	.LFE2-.LFB2
 2875 01ce 01       		.uleb128 0x1
 2876 01cf 9C       		.byte	0x9c
 2877 01d0 DE010000 		.4byte	0x1de
 2878 01d4 13       		.uleb128 0x13
 2879 01d5 06000000 		.4byte	.LVL0
 2880 01d9 AD010000 		.4byte	0x1ad
 2881 01dd 00       		.byte	0
 2882 01de 14       		.uleb128 0x14
 2883 01df 67010000 		.4byte	.LASF84
 2884 01e3 01       		.byte	0x1
 2885 01e4 3001     		.2byte	0x130
 2886 01e6 83000000 		.4byte	0x83
 2887 01ea 00000000 		.4byte	.LFB5
 2888 01ee 10000000 		.4byte	.LFE5-.LFB5
 2889 01f2 01       		.uleb128 0x1
 2890 01f3 9C       		.byte	0x9c
 2891 01f4 15       		.uleb128 0x15
 2892 01f5 1F000000 		.4byte	.LASF35
 2893 01f9 01       		.byte	0x1
 2894 01fa AD01     		.2byte	0x1ad
 2895 01fc 00000000 		.4byte	.LFB6
 2896 0200 20000000 		.4byte	.LFE6-.LFB6
 2897 0204 01       		.uleb128 0x1
 2898 0205 9C       		.byte	0x9c
 2899 0206 4D020000 		.4byte	0x24d
 2900 020a 16       		.uleb128 0x16
 2901 020b 6F060000 		.4byte	.LASF38
 2902 020f 01       		.byte	0x1
 2903 0210 AD01     		.2byte	0x1ad
 2904 0212 83000000 		.4byte	0x83
 2905 0216 00000000 		.4byte	.LLST0
 2906 021a 17       		.uleb128 0x17
 2907 021b 34010000 		.4byte	.LASF23
 2908 021f 01       		.byte	0x1
 2909 0220 AF01     		.2byte	0x1af
 2910 0222 6B000000 		.4byte	0x6b
 2911 0226 2C000000 		.4byte	.LLST1
 2912 022a 17       		.uleb128 0x17
 2913 022b 89080000 		.4byte	.LASF36
 2914 022f 01       		.byte	0x1
 2915 0230 B001     		.2byte	0x1b0
 2916 0232 83000000 		.4byte	0x83
 2917 0236 3F000000 		.4byte	.LLST2
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\cc2xwxHk.s 			page 116


 2918 023a 13       		.uleb128 0x13
 2919 023b 08000000 		.4byte	.LVL2
 2920 023f 720E0000 		.4byte	0xe72
 2921 0243 13       		.uleb128 0x13
 2922 0244 1A000000 		.4byte	.LVL5
 2923 0248 7D0E0000 		.4byte	0xe7d
 2924 024c 00       		.byte	0
 2925 024d 15       		.uleb128 0x15
 2926 024e 63000000 		.4byte	.LASF37
 2927 0252 01       		.byte	0x1
 2928 0253 D901     		.2byte	0x1d9
 2929 0255 00000000 		.4byte	.LFB7
 2930 0259 30000000 		.4byte	.LFE7-.LFB7
 2931 025d 01       		.uleb128 0x1
 2932 025e 9C       		.byte	0x9c
 2933 025f 72020000 		.4byte	0x272
 2934 0263 18       		.uleb128 0x18
 2935 0264 E5010000 		.4byte	.LASF39
 2936 0268 01       		.byte	0x1
 2937 0269 D901     		.2byte	0x1d9
 2938 026b 83000000 		.4byte	0x83
 2939 026f 01       		.uleb128 0x1
 2940 0270 50       		.byte	0x50
 2941 0271 00       		.byte	0
 2942 0272 19       		.uleb128 0x19
 2943 0273 14020000 		.4byte	.LASF44
 2944 0277 01       		.byte	0x1
 2945 0278 FE01     		.2byte	0x1fe
 2946 027a 83000000 		.4byte	0x83
 2947 027e 00000000 		.4byte	.LFB8
 2948 0282 18000000 		.4byte	.LFE8-.LFB8
 2949 0286 01       		.uleb128 0x1
 2950 0287 9C       		.byte	0x9c
 2951 0288 BF020000 		.4byte	0x2bf
 2952 028c 17       		.uleb128 0x17
 2953 028d 34010000 		.4byte	.LASF23
 2954 0291 01       		.byte	0x1
 2955 0292 0002     		.2byte	0x200
 2956 0294 6B000000 		.4byte	0x6b
 2957 0298 5D000000 		.4byte	.LLST3
 2958 029c 17       		.uleb128 0x17
 2959 029d 1D050000 		.4byte	.LASF40
 2960 02a1 01       		.byte	0x1
 2961 02a2 0102     		.2byte	0x201
 2962 02a4 83000000 		.4byte	0x83
 2963 02a8 70000000 		.4byte	.LLST4
 2964 02ac 13       		.uleb128 0x13
 2965 02ad 06000000 		.4byte	.LVL8
 2966 02b1 720E0000 		.4byte	0xe72
 2967 02b5 13       		.uleb128 0x13
 2968 02b6 0E000000 		.4byte	.LVL10
 2969 02ba 7D0E0000 		.4byte	0xe7d
 2970 02be 00       		.byte	0
 2971 02bf 15       		.uleb128 0x15
 2972 02c0 0A070000 		.4byte	.LASF41
 2973 02c4 01       		.byte	0x1
 2974 02c5 3502     		.2byte	0x235
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\cc2xwxHk.s 			page 117


 2975 02c7 00000000 		.4byte	.LFB9
 2976 02cb 24000000 		.4byte	.LFE9-.LFB9
 2977 02cf 01       		.uleb128 0x1
 2978 02d0 9C       		.byte	0x9c
 2979 02d1 08030000 		.4byte	0x308
 2980 02d5 16       		.uleb128 0x16
 2981 02d6 FB070000 		.4byte	.LASF42
 2982 02da 01       		.byte	0x1
 2983 02db 3502     		.2byte	0x235
 2984 02dd 83000000 		.4byte	0x83
 2985 02e1 92000000 		.4byte	.LLST5
 2986 02e5 17       		.uleb128 0x17
 2987 02e6 34010000 		.4byte	.LASF23
 2988 02ea 01       		.byte	0x1
 2989 02eb 3702     		.2byte	0x237
 2990 02ed 6B000000 		.4byte	0x6b
 2991 02f1 BE000000 		.4byte	.LLST6
 2992 02f5 13       		.uleb128 0x13
 2993 02f6 08000000 		.4byte	.LVL13
 2994 02fa 720E0000 		.4byte	0xe72
 2995 02fe 13       		.uleb128 0x13
 2996 02ff 1E000000 		.4byte	.LVL14
 2997 0303 7D0E0000 		.4byte	0xe7d
 2998 0307 00       		.byte	0
 2999 0308 15       		.uleb128 0x15
 3000 0309 F4060000 		.4byte	.LASF43
 3001 030d 01       		.byte	0x1
 3002 030e D503     		.2byte	0x3d5
 3003 0310 00000000 		.4byte	.LFB11
 3004 0314 24000000 		.4byte	.LFE11-.LFB11
 3005 0318 01       		.uleb128 0x1
 3006 0319 9C       		.byte	0x9c
 3007 031a 51030000 		.4byte	0x351
 3008 031e 16       		.uleb128 0x16
 3009 031f FB070000 		.4byte	.LASF42
 3010 0323 01       		.byte	0x1
 3011 0324 D503     		.2byte	0x3d5
 3012 0326 83000000 		.4byte	0x83
 3013 032a D1000000 		.4byte	.LLST7
 3014 032e 17       		.uleb128 0x17
 3015 032f 34010000 		.4byte	.LASF23
 3016 0333 01       		.byte	0x1
 3017 0334 D703     		.2byte	0x3d7
 3018 0336 6B000000 		.4byte	0x6b
 3019 033a FD000000 		.4byte	.LLST8
 3020 033e 13       		.uleb128 0x13
 3021 033f 08000000 		.4byte	.LVL17
 3022 0343 720E0000 		.4byte	0xe72
 3023 0347 13       		.uleb128 0x13
 3024 0348 1E000000 		.4byte	.LVL19
 3025 034c 7D0E0000 		.4byte	0xe7d
 3026 0350 00       		.byte	0
 3027 0351 19       		.uleb128 0x19
 3028 0352 49030000 		.4byte	.LASF45
 3029 0356 01       		.byte	0x1
 3030 0357 A008     		.2byte	0x8a0
 3031 0359 83000000 		.4byte	0x83
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\cc2xwxHk.s 			page 118


 3032 035d 00000000 		.4byte	.LFB12
 3033 0361 14000000 		.4byte	.LFE12-.LFB12
 3034 0365 01       		.uleb128 0x1
 3035 0366 9C       		.byte	0x9c
 3036 0367 8C030000 		.4byte	0x38c
 3037 036b 16       		.uleb128 0x16
 3038 036c 40060000 		.4byte	.LASF46
 3039 0370 01       		.byte	0x1
 3040 0371 A008     		.2byte	0x8a0
 3041 0373 83000000 		.4byte	0x83
 3042 0377 10010000 		.4byte	.LLST9
 3043 037b 17       		.uleb128 0x17
 3044 037c C2040000 		.4byte	.LASF47
 3045 0380 01       		.byte	0x1
 3046 0381 A208     		.2byte	0x8a2
 3047 0383 83000000 		.4byte	0x83
 3048 0387 2E010000 		.4byte	.LLST10
 3049 038b 00       		.byte	0
 3050 038c 19       		.uleb128 0x19
 3051 038d 7F000000 		.4byte	.LASF48
 3052 0391 01       		.byte	0x1
 3053 0392 B708     		.2byte	0x8b7
 3054 0394 83000000 		.4byte	0x83
 3055 0398 00000000 		.4byte	.LFB13
 3056 039c 10000000 		.4byte	.LFE13-.LFB13
 3057 03a0 01       		.uleb128 0x1
 3058 03a1 9C       		.byte	0x9c
 3059 03a2 B5030000 		.4byte	0x3b5
 3060 03a6 1A       		.uleb128 0x1a
 3061 03a7 16000000 		.4byte	.LASF49
 3062 03ab 01       		.byte	0x1
 3063 03ac B908     		.2byte	0x8b9
 3064 03ae 83000000 		.4byte	0x83
 3065 03b2 01       		.uleb128 0x1
 3066 03b3 50       		.byte	0x50
 3067 03b4 00       		.byte	0
 3068 03b5 15       		.uleb128 0x15
 3069 03b6 B5000000 		.4byte	.LASF50
 3070 03ba 01       		.byte	0x1
 3071 03bb CE08     		.2byte	0x8ce
 3072 03bd 00000000 		.4byte	.LFB14
 3073 03c1 0C000000 		.4byte	.LFE14-.LFB14
 3074 03c5 01       		.uleb128 0x1
 3075 03c6 9C       		.byte	0x9c
 3076 03c7 DA030000 		.4byte	0x3da
 3077 03cb 18       		.uleb128 0x18
 3078 03cc 0F020000 		.4byte	.LASF51
 3079 03d0 01       		.byte	0x1
 3080 03d1 CE08     		.2byte	0x8ce
 3081 03d3 83000000 		.4byte	0x83
 3082 03d7 01       		.uleb128 0x1
 3083 03d8 50       		.byte	0x50
 3084 03d9 00       		.byte	0
 3085 03da 1B       		.uleb128 0x1b
 3086 03db 81040000 		.4byte	.LASF132
 3087 03df 01       		.byte	0x1
 3088 03e0 E708     		.2byte	0x8e7
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\cc2xwxHk.s 			page 119


 3089 03e2 DE000000 		.4byte	0xde
 3090 03e6 01       		.byte	0x1
 3091 03e7 1C040000 		.4byte	0x41c
 3092 03eb 0C       		.uleb128 0xc
 3093 03ec AB030000 		.4byte	.LASF52
 3094 03f0 01       		.byte	0x1
 3095 03f1 E708     		.2byte	0x8e7
 3096 03f3 6B000000 		.4byte	0x6b
 3097 03f7 0C       		.uleb128 0xc
 3098 03f8 15050000 		.4byte	.LASF53
 3099 03fc 01       		.byte	0x1
 3100 03fd E708     		.2byte	0x8e7
 3101 03ff DE000000 		.4byte	0xde
 3102 0403 1C       		.uleb128 0x1c
 3103 0404 A6070000 		.4byte	.LASF54
 3104 0408 01       		.byte	0x1
 3105 0409 E908     		.2byte	0x8e9
 3106 040b DE000000 		.4byte	0xde
 3107 040f 1C       		.uleb128 0x1c
 3108 0410 00000000 		.4byte	.LASF55
 3109 0414 01       		.byte	0x1
 3110 0415 EA08     		.2byte	0x8ea
 3111 0417 1C040000 		.4byte	0x41c
 3112 041b 00       		.byte	0
 3113 041c 06       		.uleb128 0x6
 3114 041d 04       		.byte	0x4
 3115 041e DE000000 		.4byte	0xde
 3116 0422 1D       		.uleb128 0x1d
 3117 0423 DA030000 		.4byte	0x3da
 3118 0427 00000000 		.4byte	.LFB15
 3119 042b 0E000000 		.4byte	.LFE15-.LFB15
 3120 042f 01       		.uleb128 0x1
 3121 0430 9C       		.byte	0x9c
 3122 0431 56040000 		.4byte	0x456
 3123 0435 1E       		.uleb128 0x1e
 3124 0436 EB030000 		.4byte	0x3eb
 3125 043a 50010000 		.4byte	.LLST11
 3126 043e 1F       		.uleb128 0x1f
 3127 043f F7030000 		.4byte	0x3f7
 3128 0443 01       		.uleb128 0x1
 3129 0444 51       		.byte	0x51
 3130 0445 20       		.uleb128 0x20
 3131 0446 03040000 		.4byte	0x403
 3132 044a 01       		.uleb128 0x1
 3133 044b 50       		.byte	0x50
 3134 044c 21       		.uleb128 0x21
 3135 044d 0F040000 		.4byte	0x40f
 3136 0451 00000020 		.4byte	0x20000000
 3137 0455 00       		.byte	0
 3138 0456 19       		.uleb128 0x19
 3139 0457 5D060000 		.4byte	.LASF56
 3140 045b 01       		.byte	0x1
 3141 045c 0909     		.2byte	0x909
 3142 045e DE000000 		.4byte	0xde
 3143 0462 00000000 		.4byte	.LFB16
 3144 0466 0C000000 		.4byte	.LFE16-.LFB16
 3145 046a 01       		.uleb128 0x1
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\cc2xwxHk.s 			page 120


 3146 046b 9C       		.byte	0x9c
 3147 046c 91040000 		.4byte	0x491
 3148 0470 16       		.uleb128 0x16
 3149 0471 AB030000 		.4byte	.LASF52
 3150 0475 01       		.byte	0x1
 3151 0476 0909     		.2byte	0x909
 3152 0478 6B000000 		.4byte	0x6b
 3153 047c 71010000 		.4byte	.LLST12
 3154 0480 22       		.uleb128 0x22
 3155 0481 00000000 		.4byte	.LASF55
 3156 0485 01       		.byte	0x1
 3157 0486 0B09     		.2byte	0x90b
 3158 0488 1C040000 		.4byte	0x41c
 3159 048c 00000020 		.4byte	0x20000000
 3160 0490 00       		.byte	0
 3161 0491 19       		.uleb128 0x19
 3162 0492 00020000 		.4byte	.LASF57
 3163 0496 01       		.byte	0x1
 3164 0497 1F09     		.2byte	0x91f
 3165 0499 DE000000 		.4byte	0xde
 3166 049d 00000000 		.4byte	.LFB17
 3167 04a1 10000000 		.4byte	.LFE17-.LFB17
 3168 04a5 01       		.uleb128 0x1
 3169 04a6 9C       		.byte	0x9c
 3170 04a7 E8040000 		.4byte	0x4e8
 3171 04ab 16       		.uleb128 0x16
 3172 04ac AB030000 		.4byte	.LASF52
 3173 04b0 01       		.byte	0x1
 3174 04b1 1F09     		.2byte	0x91f
 3175 04b3 6B000000 		.4byte	0x6b
 3176 04b7 92010000 		.4byte	.LLST13
 3177 04bb 18       		.uleb128 0x18
 3178 04bc 15050000 		.4byte	.LASF53
 3179 04c0 01       		.byte	0x1
 3180 04c1 1F09     		.2byte	0x91f
 3181 04c3 DE000000 		.4byte	0xde
 3182 04c7 01       		.uleb128 0x1
 3183 04c8 51       		.byte	0x51
 3184 04c9 1A       		.uleb128 0x1a
 3185 04ca A6070000 		.4byte	.LASF54
 3186 04ce 01       		.byte	0x1
 3187 04cf 2109     		.2byte	0x921
 3188 04d1 DE000000 		.4byte	0xde
 3189 04d5 01       		.uleb128 0x1
 3190 04d6 50       		.byte	0x50
 3191 04d7 22       		.uleb128 0x22
 3192 04d8 00000000 		.4byte	.LASF55
 3193 04dc 01       		.byte	0x1
 3194 04dd 2209     		.2byte	0x922
 3195 04df 1C040000 		.4byte	0x41c
 3196 04e3 00000020 		.4byte	0x20000000
 3197 04e7 00       		.byte	0
 3198 04e8 19       		.uleb128 0x19
 3199 04e9 97050000 		.4byte	.LASF58
 3200 04ed 01       		.byte	0x1
 3201 04ee 3B09     		.2byte	0x93b
 3202 04f0 DE000000 		.4byte	0xde
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\cc2xwxHk.s 			page 121


 3203 04f4 00000000 		.4byte	.LFB18
 3204 04f8 10000000 		.4byte	.LFE18-.LFB18
 3205 04fc 01       		.uleb128 0x1
 3206 04fd 9C       		.byte	0x9c
 3207 04fe 23050000 		.4byte	0x523
 3208 0502 16       		.uleb128 0x16
 3209 0503 AB030000 		.4byte	.LASF52
 3210 0507 01       		.byte	0x1
 3211 0508 3B09     		.2byte	0x93b
 3212 050a 6B000000 		.4byte	0x6b
 3213 050e B3010000 		.4byte	.LLST14
 3214 0512 22       		.uleb128 0x22
 3215 0513 00000000 		.4byte	.LASF55
 3216 0517 01       		.byte	0x1
 3217 0518 3D09     		.2byte	0x93d
 3218 051a 1C040000 		.4byte	0x41c
 3219 051e 00000020 		.4byte	0x20000000
 3220 0522 00       		.byte	0
 3221 0523 15       		.uleb128 0x15
 3222 0524 53050000 		.4byte	.LASF59
 3223 0528 01       		.byte	0x1
 3224 0529 4E09     		.2byte	0x94e
 3225 052b 00000000 		.4byte	.LFB19
 3226 052f 30000000 		.4byte	.LFE19-.LFB19
 3227 0533 01       		.uleb128 0x1
 3228 0534 9C       		.byte	0x9c
 3229 0535 9C050000 		.4byte	0x59c
 3230 0539 16       		.uleb128 0x16
 3231 053a AB030000 		.4byte	.LASF52
 3232 053e 01       		.byte	0x1
 3233 053f 4E09     		.2byte	0x94e
 3234 0541 6B000000 		.4byte	0x6b
 3235 0545 D4010000 		.4byte	.LLST15
 3236 0549 16       		.uleb128 0x16
 3237 054a B2030000 		.4byte	.LASF60
 3238 054e 01       		.byte	0x1
 3239 054f 4E09     		.2byte	0x94e
 3240 0551 6B000000 		.4byte	0x6b
 3241 0555 F5010000 		.4byte	.LLST16
 3242 0559 17       		.uleb128 0x17
 3243 055a 34010000 		.4byte	.LASF23
 3244 055e 01       		.byte	0x1
 3245 055f 5009     		.2byte	0x950
 3246 0561 6B000000 		.4byte	0x6b
 3247 0565 16020000 		.4byte	.LLST17
 3248 0569 17       		.uleb128 0x17
 3249 056a F3010000 		.4byte	.LASF61
 3250 056e 01       		.byte	0x1
 3251 056f 5109     		.2byte	0x951
 3252 0571 83000000 		.4byte	0x83
 3253 0575 29020000 		.4byte	.LLST18
 3254 0579 17       		.uleb128 0x17
 3255 057a 89020000 		.4byte	.LASF31
 3256 057e 01       		.byte	0x1
 3257 057f 5209     		.2byte	0x952
 3258 0581 83000000 		.4byte	0x83
 3259 0585 47020000 		.4byte	.LLST19
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\cc2xwxHk.s 			page 122


 3260 0589 13       		.uleb128 0x13
 3261 058a 0A000000 		.4byte	.LVL38
 3262 058e 720E0000 		.4byte	0xe72
 3263 0592 13       		.uleb128 0x13
 3264 0593 2A000000 		.4byte	.LVL43
 3265 0597 7D0E0000 		.4byte	0xe7d
 3266 059b 00       		.byte	0
 3267 059c 19       		.uleb128 0x19
 3268 059d 45020000 		.4byte	.LASF62
 3269 05a1 01       		.byte	0x1
 3270 05a2 7009     		.2byte	0x970
 3271 05a4 6B000000 		.4byte	0x6b
 3272 05a8 00000000 		.4byte	.LFB20
 3273 05ac 20000000 		.4byte	.LFE20-.LFB20
 3274 05b0 01       		.uleb128 0x1
 3275 05b1 9C       		.byte	0x9c
 3276 05b2 D7050000 		.4byte	0x5d7
 3277 05b6 16       		.uleb128 0x16
 3278 05b7 AB030000 		.4byte	.LASF52
 3279 05bb 01       		.byte	0x1
 3280 05bc 7009     		.2byte	0x970
 3281 05be 6B000000 		.4byte	0x6b
 3282 05c2 5A020000 		.4byte	.LLST20
 3283 05c6 17       		.uleb128 0x17
 3284 05c7 B2030000 		.4byte	.LASF60
 3285 05cb 01       		.byte	0x1
 3286 05cc 7209     		.2byte	0x972
 3287 05ce 6B000000 		.4byte	0x6b
 3288 05d2 7B020000 		.4byte	.LLST21
 3289 05d6 00       		.byte	0
 3290 05d7 0B       		.uleb128 0xb
 3291 05d8 51060000 		.4byte	.LASF63
 3292 05dc 01       		.byte	0x1
 3293 05dd 8509     		.2byte	0x985
 3294 05df 01       		.byte	0x1
 3295 05e0 F1050000 		.4byte	0x5f1
 3296 05e4 0C       		.uleb128 0xc
 3297 05e5 AB030000 		.4byte	.LASF52
 3298 05e9 01       		.byte	0x1
 3299 05ea 8509     		.2byte	0x985
 3300 05ec 6B000000 		.4byte	0x6b
 3301 05f0 00       		.byte	0
 3302 05f1 1D       		.uleb128 0x1d
 3303 05f2 D7050000 		.4byte	0x5d7
 3304 05f6 00000000 		.4byte	.LFB21
 3305 05fa 14000000 		.4byte	.LFE21-.LFB21
 3306 05fe 01       		.uleb128 0x1
 3307 05ff 9C       		.byte	0x9c
 3308 0600 0E060000 		.4byte	0x60e
 3309 0604 1E       		.uleb128 0x1e
 3310 0605 E4050000 		.4byte	0x5e4
 3311 0609 9C020000 		.4byte	.LLST22
 3312 060d 00       		.byte	0
 3313 060e 19       		.uleb128 0x19
 3314 060f FB000000 		.4byte	.LASF64
 3315 0613 01       		.byte	0x1
 3316 0614 9709     		.2byte	0x997
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\cc2xwxHk.s 			page 123


 3317 0616 6B000000 		.4byte	0x6b
 3318 061a 00000000 		.4byte	.LFB22
 3319 061e 18000000 		.4byte	.LFE22-.LFB22
 3320 0622 01       		.uleb128 0x1
 3321 0623 9C       		.byte	0x9c
 3322 0624 39060000 		.4byte	0x639
 3323 0628 16       		.uleb128 0x16
 3324 0629 AB030000 		.4byte	.LASF52
 3325 062d 01       		.byte	0x1
 3326 062e 9709     		.2byte	0x997
 3327 0630 6B000000 		.4byte	0x6b
 3328 0634 BD020000 		.4byte	.LLST23
 3329 0638 00       		.byte	0
 3330 0639 15       		.uleb128 0x15
 3331 063a 8E010000 		.4byte	.LASF65
 3332 063e 01       		.byte	0x1
 3333 063f A709     		.2byte	0x9a7
 3334 0641 00000000 		.4byte	.LFB23
 3335 0645 14000000 		.4byte	.LFE23-.LFB23
 3336 0649 01       		.uleb128 0x1
 3337 064a 9C       		.byte	0x9c
 3338 064b 60060000 		.4byte	0x660
 3339 064f 16       		.uleb128 0x16
 3340 0650 AB030000 		.4byte	.LASF52
 3341 0654 01       		.byte	0x1
 3342 0655 A709     		.2byte	0x9a7
 3343 0657 6B000000 		.4byte	0x6b
 3344 065b DE020000 		.4byte	.LLST24
 3345 065f 00       		.byte	0
 3346 0660 15       		.uleb128 0x15
 3347 0661 31030000 		.4byte	.LASF66
 3348 0665 01       		.byte	0x1
 3349 0666 B509     		.2byte	0x9b5
 3350 0668 00000000 		.4byte	.LFB24
 3351 066c 14000000 		.4byte	.LFE24-.LFB24
 3352 0670 01       		.uleb128 0x1
 3353 0671 9C       		.byte	0x9c
 3354 0672 87060000 		.4byte	0x687
 3355 0676 16       		.uleb128 0x16
 3356 0677 AB030000 		.4byte	.LASF52
 3357 067b 01       		.byte	0x1
 3358 067c B509     		.2byte	0x9b5
 3359 067e 6B000000 		.4byte	0x6b
 3360 0682 FF020000 		.4byte	.LLST25
 3361 0686 00       		.byte	0
 3362 0687 15       		.uleb128 0x15
 3363 0688 03050000 		.4byte	.LASF67
 3364 068c 01       		.byte	0x1
 3365 068d C409     		.2byte	0x9c4
 3366 068f 00000000 		.4byte	.LFB25
 3367 0693 14000000 		.4byte	.LFE25-.LFB25
 3368 0697 01       		.uleb128 0x1
 3369 0698 9C       		.byte	0x9c
 3370 0699 AE060000 		.4byte	0x6ae
 3371 069d 16       		.uleb128 0x16
 3372 069e AB030000 		.4byte	.LASF52
 3373 06a2 01       		.byte	0x1
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\cc2xwxHk.s 			page 124


 3374 06a3 C409     		.2byte	0x9c4
 3375 06a5 6B000000 		.4byte	0x6b
 3376 06a9 20030000 		.4byte	.LLST26
 3377 06ad 00       		.byte	0
 3378 06ae 15       		.uleb128 0x15
 3379 06af E2050000 		.4byte	.LASF68
 3380 06b3 01       		.byte	0x1
 3381 06b4 D309     		.2byte	0x9d3
 3382 06b6 00000000 		.4byte	.LFB26
 3383 06ba 04000000 		.4byte	.LFE26-.LFB26
 3384 06be 01       		.uleb128 0x1
 3385 06bf 9C       		.byte	0x9c
 3386 06c0 D3060000 		.4byte	0x6d3
 3387 06c4 18       		.uleb128 0x18
 3388 06c5 40060000 		.4byte	.LASF46
 3389 06c9 01       		.byte	0x1
 3390 06ca D309     		.2byte	0x9d3
 3391 06cc 6B000000 		.4byte	0x6b
 3392 06d0 01       		.uleb128 0x1
 3393 06d1 50       		.byte	0x50
 3394 06d2 00       		.byte	0
 3395 06d3 11       		.uleb128 0x11
 3396 06d4 D2000000 		.4byte	.LASF69
 3397 06d8 01       		.byte	0x1
 3398 06d9 EB09     		.2byte	0x9eb
 3399 06db 00000000 		.4byte	.LFB27
 3400 06df 18000000 		.4byte	.LFE27-.LFB27
 3401 06e3 01       		.uleb128 0x1
 3402 06e4 9C       		.byte	0x9c
 3403 06e5 15       		.uleb128 0x15
 3404 06e6 6C070000 		.4byte	.LASF70
 3405 06ea 01       		.byte	0x1
 3406 06eb FF09     		.2byte	0x9ff
 3407 06ed 00000000 		.4byte	.LFB28
 3408 06f1 2C000000 		.4byte	.LFE28-.LFB28
 3409 06f5 01       		.uleb128 0x1
 3410 06f6 9C       		.byte	0x9c
 3411 06f7 1E070000 		.4byte	0x71e
 3412 06fb 16       		.uleb128 0x16
 3413 06fc A6050000 		.4byte	.LASF71
 3414 0700 01       		.byte	0x1
 3415 0701 FF09     		.2byte	0x9ff
 3416 0703 83000000 		.4byte	0x83
 3417 0707 41030000 		.4byte	.LLST27
 3418 070b 13       		.uleb128 0x13
 3419 070c 14000000 		.4byte	.LVL61
 3420 0710 8E0E0000 		.4byte	0xe8e
 3421 0714 13       		.uleb128 0x13
 3422 0715 22000000 		.4byte	.LVL63
 3423 0719 8E0E0000 		.4byte	0xe8e
 3424 071d 00       		.byte	0
 3425 071e 1D       		.uleb128 0x1d
 3426 071f 03010000 		.4byte	0x103
 3427 0723 00000000 		.4byte	.LFB3
 3428 0727 C4000000 		.4byte	.LFE3-.LFB3
 3429 072b 01       		.uleb128 0x1
 3430 072c 9C       		.byte	0x9c
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\cc2xwxHk.s 			page 125


 3431 072d CF070000 		.4byte	0x7cf
 3432 0731 23       		.uleb128 0x23
 3433 0732 0F010000 		.4byte	0x10f
 3434 0736 23       		.uleb128 0x23
 3435 0737 1A010000 		.4byte	0x11a
 3436 073b 23       		.uleb128 0x23
 3437 073c 25010000 		.4byte	0x125
 3438 0740 24       		.uleb128 0x24
 3439 0741 30010000 		.4byte	0x130
 3440 0745 00       		.byte	0
 3441 0746 23       		.uleb128 0x23
 3442 0747 3B010000 		.4byte	0x13b
 3443 074b 25       		.uleb128 0x25
 3444 074c 0A000000 		.4byte	.LBB9
 3445 0750 90000000 		.4byte	.LBE9-.LBB9
 3446 0754 C5070000 		.4byte	0x7c5
 3447 0758 26       		.uleb128 0x26
 3448 0759 0F010000 		.4byte	0x10f
 3449 075d 5F030000 		.4byte	.LLST28
 3450 0761 26       		.uleb128 0x26
 3451 0762 1A010000 		.4byte	0x11a
 3452 0766 99030000 		.4byte	.LLST29
 3453 076a 26       		.uleb128 0x26
 3454 076b 25010000 		.4byte	0x125
 3455 076f AC030000 		.4byte	.LLST30
 3456 0773 26       		.uleb128 0x26
 3457 0774 30010000 		.4byte	0x130
 3458 0778 01040000 		.4byte	.LLST31
 3459 077c 20       		.uleb128 0x20
 3460 077d 3B010000 		.4byte	0x13b
 3461 0781 02       		.uleb128 0x2
 3462 0782 91       		.byte	0x91
 3463 0783 6C       		.sleb128 -20
 3464 0784 13       		.uleb128 0x13
 3465 0785 0E000000 		.4byte	.LVL67
 3466 0789 720E0000 		.4byte	0xe72
 3467 078d 27       		.uleb128 0x27
 3468 078e 7E000000 		.4byte	.LVL84
 3469 0792 9F0E0000 		.4byte	0xe9f
 3470 0796 A1070000 		.4byte	0x7a1
 3471 079a 28       		.uleb128 0x28
 3472 079b 01       		.uleb128 0x1
 3473 079c 50       		.byte	0x50
 3474 079d 02       		.uleb128 0x2
 3475 079e 08       		.byte	0x8
 3476 079f 30       		.byte	0x30
 3477 07a0 00       		.byte	0
 3478 07a1 27       		.uleb128 0x27
 3479 07a2 90000000 		.4byte	.LVL85
 3480 07a6 E5060000 		.4byte	0x6e5
 3481 07aa B4070000 		.4byte	0x7b4
 3482 07ae 28       		.uleb128 0x28
 3483 07af 01       		.uleb128 0x1
 3484 07b0 50       		.byte	0x50
 3485 07b1 01       		.uleb128 0x1
 3486 07b2 44       		.byte	0x44
 3487 07b3 00       		.byte	0
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\cc2xwxHk.s 			page 126


 3488 07b4 29       		.uleb128 0x29
 3489 07b5 9A000000 		.4byte	.LVL86
 3490 07b9 7D0E0000 		.4byte	0xe7d
 3491 07bd 28       		.uleb128 0x28
 3492 07be 01       		.uleb128 0x1
 3493 07bf 50       		.byte	0x50
 3494 07c0 02       		.uleb128 0x2
 3495 07c1 74       		.byte	0x74
 3496 07c2 00       		.sleb128 0
 3497 07c3 00       		.byte	0
 3498 07c4 00       		.byte	0
 3499 07c5 13       		.uleb128 0x13
 3500 07c6 06000000 		.4byte	.LVL66
 3501 07ca B00E0000 		.4byte	0xeb0
 3502 07ce 00       		.byte	0
 3503 07cf 15       		.uleb128 0x15
 3504 07d0 4D040000 		.4byte	.LASF72
 3505 07d4 01       		.byte	0x1
 3506 07d5 3C03     		.2byte	0x33c
 3507 07d7 00000000 		.4byte	.LFB10
 3508 07db BC000000 		.4byte	.LFE10-.LFB10
 3509 07df 01       		.uleb128 0x1
 3510 07e0 9C       		.byte	0x9c
 3511 07e1 84080000 		.4byte	0x884
 3512 07e5 16       		.uleb128 0x16
 3513 07e6 23010000 		.4byte	.LASF22
 3514 07ea 01       		.byte	0x1
 3515 07eb 3C03     		.2byte	0x33c
 3516 07ed 83000000 		.4byte	0x83
 3517 07f1 2C040000 		.4byte	.LLST32
 3518 07f5 17       		.uleb128 0x17
 3519 07f6 34010000 		.4byte	.LASF23
 3520 07fa 01       		.byte	0x1
 3521 07fb 3E03     		.2byte	0x33e
 3522 07fd 6B000000 		.4byte	0x6b
 3523 0801 65040000 		.4byte	.LLST33
 3524 0805 17       		.uleb128 0x17
 3525 0806 49070000 		.4byte	.LASF73
 3526 080a 01       		.byte	0x1
 3527 080b 3F03     		.2byte	0x33f
 3528 080d 6B000000 		.4byte	0x6b
 3529 0811 79040000 		.4byte	.LLST34
 3530 0815 17       		.uleb128 0x17
 3531 0816 7D010000 		.4byte	.LASF74
 3532 081a 01       		.byte	0x1
 3533 081b 4203     		.2byte	0x342
 3534 081d 83000000 		.4byte	0x83
 3535 0821 9D040000 		.4byte	.LLST35
 3536 0825 13       		.uleb128 0x13
 3537 0826 20000000 		.4byte	.LVL88
 3538 082a 720E0000 		.4byte	0xe72
 3539 082e 13       		.uleb128 0x13
 3540 082f 28000000 		.4byte	.LVL90
 3541 0833 DE010000 		.4byte	0x1de
 3542 0837 13       		.uleb128 0x13
 3543 0838 30000000 		.4byte	.LVL92
 3544 083c AD010000 		.4byte	0x1ad
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\cc2xwxHk.s 			page 127


 3545 0840 27       		.uleb128 0x27
 3546 0841 6A000000 		.4byte	.LVL97
 3547 0845 8E0E0000 		.4byte	0xe8e
 3548 0849 54080000 		.4byte	0x854
 3549 084d 28       		.uleb128 0x28
 3550 084e 01       		.uleb128 0x1
 3551 084f 50       		.byte	0x50
 3552 0850 02       		.uleb128 0x2
 3553 0851 08       		.byte	0x8
 3554 0852 32       		.byte	0x32
 3555 0853 00       		.byte	0
 3556 0854 27       		.uleb128 0x27
 3557 0855 84000000 		.4byte	.LVL98
 3558 0859 8E0E0000 		.4byte	0xe8e
 3559 085d 68080000 		.4byte	0x868
 3560 0861 28       		.uleb128 0x28
 3561 0862 01       		.uleb128 0x1
 3562 0863 50       		.byte	0x50
 3563 0864 02       		.uleb128 0x2
 3564 0865 08       		.byte	0x8
 3565 0866 32       		.byte	0x32
 3566 0867 00       		.byte	0
 3567 0868 13       		.uleb128 0x13
 3568 0869 9A000000 		.4byte	.LVL101
 3569 086d 03010000 		.4byte	0x103
 3570 0871 29       		.uleb128 0x29
 3571 0872 A0000000 		.4byte	.LVL102
 3572 0876 7D0E0000 		.4byte	0xe7d
 3573 087a 28       		.uleb128 0x28
 3574 087b 01       		.uleb128 0x1
 3575 087c 50       		.byte	0x50
 3576 087d 04       		.uleb128 0x4
 3577 087e 91       		.byte	0x91
 3578 087f 64       		.sleb128 -28
 3579 0880 94       		.byte	0x94
 3580 0881 01       		.byte	0x1
 3581 0882 00       		.byte	0
 3582 0883 00       		.byte	0
 3583 0884 15       		.uleb128 0x15
 3584 0885 79060000 		.4byte	.LASF75
 3585 0889 01       		.byte	0x1
 3586 088a 160A     		.2byte	0xa16
 3587 088c 00000000 		.4byte	.LFB29
 3588 0890 14000000 		.4byte	.LFE29-.LFB29
 3589 0894 01       		.uleb128 0x1
 3590 0895 9C       		.byte	0x9c
 3591 0896 B4080000 		.4byte	0x8b4
 3592 089a 16       		.uleb128 0x16
 3593 089b 7C080000 		.4byte	.LASF76
 3594 089f 01       		.byte	0x1
 3595 08a0 160A     		.2byte	0xa16
 3596 08a2 77000000 		.4byte	0x77
 3597 08a6 C8040000 		.4byte	.LLST36
 3598 08aa 13       		.uleb128 0x13
 3599 08ab 0C000000 		.4byte	.LVL105
 3600 08af 8E0E0000 		.4byte	0xe8e
 3601 08b3 00       		.byte	0
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\cc2xwxHk.s 			page 128


 3602 08b4 2A       		.uleb128 0x2a
 3603 08b5 28010000 		.4byte	.LASF77
 3604 08b9 01       		.byte	0x1
 3605 08ba 240A     		.2byte	0xa24
 3606 08bc 00000000 		.4byte	.LFB30
 3607 08c0 48000000 		.4byte	.LFE30-.LFB30
 3608 08c4 01       		.uleb128 0x1
 3609 08c5 9C       		.byte	0x9c
 3610 08c6 DB080000 		.4byte	0x8db
 3611 08ca 16       		.uleb128 0x16
 3612 08cb 23010000 		.4byte	.LASF22
 3613 08cf 01       		.byte	0x1
 3614 08d0 240A     		.2byte	0xa24
 3615 08d2 83000000 		.4byte	0x83
 3616 08d6 E9040000 		.4byte	.LLST37
 3617 08da 00       		.byte	0
 3618 08db 2A       		.uleb128 0x2a
 3619 08dc 7B020000 		.4byte	.LASF78
 3620 08e0 01       		.byte	0x1
 3621 08e1 610A     		.2byte	0xa61
 3622 08e3 00000000 		.4byte	.LFB32
 3623 08e7 60000000 		.4byte	.LFE32-.LFB32
 3624 08eb 01       		.uleb128 0x1
 3625 08ec 9C       		.byte	0x9c
 3626 08ed AD090000 		.4byte	0x9ad
 3627 08f1 2B       		.uleb128 0x2b
 3628 08f2 6900     		.ascii	"i\000"
 3629 08f4 01       		.byte	0x1
 3630 08f5 630A     		.2byte	0xa63
 3631 08f7 83000000 		.4byte	0x83
 3632 08fb 0A050000 		.4byte	.LLST38
 3633 08ff 2C       		.uleb128 0x2c
 3634 0900 47010000 		.4byte	0x147
 3635 0904 04000000 		.4byte	.LBB22
 3636 0908 00000000 		.4byte	.Ldebug_ranges0+0
 3637 090c 01       		.byte	0x1
 3638 090d 6D0A     		.2byte	0xa6d
 3639 090f 26090000 		.4byte	0x926
 3640 0913 2D       		.uleb128 0x2d
 3641 0914 54010000 		.4byte	0x154
 3642 0918 01       		.byte	0x1
 3643 0919 2E       		.uleb128 0x2e
 3644 091a 00000000 		.4byte	.Ldebug_ranges0+0
 3645 091e 2D       		.uleb128 0x2d
 3646 091f 54010000 		.4byte	0x154
 3647 0923 01       		.byte	0x1
 3648 0924 00       		.byte	0
 3649 0925 00       		.byte	0
 3650 0926 2C       		.uleb128 0x2c
 3651 0927 DA030000 		.4byte	0x3da
 3652 092b 08000000 		.4byte	.LBB29
 3653 092f 20000000 		.4byte	.Ldebug_ranges0+0x20
 3654 0933 01       		.byte	0x1
 3655 0934 6A0A     		.2byte	0xa6a
 3656 0936 65090000 		.4byte	0x965
 3657 093a 1F       		.uleb128 0x1f
 3658 093b F7030000 		.4byte	0x3f7
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\cc2xwxHk.s 			page 129


 3659 093f 06       		.uleb128 0x6
 3660 0940 03       		.byte	0x3
 3661 0941 00000000 		.4byte	CySysTickServiceCallbacks
 3662 0945 9F       		.byte	0x9f
 3663 0946 2D       		.uleb128 0x2d
 3664 0947 EB030000 		.4byte	0x3eb
 3665 094b 0F       		.byte	0xf
 3666 094c 2E       		.uleb128 0x2e
 3667 094d 20000000 		.4byte	.Ldebug_ranges0+0x20
 3668 0951 26       		.uleb128 0x26
 3669 0952 03040000 		.4byte	0x403
 3670 0956 4E050000 		.4byte	.LLST39
 3671 095a 21       		.uleb128 0x21
 3672 095b 0F040000 		.4byte	0x40f
 3673 095f 00000020 		.4byte	0x20000000
 3674 0963 00       		.byte	0
 3675 0964 00       		.byte	0
 3676 0965 2C       		.uleb128 0x2c
 3677 0966 D7050000 		.4byte	0x5d7
 3678 096a 2C000000 		.4byte	.LBB37
 3679 096e 40000000 		.4byte	.Ldebug_ranges0+0x40
 3680 0972 01       		.byte	0x1
 3681 0973 720A     		.2byte	0xa72
 3682 0975 80090000 		.4byte	0x980
 3683 0979 2D       		.uleb128 0x2d
 3684 097a E4050000 		.4byte	0x5e4
 3685 097e 0F       		.byte	0xf
 3686 097f 00       		.byte	0
 3687 0980 2C       		.uleb128 0x2c
 3688 0981 79010000 		.4byte	0x179
 3689 0985 2E000000 		.4byte	.LBB41
 3690 0989 60000000 		.4byte	.Ldebug_ranges0+0x60
 3691 098d 01       		.byte	0x1
 3692 098e 700A     		.2byte	0xa70
 3693 0990 9C090000 		.4byte	0x99c
 3694 0994 1F       		.uleb128 0x1f
 3695 0995 86010000 		.4byte	0x186
 3696 0999 01       		.uleb128 0x1
 3697 099a 50       		.byte	0x50
 3698 099b 00       		.byte	0
 3699 099c 2F       		.uleb128 0x2f
 3700 099d 93010000 		.4byte	0x193
 3701 09a1 34000000 		.4byte	.LBB46
 3702 09a5 04000000 		.4byte	.LBE46-.LBB46
 3703 09a9 01       		.byte	0x1
 3704 09aa 710A     		.2byte	0xa71
 3705 09ac 00       		.byte	0
 3706 09ad 11       		.uleb128 0x11
 3707 09ae ED070000 		.4byte	.LASF79
 3708 09b2 01       		.byte	0x1
 3709 09b3 910A     		.2byte	0xa91
 3710 09b5 00000000 		.4byte	.LFB34
 3711 09b9 10000000 		.4byte	.LFE34-.LFB34
 3712 09bd 01       		.uleb128 0x1
 3713 09be 9C       		.byte	0x9c
 3714 09bf 11       		.uleb128 0x11
 3715 09c0 E2000000 		.4byte	.LASF80
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\cc2xwxHk.s 			page 130


 3716 09c4 01       		.byte	0x1
 3717 09c5 A10A     		.2byte	0xaa1
 3718 09c7 00000000 		.4byte	.LFB35
 3719 09cb 10000000 		.4byte	.LFE35-.LFB35
 3720 09cf 01       		.uleb128 0x1
 3721 09d0 9C       		.byte	0x9c
 3722 09d1 15       		.uleb128 0x15
 3723 09d2 E4060000 		.4byte	.LASF81
 3724 09d6 01       		.byte	0x1
 3725 09d7 800A     		.2byte	0xa80
 3726 09d9 00000000 		.4byte	.LFB33
 3727 09dd 18000000 		.4byte	.LFE33-.LFB33
 3728 09e1 01       		.uleb128 0x1
 3729 09e2 9C       		.byte	0x9c
 3730 09e3 F1090000 		.4byte	0x9f1
 3731 09e7 13       		.uleb128 0x13
 3732 09e8 06000000 		.4byte	.LVL119
 3733 09ec BF090000 		.4byte	0x9bf
 3734 09f0 00       		.byte	0
 3735 09f1 15       		.uleb128 0x15
 3736 09f2 B3040000 		.4byte	.LASF82
 3737 09f6 01       		.byte	0x1
 3738 09f7 440A     		.2byte	0xa44
 3739 09f9 00000000 		.4byte	.LFB31
 3740 09fd 1C000000 		.4byte	.LFE31-.LFB31
 3741 0a01 01       		.uleb128 0x1
 3742 0a02 9C       		.byte	0x9c
 3743 0a03 1A0A0000 		.4byte	0xa1a
 3744 0a07 13       		.uleb128 0x13
 3745 0a08 0E000000 		.4byte	.LVL120
 3746 0a0c DB080000 		.4byte	0x8db
 3747 0a10 13       		.uleb128 0x13
 3748 0a11 16000000 		.4byte	.LVL121
 3749 0a15 D1090000 		.4byte	0x9d1
 3750 0a19 00       		.byte	0
 3751 0a1a 11       		.uleb128 0x11
 3752 0a1b 8C070000 		.4byte	.LASF83
 3753 0a1f 01       		.byte	0x1
 3754 0a20 B10A     		.2byte	0xab1
 3755 0a22 00000000 		.4byte	.LFB36
 3756 0a26 10000000 		.4byte	.LFE36-.LFB36
 3757 0a2a 01       		.uleb128 0x1
 3758 0a2b 9C       		.byte	0x9c
 3759 0a2c 1D       		.uleb128 0x1d
 3760 0a2d 79010000 		.4byte	0x179
 3761 0a31 00000000 		.4byte	.LFB37
 3762 0a35 10000000 		.4byte	.LFE37-.LFB37
 3763 0a39 01       		.uleb128 0x1
 3764 0a3a 9C       		.byte	0x9c
 3765 0a3b 490A0000 		.4byte	0xa49
 3766 0a3f 1E       		.uleb128 0x1e
 3767 0a40 86010000 		.4byte	0x186
 3768 0a44 71050000 		.4byte	.LLST40
 3769 0a48 00       		.byte	0
 3770 0a49 14       		.uleb128 0x14
 3771 0a4a 49010000 		.4byte	.LASF85
 3772 0a4e 01       		.byte	0x1
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\cc2xwxHk.s 			page 131


 3773 0a4f D20A     		.2byte	0xad2
 3774 0a51 83000000 		.4byte	0x83
 3775 0a55 00000000 		.4byte	.LFB38
 3776 0a59 10000000 		.4byte	.LFE38-.LFB38
 3777 0a5d 01       		.uleb128 0x1
 3778 0a5e 9C       		.byte	0x9c
 3779 0a5f 14       		.uleb128 0x14
 3780 0a60 33050000 		.4byte	.LASF86
 3781 0a64 01       		.byte	0x1
 3782 0a65 E20A     		.2byte	0xae2
 3783 0a67 83000000 		.4byte	0x83
 3784 0a6b 00000000 		.4byte	.LFB39
 3785 0a6f 10000000 		.4byte	.LFE39-.LFB39
 3786 0a73 01       		.uleb128 0x1
 3787 0a74 9C       		.byte	0x9c
 3788 0a75 1D       		.uleb128 0x1d
 3789 0a76 47010000 		.4byte	0x147
 3790 0a7a 00000000 		.4byte	.LFB40
 3791 0a7e 18000000 		.4byte	.LFE40-.LFB40
 3792 0a82 01       		.uleb128 0x1
 3793 0a83 9C       		.byte	0x9c
 3794 0a84 9F0A0000 		.4byte	0xa9f
 3795 0a88 1F       		.uleb128 0x1f
 3796 0a89 54010000 		.4byte	0x154
 3797 0a8d 01       		.uleb128 0x1
 3798 0a8e 50       		.byte	0x50
 3799 0a8f 2E       		.uleb128 0x2e
 3800 0a90 78000000 		.4byte	.Ldebug_ranges0+0x78
 3801 0a94 1E       		.uleb128 0x1e
 3802 0a95 54010000 		.4byte	0x154
 3803 0a99 92050000 		.4byte	.LLST41
 3804 0a9d 00       		.byte	0
 3805 0a9e 00       		.byte	0
 3806 0a9f 14       		.uleb128 0x14
 3807 0aa0 74070000 		.4byte	.LASF87
 3808 0aa4 01       		.byte	0x1
 3809 0aa5 1B0B     		.2byte	0xb1b
 3810 0aa7 83000000 		.4byte	0x83
 3811 0aab 00000000 		.4byte	.LFB41
 3812 0aaf 10000000 		.4byte	.LFE41-.LFB41
 3813 0ab3 01       		.uleb128 0x1
 3814 0ab4 9C       		.byte	0x9c
 3815 0ab5 14       		.uleb128 0x14
 3816 0ab6 A9020000 		.4byte	.LASF88
 3817 0aba 01       		.byte	0x1
 3818 0abb 320B     		.2byte	0xb32
 3819 0abd 83000000 		.4byte	0x83
 3820 0ac1 00000000 		.4byte	.LFB42
 3821 0ac5 10000000 		.4byte	.LFE42-.LFB42
 3822 0ac9 01       		.uleb128 0x1
 3823 0aca 9C       		.byte	0x9c
 3824 0acb 30       		.uleb128 0x30
 3825 0acc 61010000 		.4byte	0x161
 3826 0ad0 00000000 		.4byte	.LFB46
 3827 0ad4 24000000 		.4byte	.LFE46-.LFB46
 3828 0ad8 01       		.uleb128 0x1
 3829 0ad9 9C       		.byte	0x9c
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\cc2xwxHk.s 			page 132


 3830 0ada 000B0000 		.4byte	0xb00
 3831 0ade 23       		.uleb128 0x23
 3832 0adf 6E010000 		.4byte	0x16e
 3833 0ae3 25       		.uleb128 0x25
 3834 0ae4 0C000000 		.4byte	.LBB57
 3835 0ae8 10000000 		.4byte	.LBE57-.LBB57
 3836 0aec F60A0000 		.4byte	0xaf6
 3837 0af0 23       		.uleb128 0x23
 3838 0af1 6E010000 		.4byte	0x16e
 3839 0af5 00       		.byte	0
 3840 0af6 13       		.uleb128 0x13
 3841 0af7 06000000 		.4byte	.LVL127
 3842 0afb B50A0000 		.4byte	0xab5
 3843 0aff 00       		.byte	0
 3844 0b00 31       		.uleb128 0x31
 3845 0b01 93010000 		.4byte	0x193
 3846 0b05 00000000 		.4byte	.LFB43
 3847 0b09 0C000000 		.4byte	.LFE43-.LFB43
 3848 0b0d 01       		.uleb128 0x1
 3849 0b0e 9C       		.byte	0x9c
 3850 0b0f 19       		.uleb128 0x19
 3851 0b10 21070000 		.4byte	.LASF89
 3852 0b14 01       		.byte	0x1
 3853 0b15 620B     		.2byte	0xb62
 3854 0b17 F8000000 		.4byte	0xf8
 3855 0b1b 00000000 		.4byte	.LFB44
 3856 0b1f 10000000 		.4byte	.LFE44-.LFB44
 3857 0b23 01       		.uleb128 0x1
 3858 0b24 9C       		.byte	0x9c
 3859 0b25 560B0000 		.4byte	0xb56
 3860 0b29 16       		.uleb128 0x16
 3861 0b2a AB030000 		.4byte	.LASF52
 3862 0b2e 01       		.byte	0x1
 3863 0b2f 620B     		.2byte	0xb62
 3864 0b31 83000000 		.4byte	0x83
 3865 0b35 A6050000 		.4byte	.LLST42
 3866 0b39 18       		.uleb128 0x18
 3867 0b3a 2A050000 		.4byte	.LASF90
 3868 0b3e 01       		.byte	0x1
 3869 0b3f 620B     		.2byte	0xb62
 3870 0b41 F8000000 		.4byte	0xf8
 3871 0b45 01       		.uleb128 0x1
 3872 0b46 51       		.byte	0x51
 3873 0b47 1A       		.uleb128 0x1a
 3874 0b48 78000000 		.4byte	.LASF91
 3875 0b4c 01       		.byte	0x1
 3876 0b4d 640B     		.2byte	0xb64
 3877 0b4f F8000000 		.4byte	0xf8
 3878 0b53 01       		.uleb128 0x1
 3879 0b54 50       		.byte	0x50
 3880 0b55 00       		.byte	0
 3881 0b56 19       		.uleb128 0x19
 3882 0b57 BB010000 		.4byte	.LASF92
 3883 0b5b 01       		.byte	0x1
 3884 0b5c 7A0B     		.2byte	0xb7a
 3885 0b5e F8000000 		.4byte	0xf8
 3886 0b62 00000000 		.4byte	.LFB45
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\cc2xwxHk.s 			page 133


 3887 0b66 0C000000 		.4byte	.LFE45-.LFB45
 3888 0b6a 01       		.uleb128 0x1
 3889 0b6b 9C       		.byte	0x9c
 3890 0b6c 810B0000 		.4byte	0xb81
 3891 0b70 16       		.uleb128 0x16
 3892 0b71 AB030000 		.4byte	.LASF52
 3893 0b75 01       		.byte	0x1
 3894 0b76 7A0B     		.2byte	0xb7a
 3895 0b78 83000000 		.4byte	0x83
 3896 0b7c C7050000 		.4byte	.LLST43
 3897 0b80 00       		.byte	0
 3898 0b81 15       		.uleb128 0x15
 3899 0b82 9B020000 		.4byte	.LASF93
 3900 0b86 01       		.byte	0x1
 3901 0b87 A70B     		.2byte	0xba7
 3902 0b89 00000000 		.4byte	.LFB47
 3903 0b8d 70000000 		.4byte	.LFE47-.LFB47
 3904 0b91 01       		.uleb128 0x1
 3905 0b92 9C       		.byte	0x9c
 3906 0b93 A60B0000 		.4byte	0xba6
 3907 0b97 18       		.uleb128 0x18
 3908 0b98 57070000 		.4byte	.LASF94
 3909 0b9c 01       		.byte	0x1
 3910 0b9d A70B     		.2byte	0xba7
 3911 0b9f A60B0000 		.4byte	0xba6
 3912 0ba3 01       		.uleb128 0x1
 3913 0ba4 50       		.byte	0x50
 3914 0ba5 00       		.byte	0
 3915 0ba6 06       		.uleb128 0x6
 3916 0ba7 04       		.byte	0x4
 3917 0ba8 83000000 		.4byte	0x83
 3918 0bac 15       		.uleb128 0x15
 3919 0bad 15060000 		.4byte	.LASF95
 3920 0bb1 01       		.byte	0x1
 3921 0bb2 D30B     		.2byte	0xbd3
 3922 0bb4 00000000 		.4byte	.LFB48
 3923 0bb8 20000000 		.4byte	.LFE48-.LFB48
 3924 0bbc 01       		.uleb128 0x1
 3925 0bbd 9C       		.byte	0x9c
 3926 0bbe E30B0000 		.4byte	0xbe3
 3927 0bc2 16       		.uleb128 0x16
 3928 0bc3 CF040000 		.4byte	.LASF96
 3929 0bc7 01       		.byte	0x1
 3930 0bc8 D30B     		.2byte	0xbd3
 3931 0bca 83000000 		.4byte	0x83
 3932 0bce E8050000 		.4byte	.LLST44
 3933 0bd2 17       		.uleb128 0x17
 3934 0bd3 70030000 		.4byte	.LASF24
 3935 0bd7 01       		.byte	0x1
 3936 0bd8 D50B     		.2byte	0xbd5
 3937 0bda 83000000 		.4byte	0x83
 3938 0bde 09060000 		.4byte	.LLST45
 3939 0be2 00       		.byte	0
 3940 0be3 15       		.uleb128 0x15
 3941 0be4 62040000 		.4byte	.LASF97
 3942 0be8 01       		.byte	0x1
 3943 0be9 EE0B     		.2byte	0xbee
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\cc2xwxHk.s 			page 134


 3944 0beb 00000000 		.4byte	.LFB49
 3945 0bef 20000000 		.4byte	.LFE49-.LFB49
 3946 0bf3 01       		.uleb128 0x1
 3947 0bf4 9C       		.byte	0x9c
 3948 0bf5 1A0C0000 		.4byte	0xc1a
 3949 0bf9 16       		.uleb128 0x16
 3950 0bfa CF040000 		.4byte	.LASF96
 3951 0bfe 01       		.byte	0x1
 3952 0bff EE0B     		.2byte	0xbee
 3953 0c01 83000000 		.4byte	0x83
 3954 0c05 27060000 		.4byte	.LLST46
 3955 0c09 17       		.uleb128 0x17
 3956 0c0a 70030000 		.4byte	.LASF24
 3957 0c0e 01       		.byte	0x1
 3958 0c0f F00B     		.2byte	0xbf0
 3959 0c11 83000000 		.4byte	0x83
 3960 0c15 48060000 		.4byte	.LLST47
 3961 0c19 00       		.byte	0
 3962 0c1a 15       		.uleb128 0x15
 3963 0c1b CF070000 		.4byte	.LASF98
 3964 0c1f 01       		.byte	0x1
 3965 0c20 090C     		.2byte	0xc09
 3966 0c22 00000000 		.4byte	.LFB50
 3967 0c26 20000000 		.4byte	.LFE50-.LFB50
 3968 0c2a 01       		.uleb128 0x1
 3969 0c2b 9C       		.byte	0x9c
 3970 0c2c 510C0000 		.4byte	0xc51
 3971 0c30 16       		.uleb128 0x16
 3972 0c31 CF040000 		.4byte	.LASF96
 3973 0c35 01       		.byte	0x1
 3974 0c36 090C     		.2byte	0xc09
 3975 0c38 83000000 		.4byte	0x83
 3976 0c3c 66060000 		.4byte	.LLST48
 3977 0c40 17       		.uleb128 0x17
 3978 0c41 70030000 		.4byte	.LASF24
 3979 0c45 01       		.byte	0x1
 3980 0c46 0B0C     		.2byte	0xc0b
 3981 0c48 83000000 		.4byte	0x83
 3982 0c4c 87060000 		.4byte	.LLST49
 3983 0c50 00       		.byte	0
 3984 0c51 15       		.uleb128 0x15
 3985 0c52 DF040000 		.4byte	.LASF99
 3986 0c56 01       		.byte	0x1
 3987 0c57 260C     		.2byte	0xc26
 3988 0c59 00000000 		.4byte	.LFB51
 3989 0c5d 30000000 		.4byte	.LFE51-.LFB51
 3990 0c61 01       		.uleb128 0x1
 3991 0c62 9C       		.byte	0x9c
 3992 0c63 980C0000 		.4byte	0xc98
 3993 0c67 16       		.uleb128 0x16
 3994 0c68 C2000000 		.4byte	.LASF100
 3995 0c6c 01       		.byte	0x1
 3996 0c6d 260C     		.2byte	0xc26
 3997 0c6f 83000000 		.4byte	0x83
 3998 0c73 A5060000 		.4byte	.LLST50
 3999 0c77 16       		.uleb128 0x16
 4000 0c78 CF040000 		.4byte	.LASF96
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\cc2xwxHk.s 			page 135


 4001 0c7c 01       		.byte	0x1
 4002 0c7d 260C     		.2byte	0xc26
 4003 0c7f 83000000 		.4byte	0x83
 4004 0c83 DF060000 		.4byte	.LLST51
 4005 0c87 17       		.uleb128 0x17
 4006 0c88 70030000 		.4byte	.LASF24
 4007 0c8c 01       		.byte	0x1
 4008 0c8d 280C     		.2byte	0xc28
 4009 0c8f 83000000 		.4byte	0x83
 4010 0c93 00070000 		.4byte	.LLST52
 4011 0c97 00       		.byte	0
 4012 0c98 15       		.uleb128 0x15
 4013 0c99 B3050000 		.4byte	.LASF101
 4014 0c9d 01       		.byte	0x1
 4015 0c9e 630C     		.2byte	0xc63
 4016 0ca0 00000000 		.4byte	.LFB52
 4017 0ca4 18000000 		.4byte	.LFE52-.LFB52
 4018 0ca8 01       		.uleb128 0x1
 4019 0ca9 9C       		.byte	0x9c
 4020 0caa BF0C0000 		.4byte	0xcbf
 4021 0cae 16       		.uleb128 0x16
 4022 0caf CF040000 		.4byte	.LASF96
 4023 0cb3 01       		.byte	0x1
 4024 0cb4 630C     		.2byte	0xc63
 4025 0cb6 83000000 		.4byte	0x83
 4026 0cba 1E070000 		.4byte	.LLST53
 4027 0cbe 00       		.byte	0
 4028 0cbf 15       		.uleb128 0x15
 4029 0cc0 4B080000 		.4byte	.LASF102
 4030 0cc4 01       		.byte	0x1
 4031 0cc5 7B0C     		.2byte	0xc7b
 4032 0cc7 00000000 		.4byte	.LFB53
 4033 0ccb 14000000 		.4byte	.LFE53-.LFB53
 4034 0ccf 01       		.uleb128 0x1
 4035 0cd0 9C       		.byte	0x9c
 4036 0cd1 E60C0000 		.4byte	0xce6
 4037 0cd5 16       		.uleb128 0x16
 4038 0cd6 64050000 		.4byte	.LASF103
 4039 0cda 01       		.byte	0x1
 4040 0cdb 7B0C     		.2byte	0xc7b
 4041 0cdd 83000000 		.4byte	0x83
 4042 0ce1 3F070000 		.4byte	.LLST54
 4043 0ce5 00       		.byte	0
 4044 0ce6 15       		.uleb128 0x15
 4045 0ce7 9D060000 		.4byte	.LASF104
 4046 0ceb 01       		.byte	0x1
 4047 0cec A70C     		.2byte	0xca7
 4048 0cee 00000000 		.4byte	.LFB54
 4049 0cf2 18000000 		.4byte	.LFE54-.LFB54
 4050 0cf6 01       		.uleb128 0x1
 4051 0cf7 9C       		.byte	0x9c
 4052 0cf8 0D0D0000 		.4byte	0xd0d
 4053 0cfc 16       		.uleb128 0x16
 4054 0cfd 5C010000 		.4byte	.LASF105
 4055 0d01 01       		.byte	0x1
 4056 0d02 A70C     		.2byte	0xca7
 4057 0d04 83000000 		.4byte	0x83
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\cc2xwxHk.s 			page 136


 4058 0d08 60070000 		.4byte	.LLST55
 4059 0d0c 00       		.byte	0
 4060 0d0d 11       		.uleb128 0x11
 4061 0d0e 2C080000 		.4byte	.LASF106
 4062 0d12 01       		.byte	0x1
 4063 0d13 B90C     		.2byte	0xcb9
 4064 0d15 00000000 		.4byte	.LFB55
 4065 0d19 14000000 		.4byte	.LFE55-.LFB55
 4066 0d1d 01       		.uleb128 0x1
 4067 0d1e 9C       		.byte	0x9c
 4068 0d1f 11       		.uleb128 0x11
 4069 0d20 9B010000 		.4byte	.LASF107
 4070 0d24 01       		.byte	0x1
 4071 0d25 CA0C     		.2byte	0xcca
 4072 0d27 00000000 		.4byte	.LFB56
 4073 0d2b 14000000 		.4byte	.LFE56-.LFB56
 4074 0d2f 01       		.uleb128 0x1
 4075 0d30 9C       		.byte	0x9c
 4076 0d31 11       		.uleb128 0x11
 4077 0d32 CC020000 		.4byte	.LASF108
 4078 0d36 01       		.byte	0x1
 4079 0d37 DA0C     		.2byte	0xcda
 4080 0d39 00000000 		.4byte	.LFB57
 4081 0d3d 10000000 		.4byte	.LFE57-.LFB57
 4082 0d41 01       		.uleb128 0x1
 4083 0d42 9C       		.byte	0x9c
 4084 0d43 11       		.uleb128 0x11
 4085 0d44 77030000 		.4byte	.LASF109
 4086 0d48 01       		.byte	0x1
 4087 0d49 EA0C     		.2byte	0xcea
 4088 0d4b 00000000 		.4byte	.LFB58
 4089 0d4f 10000000 		.4byte	.LFE58-.LFB58
 4090 0d53 01       		.uleb128 0x1
 4091 0d54 9C       		.byte	0x9c
 4092 0d55 15       		.uleb128 0x15
 4093 0d56 63020000 		.4byte	.LASF110
 4094 0d5a 01       		.byte	0x1
 4095 0d5b FE0C     		.2byte	0xcfe
 4096 0d5d 00000000 		.4byte	.LFB59
 4097 0d61 24000000 		.4byte	.LFE59-.LFB59
 4098 0d65 01       		.uleb128 0x1
 4099 0d66 9C       		.byte	0x9c
 4100 0d67 8C0D0000 		.4byte	0xd8c
 4101 0d6b 16       		.uleb128 0x16
 4102 0d6c 03030000 		.4byte	.LASF111
 4103 0d70 01       		.byte	0x1
 4104 0d71 FE0C     		.2byte	0xcfe
 4105 0d73 9B000000 		.4byte	0x9b
 4106 0d77 81070000 		.4byte	.LLST56
 4107 0d7b 2B       		.uleb128 0x2b
 4108 0d7c 746D7000 		.ascii	"tmp\000"
 4109 0d80 01       		.byte	0x1
 4110 0d81 000D     		.2byte	0xd00
 4111 0d83 6B000000 		.4byte	0x6b
 4112 0d87 BB070000 		.4byte	.LLST57
 4113 0d8b 00       		.byte	0
 4114 0d8c 19       		.uleb128 0x19
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\cc2xwxHk.s 			page 137


 4115 0d8d 38000000 		.4byte	.LASF112
 4116 0d91 01       		.byte	0x1
 4117 0d92 1B0D     		.2byte	0xd1b
 4118 0d94 9B000000 		.4byte	0x9b
 4119 0d98 00000000 		.4byte	.LFB60
 4120 0d9c 1C000000 		.4byte	.LFE60-.LFB60
 4121 0da0 01       		.uleb128 0x1
 4122 0da1 9C       		.byte	0x9c
 4123 0da2 C50D0000 		.4byte	0xdc5
 4124 0da6 2B       		.uleb128 0x2b
 4125 0da7 746D7000 		.ascii	"tmp\000"
 4126 0dab 01       		.byte	0x1
 4127 0dac 1D0D     		.2byte	0xd1d
 4128 0dae 6B000000 		.4byte	0x6b
 4129 0db2 DF070000 		.4byte	.LLST58
 4130 0db6 1A       		.uleb128 0x1a
 4131 0db7 A3080000 		.4byte	.LASF113
 4132 0dbb 01       		.byte	0x1
 4133 0dbc 1E0D     		.2byte	0xd1e
 4134 0dbe 9B000000 		.4byte	0x9b
 4135 0dc2 01       		.uleb128 0x1
 4136 0dc3 50       		.byte	0x50
 4137 0dc4 00       		.byte	0
 4138 0dc5 32       		.uleb128 0x32
 4139 0dc6 F8000000 		.4byte	0xf8
 4140 0dca D50D0000 		.4byte	0xdd5
 4141 0dce 33       		.uleb128 0x33
 4142 0dcf F1000000 		.4byte	0xf1
 4143 0dd3 04       		.byte	0x4
 4144 0dd4 00       		.byte	0
 4145 0dd5 34       		.uleb128 0x34
 4146 0dd6 36070000 		.4byte	.LASF114
 4147 0dda 01       		.byte	0x1
 4148 0ddb 22       		.byte	0x22
 4149 0ddc C50D0000 		.4byte	0xdc5
 4150 0de0 05       		.uleb128 0x5
 4151 0de1 03       		.byte	0x3
 4152 0de2 00000000 		.4byte	CySysTickCallbacks
 4153 0de6 35       		.uleb128 0x35
 4154 0de7 45050000 		.4byte	.LASF115
 4155 0deb 01       		.byte	0x1
 4156 0dec 1B       		.byte	0x1b
 4157 0ded 83000000 		.4byte	0x83
 4158 0df1 05       		.uleb128 0x5
 4159 0df2 03       		.byte	0x3
 4160 0df3 00000000 		.4byte	cydelayFreqHz
 4161 0df7 35       		.uleb128 0x35
 4162 0df8 D6010000 		.4byte	.LASF116
 4163 0dfc 01       		.byte	0x1
 4164 0dfd 1C       		.byte	0x1c
 4165 0dfe 83000000 		.4byte	0x83
 4166 0e02 05       		.uleb128 0x5
 4167 0e03 03       		.byte	0x3
 4168 0e04 00000000 		.4byte	cydelayFreqKhz
 4169 0e08 35       		.uleb128 0x35
 4170 0e09 AD070000 		.4byte	.LASF117
 4171 0e0d 01       		.byte	0x1
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\cc2xwxHk.s 			page 138


 4172 0e0e 1D       		.byte	0x1d
 4173 0e0f 6B000000 		.4byte	0x6b
 4174 0e13 05       		.uleb128 0x5
 4175 0e14 03       		.byte	0x3
 4176 0e15 00000000 		.4byte	cydelayFreqMhz
 4177 0e19 35       		.uleb128 0x35
 4178 0e1a 56020000 		.4byte	.LASF118
 4179 0e1e 01       		.byte	0x1
 4180 0e1f 1E       		.byte	0x1e
 4181 0e20 83000000 		.4byte	0x83
 4182 0e24 05       		.uleb128 0x5
 4183 0e25 03       		.byte	0x3
 4184 0e26 00000000 		.4byte	cydelay32kMs
 4185 0e2a 35       		.uleb128 0x35
 4186 0e2b A4000000 		.4byte	.LASF119
 4187 0e2f 01       		.byte	0x1
 4188 0e30 36       		.byte	0x36
 4189 0e31 83000000 		.4byte	0x83
 4190 0e35 05       		.uleb128 0x5
 4191 0e36 03       		.byte	0x3
 4192 0e37 00000000 		.4byte	CySysTickInitVar
 4193 0e3b 32       		.uleb128 0x32
 4194 0e3c 6B000000 		.4byte	0x6b
 4195 0e40 4B0E0000 		.4byte	0xe4b
 4196 0e44 33       		.uleb128 0x33
 4197 0e45 F1000000 		.4byte	0xf1
 4198 0e49 16       		.byte	0x16
 4199 0e4a 00       		.byte	0
 4200 0e4b 35       		.uleb128 0x35
 4201 0e4c BF060000 		.4byte	.LASF120
 4202 0e50 01       		.byte	0x1
 4203 0e51 4C       		.byte	0x4c
 4204 0e52 5C0E0000 		.4byte	0xe5c
 4205 0e56 05       		.uleb128 0x5
 4206 0e57 03       		.byte	0x3
 4207 0e58 00000000 		.4byte	cyImoFreqMhz2DpllOffset
 4208 0e5c 36       		.uleb128 0x36
 4209 0e5d 3B0E0000 		.4byte	0xe3b
 4210 0e61 35       		.uleb128 0x35
 4211 0e62 50000000 		.4byte	.LASF121
 4212 0e66 01       		.byte	0x1
 4213 0e67 5B       		.byte	0x5b
 4214 0e68 83000000 		.4byte	0x83
 4215 0e6c 05       		.uleb128 0x5
 4216 0e6d 03       		.byte	0x3
 4217 0e6e 00000000 		.4byte	CySysClkPumpConfig
 4218 0e72 37       		.uleb128 0x37
 4219 0e73 1A030000 		.4byte	.LASF125
 4220 0e77 03       		.byte	0x3
 4221 0e78 E5       		.byte	0xe5
 4222 0e79 6B000000 		.4byte	0x6b
 4223 0e7d 38       		.uleb128 0x38
 4224 0e7e 6F050000 		.4byte	.LASF122
 4225 0e82 03       		.byte	0x3
 4226 0e83 E6       		.byte	0xe6
 4227 0e84 8E0E0000 		.4byte	0xe8e
 4228 0e88 39       		.uleb128 0x39
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\cc2xwxHk.s 			page 139


 4229 0e89 6B000000 		.4byte	0x6b
 4230 0e8d 00       		.byte	0
 4231 0e8e 38       		.uleb128 0x38
 4232 0e8f CF050000 		.4byte	.LASF123
 4233 0e93 03       		.byte	0x3
 4234 0e94 DC       		.byte	0xdc
 4235 0e95 9F0E0000 		.4byte	0xe9f
 4236 0e99 39       		.uleb128 0x39
 4237 0e9a 83000000 		.4byte	0x83
 4238 0e9e 00       		.byte	0
 4239 0e9f 38       		.uleb128 0x38
 4240 0ea0 14080000 		.4byte	.LASF124
 4241 0ea4 04       		.byte	0x4
 4242 0ea5 52       		.byte	0x52
 4243 0ea6 B00E0000 		.4byte	0xeb0
 4244 0eaa 39       		.uleb128 0x39
 4245 0eab 83000000 		.4byte	0x83
 4246 0eaf 00       		.byte	0
 4247 0eb0 37       		.uleb128 0x37
 4248 0eb1 BC070000 		.4byte	.LASF126
 4249 0eb5 05       		.byte	0x5
 4250 0eb6 54       		.byte	0x54
 4251 0eb7 83000000 		.4byte	0x83
 4252 0ebb 00       		.byte	0
 4253              		.section	.debug_abbrev,"",%progbits
 4254              	.Ldebug_abbrev0:
 4255 0000 01       		.uleb128 0x1
 4256 0001 11       		.uleb128 0x11
 4257 0002 01       		.byte	0x1
 4258 0003 25       		.uleb128 0x25
 4259 0004 0E       		.uleb128 0xe
 4260 0005 13       		.uleb128 0x13
 4261 0006 0B       		.uleb128 0xb
 4262 0007 03       		.uleb128 0x3
 4263 0008 0E       		.uleb128 0xe
 4264 0009 1B       		.uleb128 0x1b
 4265 000a 0E       		.uleb128 0xe
 4266 000b 55       		.uleb128 0x55
 4267 000c 17       		.uleb128 0x17
 4268 000d 11       		.uleb128 0x11
 4269 000e 01       		.uleb128 0x1
 4270 000f 10       		.uleb128 0x10
 4271 0010 17       		.uleb128 0x17
 4272 0011 00       		.byte	0
 4273 0012 00       		.byte	0
 4274 0013 02       		.uleb128 0x2
 4275 0014 24       		.uleb128 0x24
 4276 0015 00       		.byte	0
 4277 0016 0B       		.uleb128 0xb
 4278 0017 0B       		.uleb128 0xb
 4279 0018 3E       		.uleb128 0x3e
 4280 0019 0B       		.uleb128 0xb
 4281 001a 03       		.uleb128 0x3
 4282 001b 0E       		.uleb128 0xe
 4283 001c 00       		.byte	0
 4284 001d 00       		.byte	0
 4285 001e 03       		.uleb128 0x3
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\cc2xwxHk.s 			page 140


 4286 001f 24       		.uleb128 0x24
 4287 0020 00       		.byte	0
 4288 0021 0B       		.uleb128 0xb
 4289 0022 0B       		.uleb128 0xb
 4290 0023 3E       		.uleb128 0x3e
 4291 0024 0B       		.uleb128 0xb
 4292 0025 03       		.uleb128 0x3
 4293 0026 08       		.uleb128 0x8
 4294 0027 00       		.byte	0
 4295 0028 00       		.byte	0
 4296 0029 04       		.uleb128 0x4
 4297 002a 16       		.uleb128 0x16
 4298 002b 00       		.byte	0
 4299 002c 03       		.uleb128 0x3
 4300 002d 0E       		.uleb128 0xe
 4301 002e 3A       		.uleb128 0x3a
 4302 002f 0B       		.uleb128 0xb
 4303 0030 3B       		.uleb128 0x3b
 4304 0031 05       		.uleb128 0x5
 4305 0032 49       		.uleb128 0x49
 4306 0033 13       		.uleb128 0x13
 4307 0034 00       		.byte	0
 4308 0035 00       		.byte	0
 4309 0036 05       		.uleb128 0x5
 4310 0037 35       		.uleb128 0x35
 4311 0038 00       		.byte	0
 4312 0039 49       		.uleb128 0x49
 4313 003a 13       		.uleb128 0x13
 4314 003b 00       		.byte	0
 4315 003c 00       		.byte	0
 4316 003d 06       		.uleb128 0x6
 4317 003e 0F       		.uleb128 0xf
 4318 003f 00       		.byte	0
 4319 0040 0B       		.uleb128 0xb
 4320 0041 0B       		.uleb128 0xb
 4321 0042 49       		.uleb128 0x49
 4322 0043 13       		.uleb128 0x13
 4323 0044 00       		.byte	0
 4324 0045 00       		.byte	0
 4325 0046 07       		.uleb128 0x7
 4326 0047 15       		.uleb128 0x15
 4327 0048 00       		.byte	0
 4328 0049 27       		.uleb128 0x27
 4329 004a 19       		.uleb128 0x19
 4330 004b 00       		.byte	0
 4331 004c 00       		.byte	0
 4332 004d 08       		.uleb128 0x8
 4333 004e 16       		.uleb128 0x16
 4334 004f 00       		.byte	0
 4335 0050 03       		.uleb128 0x3
 4336 0051 0E       		.uleb128 0xe
 4337 0052 3A       		.uleb128 0x3a
 4338 0053 0B       		.uleb128 0xb
 4339 0054 3B       		.uleb128 0x3b
 4340 0055 0B       		.uleb128 0xb
 4341 0056 49       		.uleb128 0x49
 4342 0057 13       		.uleb128 0x13
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\cc2xwxHk.s 			page 141


 4343 0058 00       		.byte	0
 4344 0059 00       		.byte	0
 4345 005a 09       		.uleb128 0x9
 4346 005b 2E       		.uleb128 0x2e
 4347 005c 01       		.byte	0x1
 4348 005d 3F       		.uleb128 0x3f
 4349 005e 19       		.uleb128 0x19
 4350 005f 03       		.uleb128 0x3
 4351 0060 0E       		.uleb128 0xe
 4352 0061 3A       		.uleb128 0x3a
 4353 0062 0B       		.uleb128 0xb
 4354 0063 3B       		.uleb128 0x3b
 4355 0064 0B       		.uleb128 0xb
 4356 0065 27       		.uleb128 0x27
 4357 0066 19       		.uleb128 0x19
 4358 0067 20       		.uleb128 0x20
 4359 0068 0B       		.uleb128 0xb
 4360 0069 01       		.uleb128 0x1
 4361 006a 13       		.uleb128 0x13
 4362 006b 00       		.byte	0
 4363 006c 00       		.byte	0
 4364 006d 0A       		.uleb128 0xa
 4365 006e 34       		.uleb128 0x34
 4366 006f 00       		.byte	0
 4367 0070 03       		.uleb128 0x3
 4368 0071 0E       		.uleb128 0xe
 4369 0072 3A       		.uleb128 0x3a
 4370 0073 0B       		.uleb128 0xb
 4371 0074 3B       		.uleb128 0x3b
 4372 0075 0B       		.uleb128 0xb
 4373 0076 49       		.uleb128 0x49
 4374 0077 13       		.uleb128 0x13
 4375 0078 00       		.byte	0
 4376 0079 00       		.byte	0
 4377 007a 0B       		.uleb128 0xb
 4378 007b 2E       		.uleb128 0x2e
 4379 007c 01       		.byte	0x1
 4380 007d 3F       		.uleb128 0x3f
 4381 007e 19       		.uleb128 0x19
 4382 007f 03       		.uleb128 0x3
 4383 0080 0E       		.uleb128 0xe
 4384 0081 3A       		.uleb128 0x3a
 4385 0082 0B       		.uleb128 0xb
 4386 0083 3B       		.uleb128 0x3b
 4387 0084 05       		.uleb128 0x5
 4388 0085 27       		.uleb128 0x27
 4389 0086 19       		.uleb128 0x19
 4390 0087 20       		.uleb128 0x20
 4391 0088 0B       		.uleb128 0xb
 4392 0089 01       		.uleb128 0x1
 4393 008a 13       		.uleb128 0x13
 4394 008b 00       		.byte	0
 4395 008c 00       		.byte	0
 4396 008d 0C       		.uleb128 0xc
 4397 008e 05       		.uleb128 0x5
 4398 008f 00       		.byte	0
 4399 0090 03       		.uleb128 0x3
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\cc2xwxHk.s 			page 142


 4400 0091 0E       		.uleb128 0xe
 4401 0092 3A       		.uleb128 0x3a
 4402 0093 0B       		.uleb128 0xb
 4403 0094 3B       		.uleb128 0x3b
 4404 0095 05       		.uleb128 0x5
 4405 0096 49       		.uleb128 0x49
 4406 0097 13       		.uleb128 0x13
 4407 0098 00       		.byte	0
 4408 0099 00       		.byte	0
 4409 009a 0D       		.uleb128 0xd
 4410 009b 2E       		.uleb128 0x2e
 4411 009c 01       		.byte	0x1
 4412 009d 03       		.uleb128 0x3
 4413 009e 0E       		.uleb128 0xe
 4414 009f 3A       		.uleb128 0x3a
 4415 00a0 0B       		.uleb128 0xb
 4416 00a1 3B       		.uleb128 0x3b
 4417 00a2 05       		.uleb128 0x5
 4418 00a3 27       		.uleb128 0x27
 4419 00a4 19       		.uleb128 0x19
 4420 00a5 20       		.uleb128 0x20
 4421 00a6 0B       		.uleb128 0xb
 4422 00a7 01       		.uleb128 0x1
 4423 00a8 13       		.uleb128 0x13
 4424 00a9 00       		.byte	0
 4425 00aa 00       		.byte	0
 4426 00ab 0E       		.uleb128 0xe
 4427 00ac 34       		.uleb128 0x34
 4428 00ad 00       		.byte	0
 4429 00ae 03       		.uleb128 0x3
 4430 00af 08       		.uleb128 0x8
 4431 00b0 3A       		.uleb128 0x3a
 4432 00b1 0B       		.uleb128 0xb
 4433 00b2 3B       		.uleb128 0x3b
 4434 00b3 05       		.uleb128 0x5
 4435 00b4 49       		.uleb128 0x49
 4436 00b5 13       		.uleb128 0x13
 4437 00b6 00       		.byte	0
 4438 00b7 00       		.byte	0
 4439 00b8 0F       		.uleb128 0xf
 4440 00b9 2E       		.uleb128 0x2e
 4441 00ba 00       		.byte	0
 4442 00bb 3F       		.uleb128 0x3f
 4443 00bc 19       		.uleb128 0x19
 4444 00bd 03       		.uleb128 0x3
 4445 00be 0E       		.uleb128 0xe
 4446 00bf 3A       		.uleb128 0x3a
 4447 00c0 0B       		.uleb128 0xb
 4448 00c1 3B       		.uleb128 0x3b
 4449 00c2 05       		.uleb128 0x5
 4450 00c3 27       		.uleb128 0x27
 4451 00c4 19       		.uleb128 0x19
 4452 00c5 20       		.uleb128 0x20
 4453 00c6 0B       		.uleb128 0xb
 4454 00c7 00       		.byte	0
 4455 00c8 00       		.byte	0
 4456 00c9 10       		.uleb128 0x10
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\cc2xwxHk.s 			page 143


 4457 00ca 2E       		.uleb128 0x2e
 4458 00cb 00       		.byte	0
 4459 00cc 3F       		.uleb128 0x3f
 4460 00cd 19       		.uleb128 0x19
 4461 00ce 03       		.uleb128 0x3
 4462 00cf 0E       		.uleb128 0xe
 4463 00d0 3A       		.uleb128 0x3a
 4464 00d1 0B       		.uleb128 0xb
 4465 00d2 3B       		.uleb128 0x3b
 4466 00d3 0B       		.uleb128 0xb
 4467 00d4 27       		.uleb128 0x27
 4468 00d5 19       		.uleb128 0x19
 4469 00d6 11       		.uleb128 0x11
 4470 00d7 01       		.uleb128 0x1
 4471 00d8 12       		.uleb128 0x12
 4472 00d9 06       		.uleb128 0x6
 4473 00da 40       		.uleb128 0x40
 4474 00db 18       		.uleb128 0x18
 4475 00dc 9742     		.uleb128 0x2117
 4476 00de 19       		.uleb128 0x19
 4477 00df 00       		.byte	0
 4478 00e0 00       		.byte	0
 4479 00e1 11       		.uleb128 0x11
 4480 00e2 2E       		.uleb128 0x2e
 4481 00e3 00       		.byte	0
 4482 00e4 3F       		.uleb128 0x3f
 4483 00e5 19       		.uleb128 0x19
 4484 00e6 03       		.uleb128 0x3
 4485 00e7 0E       		.uleb128 0xe
 4486 00e8 3A       		.uleb128 0x3a
 4487 00e9 0B       		.uleb128 0xb
 4488 00ea 3B       		.uleb128 0x3b
 4489 00eb 05       		.uleb128 0x5
 4490 00ec 27       		.uleb128 0x27
 4491 00ed 19       		.uleb128 0x19
 4492 00ee 11       		.uleb128 0x11
 4493 00ef 01       		.uleb128 0x1
 4494 00f0 12       		.uleb128 0x12
 4495 00f1 06       		.uleb128 0x6
 4496 00f2 40       		.uleb128 0x40
 4497 00f3 18       		.uleb128 0x18
 4498 00f4 9742     		.uleb128 0x2117
 4499 00f6 19       		.uleb128 0x19
 4500 00f7 00       		.byte	0
 4501 00f8 00       		.byte	0
 4502 00f9 12       		.uleb128 0x12
 4503 00fa 2E       		.uleb128 0x2e
 4504 00fb 01       		.byte	0x1
 4505 00fc 3F       		.uleb128 0x3f
 4506 00fd 19       		.uleb128 0x19
 4507 00fe 03       		.uleb128 0x3
 4508 00ff 0E       		.uleb128 0xe
 4509 0100 3A       		.uleb128 0x3a
 4510 0101 0B       		.uleb128 0xb
 4511 0102 3B       		.uleb128 0x3b
 4512 0103 0B       		.uleb128 0xb
 4513 0104 27       		.uleb128 0x27
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\cc2xwxHk.s 			page 144


 4514 0105 19       		.uleb128 0x19
 4515 0106 11       		.uleb128 0x11
 4516 0107 01       		.uleb128 0x1
 4517 0108 12       		.uleb128 0x12
 4518 0109 06       		.uleb128 0x6
 4519 010a 40       		.uleb128 0x40
 4520 010b 18       		.uleb128 0x18
 4521 010c 9742     		.uleb128 0x2117
 4522 010e 19       		.uleb128 0x19
 4523 010f 01       		.uleb128 0x1
 4524 0110 13       		.uleb128 0x13
 4525 0111 00       		.byte	0
 4526 0112 00       		.byte	0
 4527 0113 13       		.uleb128 0x13
 4528 0114 898201   		.uleb128 0x4109
 4529 0117 00       		.byte	0
 4530 0118 11       		.uleb128 0x11
 4531 0119 01       		.uleb128 0x1
 4532 011a 31       		.uleb128 0x31
 4533 011b 13       		.uleb128 0x13
 4534 011c 00       		.byte	0
 4535 011d 00       		.byte	0
 4536 011e 14       		.uleb128 0x14
 4537 011f 2E       		.uleb128 0x2e
 4538 0120 00       		.byte	0
 4539 0121 3F       		.uleb128 0x3f
 4540 0122 19       		.uleb128 0x19
 4541 0123 03       		.uleb128 0x3
 4542 0124 0E       		.uleb128 0xe
 4543 0125 3A       		.uleb128 0x3a
 4544 0126 0B       		.uleb128 0xb
 4545 0127 3B       		.uleb128 0x3b
 4546 0128 05       		.uleb128 0x5
 4547 0129 27       		.uleb128 0x27
 4548 012a 19       		.uleb128 0x19
 4549 012b 49       		.uleb128 0x49
 4550 012c 13       		.uleb128 0x13
 4551 012d 11       		.uleb128 0x11
 4552 012e 01       		.uleb128 0x1
 4553 012f 12       		.uleb128 0x12
 4554 0130 06       		.uleb128 0x6
 4555 0131 40       		.uleb128 0x40
 4556 0132 18       		.uleb128 0x18
 4557 0133 9742     		.uleb128 0x2117
 4558 0135 19       		.uleb128 0x19
 4559 0136 00       		.byte	0
 4560 0137 00       		.byte	0
 4561 0138 15       		.uleb128 0x15
 4562 0139 2E       		.uleb128 0x2e
 4563 013a 01       		.byte	0x1
 4564 013b 3F       		.uleb128 0x3f
 4565 013c 19       		.uleb128 0x19
 4566 013d 03       		.uleb128 0x3
 4567 013e 0E       		.uleb128 0xe
 4568 013f 3A       		.uleb128 0x3a
 4569 0140 0B       		.uleb128 0xb
 4570 0141 3B       		.uleb128 0x3b
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\cc2xwxHk.s 			page 145


 4571 0142 05       		.uleb128 0x5
 4572 0143 27       		.uleb128 0x27
 4573 0144 19       		.uleb128 0x19
 4574 0145 11       		.uleb128 0x11
 4575 0146 01       		.uleb128 0x1
 4576 0147 12       		.uleb128 0x12
 4577 0148 06       		.uleb128 0x6
 4578 0149 40       		.uleb128 0x40
 4579 014a 18       		.uleb128 0x18
 4580 014b 9742     		.uleb128 0x2117
 4581 014d 19       		.uleb128 0x19
 4582 014e 01       		.uleb128 0x1
 4583 014f 13       		.uleb128 0x13
 4584 0150 00       		.byte	0
 4585 0151 00       		.byte	0
 4586 0152 16       		.uleb128 0x16
 4587 0153 05       		.uleb128 0x5
 4588 0154 00       		.byte	0
 4589 0155 03       		.uleb128 0x3
 4590 0156 0E       		.uleb128 0xe
 4591 0157 3A       		.uleb128 0x3a
 4592 0158 0B       		.uleb128 0xb
 4593 0159 3B       		.uleb128 0x3b
 4594 015a 05       		.uleb128 0x5
 4595 015b 49       		.uleb128 0x49
 4596 015c 13       		.uleb128 0x13
 4597 015d 02       		.uleb128 0x2
 4598 015e 17       		.uleb128 0x17
 4599 015f 00       		.byte	0
 4600 0160 00       		.byte	0
 4601 0161 17       		.uleb128 0x17
 4602 0162 34       		.uleb128 0x34
 4603 0163 00       		.byte	0
 4604 0164 03       		.uleb128 0x3
 4605 0165 0E       		.uleb128 0xe
 4606 0166 3A       		.uleb128 0x3a
 4607 0167 0B       		.uleb128 0xb
 4608 0168 3B       		.uleb128 0x3b
 4609 0169 05       		.uleb128 0x5
 4610 016a 49       		.uleb128 0x49
 4611 016b 13       		.uleb128 0x13
 4612 016c 02       		.uleb128 0x2
 4613 016d 17       		.uleb128 0x17
 4614 016e 00       		.byte	0
 4615 016f 00       		.byte	0
 4616 0170 18       		.uleb128 0x18
 4617 0171 05       		.uleb128 0x5
 4618 0172 00       		.byte	0
 4619 0173 03       		.uleb128 0x3
 4620 0174 0E       		.uleb128 0xe
 4621 0175 3A       		.uleb128 0x3a
 4622 0176 0B       		.uleb128 0xb
 4623 0177 3B       		.uleb128 0x3b
 4624 0178 05       		.uleb128 0x5
 4625 0179 49       		.uleb128 0x49
 4626 017a 13       		.uleb128 0x13
 4627 017b 02       		.uleb128 0x2
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\cc2xwxHk.s 			page 146


 4628 017c 18       		.uleb128 0x18
 4629 017d 00       		.byte	0
 4630 017e 00       		.byte	0
 4631 017f 19       		.uleb128 0x19
 4632 0180 2E       		.uleb128 0x2e
 4633 0181 01       		.byte	0x1
 4634 0182 3F       		.uleb128 0x3f
 4635 0183 19       		.uleb128 0x19
 4636 0184 03       		.uleb128 0x3
 4637 0185 0E       		.uleb128 0xe
 4638 0186 3A       		.uleb128 0x3a
 4639 0187 0B       		.uleb128 0xb
 4640 0188 3B       		.uleb128 0x3b
 4641 0189 05       		.uleb128 0x5
 4642 018a 27       		.uleb128 0x27
 4643 018b 19       		.uleb128 0x19
 4644 018c 49       		.uleb128 0x49
 4645 018d 13       		.uleb128 0x13
 4646 018e 11       		.uleb128 0x11
 4647 018f 01       		.uleb128 0x1
 4648 0190 12       		.uleb128 0x12
 4649 0191 06       		.uleb128 0x6
 4650 0192 40       		.uleb128 0x40
 4651 0193 18       		.uleb128 0x18
 4652 0194 9742     		.uleb128 0x2117
 4653 0196 19       		.uleb128 0x19
 4654 0197 01       		.uleb128 0x1
 4655 0198 13       		.uleb128 0x13
 4656 0199 00       		.byte	0
 4657 019a 00       		.byte	0
 4658 019b 1A       		.uleb128 0x1a
 4659 019c 34       		.uleb128 0x34
 4660 019d 00       		.byte	0
 4661 019e 03       		.uleb128 0x3
 4662 019f 0E       		.uleb128 0xe
 4663 01a0 3A       		.uleb128 0x3a
 4664 01a1 0B       		.uleb128 0xb
 4665 01a2 3B       		.uleb128 0x3b
 4666 01a3 05       		.uleb128 0x5
 4667 01a4 49       		.uleb128 0x49
 4668 01a5 13       		.uleb128 0x13
 4669 01a6 02       		.uleb128 0x2
 4670 01a7 18       		.uleb128 0x18
 4671 01a8 00       		.byte	0
 4672 01a9 00       		.byte	0
 4673 01aa 1B       		.uleb128 0x1b
 4674 01ab 2E       		.uleb128 0x2e
 4675 01ac 01       		.byte	0x1
 4676 01ad 3F       		.uleb128 0x3f
 4677 01ae 19       		.uleb128 0x19
 4678 01af 03       		.uleb128 0x3
 4679 01b0 0E       		.uleb128 0xe
 4680 01b1 3A       		.uleb128 0x3a
 4681 01b2 0B       		.uleb128 0xb
 4682 01b3 3B       		.uleb128 0x3b
 4683 01b4 05       		.uleb128 0x5
 4684 01b5 27       		.uleb128 0x27
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\cc2xwxHk.s 			page 147


 4685 01b6 19       		.uleb128 0x19
 4686 01b7 49       		.uleb128 0x49
 4687 01b8 13       		.uleb128 0x13
 4688 01b9 20       		.uleb128 0x20
 4689 01ba 0B       		.uleb128 0xb
 4690 01bb 01       		.uleb128 0x1
 4691 01bc 13       		.uleb128 0x13
 4692 01bd 00       		.byte	0
 4693 01be 00       		.byte	0
 4694 01bf 1C       		.uleb128 0x1c
 4695 01c0 34       		.uleb128 0x34
 4696 01c1 00       		.byte	0
 4697 01c2 03       		.uleb128 0x3
 4698 01c3 0E       		.uleb128 0xe
 4699 01c4 3A       		.uleb128 0x3a
 4700 01c5 0B       		.uleb128 0xb
 4701 01c6 3B       		.uleb128 0x3b
 4702 01c7 05       		.uleb128 0x5
 4703 01c8 49       		.uleb128 0x49
 4704 01c9 13       		.uleb128 0x13
 4705 01ca 00       		.byte	0
 4706 01cb 00       		.byte	0
 4707 01cc 1D       		.uleb128 0x1d
 4708 01cd 2E       		.uleb128 0x2e
 4709 01ce 01       		.byte	0x1
 4710 01cf 31       		.uleb128 0x31
 4711 01d0 13       		.uleb128 0x13
 4712 01d1 11       		.uleb128 0x11
 4713 01d2 01       		.uleb128 0x1
 4714 01d3 12       		.uleb128 0x12
 4715 01d4 06       		.uleb128 0x6
 4716 01d5 40       		.uleb128 0x40
 4717 01d6 18       		.uleb128 0x18
 4718 01d7 9742     		.uleb128 0x2117
 4719 01d9 19       		.uleb128 0x19
 4720 01da 01       		.uleb128 0x1
 4721 01db 13       		.uleb128 0x13
 4722 01dc 00       		.byte	0
 4723 01dd 00       		.byte	0
 4724 01de 1E       		.uleb128 0x1e
 4725 01df 05       		.uleb128 0x5
 4726 01e0 00       		.byte	0
 4727 01e1 31       		.uleb128 0x31
 4728 01e2 13       		.uleb128 0x13
 4729 01e3 02       		.uleb128 0x2
 4730 01e4 17       		.uleb128 0x17
 4731 01e5 00       		.byte	0
 4732 01e6 00       		.byte	0
 4733 01e7 1F       		.uleb128 0x1f
 4734 01e8 05       		.uleb128 0x5
 4735 01e9 00       		.byte	0
 4736 01ea 31       		.uleb128 0x31
 4737 01eb 13       		.uleb128 0x13
 4738 01ec 02       		.uleb128 0x2
 4739 01ed 18       		.uleb128 0x18
 4740 01ee 00       		.byte	0
 4741 01ef 00       		.byte	0
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\cc2xwxHk.s 			page 148


 4742 01f0 20       		.uleb128 0x20
 4743 01f1 34       		.uleb128 0x34
 4744 01f2 00       		.byte	0
 4745 01f3 31       		.uleb128 0x31
 4746 01f4 13       		.uleb128 0x13
 4747 01f5 02       		.uleb128 0x2
 4748 01f6 18       		.uleb128 0x18
 4749 01f7 00       		.byte	0
 4750 01f8 00       		.byte	0
 4751 01f9 21       		.uleb128 0x21
 4752 01fa 34       		.uleb128 0x34
 4753 01fb 00       		.byte	0
 4754 01fc 31       		.uleb128 0x31
 4755 01fd 13       		.uleb128 0x13
 4756 01fe 1C       		.uleb128 0x1c
 4757 01ff 06       		.uleb128 0x6
 4758 0200 00       		.byte	0
 4759 0201 00       		.byte	0
 4760 0202 22       		.uleb128 0x22
 4761 0203 34       		.uleb128 0x34
 4762 0204 00       		.byte	0
 4763 0205 03       		.uleb128 0x3
 4764 0206 0E       		.uleb128 0xe
 4765 0207 3A       		.uleb128 0x3a
 4766 0208 0B       		.uleb128 0xb
 4767 0209 3B       		.uleb128 0x3b
 4768 020a 05       		.uleb128 0x5
 4769 020b 49       		.uleb128 0x49
 4770 020c 13       		.uleb128 0x13
 4771 020d 1C       		.uleb128 0x1c
 4772 020e 06       		.uleb128 0x6
 4773 020f 00       		.byte	0
 4774 0210 00       		.byte	0
 4775 0211 23       		.uleb128 0x23
 4776 0212 34       		.uleb128 0x34
 4777 0213 00       		.byte	0
 4778 0214 31       		.uleb128 0x31
 4779 0215 13       		.uleb128 0x13
 4780 0216 00       		.byte	0
 4781 0217 00       		.byte	0
 4782 0218 24       		.uleb128 0x24
 4783 0219 34       		.uleb128 0x34
 4784 021a 00       		.byte	0
 4785 021b 31       		.uleb128 0x31
 4786 021c 13       		.uleb128 0x13
 4787 021d 1C       		.uleb128 0x1c
 4788 021e 0B       		.uleb128 0xb
 4789 021f 00       		.byte	0
 4790 0220 00       		.byte	0
 4791 0221 25       		.uleb128 0x25
 4792 0222 0B       		.uleb128 0xb
 4793 0223 01       		.byte	0x1
 4794 0224 11       		.uleb128 0x11
 4795 0225 01       		.uleb128 0x1
 4796 0226 12       		.uleb128 0x12
 4797 0227 06       		.uleb128 0x6
 4798 0228 01       		.uleb128 0x1
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\cc2xwxHk.s 			page 149


 4799 0229 13       		.uleb128 0x13
 4800 022a 00       		.byte	0
 4801 022b 00       		.byte	0
 4802 022c 26       		.uleb128 0x26
 4803 022d 34       		.uleb128 0x34
 4804 022e 00       		.byte	0
 4805 022f 31       		.uleb128 0x31
 4806 0230 13       		.uleb128 0x13
 4807 0231 02       		.uleb128 0x2
 4808 0232 17       		.uleb128 0x17
 4809 0233 00       		.byte	0
 4810 0234 00       		.byte	0
 4811 0235 27       		.uleb128 0x27
 4812 0236 898201   		.uleb128 0x4109
 4813 0239 01       		.byte	0x1
 4814 023a 11       		.uleb128 0x11
 4815 023b 01       		.uleb128 0x1
 4816 023c 31       		.uleb128 0x31
 4817 023d 13       		.uleb128 0x13
 4818 023e 01       		.uleb128 0x1
 4819 023f 13       		.uleb128 0x13
 4820 0240 00       		.byte	0
 4821 0241 00       		.byte	0
 4822 0242 28       		.uleb128 0x28
 4823 0243 8A8201   		.uleb128 0x410a
 4824 0246 00       		.byte	0
 4825 0247 02       		.uleb128 0x2
 4826 0248 18       		.uleb128 0x18
 4827 0249 9142     		.uleb128 0x2111
 4828 024b 18       		.uleb128 0x18
 4829 024c 00       		.byte	0
 4830 024d 00       		.byte	0
 4831 024e 29       		.uleb128 0x29
 4832 024f 898201   		.uleb128 0x4109
 4833 0252 01       		.byte	0x1
 4834 0253 11       		.uleb128 0x11
 4835 0254 01       		.uleb128 0x1
 4836 0255 31       		.uleb128 0x31
 4837 0256 13       		.uleb128 0x13
 4838 0257 00       		.byte	0
 4839 0258 00       		.byte	0
 4840 0259 2A       		.uleb128 0x2a
 4841 025a 2E       		.uleb128 0x2e
 4842 025b 01       		.byte	0x1
 4843 025c 3F       		.uleb128 0x3f
 4844 025d 19       		.uleb128 0x19
 4845 025e 03       		.uleb128 0x3
 4846 025f 0E       		.uleb128 0xe
 4847 0260 3A       		.uleb128 0x3a
 4848 0261 0B       		.uleb128 0xb
 4849 0262 3B       		.uleb128 0x3b
 4850 0263 05       		.uleb128 0x5
 4851 0264 27       		.uleb128 0x27
 4852 0265 19       		.uleb128 0x19
 4853 0266 11       		.uleb128 0x11
 4854 0267 01       		.uleb128 0x1
 4855 0268 12       		.uleb128 0x12
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\cc2xwxHk.s 			page 150


 4856 0269 06       		.uleb128 0x6
 4857 026a 40       		.uleb128 0x40
 4858 026b 18       		.uleb128 0x18
 4859 026c 9642     		.uleb128 0x2116
 4860 026e 19       		.uleb128 0x19
 4861 026f 01       		.uleb128 0x1
 4862 0270 13       		.uleb128 0x13
 4863 0271 00       		.byte	0
 4864 0272 00       		.byte	0
 4865 0273 2B       		.uleb128 0x2b
 4866 0274 34       		.uleb128 0x34
 4867 0275 00       		.byte	0
 4868 0276 03       		.uleb128 0x3
 4869 0277 08       		.uleb128 0x8
 4870 0278 3A       		.uleb128 0x3a
 4871 0279 0B       		.uleb128 0xb
 4872 027a 3B       		.uleb128 0x3b
 4873 027b 05       		.uleb128 0x5
 4874 027c 49       		.uleb128 0x49
 4875 027d 13       		.uleb128 0x13
 4876 027e 02       		.uleb128 0x2
 4877 027f 17       		.uleb128 0x17
 4878 0280 00       		.byte	0
 4879 0281 00       		.byte	0
 4880 0282 2C       		.uleb128 0x2c
 4881 0283 1D       		.uleb128 0x1d
 4882 0284 01       		.byte	0x1
 4883 0285 31       		.uleb128 0x31
 4884 0286 13       		.uleb128 0x13
 4885 0287 52       		.uleb128 0x52
 4886 0288 01       		.uleb128 0x1
 4887 0289 55       		.uleb128 0x55
 4888 028a 17       		.uleb128 0x17
 4889 028b 58       		.uleb128 0x58
 4890 028c 0B       		.uleb128 0xb
 4891 028d 59       		.uleb128 0x59
 4892 028e 05       		.uleb128 0x5
 4893 028f 01       		.uleb128 0x1
 4894 0290 13       		.uleb128 0x13
 4895 0291 00       		.byte	0
 4896 0292 00       		.byte	0
 4897 0293 2D       		.uleb128 0x2d
 4898 0294 05       		.uleb128 0x5
 4899 0295 00       		.byte	0
 4900 0296 31       		.uleb128 0x31
 4901 0297 13       		.uleb128 0x13
 4902 0298 1C       		.uleb128 0x1c
 4903 0299 0B       		.uleb128 0xb
 4904 029a 00       		.byte	0
 4905 029b 00       		.byte	0
 4906 029c 2E       		.uleb128 0x2e
 4907 029d 0B       		.uleb128 0xb
 4908 029e 01       		.byte	0x1
 4909 029f 55       		.uleb128 0x55
 4910 02a0 17       		.uleb128 0x17
 4911 02a1 00       		.byte	0
 4912 02a2 00       		.byte	0
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\cc2xwxHk.s 			page 151


 4913 02a3 2F       		.uleb128 0x2f
 4914 02a4 1D       		.uleb128 0x1d
 4915 02a5 00       		.byte	0
 4916 02a6 31       		.uleb128 0x31
 4917 02a7 13       		.uleb128 0x13
 4918 02a8 11       		.uleb128 0x11
 4919 02a9 01       		.uleb128 0x1
 4920 02aa 12       		.uleb128 0x12
 4921 02ab 06       		.uleb128 0x6
 4922 02ac 58       		.uleb128 0x58
 4923 02ad 0B       		.uleb128 0xb
 4924 02ae 59       		.uleb128 0x59
 4925 02af 05       		.uleb128 0x5
 4926 02b0 00       		.byte	0
 4927 02b1 00       		.byte	0
 4928 02b2 30       		.uleb128 0x30
 4929 02b3 2E       		.uleb128 0x2e
 4930 02b4 01       		.byte	0x1
 4931 02b5 31       		.uleb128 0x31
 4932 02b6 13       		.uleb128 0x13
 4933 02b7 11       		.uleb128 0x11
 4934 02b8 01       		.uleb128 0x1
 4935 02b9 12       		.uleb128 0x12
 4936 02ba 06       		.uleb128 0x6
 4937 02bb 40       		.uleb128 0x40
 4938 02bc 18       		.uleb128 0x18
 4939 02bd 9642     		.uleb128 0x2116
 4940 02bf 19       		.uleb128 0x19
 4941 02c0 01       		.uleb128 0x1
 4942 02c1 13       		.uleb128 0x13
 4943 02c2 00       		.byte	0
 4944 02c3 00       		.byte	0
 4945 02c4 31       		.uleb128 0x31
 4946 02c5 2E       		.uleb128 0x2e
 4947 02c6 00       		.byte	0
 4948 02c7 31       		.uleb128 0x31
 4949 02c8 13       		.uleb128 0x13
 4950 02c9 11       		.uleb128 0x11
 4951 02ca 01       		.uleb128 0x1
 4952 02cb 12       		.uleb128 0x12
 4953 02cc 06       		.uleb128 0x6
 4954 02cd 40       		.uleb128 0x40
 4955 02ce 18       		.uleb128 0x18
 4956 02cf 9742     		.uleb128 0x2117
 4957 02d1 19       		.uleb128 0x19
 4958 02d2 00       		.byte	0
 4959 02d3 00       		.byte	0
 4960 02d4 32       		.uleb128 0x32
 4961 02d5 01       		.uleb128 0x1
 4962 02d6 01       		.byte	0x1
 4963 02d7 49       		.uleb128 0x49
 4964 02d8 13       		.uleb128 0x13
 4965 02d9 01       		.uleb128 0x1
 4966 02da 13       		.uleb128 0x13
 4967 02db 00       		.byte	0
 4968 02dc 00       		.byte	0
 4969 02dd 33       		.uleb128 0x33
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\cc2xwxHk.s 			page 152


 4970 02de 21       		.uleb128 0x21
 4971 02df 00       		.byte	0
 4972 02e0 49       		.uleb128 0x49
 4973 02e1 13       		.uleb128 0x13
 4974 02e2 2F       		.uleb128 0x2f
 4975 02e3 0B       		.uleb128 0xb
 4976 02e4 00       		.byte	0
 4977 02e5 00       		.byte	0
 4978 02e6 34       		.uleb128 0x34
 4979 02e7 34       		.uleb128 0x34
 4980 02e8 00       		.byte	0
 4981 02e9 03       		.uleb128 0x3
 4982 02ea 0E       		.uleb128 0xe
 4983 02eb 3A       		.uleb128 0x3a
 4984 02ec 0B       		.uleb128 0xb
 4985 02ed 3B       		.uleb128 0x3b
 4986 02ee 0B       		.uleb128 0xb
 4987 02ef 49       		.uleb128 0x49
 4988 02f0 13       		.uleb128 0x13
 4989 02f1 02       		.uleb128 0x2
 4990 02f2 18       		.uleb128 0x18
 4991 02f3 00       		.byte	0
 4992 02f4 00       		.byte	0
 4993 02f5 35       		.uleb128 0x35
 4994 02f6 34       		.uleb128 0x34
 4995 02f7 00       		.byte	0
 4996 02f8 03       		.uleb128 0x3
 4997 02f9 0E       		.uleb128 0xe
 4998 02fa 3A       		.uleb128 0x3a
 4999 02fb 0B       		.uleb128 0xb
 5000 02fc 3B       		.uleb128 0x3b
 5001 02fd 0B       		.uleb128 0xb
 5002 02fe 49       		.uleb128 0x49
 5003 02ff 13       		.uleb128 0x13
 5004 0300 3F       		.uleb128 0x3f
 5005 0301 19       		.uleb128 0x19
 5006 0302 02       		.uleb128 0x2
 5007 0303 18       		.uleb128 0x18
 5008 0304 00       		.byte	0
 5009 0305 00       		.byte	0
 5010 0306 36       		.uleb128 0x36
 5011 0307 26       		.uleb128 0x26
 5012 0308 00       		.byte	0
 5013 0309 49       		.uleb128 0x49
 5014 030a 13       		.uleb128 0x13
 5015 030b 00       		.byte	0
 5016 030c 00       		.byte	0
 5017 030d 37       		.uleb128 0x37
 5018 030e 2E       		.uleb128 0x2e
 5019 030f 00       		.byte	0
 5020 0310 3F       		.uleb128 0x3f
 5021 0311 19       		.uleb128 0x19
 5022 0312 03       		.uleb128 0x3
 5023 0313 0E       		.uleb128 0xe
 5024 0314 3A       		.uleb128 0x3a
 5025 0315 0B       		.uleb128 0xb
 5026 0316 3B       		.uleb128 0x3b
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\cc2xwxHk.s 			page 153


 5027 0317 0B       		.uleb128 0xb
 5028 0318 27       		.uleb128 0x27
 5029 0319 19       		.uleb128 0x19
 5030 031a 49       		.uleb128 0x49
 5031 031b 13       		.uleb128 0x13
 5032 031c 3C       		.uleb128 0x3c
 5033 031d 19       		.uleb128 0x19
 5034 031e 00       		.byte	0
 5035 031f 00       		.byte	0
 5036 0320 38       		.uleb128 0x38
 5037 0321 2E       		.uleb128 0x2e
 5038 0322 01       		.byte	0x1
 5039 0323 3F       		.uleb128 0x3f
 5040 0324 19       		.uleb128 0x19
 5041 0325 03       		.uleb128 0x3
 5042 0326 0E       		.uleb128 0xe
 5043 0327 3A       		.uleb128 0x3a
 5044 0328 0B       		.uleb128 0xb
 5045 0329 3B       		.uleb128 0x3b
 5046 032a 0B       		.uleb128 0xb
 5047 032b 27       		.uleb128 0x27
 5048 032c 19       		.uleb128 0x19
 5049 032d 3C       		.uleb128 0x3c
 5050 032e 19       		.uleb128 0x19
 5051 032f 01       		.uleb128 0x1
 5052 0330 13       		.uleb128 0x13
 5053 0331 00       		.byte	0
 5054 0332 00       		.byte	0
 5055 0333 39       		.uleb128 0x39
 5056 0334 05       		.uleb128 0x5
 5057 0335 00       		.byte	0
 5058 0336 49       		.uleb128 0x49
 5059 0337 13       		.uleb128 0x13
 5060 0338 00       		.byte	0
 5061 0339 00       		.byte	0
 5062 033a 00       		.byte	0
 5063              		.section	.debug_loc,"",%progbits
 5064              	.Ldebug_loc0:
 5065              	.LLST0:
 5066 0000 00000000 		.4byte	.LVL1
 5067 0004 07000000 		.4byte	.LVL2-1
 5068 0008 0100     		.2byte	0x1
 5069 000a 50       		.byte	0x50
 5070 000b 07000000 		.4byte	.LVL2-1
 5071 000f 1A000000 		.4byte	.LVL6
 5072 0013 0100     		.2byte	0x1
 5073 0015 54       		.byte	0x54
 5074 0016 1A000000 		.4byte	.LVL6
 5075 001a 20000000 		.4byte	.LFE6
 5076 001e 0400     		.2byte	0x4
 5077 0020 F3       		.byte	0xf3
 5078 0021 01       		.uleb128 0x1
 5079 0022 50       		.byte	0x50
 5080 0023 9F       		.byte	0x9f
 5081 0024 00000000 		.4byte	0
 5082 0028 00000000 		.4byte	0
 5083              	.LLST1:
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\cc2xwxHk.s 			page 154


 5084 002c 08000000 		.4byte	.LVL2
 5085 0030 19000000 		.4byte	.LVL5-1
 5086 0034 0100     		.2byte	0x1
 5087 0036 50       		.byte	0x50
 5088 0037 00000000 		.4byte	0
 5089 003b 00000000 		.4byte	0
 5090              	.LLST2:
 5091 003f 10000000 		.4byte	.LVL3
 5092 0043 14000000 		.4byte	.LVL4
 5093 0047 0100     		.2byte	0x1
 5094 0049 52       		.byte	0x52
 5095 004a 14000000 		.4byte	.LVL4
 5096 004e 19000000 		.4byte	.LVL5-1
 5097 0052 0100     		.2byte	0x1
 5098 0054 53       		.byte	0x53
 5099 0055 00000000 		.4byte	0
 5100 0059 00000000 		.4byte	0
 5101              	.LLST3:
 5102 005d 06000000 		.4byte	.LVL8
 5103 0061 0D000000 		.4byte	.LVL10-1
 5104 0065 0100     		.2byte	0x1
 5105 0067 50       		.byte	0x50
 5106 0068 00000000 		.4byte	0
 5107 006c 00000000 		.4byte	0
 5108              	.LLST4:
 5109 0070 0A000000 		.4byte	.LVL9
 5110 0074 12000000 		.4byte	.LVL11
 5111 0078 0500     		.2byte	0x5
 5112 007a 74       		.byte	0x74
 5113 007b 00       		.sleb128 0
 5114 007c 33       		.byte	0x33
 5115 007d 1A       		.byte	0x1a
 5116 007e 9F       		.byte	0x9f
 5117 007f 12000000 		.4byte	.LVL11
 5118 0083 18000000 		.4byte	.LFE8
 5119 0087 0100     		.2byte	0x1
 5120 0089 50       		.byte	0x50
 5121 008a 00000000 		.4byte	0
 5122 008e 00000000 		.4byte	0
 5123              	.LLST5:
 5124 0092 00000000 		.4byte	.LVL12
 5125 0096 07000000 		.4byte	.LVL13-1
 5126 009a 0100     		.2byte	0x1
 5127 009c 50       		.byte	0x50
 5128 009d 07000000 		.4byte	.LVL13-1
 5129 00a1 1E000000 		.4byte	.LVL15
 5130 00a5 0100     		.2byte	0x1
 5131 00a7 54       		.byte	0x54
 5132 00a8 1E000000 		.4byte	.LVL15
 5133 00ac 24000000 		.4byte	.LFE9
 5134 00b0 0400     		.2byte	0x4
 5135 00b2 F3       		.byte	0xf3
 5136 00b3 01       		.uleb128 0x1
 5137 00b4 50       		.byte	0x50
 5138 00b5 9F       		.byte	0x9f
 5139 00b6 00000000 		.4byte	0
 5140 00ba 00000000 		.4byte	0
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\cc2xwxHk.s 			page 155


 5141              	.LLST6:
 5142 00be 08000000 		.4byte	.LVL13
 5143 00c2 1D000000 		.4byte	.LVL14-1
 5144 00c6 0100     		.2byte	0x1
 5145 00c8 50       		.byte	0x50
 5146 00c9 00000000 		.4byte	0
 5147 00cd 00000000 		.4byte	0
 5148              	.LLST7:
 5149 00d1 00000000 		.4byte	.LVL16
 5150 00d5 07000000 		.4byte	.LVL17-1
 5151 00d9 0100     		.2byte	0x1
 5152 00db 50       		.byte	0x50
 5153 00dc 07000000 		.4byte	.LVL17-1
 5154 00e0 0E000000 		.4byte	.LVL18
 5155 00e4 0100     		.2byte	0x1
 5156 00e6 54       		.byte	0x54
 5157 00e7 0E000000 		.4byte	.LVL18
 5158 00eb 24000000 		.4byte	.LFE11
 5159 00ef 0400     		.2byte	0x4
 5160 00f1 F3       		.byte	0xf3
 5161 00f2 01       		.uleb128 0x1
 5162 00f3 50       		.byte	0x50
 5163 00f4 9F       		.byte	0x9f
 5164 00f5 00000000 		.4byte	0
 5165 00f9 00000000 		.4byte	0
 5166              	.LLST8:
 5167 00fd 08000000 		.4byte	.LVL17
 5168 0101 1D000000 		.4byte	.LVL19-1
 5169 0105 0100     		.2byte	0x1
 5170 0107 50       		.byte	0x50
 5171 0108 00000000 		.4byte	0
 5172 010c 00000000 		.4byte	0
 5173              	.LLST9:
 5174 0110 00000000 		.4byte	.LVL20
 5175 0114 08000000 		.4byte	.LVL21
 5176 0118 0100     		.2byte	0x1
 5177 011a 50       		.byte	0x50
 5178 011b 08000000 		.4byte	.LVL21
 5179 011f 14000000 		.4byte	.LFE12
 5180 0123 0100     		.2byte	0x1
 5181 0125 52       		.byte	0x52
 5182 0126 00000000 		.4byte	0
 5183 012a 00000000 		.4byte	0
 5184              	.LLST10:
 5185 012e 0A000000 		.4byte	.LVL22
 5186 0132 0C000000 		.4byte	.LVL23
 5187 0136 0500     		.2byte	0x5
 5188 0138 70       		.byte	0x70
 5189 0139 00       		.sleb128 0
 5190 013a 49       		.byte	0x49
 5191 013b 1A       		.byte	0x1a
 5192 013c 9F       		.byte	0x9f
 5193 013d 0C000000 		.4byte	.LVL23
 5194 0141 14000000 		.4byte	.LFE12
 5195 0145 0100     		.2byte	0x1
 5196 0147 50       		.byte	0x50
 5197 0148 00000000 		.4byte	0
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\cc2xwxHk.s 			page 156


 5198 014c 00000000 		.4byte	0
 5199              	.LLST11:
 5200 0150 00000000 		.4byte	.LVL26
 5201 0154 04000000 		.4byte	.LVL27
 5202 0158 0100     		.2byte	0x1
 5203 015a 50       		.byte	0x50
 5204 015b 04000000 		.4byte	.LVL27
 5205 015f 0E000000 		.4byte	.LFE15
 5206 0163 0400     		.2byte	0x4
 5207 0165 F3       		.byte	0xf3
 5208 0166 01       		.uleb128 0x1
 5209 0167 50       		.byte	0x50
 5210 0168 9F       		.byte	0x9f
 5211 0169 00000000 		.4byte	0
 5212 016d 00000000 		.4byte	0
 5213              	.LLST12:
 5214 0171 00000000 		.4byte	.LVL29
 5215 0175 04000000 		.4byte	.LVL30
 5216 0179 0100     		.2byte	0x1
 5217 017b 50       		.byte	0x50
 5218 017c 04000000 		.4byte	.LVL30
 5219 0180 0C000000 		.4byte	.LFE16
 5220 0184 0400     		.2byte	0x4
 5221 0186 F3       		.byte	0xf3
 5222 0187 01       		.uleb128 0x1
 5223 0188 50       		.byte	0x50
 5224 0189 9F       		.byte	0x9f
 5225 018a 00000000 		.4byte	0
 5226 018e 00000000 		.4byte	0
 5227              	.LLST13:
 5228 0192 00000000 		.4byte	.LVL31
 5229 0196 04000000 		.4byte	.LVL32
 5230 019a 0100     		.2byte	0x1
 5231 019c 50       		.byte	0x50
 5232 019d 04000000 		.4byte	.LVL32
 5233 01a1 10000000 		.4byte	.LFE17
 5234 01a5 0400     		.2byte	0x4
 5235 01a7 F3       		.byte	0xf3
 5236 01a8 01       		.uleb128 0x1
 5237 01a9 50       		.byte	0x50
 5238 01aa 9F       		.byte	0x9f
 5239 01ab 00000000 		.4byte	0
 5240 01af 00000000 		.4byte	0
 5241              	.LLST14:
 5242 01b3 00000000 		.4byte	.LVL34
 5243 01b7 04000000 		.4byte	.LVL35
 5244 01bb 0100     		.2byte	0x1
 5245 01bd 50       		.byte	0x50
 5246 01be 04000000 		.4byte	.LVL35
 5247 01c2 10000000 		.4byte	.LFE18
 5248 01c6 0400     		.2byte	0x4
 5249 01c8 F3       		.byte	0xf3
 5250 01c9 01       		.uleb128 0x1
 5251 01ca 50       		.byte	0x50
 5252 01cb 9F       		.byte	0x9f
 5253 01cc 00000000 		.4byte	0
 5254 01d0 00000000 		.4byte	0
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\cc2xwxHk.s 			page 157


 5255              	.LLST15:
 5256 01d4 00000000 		.4byte	.LVL36
 5257 01d8 09000000 		.4byte	.LVL38-1
 5258 01dc 0100     		.2byte	0x1
 5259 01de 50       		.byte	0x50
 5260 01df 09000000 		.4byte	.LVL38-1
 5261 01e3 30000000 		.4byte	.LFE19
 5262 01e7 0400     		.2byte	0x4
 5263 01e9 F3       		.byte	0xf3
 5264 01ea 01       		.uleb128 0x1
 5265 01eb 50       		.byte	0x50
 5266 01ec 9F       		.byte	0x9f
 5267 01ed 00000000 		.4byte	0
 5268 01f1 00000000 		.4byte	0
 5269              	.LLST16:
 5270 01f5 00000000 		.4byte	.LVL36
 5271 01f9 09000000 		.4byte	.LVL38-1
 5272 01fd 0100     		.2byte	0x1
 5273 01ff 51       		.byte	0x51
 5274 0200 09000000 		.4byte	.LVL38-1
 5275 0204 30000000 		.4byte	.LFE19
 5276 0208 0400     		.2byte	0x4
 5277 020a F3       		.byte	0xf3
 5278 020b 01       		.uleb128 0x1
 5279 020c 51       		.byte	0x51
 5280 020d 9F       		.byte	0x9f
 5281 020e 00000000 		.4byte	0
 5282 0212 00000000 		.4byte	0
 5283              	.LLST17:
 5284 0216 0A000000 		.4byte	.LVL38
 5285 021a 29000000 		.4byte	.LVL43-1
 5286 021e 0100     		.2byte	0x1
 5287 0220 50       		.byte	0x50
 5288 0221 00000000 		.4byte	0
 5289 0225 00000000 		.4byte	0
 5290              	.LLST18:
 5291 0229 04000000 		.4byte	.LVL37
 5292 022d 16000000 		.4byte	.LVL39
 5293 0231 0C00     		.2byte	0xc
 5294 0233 74       		.byte	0x74
 5295 0234 00       		.sleb128 0
 5296 0235 33       		.byte	0x33
 5297 0236 1A       		.byte	0x1a
 5298 0237 08       		.byte	0x8
 5299 0238 FF       		.byte	0xff
 5300 0239 1A       		.byte	0x1a
 5301 023a 33       		.byte	0x33
 5302 023b 24       		.byte	0x24
 5303 023c 23       		.byte	0x23
 5304 023d 06       		.uleb128 0x6
 5305 023e 9F       		.byte	0x9f
 5306 023f 00000000 		.4byte	0
 5307 0243 00000000 		.4byte	0
 5308              	.LLST19:
 5309 0247 20000000 		.4byte	.LVL40
 5310 024b 29000000 		.4byte	.LVL43-1
 5311 024f 0100     		.2byte	0x1
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\cc2xwxHk.s 			page 158


 5312 0251 51       		.byte	0x51
 5313 0252 00000000 		.4byte	0
 5314 0256 00000000 		.4byte	0
 5315              	.LLST20:
 5316 025a 00000000 		.4byte	.LVL44
 5317 025e 18000000 		.4byte	.LVL47
 5318 0262 0100     		.2byte	0x1
 5319 0264 50       		.byte	0x50
 5320 0265 18000000 		.4byte	.LVL47
 5321 0269 20000000 		.4byte	.LFE20
 5322 026d 0400     		.2byte	0x4
 5323 026f F3       		.byte	0xf3
 5324 0270 01       		.uleb128 0x1
 5325 0271 50       		.byte	0x50
 5326 0272 9F       		.byte	0x9f
 5327 0273 00000000 		.4byte	0
 5328 0277 00000000 		.4byte	0
 5329              	.LLST21:
 5330 027b 0A000000 		.4byte	.LVL45
 5331 027f 16000000 		.4byte	.LVL46
 5332 0283 0F00     		.2byte	0xf
 5333 0285 71       		.byte	0x71
 5334 0286 00       		.sleb128 0
 5335 0287 70       		.byte	0x70
 5336 0288 00       		.sleb128 0
 5337 0289 33       		.byte	0x33
 5338 028a 1A       		.byte	0x1a
 5339 028b 08       		.byte	0x8
 5340 028c FF       		.byte	0xff
 5341 028d 1A       		.byte	0x1a
 5342 028e 33       		.byte	0x33
 5343 028f 24       		.byte	0x24
 5344 0290 23       		.byte	0x23
 5345 0291 06       		.uleb128 0x6
 5346 0292 25       		.byte	0x25
 5347 0293 9F       		.byte	0x9f
 5348 0294 00000000 		.4byte	0
 5349 0298 00000000 		.4byte	0
 5350              	.LLST22:
 5351 029c 00000000 		.4byte	.LVL48
 5352 02a0 04000000 		.4byte	.LVL49
 5353 02a4 0100     		.2byte	0x1
 5354 02a6 50       		.byte	0x50
 5355 02a7 04000000 		.4byte	.LVL49
 5356 02ab 14000000 		.4byte	.LFE21
 5357 02af 0400     		.2byte	0x4
 5358 02b1 F3       		.byte	0xf3
 5359 02b2 01       		.uleb128 0x1
 5360 02b3 50       		.byte	0x50
 5361 02b4 9F       		.byte	0x9f
 5362 02b5 00000000 		.4byte	0
 5363 02b9 00000000 		.4byte	0
 5364              	.LLST23:
 5365 02bd 00000000 		.4byte	.LVL50
 5366 02c1 06000000 		.4byte	.LVL51
 5367 02c5 0100     		.2byte	0x1
 5368 02c7 50       		.byte	0x50
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\cc2xwxHk.s 			page 159


 5369 02c8 06000000 		.4byte	.LVL51
 5370 02cc 18000000 		.4byte	.LFE22
 5371 02d0 0400     		.2byte	0x4
 5372 02d2 F3       		.byte	0xf3
 5373 02d3 01       		.uleb128 0x1
 5374 02d4 50       		.byte	0x50
 5375 02d5 9F       		.byte	0x9f
 5376 02d6 00000000 		.4byte	0
 5377 02da 00000000 		.4byte	0
 5378              	.LLST24:
 5379 02de 00000000 		.4byte	.LVL52
 5380 02e2 04000000 		.4byte	.LVL53
 5381 02e6 0100     		.2byte	0x1
 5382 02e8 50       		.byte	0x50
 5383 02e9 04000000 		.4byte	.LVL53
 5384 02ed 14000000 		.4byte	.LFE23
 5385 02f1 0400     		.2byte	0x4
 5386 02f3 F3       		.byte	0xf3
 5387 02f4 01       		.uleb128 0x1
 5388 02f5 50       		.byte	0x50
 5389 02f6 9F       		.byte	0x9f
 5390 02f7 00000000 		.4byte	0
 5391 02fb 00000000 		.4byte	0
 5392              	.LLST25:
 5393 02ff 00000000 		.4byte	.LVL54
 5394 0303 04000000 		.4byte	.LVL55
 5395 0307 0100     		.2byte	0x1
 5396 0309 50       		.byte	0x50
 5397 030a 04000000 		.4byte	.LVL55
 5398 030e 14000000 		.4byte	.LFE24
 5399 0312 0400     		.2byte	0x4
 5400 0314 F3       		.byte	0xf3
 5401 0315 01       		.uleb128 0x1
 5402 0316 50       		.byte	0x50
 5403 0317 9F       		.byte	0x9f
 5404 0318 00000000 		.4byte	0
 5405 031c 00000000 		.4byte	0
 5406              	.LLST26:
 5407 0320 00000000 		.4byte	.LVL56
 5408 0324 04000000 		.4byte	.LVL57
 5409 0328 0100     		.2byte	0x1
 5410 032a 50       		.byte	0x50
 5411 032b 04000000 		.4byte	.LVL57
 5412 032f 14000000 		.4byte	.LFE25
 5413 0333 0400     		.2byte	0x4
 5414 0335 F3       		.byte	0xf3
 5415 0336 01       		.uleb128 0x1
 5416 0337 50       		.byte	0x50
 5417 0338 9F       		.byte	0x9f
 5418 0339 00000000 		.4byte	0
 5419 033d 00000000 		.4byte	0
 5420              	.LLST27:
 5421 0341 00000000 		.4byte	.LVL59
 5422 0345 04000000 		.4byte	.LVL60
 5423 0349 0100     		.2byte	0x1
 5424 034b 50       		.byte	0x50
 5425 034c 04000000 		.4byte	.LVL60
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\cc2xwxHk.s 			page 160


 5426 0350 22000000 		.4byte	.LVL64
 5427 0354 0100     		.2byte	0x1
 5428 0356 54       		.byte	0x54
 5429 0357 00000000 		.4byte	0
 5430 035b 00000000 		.4byte	0
 5431              	.LLST28:
 5432 035f 2C000000 		.4byte	.LVL69
 5433 0363 30000000 		.4byte	.LVL70
 5434 0367 0100     		.2byte	0x1
 5435 0369 52       		.byte	0x52
 5436 036a 30000000 		.4byte	.LVL70
 5437 036e 4E000000 		.4byte	.LVL74
 5438 0372 0100     		.2byte	0x1
 5439 0374 53       		.byte	0x53
 5440 0375 50000000 		.4byte	.LVL75
 5441 0379 58000000 		.4byte	.LVL76
 5442 037d 0100     		.2byte	0x1
 5443 037f 53       		.byte	0x53
 5444 0380 58000000 		.4byte	.LVL76
 5445 0384 60000000 		.4byte	.LVL77
 5446 0388 0700     		.2byte	0x7
 5447 038a 72       		.byte	0x72
 5448 038b B39C8080 		.sleb128 -268431821
 5448      7F
 5449 0390 9F       		.byte	0x9f
 5450 0391 00000000 		.4byte	0
 5451 0395 00000000 		.4byte	0
 5452              	.LLST29:
 5453 0399 14000000 		.4byte	.LVL68
 5454 039d 9A000000 		.4byte	.LVL86
 5455 03a1 0100     		.2byte	0x1
 5456 03a3 54       		.byte	0x54
 5457 03a4 00000000 		.4byte	0
 5458 03a8 00000000 		.4byte	0
 5459              	.LLST30:
 5460 03ac 36000000 		.4byte	.LVL71
 5461 03b0 38000000 		.4byte	.LVL72
 5462 03b4 0100     		.2byte	0x1
 5463 03b6 51       		.byte	0x51
 5464 03b7 38000000 		.4byte	.LVL72
 5465 03bb 46000000 		.4byte	.LVL73
 5466 03bf 0100     		.2byte	0x1
 5467 03c1 55       		.byte	0x55
 5468 03c2 46000000 		.4byte	.LVL73
 5469 03c6 64000000 		.4byte	.LVL78
 5470 03ca 0700     		.2byte	0x7
 5471 03cc 71       		.byte	0x71
 5472 03cd 00       		.sleb128 0
 5473 03ce 44       		.byte	0x44
 5474 03cf 40       		.byte	0x40
 5475 03d0 24       		.byte	0x24
 5476 03d1 21       		.byte	0x21
 5477 03d2 9F       		.byte	0x9f
 5478 03d3 70000000 		.4byte	.LVL80
 5479 03d7 76000000 		.4byte	.LVL81
 5480 03db 0100     		.2byte	0x1
 5481 03dd 53       		.byte	0x53
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\cc2xwxHk.s 			page 161


 5482 03de 76000000 		.4byte	.LVL81
 5483 03e2 78000000 		.4byte	.LVL82
 5484 03e6 0200     		.2byte	0x2
 5485 03e8 70       		.byte	0x70
 5486 03e9 00       		.sleb128 0
 5487 03ea 78000000 		.4byte	.LVL82
 5488 03ee 7A000000 		.4byte	.LVL83
 5489 03f2 0500     		.2byte	0x5
 5490 03f4 0C       		.byte	0xc
 5491 03f5 08000640 		.4byte	0x40060008
 5492 03f9 00000000 		.4byte	0
 5493 03fd 00000000 		.4byte	0
 5494              	.LLST31:
 5495 0401 60000000 		.4byte	.LVL77
 5496 0405 6E000000 		.4byte	.LVL79
 5497 0409 1900     		.2byte	0x19
 5498 040b 75       		.byte	0x75
 5499 040c 00       		.sleb128 0
 5500 040d 72       		.byte	0x72
 5501 040e 00       		.sleb128 0
 5502 040f 22       		.byte	0x22
 5503 0410 12       		.byte	0x12
 5504 0411 40       		.byte	0x40
 5505 0412 4B       		.byte	0x4b
 5506 0413 24       		.byte	0x24
 5507 0414 22       		.byte	0x22
 5508 0415 08       		.byte	0x8
 5509 0416 FF       		.byte	0xff
 5510 0417 16       		.byte	0x16
 5511 0418 14       		.byte	0x14
 5512 0419 40       		.byte	0x40
 5513 041a 4B       		.byte	0x4b
 5514 041b 24       		.byte	0x24
 5515 041c 22       		.byte	0x22
 5516 041d 2D       		.byte	0x2d
 5517 041e 28       		.byte	0x28
 5518 041f 0100     		.2byte	0x1
 5519 0421 16       		.byte	0x16
 5520 0422 13       		.byte	0x13
 5521 0423 9F       		.byte	0x9f
 5522 0424 00000000 		.4byte	0
 5523 0428 00000000 		.4byte	0
 5524              	.LLST32:
 5525 042c 00000000 		.4byte	.LVL87
 5526 0430 1F000000 		.4byte	.LVL88-1
 5527 0434 0100     		.2byte	0x1
 5528 0436 50       		.byte	0x50
 5529 0437 1F000000 		.4byte	.LVL88-1
 5530 043b 86000000 		.4byte	.LVL99
 5531 043f 0100     		.2byte	0x1
 5532 0441 54       		.byte	0x54
 5533 0442 86000000 		.4byte	.LVL99
 5534 0446 8A000000 		.4byte	.LVL100
 5535 044a 0300     		.2byte	0x3
 5536 044c 74       		.byte	0x74
 5537 044d 18       		.sleb128 24
 5538 044e 9F       		.byte	0x9f
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\cc2xwxHk.s 			page 162


 5539 044f 8A000000 		.4byte	.LVL100
 5540 0453 BC000000 		.4byte	.LFE10
 5541 0457 0400     		.2byte	0x4
 5542 0459 F3       		.byte	0xf3
 5543 045a 01       		.uleb128 0x1
 5544 045b 50       		.byte	0x50
 5545 045c 9F       		.byte	0x9f
 5546 045d 00000000 		.4byte	0
 5547 0461 00000000 		.4byte	0
 5548              	.LLST33:
 5549 0465 24000000 		.4byte	.LVL89
 5550 0469 A0000000 		.4byte	.LVL102
 5551 046d 0200     		.2byte	0x2
 5552 046f 91       		.byte	0x91
 5553 0470 64       		.sleb128 -28
 5554 0471 00000000 		.4byte	0
 5555 0475 00000000 		.4byte	0
 5556              	.LLST34:
 5557 0479 4A000000 		.4byte	.LVL94
 5558 047d 50000000 		.4byte	.LVL95
 5559 0481 0100     		.2byte	0x1
 5560 0483 53       		.byte	0x53
 5561 0484 50000000 		.4byte	.LVL95
 5562 0488 54000000 		.4byte	.LVL96
 5563 048c 0700     		.2byte	0x7
 5564 048e 0C       		.byte	0xc
 5565 048f 0C0F0340 		.4byte	0x40030f0c
 5566 0493 06       		.byte	0x6
 5567 0494 9F       		.byte	0x9f
 5568 0495 00000000 		.4byte	0
 5569 0499 00000000 		.4byte	0
 5570              	.LLST35:
 5571 049d 00000000 		.4byte	.LVL87
 5572 04a1 2C000000 		.4byte	.LVL91
 5573 04a5 0200     		.2byte	0x2
 5574 04a7 30       		.byte	0x30
 5575 04a8 9F       		.byte	0x9f
 5576 04a9 2C000000 		.4byte	.LVL91
 5577 04ad 32000000 		.4byte	.LVL93
 5578 04b1 0200     		.2byte	0x2
 5579 04b3 31       		.byte	0x31
 5580 04b4 9F       		.byte	0x9f
 5581 04b5 32000000 		.4byte	.LVL93
 5582 04b9 A0000000 		.4byte	.LVL102
 5583 04bd 0100     		.2byte	0x1
 5584 04bf 57       		.byte	0x57
 5585 04c0 00000000 		.4byte	0
 5586 04c4 00000000 		.4byte	0
 5587              	.LLST36:
 5588 04c8 00000000 		.4byte	.LVL103
 5589 04cc 08000000 		.4byte	.LVL104
 5590 04d0 0100     		.2byte	0x1
 5591 04d2 50       		.byte	0x50
 5592 04d3 08000000 		.4byte	.LVL104
 5593 04d7 14000000 		.4byte	.LFE29
 5594 04db 0400     		.2byte	0x4
 5595 04dd F3       		.byte	0xf3
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\cc2xwxHk.s 			page 163


 5596 04de 01       		.uleb128 0x1
 5597 04df 50       		.byte	0x50
 5598 04e0 9F       		.byte	0x9f
 5599 04e1 00000000 		.4byte	0
 5600 04e5 00000000 		.4byte	0
 5601              	.LLST37:
 5602 04e9 00000000 		.4byte	.LVL106
 5603 04ed 18000000 		.4byte	.LVL107
 5604 04f1 0100     		.2byte	0x1
 5605 04f3 50       		.byte	0x50
 5606 04f4 18000000 		.4byte	.LVL107
 5607 04f8 48000000 		.4byte	.LFE30
 5608 04fc 0400     		.2byte	0x4
 5609 04fe F3       		.byte	0xf3
 5610 04ff 01       		.uleb128 0x1
 5611 0500 50       		.byte	0x50
 5612 0501 9F       		.byte	0x9f
 5613 0502 00000000 		.4byte	0
 5614 0506 00000000 		.4byte	0
 5615              	.LLST38:
 5616 050a 00000000 		.4byte	.LVL110
 5617 050e 0C000000 		.4byte	.LVL111
 5618 0512 0200     		.2byte	0x2
 5619 0514 30       		.byte	0x30
 5620 0515 9F       		.byte	0x9f
 5621 0516 0C000000 		.4byte	.LVL111
 5622 051a 10000000 		.4byte	.LVL112
 5623 051e 0200     		.2byte	0x2
 5624 0520 31       		.byte	0x31
 5625 0521 9F       		.byte	0x9f
 5626 0522 10000000 		.4byte	.LVL112
 5627 0526 12000000 		.4byte	.LVL113
 5628 052a 0200     		.2byte	0x2
 5629 052c 32       		.byte	0x32
 5630 052d 9F       		.byte	0x9f
 5631 052e 12000000 		.4byte	.LVL113
 5632 0532 14000000 		.4byte	.LVL114
 5633 0536 0200     		.2byte	0x2
 5634 0538 33       		.byte	0x33
 5635 0539 9F       		.byte	0x9f
 5636 053a 14000000 		.4byte	.LVL114
 5637 053e 60000000 		.4byte	.LFE32
 5638 0542 0200     		.2byte	0x2
 5639 0544 35       		.byte	0x35
 5640 0545 9F       		.byte	0x9f
 5641 0546 00000000 		.4byte	0
 5642 054a 00000000 		.4byte	0
 5643              	.LLST39:
 5644 054e 14000000 		.4byte	.LVL114
 5645 0552 16000000 		.4byte	.LVL115
 5646 0556 0500     		.2byte	0x5
 5647 0558 0C       		.byte	0xc
 5648 0559 3C000020 		.4byte	0x2000003c
 5649 055d 16000000 		.4byte	.LVL115
 5650 0561 18000000 		.4byte	.LVL116
 5651 0565 0200     		.2byte	0x2
 5652 0567 73       		.byte	0x73
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\cc2xwxHk.s 			page 164


 5653 0568 00       		.sleb128 0
 5654 0569 00000000 		.4byte	0
 5655 056d 00000000 		.4byte	0
 5656              	.LLST40:
 5657 0571 00000000 		.4byte	.LVL122
 5658 0575 04000000 		.4byte	.LVL123
 5659 0579 0100     		.2byte	0x1
 5660 057b 50       		.byte	0x50
 5661 057c 04000000 		.4byte	.LVL123
 5662 0580 10000000 		.4byte	.LFE37
 5663 0584 0400     		.2byte	0x4
 5664 0586 F3       		.byte	0xf3
 5665 0587 01       		.uleb128 0x1
 5666 0588 50       		.byte	0x50
 5667 0589 9F       		.byte	0x9f
 5668 058a 00000000 		.4byte	0
 5669 058e 00000000 		.4byte	0
 5670              	.LLST41:
 5671 0592 0A000000 		.4byte	.LVL125
 5672 0596 0E000000 		.4byte	.LVL126
 5673 059a 0200     		.2byte	0x2
 5674 059c 31       		.byte	0x31
 5675 059d 9F       		.byte	0x9f
 5676 059e 00000000 		.4byte	0
 5677 05a2 00000000 		.4byte	0
 5678              	.LLST42:
 5679 05a6 00000000 		.4byte	.LVL129
 5680 05aa 06000000 		.4byte	.LVL130
 5681 05ae 0100     		.2byte	0x1
 5682 05b0 50       		.byte	0x50
 5683 05b1 06000000 		.4byte	.LVL130
 5684 05b5 10000000 		.4byte	.LFE44
 5685 05b9 0400     		.2byte	0x4
 5686 05bb F3       		.byte	0xf3
 5687 05bc 01       		.uleb128 0x1
 5688 05bd 50       		.byte	0x50
 5689 05be 9F       		.byte	0x9f
 5690 05bf 00000000 		.4byte	0
 5691 05c3 00000000 		.4byte	0
 5692              	.LLST43:
 5693 05c7 00000000 		.4byte	.LVL131
 5694 05cb 04000000 		.4byte	.LVL132
 5695 05cf 0100     		.2byte	0x1
 5696 05d1 50       		.byte	0x50
 5697 05d2 04000000 		.4byte	.LVL132
 5698 05d6 0C000000 		.4byte	.LFE45
 5699 05da 0400     		.2byte	0x4
 5700 05dc F3       		.byte	0xf3
 5701 05dd 01       		.uleb128 0x1
 5702 05de 50       		.byte	0x50
 5703 05df 9F       		.byte	0x9f
 5704 05e0 00000000 		.4byte	0
 5705 05e4 00000000 		.4byte	0
 5706              	.LLST44:
 5707 05e8 00000000 		.4byte	.LVL134
 5708 05ec 08000000 		.4byte	.LVL135
 5709 05f0 0100     		.2byte	0x1
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\cc2xwxHk.s 			page 165


 5710 05f2 50       		.byte	0x50
 5711 05f3 08000000 		.4byte	.LVL135
 5712 05f7 20000000 		.4byte	.LFE48
 5713 05fb 0400     		.2byte	0x4
 5714 05fd F3       		.byte	0xf3
 5715 05fe 01       		.uleb128 0x1
 5716 05ff 50       		.byte	0x50
 5717 0600 9F       		.byte	0x9f
 5718 0601 00000000 		.4byte	0
 5719 0605 00000000 		.4byte	0
 5720              	.LLST45:
 5721 0609 0A000000 		.4byte	.LVL136
 5722 060d 12000000 		.4byte	.LVL137
 5723 0611 0100     		.2byte	0x1
 5724 0613 53       		.byte	0x53
 5725 0614 12000000 		.4byte	.LVL137
 5726 0618 20000000 		.4byte	.LFE48
 5727 061c 0100     		.2byte	0x1
 5728 061e 50       		.byte	0x50
 5729 061f 00000000 		.4byte	0
 5730 0623 00000000 		.4byte	0
 5731              	.LLST46:
 5732 0627 00000000 		.4byte	.LVL138
 5733 062b 08000000 		.4byte	.LVL139
 5734 062f 0100     		.2byte	0x1
 5735 0631 50       		.byte	0x50
 5736 0632 08000000 		.4byte	.LVL139
 5737 0636 20000000 		.4byte	.LFE49
 5738 063a 0400     		.2byte	0x4
 5739 063c F3       		.byte	0xf3
 5740 063d 01       		.uleb128 0x1
 5741 063e 50       		.byte	0x50
 5742 063f 9F       		.byte	0x9f
 5743 0640 00000000 		.4byte	0
 5744 0644 00000000 		.4byte	0
 5745              	.LLST47:
 5746 0648 0A000000 		.4byte	.LVL140
 5747 064c 12000000 		.4byte	.LVL141
 5748 0650 0100     		.2byte	0x1
 5749 0652 53       		.byte	0x53
 5750 0653 12000000 		.4byte	.LVL141
 5751 0657 20000000 		.4byte	.LFE49
 5752 065b 0100     		.2byte	0x1
 5753 065d 50       		.byte	0x50
 5754 065e 00000000 		.4byte	0
 5755 0662 00000000 		.4byte	0
 5756              	.LLST48:
 5757 0666 00000000 		.4byte	.LVL142
 5758 066a 08000000 		.4byte	.LVL143
 5759 066e 0100     		.2byte	0x1
 5760 0670 50       		.byte	0x50
 5761 0671 08000000 		.4byte	.LVL143
 5762 0675 20000000 		.4byte	.LFE50
 5763 0679 0400     		.2byte	0x4
 5764 067b F3       		.byte	0xf3
 5765 067c 01       		.uleb128 0x1
 5766 067d 50       		.byte	0x50
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\cc2xwxHk.s 			page 166


 5767 067e 9F       		.byte	0x9f
 5768 067f 00000000 		.4byte	0
 5769 0683 00000000 		.4byte	0
 5770              	.LLST49:
 5771 0687 0A000000 		.4byte	.LVL144
 5772 068b 12000000 		.4byte	.LVL145
 5773 068f 0100     		.2byte	0x1
 5774 0691 53       		.byte	0x53
 5775 0692 12000000 		.4byte	.LVL145
 5776 0696 20000000 		.4byte	.LFE50
 5777 069a 0100     		.2byte	0x1
 5778 069c 50       		.byte	0x50
 5779 069d 00000000 		.4byte	0
 5780 06a1 00000000 		.4byte	0
 5781              	.LLST50:
 5782 06a5 00000000 		.4byte	.LVL146
 5783 06a9 06000000 		.4byte	.LVL147
 5784 06ad 0100     		.2byte	0x1
 5785 06af 50       		.byte	0x50
 5786 06b0 06000000 		.4byte	.LVL147
 5787 06b4 08000000 		.4byte	.LVL148
 5788 06b8 0400     		.2byte	0x4
 5789 06ba F3       		.byte	0xf3
 5790 06bb 01       		.uleb128 0x1
 5791 06bc 50       		.byte	0x50
 5792 06bd 9F       		.byte	0x9f
 5793 06be 08000000 		.4byte	.LVL148
 5794 06c2 0E000000 		.4byte	.LVL149
 5795 06c6 0100     		.2byte	0x1
 5796 06c8 50       		.byte	0x50
 5797 06c9 0E000000 		.4byte	.LVL149
 5798 06cd 30000000 		.4byte	.LFE51
 5799 06d1 0400     		.2byte	0x4
 5800 06d3 F3       		.byte	0xf3
 5801 06d4 01       		.uleb128 0x1
 5802 06d5 50       		.byte	0x50
 5803 06d6 9F       		.byte	0x9f
 5804 06d7 00000000 		.4byte	0
 5805 06db 00000000 		.4byte	0
 5806              	.LLST51:
 5807 06df 00000000 		.4byte	.LVL146
 5808 06e3 14000000 		.4byte	.LVL150
 5809 06e7 0100     		.2byte	0x1
 5810 06e9 51       		.byte	0x51
 5811 06ea 14000000 		.4byte	.LVL150
 5812 06ee 30000000 		.4byte	.LFE51
 5813 06f2 0400     		.2byte	0x4
 5814 06f4 F3       		.byte	0xf3
 5815 06f5 01       		.uleb128 0x1
 5816 06f6 51       		.byte	0x51
 5817 06f7 9F       		.byte	0x9f
 5818 06f8 00000000 		.4byte	0
 5819 06fc 00000000 		.4byte	0
 5820              	.LLST52:
 5821 0700 16000000 		.4byte	.LVL151
 5822 0704 1E000000 		.4byte	.LVL152
 5823 0708 0100     		.2byte	0x1
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\cc2xwxHk.s 			page 167


 5824 070a 53       		.byte	0x53
 5825 070b 1E000000 		.4byte	.LVL152
 5826 070f 20000000 		.4byte	.LVL153
 5827 0713 0100     		.2byte	0x1
 5828 0715 51       		.byte	0x51
 5829 0716 00000000 		.4byte	0
 5830 071a 00000000 		.4byte	0
 5831              	.LLST53:
 5832 071e 00000000 		.4byte	.LVL154
 5833 0722 06000000 		.4byte	.LVL155
 5834 0726 0100     		.2byte	0x1
 5835 0728 50       		.byte	0x50
 5836 0729 06000000 		.4byte	.LVL155
 5837 072d 18000000 		.4byte	.LFE52
 5838 0731 0400     		.2byte	0x4
 5839 0733 F3       		.byte	0xf3
 5840 0734 01       		.uleb128 0x1
 5841 0735 50       		.byte	0x50
 5842 0736 9F       		.byte	0x9f
 5843 0737 00000000 		.4byte	0
 5844 073b 00000000 		.4byte	0
 5845              	.LLST54:
 5846 073f 00000000 		.4byte	.LVL156
 5847 0743 06000000 		.4byte	.LVL157
 5848 0747 0100     		.2byte	0x1
 5849 0749 50       		.byte	0x50
 5850 074a 06000000 		.4byte	.LVL157
 5851 074e 14000000 		.4byte	.LFE53
 5852 0752 0400     		.2byte	0x4
 5853 0754 F3       		.byte	0xf3
 5854 0755 01       		.uleb128 0x1
 5855 0756 50       		.byte	0x50
 5856 0757 9F       		.byte	0x9f
 5857 0758 00000000 		.4byte	0
 5858 075c 00000000 		.4byte	0
 5859              	.LLST55:
 5860 0760 00000000 		.4byte	.LVL158
 5861 0764 06000000 		.4byte	.LVL159
 5862 0768 0100     		.2byte	0x1
 5863 076a 50       		.byte	0x50
 5864 076b 06000000 		.4byte	.LVL159
 5865 076f 18000000 		.4byte	.LFE54
 5866 0773 0400     		.2byte	0x4
 5867 0775 F3       		.byte	0xf3
 5868 0776 01       		.uleb128 0x1
 5869 0777 50       		.byte	0x50
 5870 0778 9F       		.byte	0x9f
 5871 0779 00000000 		.4byte	0
 5872 077d 00000000 		.4byte	0
 5873              	.LLST56:
 5874 0781 00000000 		.4byte	.LVL160
 5875 0785 0E000000 		.4byte	.LVL161
 5876 0789 0100     		.2byte	0x1
 5877 078b 50       		.byte	0x50
 5878 078c 0E000000 		.4byte	.LVL161
 5879 0790 10000000 		.4byte	.LVL162
 5880 0794 0400     		.2byte	0x4
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\cc2xwxHk.s 			page 168


 5881 0796 F3       		.byte	0xf3
 5882 0797 01       		.uleb128 0x1
 5883 0798 50       		.byte	0x50
 5884 0799 9F       		.byte	0x9f
 5885 079a 10000000 		.4byte	.LVL162
 5886 079e 14000000 		.4byte	.LVL163
 5887 07a2 0100     		.2byte	0x1
 5888 07a4 50       		.byte	0x50
 5889 07a5 14000000 		.4byte	.LVL163
 5890 07a9 24000000 		.4byte	.LFE59
 5891 07ad 0400     		.2byte	0x4
 5892 07af F3       		.byte	0xf3
 5893 07b0 01       		.uleb128 0x1
 5894 07b1 50       		.byte	0x50
 5895 07b2 9F       		.byte	0x9f
 5896 07b3 00000000 		.4byte	0
 5897 07b7 00000000 		.4byte	0
 5898              	.LLST57:
 5899 07bb 00000000 		.4byte	.LVL160
 5900 07bf 10000000 		.4byte	.LVL162
 5901 07c3 0200     		.2byte	0x2
 5902 07c5 30       		.byte	0x30
 5903 07c6 9F       		.byte	0x9f
 5904 07c7 10000000 		.4byte	.LVL162
 5905 07cb 14000000 		.4byte	.LVL163
 5906 07cf 0600     		.2byte	0x6
 5907 07d1 70       		.byte	0x70
 5908 07d2 00       		.sleb128 0
 5909 07d3 08       		.byte	0x8
 5910 07d4 20       		.byte	0x20
 5911 07d5 21       		.byte	0x21
 5912 07d6 9F       		.byte	0x9f
 5913 07d7 00000000 		.4byte	0
 5914 07db 00000000 		.4byte	0
 5915              	.LLST58:
 5916 07df 08000000 		.4byte	.LVL164
 5917 07e3 0A000000 		.4byte	.LVL165
 5918 07e7 0600     		.2byte	0x6
 5919 07e9 73       		.byte	0x73
 5920 07ea 00       		.sleb128 0
 5921 07eb 08       		.byte	0x8
 5922 07ec 3F       		.byte	0x3f
 5923 07ed 1A       		.byte	0x1a
 5924 07ee 9F       		.byte	0x9f
 5925 07ef 0A000000 		.4byte	.LVL165
 5926 07f3 0E000000 		.4byte	.LVL166
 5927 07f7 0100     		.2byte	0x1
 5928 07f9 50       		.byte	0x50
 5929 07fa 0E000000 		.4byte	.LVL166
 5930 07fe 10000000 		.4byte	.LVL167
 5931 0802 0400     		.2byte	0x4
 5932 0804 70       		.byte	0x70
 5933 0805 00       		.sleb128 0
 5934 0806 1F       		.byte	0x1f
 5935 0807 9F       		.byte	0x9f
 5936 0808 10000000 		.4byte	.LVL167
 5937 080c 12000000 		.4byte	.LVL168
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\cc2xwxHk.s 			page 169


 5938 0810 0500     		.2byte	0x5
 5939 0812 70       		.byte	0x70
 5940 0813 00       		.sleb128 0
 5941 0814 1F       		.byte	0x1f
 5942 0815 1F       		.byte	0x1f
 5943 0816 9F       		.byte	0x9f
 5944 0817 00000000 		.4byte	0
 5945 081b 00000000 		.4byte	0
 5946              		.section	.debug_aranges,"",%progbits
 5947 0000 F4010000 		.4byte	0x1f4
 5948 0004 0200     		.2byte	0x2
 5949 0006 00000000 		.4byte	.Ldebug_info0
 5950 000a 04       		.byte	0x4
 5951 000b 00       		.byte	0
 5952 000c 0000     		.2byte	0
 5953 000e 0000     		.2byte	0
 5954 0010 00000000 		.4byte	.LFB1
 5955 0014 14000000 		.4byte	.LFE1-.LFB1
 5956 0018 00000000 		.4byte	.LFB4
 5957 001c 14000000 		.4byte	.LFE4-.LFB4
 5958 0020 00000000 		.4byte	.LFB2
 5959 0024 18000000 		.4byte	.LFE2-.LFB2
 5960 0028 00000000 		.4byte	.LFB5
 5961 002c 10000000 		.4byte	.LFE5-.LFB5
 5962 0030 00000000 		.4byte	.LFB6
 5963 0034 20000000 		.4byte	.LFE6-.LFB6
 5964 0038 00000000 		.4byte	.LFB7
 5965 003c 30000000 		.4byte	.LFE7-.LFB7
 5966 0040 00000000 		.4byte	.LFB8
 5967 0044 18000000 		.4byte	.LFE8-.LFB8
 5968 0048 00000000 		.4byte	.LFB9
 5969 004c 24000000 		.4byte	.LFE9-.LFB9
 5970 0050 00000000 		.4byte	.LFB11
 5971 0054 24000000 		.4byte	.LFE11-.LFB11
 5972 0058 00000000 		.4byte	.LFB12
 5973 005c 14000000 		.4byte	.LFE12-.LFB12
 5974 0060 00000000 		.4byte	.LFB13
 5975 0064 10000000 		.4byte	.LFE13-.LFB13
 5976 0068 00000000 		.4byte	.LFB14
 5977 006c 0C000000 		.4byte	.LFE14-.LFB14
 5978 0070 00000000 		.4byte	.LFB15
 5979 0074 0E000000 		.4byte	.LFE15-.LFB15
 5980 0078 00000000 		.4byte	.LFB16
 5981 007c 0C000000 		.4byte	.LFE16-.LFB16
 5982 0080 00000000 		.4byte	.LFB17
 5983 0084 10000000 		.4byte	.LFE17-.LFB17
 5984 0088 00000000 		.4byte	.LFB18
 5985 008c 10000000 		.4byte	.LFE18-.LFB18
 5986 0090 00000000 		.4byte	.LFB19
 5987 0094 30000000 		.4byte	.LFE19-.LFB19
 5988 0098 00000000 		.4byte	.LFB20
 5989 009c 20000000 		.4byte	.LFE20-.LFB20
 5990 00a0 00000000 		.4byte	.LFB21
 5991 00a4 14000000 		.4byte	.LFE21-.LFB21
 5992 00a8 00000000 		.4byte	.LFB22
 5993 00ac 18000000 		.4byte	.LFE22-.LFB22
 5994 00b0 00000000 		.4byte	.LFB23
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\cc2xwxHk.s 			page 170


 5995 00b4 14000000 		.4byte	.LFE23-.LFB23
 5996 00b8 00000000 		.4byte	.LFB24
 5997 00bc 14000000 		.4byte	.LFE24-.LFB24
 5998 00c0 00000000 		.4byte	.LFB25
 5999 00c4 14000000 		.4byte	.LFE25-.LFB25
 6000 00c8 00000000 		.4byte	.LFB26
 6001 00cc 04000000 		.4byte	.LFE26-.LFB26
 6002 00d0 00000000 		.4byte	.LFB27
 6003 00d4 18000000 		.4byte	.LFE27-.LFB27
 6004 00d8 00000000 		.4byte	.LFB28
 6005 00dc 2C000000 		.4byte	.LFE28-.LFB28
 6006 00e0 00000000 		.4byte	.LFB3
 6007 00e4 C4000000 		.4byte	.LFE3-.LFB3
 6008 00e8 00000000 		.4byte	.LFB10
 6009 00ec BC000000 		.4byte	.LFE10-.LFB10
 6010 00f0 00000000 		.4byte	.LFB29
 6011 00f4 14000000 		.4byte	.LFE29-.LFB29
 6012 00f8 00000000 		.4byte	.LFB30
 6013 00fc 48000000 		.4byte	.LFE30-.LFB30
 6014 0100 00000000 		.4byte	.LFB32
 6015 0104 60000000 		.4byte	.LFE32-.LFB32
 6016 0108 00000000 		.4byte	.LFB34
 6017 010c 10000000 		.4byte	.LFE34-.LFB34
 6018 0110 00000000 		.4byte	.LFB35
 6019 0114 10000000 		.4byte	.LFE35-.LFB35
 6020 0118 00000000 		.4byte	.LFB33
 6021 011c 18000000 		.4byte	.LFE33-.LFB33
 6022 0120 00000000 		.4byte	.LFB31
 6023 0124 1C000000 		.4byte	.LFE31-.LFB31
 6024 0128 00000000 		.4byte	.LFB36
 6025 012c 10000000 		.4byte	.LFE36-.LFB36
 6026 0130 00000000 		.4byte	.LFB37
 6027 0134 10000000 		.4byte	.LFE37-.LFB37
 6028 0138 00000000 		.4byte	.LFB38
 6029 013c 10000000 		.4byte	.LFE38-.LFB38
 6030 0140 00000000 		.4byte	.LFB39
 6031 0144 10000000 		.4byte	.LFE39-.LFB39
 6032 0148 00000000 		.4byte	.LFB40
 6033 014c 18000000 		.4byte	.LFE40-.LFB40
 6034 0150 00000000 		.4byte	.LFB41
 6035 0154 10000000 		.4byte	.LFE41-.LFB41
 6036 0158 00000000 		.4byte	.LFB42
 6037 015c 10000000 		.4byte	.LFE42-.LFB42
 6038 0160 00000000 		.4byte	.LFB46
 6039 0164 24000000 		.4byte	.LFE46-.LFB46
 6040 0168 00000000 		.4byte	.LFB43
 6041 016c 0C000000 		.4byte	.LFE43-.LFB43
 6042 0170 00000000 		.4byte	.LFB44
 6043 0174 10000000 		.4byte	.LFE44-.LFB44
 6044 0178 00000000 		.4byte	.LFB45
 6045 017c 0C000000 		.4byte	.LFE45-.LFB45
 6046 0180 00000000 		.4byte	.LFB47
 6047 0184 70000000 		.4byte	.LFE47-.LFB47
 6048 0188 00000000 		.4byte	.LFB48
 6049 018c 20000000 		.4byte	.LFE48-.LFB48
 6050 0190 00000000 		.4byte	.LFB49
 6051 0194 20000000 		.4byte	.LFE49-.LFB49
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\cc2xwxHk.s 			page 171


 6052 0198 00000000 		.4byte	.LFB50
 6053 019c 20000000 		.4byte	.LFE50-.LFB50
 6054 01a0 00000000 		.4byte	.LFB51
 6055 01a4 30000000 		.4byte	.LFE51-.LFB51
 6056 01a8 00000000 		.4byte	.LFB52
 6057 01ac 18000000 		.4byte	.LFE52-.LFB52
 6058 01b0 00000000 		.4byte	.LFB53
 6059 01b4 14000000 		.4byte	.LFE53-.LFB53
 6060 01b8 00000000 		.4byte	.LFB54
 6061 01bc 18000000 		.4byte	.LFE54-.LFB54
 6062 01c0 00000000 		.4byte	.LFB55
 6063 01c4 14000000 		.4byte	.LFE55-.LFB55
 6064 01c8 00000000 		.4byte	.LFB56
 6065 01cc 14000000 		.4byte	.LFE56-.LFB56
 6066 01d0 00000000 		.4byte	.LFB57
 6067 01d4 10000000 		.4byte	.LFE57-.LFB57
 6068 01d8 00000000 		.4byte	.LFB58
 6069 01dc 10000000 		.4byte	.LFE58-.LFB58
 6070 01e0 00000000 		.4byte	.LFB59
 6071 01e4 24000000 		.4byte	.LFE59-.LFB59
 6072 01e8 00000000 		.4byte	.LFB60
 6073 01ec 1C000000 		.4byte	.LFE60-.LFB60
 6074 01f0 00000000 		.4byte	0
 6075 01f4 00000000 		.4byte	0
 6076              		.section	.debug_ranges,"",%progbits
 6077              	.Ldebug_ranges0:
 6078 0000 04000000 		.4byte	.LBB22
 6079 0004 06000000 		.4byte	.LBE22
 6080 0008 18000000 		.4byte	.LBB35
 6081 000c 1E000000 		.4byte	.LBE35
 6082 0010 20000000 		.4byte	.LBB36
 6083 0014 22000000 		.4byte	.LBE36
 6084 0018 00000000 		.4byte	0
 6085 001c 00000000 		.4byte	0
 6086 0020 08000000 		.4byte	.LBB29
 6087 0024 0A000000 		.4byte	.LBE29
 6088 0028 14000000 		.4byte	.LBB33
 6089 002c 16000000 		.4byte	.LBE33
 6090 0030 16000000 		.4byte	.LBB34
 6091 0034 18000000 		.4byte	.LBE34
 6092 0038 00000000 		.4byte	0
 6093 003c 00000000 		.4byte	0
 6094 0040 2C000000 		.4byte	.LBB37
 6095 0044 2E000000 		.4byte	.LBE37
 6096 0048 30000000 		.4byte	.LBB44
 6097 004c 32000000 		.4byte	.LBE44
 6098 0050 38000000 		.4byte	.LBB48
 6099 0054 3C000000 		.4byte	.LBE48
 6100 0058 00000000 		.4byte	0
 6101 005c 00000000 		.4byte	0
 6102 0060 2E000000 		.4byte	.LBB41
 6103 0064 30000000 		.4byte	.LBE41
 6104 0068 32000000 		.4byte	.LBB45
 6105 006c 34000000 		.4byte	.LBE45
 6106 0070 00000000 		.4byte	0
 6107 0074 00000000 		.4byte	0
 6108 0078 04000000 		.4byte	.LBB51
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\cc2xwxHk.s 			page 172


 6109 007c 06000000 		.4byte	.LBE51
 6110 0080 0A000000 		.4byte	.LBB54
 6111 0084 0E000000 		.4byte	.LBE54
 6112 0088 00000000 		.4byte	0
 6113 008c 00000000 		.4byte	0
 6114 0090 00000000 		.4byte	.LFB1
 6115 0094 14000000 		.4byte	.LFE1
 6116 0098 00000000 		.4byte	.LFB4
 6117 009c 14000000 		.4byte	.LFE4
 6118 00a0 00000000 		.4byte	.LFB2
 6119 00a4 18000000 		.4byte	.LFE2
 6120 00a8 00000000 		.4byte	.LFB5
 6121 00ac 10000000 		.4byte	.LFE5
 6122 00b0 00000000 		.4byte	.LFB6
 6123 00b4 20000000 		.4byte	.LFE6
 6124 00b8 00000000 		.4byte	.LFB7
 6125 00bc 30000000 		.4byte	.LFE7
 6126 00c0 00000000 		.4byte	.LFB8
 6127 00c4 18000000 		.4byte	.LFE8
 6128 00c8 00000000 		.4byte	.LFB9
 6129 00cc 24000000 		.4byte	.LFE9
 6130 00d0 00000000 		.4byte	.LFB11
 6131 00d4 24000000 		.4byte	.LFE11
 6132 00d8 00000000 		.4byte	.LFB12
 6133 00dc 14000000 		.4byte	.LFE12
 6134 00e0 00000000 		.4byte	.LFB13
 6135 00e4 10000000 		.4byte	.LFE13
 6136 00e8 00000000 		.4byte	.LFB14
 6137 00ec 0C000000 		.4byte	.LFE14
 6138 00f0 00000000 		.4byte	.LFB15
 6139 00f4 0E000000 		.4byte	.LFE15
 6140 00f8 00000000 		.4byte	.LFB16
 6141 00fc 0C000000 		.4byte	.LFE16
 6142 0100 00000000 		.4byte	.LFB17
 6143 0104 10000000 		.4byte	.LFE17
 6144 0108 00000000 		.4byte	.LFB18
 6145 010c 10000000 		.4byte	.LFE18
 6146 0110 00000000 		.4byte	.LFB19
 6147 0114 30000000 		.4byte	.LFE19
 6148 0118 00000000 		.4byte	.LFB20
 6149 011c 20000000 		.4byte	.LFE20
 6150 0120 00000000 		.4byte	.LFB21
 6151 0124 14000000 		.4byte	.LFE21
 6152 0128 00000000 		.4byte	.LFB22
 6153 012c 18000000 		.4byte	.LFE22
 6154 0130 00000000 		.4byte	.LFB23
 6155 0134 14000000 		.4byte	.LFE23
 6156 0138 00000000 		.4byte	.LFB24
 6157 013c 14000000 		.4byte	.LFE24
 6158 0140 00000000 		.4byte	.LFB25
 6159 0144 14000000 		.4byte	.LFE25
 6160 0148 00000000 		.4byte	.LFB26
 6161 014c 04000000 		.4byte	.LFE26
 6162 0150 00000000 		.4byte	.LFB27
 6163 0154 18000000 		.4byte	.LFE27
 6164 0158 00000000 		.4byte	.LFB28
 6165 015c 2C000000 		.4byte	.LFE28
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\cc2xwxHk.s 			page 173


 6166 0160 00000000 		.4byte	.LFB3
 6167 0164 C4000000 		.4byte	.LFE3
 6168 0168 00000000 		.4byte	.LFB10
 6169 016c BC000000 		.4byte	.LFE10
 6170 0170 00000000 		.4byte	.LFB29
 6171 0174 14000000 		.4byte	.LFE29
 6172 0178 00000000 		.4byte	.LFB30
 6173 017c 48000000 		.4byte	.LFE30
 6174 0180 00000000 		.4byte	.LFB32
 6175 0184 60000000 		.4byte	.LFE32
 6176 0188 00000000 		.4byte	.LFB34
 6177 018c 10000000 		.4byte	.LFE34
 6178 0190 00000000 		.4byte	.LFB35
 6179 0194 10000000 		.4byte	.LFE35
 6180 0198 00000000 		.4byte	.LFB33
 6181 019c 18000000 		.4byte	.LFE33
 6182 01a0 00000000 		.4byte	.LFB31
 6183 01a4 1C000000 		.4byte	.LFE31
 6184 01a8 00000000 		.4byte	.LFB36
 6185 01ac 10000000 		.4byte	.LFE36
 6186 01b0 00000000 		.4byte	.LFB37
 6187 01b4 10000000 		.4byte	.LFE37
 6188 01b8 00000000 		.4byte	.LFB38
 6189 01bc 10000000 		.4byte	.LFE38
 6190 01c0 00000000 		.4byte	.LFB39
 6191 01c4 10000000 		.4byte	.LFE39
 6192 01c8 00000000 		.4byte	.LFB40
 6193 01cc 18000000 		.4byte	.LFE40
 6194 01d0 00000000 		.4byte	.LFB41
 6195 01d4 10000000 		.4byte	.LFE41
 6196 01d8 00000000 		.4byte	.LFB42
 6197 01dc 10000000 		.4byte	.LFE42
 6198 01e0 00000000 		.4byte	.LFB46
 6199 01e4 24000000 		.4byte	.LFE46
 6200 01e8 00000000 		.4byte	.LFB43
 6201 01ec 0C000000 		.4byte	.LFE43
 6202 01f0 00000000 		.4byte	.LFB44
 6203 01f4 10000000 		.4byte	.LFE44
 6204 01f8 00000000 		.4byte	.LFB45
 6205 01fc 0C000000 		.4byte	.LFE45
 6206 0200 00000000 		.4byte	.LFB47
 6207 0204 70000000 		.4byte	.LFE47
 6208 0208 00000000 		.4byte	.LFB48
 6209 020c 20000000 		.4byte	.LFE48
 6210 0210 00000000 		.4byte	.LFB49
 6211 0214 20000000 		.4byte	.LFE49
 6212 0218 00000000 		.4byte	.LFB50
 6213 021c 20000000 		.4byte	.LFE50
 6214 0220 00000000 		.4byte	.LFB51
 6215 0224 30000000 		.4byte	.LFE51
 6216 0228 00000000 		.4byte	.LFB52
 6217 022c 18000000 		.4byte	.LFE52
 6218 0230 00000000 		.4byte	.LFB53
 6219 0234 14000000 		.4byte	.LFE53
 6220 0238 00000000 		.4byte	.LFB54
 6221 023c 18000000 		.4byte	.LFE54
 6222 0240 00000000 		.4byte	.LFB55
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\cc2xwxHk.s 			page 174


 6223 0244 14000000 		.4byte	.LFE55
 6224 0248 00000000 		.4byte	.LFB56
 6225 024c 14000000 		.4byte	.LFE56
 6226 0250 00000000 		.4byte	.LFB57
 6227 0254 10000000 		.4byte	.LFE57
 6228 0258 00000000 		.4byte	.LFB58
 6229 025c 10000000 		.4byte	.LFE58
 6230 0260 00000000 		.4byte	.LFB59
 6231 0264 24000000 		.4byte	.LFE59
 6232 0268 00000000 		.4byte	.LFB60
 6233 026c 1C000000 		.4byte	.LFE60
 6234 0270 00000000 		.4byte	0
 6235 0274 00000000 		.4byte	0
 6236              		.section	.debug_line,"",%progbits
 6237              	.Ldebug_line0:
 6238 0000 5E060000 		.section	.debug_str,"MS",%progbits,1
 6238      02006700 
 6238      00000201 
 6238      FB0E0D00 
 6238      01010101 
 6239              	.LASF55:
 6240 0000 72616D56 		.ascii	"ramVectorTable\000"
 6240      6563746F 
 6240      72546162 
 6240      6C6500
 6241              	.LASF10:
 6242 000f 75696E74 		.ascii	"uint16\000"
 6242      313600
 6243              	.LASF49:
 6244 0016 696E7453 		.ascii	"intState\000"
 6244      74617465 
 6244      00
 6245              	.LASF35:
 6246 001f 43795379 		.ascii	"CySysClkWriteHfclkDirect\000"
 6246      73436C6B 
 6246      57726974 
 6246      65486663 
 6246      6C6B4469 
 6247              	.LASF112:
 6248 0038 43795379 		.ascii	"CySysPrbGetBgBufferTrim\000"
 6248      73507262 
 6248      47657442 
 6248      67427566 
 6248      66657254 
 6249              	.LASF121:
 6250 0050 43795379 		.ascii	"CySysClkPumpConfig\000"
 6250      73436C6B 
 6250      50756D70 
 6250      436F6E66 
 6250      696700
 6251              	.LASF37:
 6252 0063 43795379 		.ascii	"CySysEnablePumpClock\000"
 6252      73456E61 
 6252      626C6550 
 6252      756D7043 
 6252      6C6F636B 
 6253              	.LASF91:
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\cc2xwxHk.s 			page 175


 6254 0078 72657456 		.ascii	"retVal\000"
 6254      616C00
 6255              	.LASF48:
 6256 007f 43794469 		.ascii	"CyDisableInts\000"
 6256      7361626C 
 6256      65496E74 
 6256      7300
 6257              	.LASF7:
 6258 008d 6C6F6E67 		.ascii	"long long unsigned int\000"
 6258      206C6F6E 
 6258      6720756E 
 6258      7369676E 
 6258      65642069 
 6259              	.LASF119:
 6260 00a4 43795379 		.ascii	"CySysTickInitVar\000"
 6260      73546963 
 6260      6B496E69 
 6260      74566172 
 6260      00
 6261              	.LASF50:
 6262 00b5 4379456E 		.ascii	"CyEnableInts\000"
 6262      61626C65 
 6262      496E7473 
 6262      00
 6263              	.LASF100:
 6264 00c2 696E7465 		.ascii	"interfaceNumber\000"
 6264      72666163 
 6264      654E756D 
 6264      62657200 
 6265              	.LASF69:
 6266 00d2 4379536F 		.ascii	"CySoftwareReset\000"
 6266      66747761 
 6266      72655265 
 6266      73657400 
 6267              	.LASF80:
 6268 00e2 43795379 		.ascii	"CySysTickEnableInterrupt\000"
 6268      73546963 
 6268      6B456E61 
 6268      626C6549 
 6268      6E746572 
 6269              	.LASF64:
 6270 00fb 4379496E 		.ascii	"CyIntGetState\000"
 6270      74476574 
 6270      53746174 
 6270      6500
 6271              	.LASF6:
 6272 0109 6C6F6E67 		.ascii	"long long int\000"
 6272      206C6F6E 
 6272      6720696E 
 6272      7400
 6273              	.LASF0:
 6274 0117 7369676E 		.ascii	"signed char\000"
 6274      65642063 
 6274      68617200 
 6275              	.LASF22:
 6276 0123 66726571 		.ascii	"freq\000"
 6276      00
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\cc2xwxHk.s 			page 176


 6277              	.LASF77:
 6278 0128 43794465 		.ascii	"CyDelayFreq\000"
 6278      6C617946 
 6278      72657100 
 6279              	.LASF23:
 6280 0134 696E7465 		.ascii	"interruptState\000"
 6280      72727570 
 6280      74537461 
 6280      746500
 6281              	.LASF13:
 6282 0143 696E7433 		.ascii	"int32\000"
 6282      3200
 6283              	.LASF85:
 6284 0149 43795379 		.ascii	"CySysTickGetReload\000"
 6284      73546963 
 6284      6B476574 
 6284      52656C6F 
 6284      616400
 6285              	.LASF105:
 6286 015c 766F6C74 		.ascii	"voltageTap\000"
 6286      61676554 
 6286      617000
 6287              	.LASF84:
 6288 0167 43795379 		.ascii	"CySysClkImoGetWcoLock\000"
 6288      73436C6B 
 6288      496D6F47 
 6288      65745763 
 6288      6F4C6F63 
 6289              	.LASF74:
 6290 017d 77636F4C 		.ascii	"wcoLock\000"
 6290      6F636B00 
 6291              	.LASF4:
 6292 0185 6C6F6E67 		.ascii	"long int\000"
 6292      20696E74 
 6292      00
 6293              	.LASF65:
 6294 018e 4379496E 		.ascii	"CyIntDisable\000"
 6294      74446973 
 6294      61626C65 
 6294      00
 6295              	.LASF107:
 6296 019b 43795379 		.ascii	"CySysPrbDisableDeepsleepVddaRef\000"
 6296      73507262 
 6296      44697361 
 6296      626C6544 
 6296      65657073 
 6297              	.LASF92:
 6298 01bb 43795379 		.ascii	"CySysTickGetCallback\000"
 6298      73546963 
 6298      6B476574 
 6298      43616C6C 
 6298      6261636B 
 6299              	.LASF9:
 6300 01d0 75696E74 		.ascii	"uint8\000"
 6300      3800
 6301              	.LASF116:
 6302 01d6 63796465 		.ascii	"cydelayFreqKhz\000"
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\cc2xwxHk.s 			page 177


 6302      6C617946 
 6302      7265714B 
 6302      687A00
 6303              	.LASF39:
 6304 01e5 656E6162 		.ascii	"enable\000"
 6304      6C6500
 6305              	.LASF15:
 6306 01ec 646F7562 		.ascii	"double\000"
 6306      6C6500
 6307              	.LASF61:
 6308 01f3 73686966 		.ascii	"shift\000"
 6308      7400
 6309              	.LASF11:
 6310 01f9 75696E74 		.ascii	"uint32\000"
 6310      333200
 6311              	.LASF57:
 6312 0200 4379496E 		.ascii	"CyIntSetVector\000"
 6312      74536574 
 6312      56656374 
 6312      6F7200
 6313              	.LASF51:
 6314 020f 6D61736B 		.ascii	"mask\000"
 6314      00
 6315              	.LASF44:
 6316 0214 43795379 		.ascii	"CySysClkGetSysclkSource\000"
 6316      73436C6B 
 6316      47657453 
 6316      7973636C 
 6316      6B536F75 
 6317              	.LASF27:
 6318 022c 43795379 		.ascii	"CySysClkImoEnableWcoLock\000"
 6318      73436C6B 
 6318      496D6F45 
 6318      6E61626C 
 6318      6557636F 
 6319              	.LASF62:
 6320 0245 4379496E 		.ascii	"CyIntGetPriority\000"
 6320      74476574 
 6320      5072696F 
 6320      72697479 
 6320      00
 6321              	.LASF118:
 6322 0256 63796465 		.ascii	"cydelay32kMs\000"
 6322      6C617933 
 6322      326B4D73 
 6322      00
 6323              	.LASF110:
 6324 0263 43795379 		.ascii	"CySysPrbSetBgBufferTrim\000"
 6324      73507262 
 6324      53657442 
 6324      67427566 
 6324      66657254 
 6325              	.LASF78:
 6326 027b 43795379 		.ascii	"CySysTickInit\000"
 6326      73546963 
 6326      6B496E69 
 6326      7400
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\cc2xwxHk.s 			page 178


 6327              	.LASF31:
 6328 0289 76616C75 		.ascii	"value\000"
 6328      6500
 6329              	.LASF30:
 6330 028f 636C6F63 		.ascii	"clockSource\000"
 6330      6B536F75 
 6330      72636500 
 6331              	.LASF93:
 6332 029b 43794765 		.ascii	"CyGetUniqueId\000"
 6332      74556E69 
 6332      71756549 
 6332      6400
 6333              	.LASF88:
 6334 02a9 43795379 		.ascii	"CySysTickGetCountFlag\000"
 6334      73546963 
 6334      6B476574 
 6334      436F756E 
 6334      74466C61 
 6335              	.LASF8:
 6336 02bf 756E7369 		.ascii	"unsigned int\000"
 6336      676E6564 
 6336      20696E74 
 6336      00
 6337              	.LASF108:
 6338 02cc 43795379 		.ascii	"CySysPrbEnableVddaRef\000"
 6338      73507262 
 6338      456E6162 
 6338      6C655664 
 6338      64615265 
 6339              	.LASF131:
 6340 02e2 43795379 		.ascii	"CySysTickClear\000"
 6340      73546963 
 6340      6B436C65 
 6340      617200
 6341              	.LASF5:
 6342 02f1 6C6F6E67 		.ascii	"long unsigned int\000"
 6342      20756E73 
 6342      69676E65 
 6342      6420696E 
 6342      7400
 6343              	.LASF111:
 6344 0303 62675472 		.ascii	"bgTrim\000"
 6344      696D00
 6345              	.LASF34:
 6346 030a 43795379 		.ascii	"CySysClkImoStop\000"
 6346      73436C6B 
 6346      496D6F53 
 6346      746F7000 
 6347              	.LASF125:
 6348 031a 4379456E 		.ascii	"CyEnterCriticalSection\000"
 6348      74657243 
 6348      72697469 
 6348      63616C53 
 6348      65637469 
 6349              	.LASF66:
 6350 0331 4379496E 		.ascii	"CyIntSetPending\000"
 6350      74536574 
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\cc2xwxHk.s 			page 179


 6350      50656E64 
 6350      696E6700 
 6351              	.LASF25:
 6352 0341 6C664C69 		.ascii	"lfLimit\000"
 6352      6D697400 
 6353              	.LASF45:
 6354 0349 43795379 		.ascii	"CySysGetResetReason\000"
 6354      73476574 
 6354      52657365 
 6354      74526561 
 6354      736F6E00 
 6355              	.LASF3:
 6356 035d 73686F72 		.ascii	"short unsigned int\000"
 6356      7420756E 
 6356      7369676E 
 6356      65642069 
 6356      6E7400
 6357              	.LASF24:
 6358 0370 72656754 		.ascii	"regTmp\000"
 6358      6D7000
 6359              	.LASF109:
 6360 0377 43795379 		.ascii	"CySysPrbDisableVddaRef\000"
 6360      73507262 
 6360      44697361 
 6360      626C6556 
 6360      64646152 
 6361              	.LASF28:
 6362 038e 43795379 		.ascii	"CySysTickSetClockSource\000"
 6362      73546963 
 6362      6B536574 
 6362      436C6F63 
 6362      6B536F75 
 6363              	.LASF12:
 6364 03a6 696E7438 		.ascii	"int8\000"
 6364      00
 6365              	.LASF52:
 6366 03ab 6E756D62 		.ascii	"number\000"
 6366      657200
 6367              	.LASF60:
 6368 03b2 7072696F 		.ascii	"priority\000"
 6368      72697479 
 6368      00
 6369              	.LASF127:
 6370 03bb 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 6370      4320342E 
 6370      392E3320 
 6370      32303135 
 6370      30333033 
 6371 03ee 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m0plus -mthumb -"
 6371      20726576 
 6371      6973696F 
 6371      6E203232 
 6371      31323230 
 6372 0421 67202D4F 		.ascii	"g -Os -ffunction-sections -ffat-lto-objects\000"
 6372      73202D66 
 6372      66756E63 
 6372      74696F6E 
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\cc2xwxHk.s 			page 180


 6372      2D736563 
 6373              	.LASF72:
 6374 044d 43795379 		.ascii	"CySysClkWriteImoFreq\000"
 6374      73436C6B 
 6374      57726974 
 6374      65496D6F 
 6374      46726571 
 6375              	.LASF97:
 6376 0462 43795379 		.ascii	"CySysSetFlashAccessArbPriority\000"
 6376      73536574 
 6376      466C6173 
 6376      68416363 
 6376      65737341 
 6377              	.LASF132:
 6378 0481 4379496E 		.ascii	"CyIntSetSysVector\000"
 6378      74536574 
 6378      53797356 
 6378      6563746F 
 6378      7200
 6379              	.LASF33:
 6380 0493 43795379 		.ascii	"CySysClkImoDisableWcoLock\000"
 6380      73436C6B 
 6380      496D6F44 
 6380      69736162 
 6380      6C655763 
 6381              	.LASF18:
 6382 04ad 72656733 		.ascii	"reg32\000"
 6382      3200
 6383              	.LASF82:
 6384 04b3 43795379 		.ascii	"CySysTickStart\000"
 6384      73546963 
 6384      6B537461 
 6384      727400
 6385              	.LASF47:
 6386 04c2 72657475 		.ascii	"returnStatus\000"
 6386      726E5374 
 6386      61747573 
 6386      00
 6387              	.LASF96:
 6388 04cf 736F7572 		.ascii	"source\000"
 6388      636500
 6389              	.LASF20:
 6390 04d6 73697A65 		.ascii	"sizetype\000"
 6390      74797065 
 6390      00
 6391              	.LASF99:
 6392 04df 43795379 		.ascii	"CySysSetPeripheralAccessArbPriority\000"
 6392      73536574 
 6392      50657269 
 6392      70686572 
 6392      616C4163 
 6393              	.LASF67:
 6394 0503 4379496E 		.ascii	"CyIntClearPending\000"
 6394      74436C65 
 6394      61725065 
 6394      6E64696E 
 6394      6700
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\cc2xwxHk.s 			page 181


 6395              	.LASF53:
 6396 0515 61646472 		.ascii	"address\000"
 6396      65737300 
 6397              	.LASF40:
 6398 051d 73797363 		.ascii	"sysclkSource\000"
 6398      6C6B536F 
 6398      75726365 
 6398      00
 6399              	.LASF90:
 6400 052a 66756E63 		.ascii	"function\000"
 6400      74696F6E 
 6400      00
 6401              	.LASF86:
 6402 0533 43795379 		.ascii	"CySysTickGetValue\000"
 6402      73546963 
 6402      6B476574 
 6402      56616C75 
 6402      6500
 6403              	.LASF115:
 6404 0545 63796465 		.ascii	"cydelayFreqHz\000"
 6404      6C617946 
 6404      72657148 
 6404      7A00
 6405              	.LASF59:
 6406 0553 4379496E 		.ascii	"CyIntSetPriority\000"
 6406      74536574 
 6406      5072696F 
 6406      72697479 
 6406      00
 6407              	.LASF103:
 6408 0564 6761696E 		.ascii	"gain\000"
 6408      00
 6409              	.LASF14:
 6410 0569 666C6F61 		.ascii	"float\000"
 6410      7400
 6411              	.LASF122:
 6412 056f 43794578 		.ascii	"CyExitCriticalSection\000"
 6412      69744372 
 6412      69746963 
 6412      616C5365 
 6412      6374696F 
 6413              	.LASF21:
 6414 0585 63795379 		.ascii	"cySysTickCallback\000"
 6414      73546963 
 6414      6B43616C 
 6414      6C626163 
 6414      6B00
 6415              	.LASF58:
 6416 0597 4379496E 		.ascii	"CyIntGetVector\000"
 6416      74476574 
 6416      56656374 
 6416      6F7200
 6417              	.LASF71:
 6418 05a6 6D696C6C 		.ascii	"milliseconds\000"
 6418      69736563 
 6418      6F6E6473 
 6418      00
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\cc2xwxHk.s 			page 182


 6419              	.LASF101:
 6420 05b3 43795379 		.ascii	"CySysPrbSetGlobalVrefSource\000"
 6420      73507262 
 6420      53657447 
 6420      6C6F6261 
 6420      6C567265 
 6421              	.LASF123:
 6422 05cf 43794465 		.ascii	"CyDelayCycles\000"
 6422      6C617943 
 6422      79636C65 
 6422      7300
 6423              	.LASF17:
 6424 05dd 72656738 		.ascii	"reg8\000"
 6424      00
 6425              	.LASF68:
 6426 05e2 43794861 		.ascii	"CyHalt\000"
 6426      6C7400
 6427              	.LASF129:
 6428 05e9 433A5C63 		.ascii	"C:\\cypress\\TalkingClock\\Talking_Clock.cydsn\000"
 6428      79707265 
 6428      73735C54 
 6428      616C6B69 
 6428      6E67436C 
 6429              	.LASF95:
 6430 0615 43795379 		.ascii	"CySysSetRamAccessArbPriority\000"
 6430      73536574 
 6430      52616D41 
 6430      63636573 
 6430      73417262 
 6431              	.LASF1:
 6432 0632 756E7369 		.ascii	"unsigned char\000"
 6432      676E6564 
 6432      20636861 
 6432      7200
 6433              	.LASF46:
 6434 0640 72656173 		.ascii	"reason\000"
 6434      6F6E00
 6435              	.LASF2:
 6436 0647 73686F72 		.ascii	"short int\000"
 6436      7420696E 
 6436      7400
 6437              	.LASF63:
 6438 0651 4379496E 		.ascii	"CyIntEnable\000"
 6438      74456E61 
 6438      626C6500 
 6439              	.LASF56:
 6440 065d 4379496E 		.ascii	"CyIntGetSysVector\000"
 6440      74476574 
 6440      53797356 
 6440      6563746F 
 6440      7200
 6441              	.LASF38:
 6442 066f 636C6B53 		.ascii	"clkSelect\000"
 6442      656C6563 
 6442      7400
 6443              	.LASF75:
 6444 0679 43794465 		.ascii	"CyDelayUs\000"
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\cc2xwxHk.s 			page 183


 6444      6C617955 
 6444      7300
 6445              	.LASF130:
 6446 0683 43795379 		.ascii	"CySysTickServiceCallbacks\000"
 6446      73546963 
 6446      6B536572 
 6446      76696365 
 6446      43616C6C 
 6447              	.LASF104:
 6448 069d 43795379 		.ascii	"CySysPrbSetGlobalVrefVoltage\000"
 6448      73507262 
 6448      53657447 
 6448      6C6F6261 
 6448      6C567265 
 6449              	.LASF16:
 6450 06ba 63686172 		.ascii	"char\000"
 6450      00
 6451              	.LASF120:
 6452 06bf 6379496D 		.ascii	"cyImoFreqMhz2DpllOffset\000"
 6452      6F467265 
 6452      714D687A 
 6452      3244706C 
 6452      6C4F6666 
 6453              	.LASF19:
 6454 06d7 63796973 		.ascii	"cyisraddress\000"
 6454      72616464 
 6454      72657373 
 6454      00
 6455              	.LASF81:
 6456 06e4 43795379 		.ascii	"CySysTickEnable\000"
 6456      73546963 
 6456      6B456E61 
 6456      626C6500 
 6457              	.LASF43:
 6458 06f4 43795379 		.ascii	"CySysClkWriteHfclkDiv\000"
 6458      73436C6B 
 6458      57726974 
 6458      65486663 
 6458      6C6B4469 
 6459              	.LASF41:
 6460 070a 43795379 		.ascii	"CySysClkWriteSysclkDiv\000"
 6460      73436C6B 
 6460      57726974 
 6460      65537973 
 6460      636C6B44 
 6461              	.LASF89:
 6462 0721 43795379 		.ascii	"CySysTickSetCallback\000"
 6462      73546963 
 6462      6B536574 
 6462      43616C6C 
 6462      6261636B 
 6463              	.LASF114:
 6464 0736 43795379 		.ascii	"CySysTickCallbacks\000"
 6464      73546963 
 6464      6B43616C 
 6464      6C626163 
 6464      6B7300
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\cc2xwxHk.s 			page 184


 6465              	.LASF73:
 6466 0749 696D6F54 		.ascii	"imoTrim1Value\000"
 6466      72696D31 
 6466      56616C75 
 6466      6500
 6467              	.LASF94:
 6468 0757 756E6971 		.ascii	"uniqueId\000"
 6468      75654964 
 6468      00
 6469              	.LASF26:
 6470 0760 666C6173 		.ascii	"flashCtlReg\000"
 6470      6843746C 
 6470      52656700 
 6471              	.LASF70:
 6472 076c 43794465 		.ascii	"CyDelay\000"
 6472      6C617900 
 6473              	.LASF87:
 6474 0774 43795379 		.ascii	"CySysTickGetClockSource\000"
 6474      73546963 
 6474      6B476574 
 6474      436C6F63 
 6474      6B536F75 
 6475              	.LASF83:
 6476 078c 43795379 		.ascii	"CySysTickDisableInterrupt\000"
 6476      73546963 
 6476      6B446973 
 6476      61626C65 
 6476      496E7465 
 6477              	.LASF54:
 6478 07a6 6F6C6449 		.ascii	"oldIsr\000"
 6478      737200
 6479              	.LASF117:
 6480 07ad 63796465 		.ascii	"cydelayFreqMhz\000"
 6480      6C617946 
 6480      7265714D 
 6480      687A00
 6481              	.LASF126:
 6482 07bc 43795379 		.ascii	"CySysClkWcoEnabled\000"
 6482      73436C6B 
 6482      57636F45 
 6482      6E61626C 
 6482      656400
 6483              	.LASF98:
 6484 07cf 43795379 		.ascii	"CySysSetDmacAccessArbPriority\000"
 6484      73536574 
 6484      446D6163 
 6484      41636365 
 6484      73734172 
 6485              	.LASF79:
 6486 07ed 43795379 		.ascii	"CySysTickStop\000"
 6486      73546963 
 6486      6B53746F 
 6486      7000
 6487              	.LASF42:
 6488 07fb 64697669 		.ascii	"divider\000"
 6488      64657200 
 6489              	.LASF32:
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\cc2xwxHk.s 			page 185


 6490 0803 43795379 		.ascii	"CySysClkImoStart\000"
 6490      73436C6B 
 6490      496D6F53 
 6490      74617274 
 6490      00
 6491              	.LASF124:
 6492 0814 43795379 		.ascii	"CySysFlashSetWaitCycles\000"
 6492      73466C61 
 6492      73685365 
 6492      74576169 
 6492      74437963 
 6493              	.LASF106:
 6494 082c 43795379 		.ascii	"CySysPrbEnableDeepsleepVddaRef\000"
 6494      73507262 
 6494      456E6162 
 6494      6C654465 
 6494      6570736C 
 6495              	.LASF102:
 6496 084b 43795379 		.ascii	"CySysPrbSetBgGain\000"
 6496      73507262 
 6496      53657442 
 6496      67476169 
 6496      6E00
 6497              	.LASF128:
 6498 085d 47656E65 		.ascii	"Generated_Source\\PSoC4\\CyLib.c\000"
 6498      72617465 
 6498      645F536F 
 6498      75726365 
 6498      5C50536F 
 6499              	.LASF76:
 6500 087c 6D696372 		.ascii	"microseconds\000"
 6500      6F736563 
 6500      6F6E6473 
 6500      00
 6501              	.LASF36:
 6502 0889 746D7052 		.ascii	"tmpReg\000"
 6502      656700
 6503              	.LASF29:
 6504 0890 43795379 		.ascii	"CySysTickSetReload\000"
 6504      73546963 
 6504      6B536574 
 6504      52656C6F 
 6504      616400
 6505              	.LASF113:
 6506 08a3 72657475 		.ascii	"returnValue\000"
 6506      726E5661 
 6506      6C756500 
 6507              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
