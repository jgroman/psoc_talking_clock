ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccrnaKHI.s 			page 1


   1              		.cpu cortex-m0plus
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 4
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"Timer_Synth.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.Timer_Synth_Init,"ax",%progbits
  18              		.align	1
  19              		.global	Timer_Synth_Init
  20              		.code	16
  21              		.thumb_func
  22              		.type	Timer_Synth_Init, %function
  23              	Timer_Synth_Init:
  24              	.LFB1:
  25              		.file 1 "Generated_Source\\PSoC4\\Timer_Synth.c"
   1:Generated_Source\PSoC4/Timer_Synth.c **** /*******************************************************************************
   2:Generated_Source\PSoC4/Timer_Synth.c **** * File Name: Timer_Synth.c
   3:Generated_Source\PSoC4/Timer_Synth.c **** * Version 2.10
   4:Generated_Source\PSoC4/Timer_Synth.c **** *
   5:Generated_Source\PSoC4/Timer_Synth.c **** * Description:
   6:Generated_Source\PSoC4/Timer_Synth.c **** *  This file provides the source code to the API for the Timer_Synth
   7:Generated_Source\PSoC4/Timer_Synth.c **** *  component
   8:Generated_Source\PSoC4/Timer_Synth.c **** *
   9:Generated_Source\PSoC4/Timer_Synth.c **** * Note:
  10:Generated_Source\PSoC4/Timer_Synth.c **** *  None
  11:Generated_Source\PSoC4/Timer_Synth.c **** *
  12:Generated_Source\PSoC4/Timer_Synth.c **** ********************************************************************************
  13:Generated_Source\PSoC4/Timer_Synth.c **** * Copyright 2013-2015, Cypress Semiconductor Corporation.  All rights reserved.
  14:Generated_Source\PSoC4/Timer_Synth.c **** * You may use this file only in accordance with the license, terms, conditions,
  15:Generated_Source\PSoC4/Timer_Synth.c **** * disclaimers, and limitations in the end user license agreement accompanying
  16:Generated_Source\PSoC4/Timer_Synth.c **** * the software package with which this file was provided.
  17:Generated_Source\PSoC4/Timer_Synth.c **** *******************************************************************************/
  18:Generated_Source\PSoC4/Timer_Synth.c **** 
  19:Generated_Source\PSoC4/Timer_Synth.c **** #include "Timer_Synth.h"
  20:Generated_Source\PSoC4/Timer_Synth.c **** 
  21:Generated_Source\PSoC4/Timer_Synth.c **** uint8 Timer_Synth_initVar = 0u;
  22:Generated_Source\PSoC4/Timer_Synth.c **** 
  23:Generated_Source\PSoC4/Timer_Synth.c **** 
  24:Generated_Source\PSoC4/Timer_Synth.c **** /*******************************************************************************
  25:Generated_Source\PSoC4/Timer_Synth.c **** * Function Name: Timer_Synth_Init
  26:Generated_Source\PSoC4/Timer_Synth.c **** ********************************************************************************
  27:Generated_Source\PSoC4/Timer_Synth.c **** *
  28:Generated_Source\PSoC4/Timer_Synth.c **** * Summary:
  29:Generated_Source\PSoC4/Timer_Synth.c **** *  Initialize/Restore default Timer_Synth configuration.
  30:Generated_Source\PSoC4/Timer_Synth.c **** *
  31:Generated_Source\PSoC4/Timer_Synth.c **** * Parameters:
  32:Generated_Source\PSoC4/Timer_Synth.c **** *  None
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccrnaKHI.s 			page 2


  33:Generated_Source\PSoC4/Timer_Synth.c **** *
  34:Generated_Source\PSoC4/Timer_Synth.c **** * Return:
  35:Generated_Source\PSoC4/Timer_Synth.c **** *  None
  36:Generated_Source\PSoC4/Timer_Synth.c **** *
  37:Generated_Source\PSoC4/Timer_Synth.c **** *******************************************************************************/
  38:Generated_Source\PSoC4/Timer_Synth.c **** void Timer_Synth_Init(void)
  39:Generated_Source\PSoC4/Timer_Synth.c **** {
  26              		.loc 1 39 0
  27              		.cfi_startproc
  40:Generated_Source\PSoC4/Timer_Synth.c **** 
  41:Generated_Source\PSoC4/Timer_Synth.c ****     /* Set values from customizer to CTRL */
  42:Generated_Source\PSoC4/Timer_Synth.c ****     #if (Timer_Synth__QUAD == Timer_Synth_CONFIG)
  43:Generated_Source\PSoC4/Timer_Synth.c ****         Timer_Synth_CONTROL_REG = Timer_Synth_CTRL_QUAD_BASE_CONFIG;
  44:Generated_Source\PSoC4/Timer_Synth.c ****         
  45:Generated_Source\PSoC4/Timer_Synth.c ****         /* Set values from customizer to CTRL1 */
  46:Generated_Source\PSoC4/Timer_Synth.c ****         Timer_Synth_TRIG_CONTROL1_REG  = Timer_Synth_QUAD_SIGNALS_MODES;
  47:Generated_Source\PSoC4/Timer_Synth.c **** 
  48:Generated_Source\PSoC4/Timer_Synth.c ****         /* Set values from customizer to INTR */
  49:Generated_Source\PSoC4/Timer_Synth.c ****         Timer_Synth_SetInterruptMode(Timer_Synth_QUAD_INTERRUPT_MASK);
  50:Generated_Source\PSoC4/Timer_Synth.c ****         
  51:Generated_Source\PSoC4/Timer_Synth.c ****          /* Set other values */
  52:Generated_Source\PSoC4/Timer_Synth.c ****         Timer_Synth_SetCounterMode(Timer_Synth_COUNT_DOWN);
  53:Generated_Source\PSoC4/Timer_Synth.c ****         Timer_Synth_WritePeriod(Timer_Synth_QUAD_PERIOD_INIT_VALUE);
  54:Generated_Source\PSoC4/Timer_Synth.c ****         Timer_Synth_WriteCounter(Timer_Synth_QUAD_PERIOD_INIT_VALUE);
  55:Generated_Source\PSoC4/Timer_Synth.c ****     #endif  /* (Timer_Synth__QUAD == Timer_Synth_CONFIG) */
  56:Generated_Source\PSoC4/Timer_Synth.c **** 
  57:Generated_Source\PSoC4/Timer_Synth.c ****     #if (Timer_Synth__TIMER == Timer_Synth_CONFIG)
  58:Generated_Source\PSoC4/Timer_Synth.c ****         Timer_Synth_CONTROL_REG = Timer_Synth_CTRL_TIMER_BASE_CONFIG;
  28              		.loc 1 58 0
  29 0000 8022     		mov	r2, #128
  30 0002 084B     		ldr	r3, .L2
  31 0004 9204     		lsl	r2, r2, #18
  32 0006 1A60     		str	r2, [r3]
  59:Generated_Source\PSoC4/Timer_Synth.c ****         
  60:Generated_Source\PSoC4/Timer_Synth.c ****         /* Set values from customizer to CTRL1 */
  61:Generated_Source\PSoC4/Timer_Synth.c ****         Timer_Synth_TRIG_CONTROL1_REG  = Timer_Synth_TIMER_SIGNALS_MODES;
  33              		.loc 1 61 0
  34 0008 0C22     		mov	r2, #12
  35 000a 074B     		ldr	r3, .L2+4
  62:Generated_Source\PSoC4/Timer_Synth.c ****     
  63:Generated_Source\PSoC4/Timer_Synth.c ****         /* Set values from customizer to INTR */
  64:Generated_Source\PSoC4/Timer_Synth.c ****         Timer_Synth_SetInterruptMode(Timer_Synth_TC_INTERRUPT_MASK);
  65:Generated_Source\PSoC4/Timer_Synth.c ****         
  66:Generated_Source\PSoC4/Timer_Synth.c ****         /* Set other values from customizer */
  67:Generated_Source\PSoC4/Timer_Synth.c ****         Timer_Synth_WritePeriod(Timer_Synth_TC_PERIOD_VALUE );
  68:Generated_Source\PSoC4/Timer_Synth.c **** 
  69:Generated_Source\PSoC4/Timer_Synth.c ****         #if (Timer_Synth__COMPARE == Timer_Synth_TC_COMP_CAP_MODE)
  70:Generated_Source\PSoC4/Timer_Synth.c ****             Timer_Synth_WriteCompare(Timer_Synth_TC_COMPARE_VALUE);
  71:Generated_Source\PSoC4/Timer_Synth.c **** 
  72:Generated_Source\PSoC4/Timer_Synth.c ****             #if (1u == Timer_Synth_TC_COMPARE_SWAP)
  73:Generated_Source\PSoC4/Timer_Synth.c ****                 Timer_Synth_SetCompareSwap(1u);
  74:Generated_Source\PSoC4/Timer_Synth.c ****                 Timer_Synth_WriteCompareBuf(Timer_Synth_TC_COMPARE_BUF_VALUE);
  75:Generated_Source\PSoC4/Timer_Synth.c ****             #endif  /* (1u == Timer_Synth_TC_COMPARE_SWAP) */
  76:Generated_Source\PSoC4/Timer_Synth.c ****         #endif  /* (Timer_Synth__COMPARE == Timer_Synth_TC_COMP_CAP_MODE) */
  77:Generated_Source\PSoC4/Timer_Synth.c **** 
  78:Generated_Source\PSoC4/Timer_Synth.c ****         /* Initialize counter value */
  79:Generated_Source\PSoC4/Timer_Synth.c ****         #if (Timer_Synth_CY_TCPWM_V2 && Timer_Synth_TIMER_UPDOWN_CNT_USED && !Timer_Synth_CY_TCPWM_
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccrnaKHI.s 			page 3


  80:Generated_Source\PSoC4/Timer_Synth.c ****             Timer_Synth_WriteCounter(1u);
  81:Generated_Source\PSoC4/Timer_Synth.c ****         #elif(Timer_Synth__COUNT_DOWN == Timer_Synth_TC_COUNTER_MODE)
  82:Generated_Source\PSoC4/Timer_Synth.c ****             Timer_Synth_WriteCounter(Timer_Synth_TC_PERIOD_VALUE);
  83:Generated_Source\PSoC4/Timer_Synth.c ****         #else
  84:Generated_Source\PSoC4/Timer_Synth.c ****             Timer_Synth_WriteCounter(0u);
  85:Generated_Source\PSoC4/Timer_Synth.c ****         #endif /* (Timer_Synth_CY_TCPWM_V2 && Timer_Synth_TIMER_UPDOWN_CNT_USED && !Timer_Synth_CY_
  86:Generated_Source\PSoC4/Timer_Synth.c ****     #endif  /* (Timer_Synth__TIMER == Timer_Synth_CONFIG) */
  87:Generated_Source\PSoC4/Timer_Synth.c **** 
  88:Generated_Source\PSoC4/Timer_Synth.c ****     #if (Timer_Synth__PWM_SEL == Timer_Synth_CONFIG)
  89:Generated_Source\PSoC4/Timer_Synth.c ****         Timer_Synth_CONTROL_REG = Timer_Synth_CTRL_PWM_BASE_CONFIG;
  90:Generated_Source\PSoC4/Timer_Synth.c **** 
  91:Generated_Source\PSoC4/Timer_Synth.c ****         #if (Timer_Synth__PWM_PR == Timer_Synth_PWM_MODE)
  92:Generated_Source\PSoC4/Timer_Synth.c ****             Timer_Synth_CONTROL_REG |= Timer_Synth_CTRL_PWM_RUN_MODE;
  93:Generated_Source\PSoC4/Timer_Synth.c ****             Timer_Synth_WriteCounter(Timer_Synth_PWM_PR_INIT_VALUE);
  94:Generated_Source\PSoC4/Timer_Synth.c ****         #else
  95:Generated_Source\PSoC4/Timer_Synth.c ****             Timer_Synth_CONTROL_REG |= Timer_Synth_CTRL_PWM_ALIGN | Timer_Synth_CTRL_PWM_KILL_EVENT
  96:Generated_Source\PSoC4/Timer_Synth.c ****             
  97:Generated_Source\PSoC4/Timer_Synth.c ****             /* Initialize counter value */
  98:Generated_Source\PSoC4/Timer_Synth.c ****             #if (Timer_Synth_CY_TCPWM_V2 && Timer_Synth_PWM_UPDOWN_CNT_USED && !Timer_Synth_CY_TCPW
  99:Generated_Source\PSoC4/Timer_Synth.c ****                 Timer_Synth_WriteCounter(1u);
 100:Generated_Source\PSoC4/Timer_Synth.c ****             #elif (Timer_Synth__RIGHT == Timer_Synth_PWM_ALIGN)
 101:Generated_Source\PSoC4/Timer_Synth.c ****                 Timer_Synth_WriteCounter(Timer_Synth_PWM_PERIOD_VALUE);
 102:Generated_Source\PSoC4/Timer_Synth.c ****             #else 
 103:Generated_Source\PSoC4/Timer_Synth.c ****                 Timer_Synth_WriteCounter(0u);
 104:Generated_Source\PSoC4/Timer_Synth.c ****             #endif  /* (Timer_Synth_CY_TCPWM_V2 && Timer_Synth_PWM_UPDOWN_CNT_USED && !Timer_Synth_
 105:Generated_Source\PSoC4/Timer_Synth.c ****         #endif  /* (Timer_Synth__PWM_PR == Timer_Synth_PWM_MODE) */
 106:Generated_Source\PSoC4/Timer_Synth.c **** 
 107:Generated_Source\PSoC4/Timer_Synth.c ****         #if (Timer_Synth__PWM_DT == Timer_Synth_PWM_MODE)
 108:Generated_Source\PSoC4/Timer_Synth.c ****             Timer_Synth_CONTROL_REG |= Timer_Synth_CTRL_PWM_DEAD_TIME_CYCLE;
 109:Generated_Source\PSoC4/Timer_Synth.c ****         #endif  /* (Timer_Synth__PWM_DT == Timer_Synth_PWM_MODE) */
 110:Generated_Source\PSoC4/Timer_Synth.c **** 
 111:Generated_Source\PSoC4/Timer_Synth.c ****         #if (Timer_Synth__PWM == Timer_Synth_PWM_MODE)
 112:Generated_Source\PSoC4/Timer_Synth.c ****             Timer_Synth_CONTROL_REG |= Timer_Synth_CTRL_PWM_PRESCALER;
 113:Generated_Source\PSoC4/Timer_Synth.c ****         #endif  /* (Timer_Synth__PWM == Timer_Synth_PWM_MODE) */
 114:Generated_Source\PSoC4/Timer_Synth.c **** 
 115:Generated_Source\PSoC4/Timer_Synth.c ****         /* Set values from customizer to CTRL1 */
 116:Generated_Source\PSoC4/Timer_Synth.c ****         Timer_Synth_TRIG_CONTROL1_REG  = Timer_Synth_PWM_SIGNALS_MODES;
 117:Generated_Source\PSoC4/Timer_Synth.c ****     
 118:Generated_Source\PSoC4/Timer_Synth.c ****         /* Set values from customizer to INTR */
 119:Generated_Source\PSoC4/Timer_Synth.c ****         Timer_Synth_SetInterruptMode(Timer_Synth_PWM_INTERRUPT_MASK);
 120:Generated_Source\PSoC4/Timer_Synth.c **** 
 121:Generated_Source\PSoC4/Timer_Synth.c ****         /* Set values from customizer to CTRL2 */
 122:Generated_Source\PSoC4/Timer_Synth.c ****         #if (Timer_Synth__PWM_PR == Timer_Synth_PWM_MODE)
 123:Generated_Source\PSoC4/Timer_Synth.c ****             Timer_Synth_TRIG_CONTROL2_REG =
 124:Generated_Source\PSoC4/Timer_Synth.c ****                     (Timer_Synth_CC_MATCH_NO_CHANGE    |
 125:Generated_Source\PSoC4/Timer_Synth.c ****                     Timer_Synth_OVERLOW_NO_CHANGE      |
 126:Generated_Source\PSoC4/Timer_Synth.c ****                     Timer_Synth_UNDERFLOW_NO_CHANGE);
 127:Generated_Source\PSoC4/Timer_Synth.c ****         #else
 128:Generated_Source\PSoC4/Timer_Synth.c ****             #if (Timer_Synth__LEFT == Timer_Synth_PWM_ALIGN)
 129:Generated_Source\PSoC4/Timer_Synth.c ****                 Timer_Synth_TRIG_CONTROL2_REG = Timer_Synth_PWM_MODE_LEFT;
 130:Generated_Source\PSoC4/Timer_Synth.c ****             #endif  /* ( Timer_Synth_PWM_LEFT == Timer_Synth_PWM_ALIGN) */
 131:Generated_Source\PSoC4/Timer_Synth.c **** 
 132:Generated_Source\PSoC4/Timer_Synth.c ****             #if (Timer_Synth__RIGHT == Timer_Synth_PWM_ALIGN)
 133:Generated_Source\PSoC4/Timer_Synth.c ****                 Timer_Synth_TRIG_CONTROL2_REG = Timer_Synth_PWM_MODE_RIGHT;
 134:Generated_Source\PSoC4/Timer_Synth.c ****             #endif  /* ( Timer_Synth_PWM_RIGHT == Timer_Synth_PWM_ALIGN) */
 135:Generated_Source\PSoC4/Timer_Synth.c **** 
 136:Generated_Source\PSoC4/Timer_Synth.c ****             #if (Timer_Synth__CENTER == Timer_Synth_PWM_ALIGN)
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccrnaKHI.s 			page 4


 137:Generated_Source\PSoC4/Timer_Synth.c ****                 Timer_Synth_TRIG_CONTROL2_REG = Timer_Synth_PWM_MODE_CENTER;
 138:Generated_Source\PSoC4/Timer_Synth.c ****             #endif  /* ( Timer_Synth_PWM_CENTER == Timer_Synth_PWM_ALIGN) */
 139:Generated_Source\PSoC4/Timer_Synth.c **** 
 140:Generated_Source\PSoC4/Timer_Synth.c ****             #if (Timer_Synth__ASYMMETRIC == Timer_Synth_PWM_ALIGN)
 141:Generated_Source\PSoC4/Timer_Synth.c ****                 Timer_Synth_TRIG_CONTROL2_REG = Timer_Synth_PWM_MODE_ASYM;
 142:Generated_Source\PSoC4/Timer_Synth.c ****             #endif  /* (Timer_Synth__ASYMMETRIC == Timer_Synth_PWM_ALIGN) */
 143:Generated_Source\PSoC4/Timer_Synth.c ****         #endif  /* (Timer_Synth__PWM_PR == Timer_Synth_PWM_MODE) */
 144:Generated_Source\PSoC4/Timer_Synth.c **** 
 145:Generated_Source\PSoC4/Timer_Synth.c ****         /* Set other values from customizer */
 146:Generated_Source\PSoC4/Timer_Synth.c ****         Timer_Synth_WritePeriod(Timer_Synth_PWM_PERIOD_VALUE );
 147:Generated_Source\PSoC4/Timer_Synth.c ****         Timer_Synth_WriteCompare(Timer_Synth_PWM_COMPARE_VALUE);
 148:Generated_Source\PSoC4/Timer_Synth.c **** 
 149:Generated_Source\PSoC4/Timer_Synth.c ****         #if (1u == Timer_Synth_PWM_COMPARE_SWAP)
 150:Generated_Source\PSoC4/Timer_Synth.c ****             Timer_Synth_SetCompareSwap(1u);
 151:Generated_Source\PSoC4/Timer_Synth.c ****             Timer_Synth_WriteCompareBuf(Timer_Synth_PWM_COMPARE_BUF_VALUE);
 152:Generated_Source\PSoC4/Timer_Synth.c ****         #endif  /* (1u == Timer_Synth_PWM_COMPARE_SWAP) */
 153:Generated_Source\PSoC4/Timer_Synth.c **** 
 154:Generated_Source\PSoC4/Timer_Synth.c ****         #if (1u == Timer_Synth_PWM_PERIOD_SWAP)
 155:Generated_Source\PSoC4/Timer_Synth.c ****             Timer_Synth_SetPeriodSwap(1u);
 156:Generated_Source\PSoC4/Timer_Synth.c ****             Timer_Synth_WritePeriodBuf(Timer_Synth_PWM_PERIOD_BUF_VALUE);
 157:Generated_Source\PSoC4/Timer_Synth.c ****         #endif  /* (1u == Timer_Synth_PWM_PERIOD_SWAP) */
 158:Generated_Source\PSoC4/Timer_Synth.c ****     #endif  /* (Timer_Synth__PWM_SEL == Timer_Synth_CONFIG) */
 159:Generated_Source\PSoC4/Timer_Synth.c ****     
 160:Generated_Source\PSoC4/Timer_Synth.c **** }
  36              		.loc 1 160 0
  37              		@ sp needed
  61:Generated_Source\PSoC4/Timer_Synth.c ****     
  38              		.loc 1 61 0
  39 000c 1A60     		str	r2, [r3]
  40              	.LVL0:
  41              	.LBB8:
  42              	.LBB9:
 161:Generated_Source\PSoC4/Timer_Synth.c **** 
 162:Generated_Source\PSoC4/Timer_Synth.c **** 
 163:Generated_Source\PSoC4/Timer_Synth.c **** /*******************************************************************************
 164:Generated_Source\PSoC4/Timer_Synth.c **** * Function Name: Timer_Synth_Enable
 165:Generated_Source\PSoC4/Timer_Synth.c **** ********************************************************************************
 166:Generated_Source\PSoC4/Timer_Synth.c **** *
 167:Generated_Source\PSoC4/Timer_Synth.c **** * Summary:
 168:Generated_Source\PSoC4/Timer_Synth.c **** *  Enables the Timer_Synth.
 169:Generated_Source\PSoC4/Timer_Synth.c **** *
 170:Generated_Source\PSoC4/Timer_Synth.c **** * Parameters:
 171:Generated_Source\PSoC4/Timer_Synth.c **** *  None
 172:Generated_Source\PSoC4/Timer_Synth.c **** *
 173:Generated_Source\PSoC4/Timer_Synth.c **** * Return:
 174:Generated_Source\PSoC4/Timer_Synth.c **** *  None
 175:Generated_Source\PSoC4/Timer_Synth.c **** *
 176:Generated_Source\PSoC4/Timer_Synth.c **** *******************************************************************************/
 177:Generated_Source\PSoC4/Timer_Synth.c **** void Timer_Synth_Enable(void)
 178:Generated_Source\PSoC4/Timer_Synth.c **** {
 179:Generated_Source\PSoC4/Timer_Synth.c ****     uint8 enableInterrupts;
 180:Generated_Source\PSoC4/Timer_Synth.c **** 
 181:Generated_Source\PSoC4/Timer_Synth.c ****     enableInterrupts = CyEnterCriticalSection();
 182:Generated_Source\PSoC4/Timer_Synth.c ****     Timer_Synth_BLOCK_CONTROL_REG |= Timer_Synth_MASK;
 183:Generated_Source\PSoC4/Timer_Synth.c ****     CyExitCriticalSection(enableInterrupts);
 184:Generated_Source\PSoC4/Timer_Synth.c **** 
 185:Generated_Source\PSoC4/Timer_Synth.c ****     /* Start Timer or PWM if start input is absent */
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccrnaKHI.s 			page 5


 186:Generated_Source\PSoC4/Timer_Synth.c ****     #if (Timer_Synth__PWM_SEL == Timer_Synth_CONFIG)
 187:Generated_Source\PSoC4/Timer_Synth.c ****         #if (0u == Timer_Synth_PWM_START_SIGNAL_PRESENT)
 188:Generated_Source\PSoC4/Timer_Synth.c ****             Timer_Synth_TriggerCommand(Timer_Synth_MASK, Timer_Synth_CMD_START);
 189:Generated_Source\PSoC4/Timer_Synth.c ****         #endif /* (0u == Timer_Synth_PWM_START_SIGNAL_PRESENT) */
 190:Generated_Source\PSoC4/Timer_Synth.c ****     #endif /* (Timer_Synth__PWM_SEL == Timer_Synth_CONFIG) */
 191:Generated_Source\PSoC4/Timer_Synth.c **** 
 192:Generated_Source\PSoC4/Timer_Synth.c ****     #if (Timer_Synth__TIMER == Timer_Synth_CONFIG)
 193:Generated_Source\PSoC4/Timer_Synth.c ****         #if (0u == Timer_Synth_TC_START_SIGNAL_PRESENT)
 194:Generated_Source\PSoC4/Timer_Synth.c ****             Timer_Synth_TriggerCommand(Timer_Synth_MASK, Timer_Synth_CMD_START);
 195:Generated_Source\PSoC4/Timer_Synth.c ****         #endif /* (0u == Timer_Synth_TC_START_SIGNAL_PRESENT) */
 196:Generated_Source\PSoC4/Timer_Synth.c ****     #endif /* (Timer_Synth__TIMER == Timer_Synth_CONFIG) */
 197:Generated_Source\PSoC4/Timer_Synth.c ****     
 198:Generated_Source\PSoC4/Timer_Synth.c ****     #if (Timer_Synth__QUAD == Timer_Synth_CONFIG)
 199:Generated_Source\PSoC4/Timer_Synth.c ****         #if (0u != Timer_Synth_QUAD_AUTO_START)
 200:Generated_Source\PSoC4/Timer_Synth.c ****             Timer_Synth_TriggerCommand(Timer_Synth_MASK, Timer_Synth_CMD_RELOAD);
 201:Generated_Source\PSoC4/Timer_Synth.c ****         #endif /* (0u != Timer_Synth_QUAD_AUTO_START) */
 202:Generated_Source\PSoC4/Timer_Synth.c ****     #endif  /* (Timer_Synth__QUAD == Timer_Synth_CONFIG) */
 203:Generated_Source\PSoC4/Timer_Synth.c **** }
 204:Generated_Source\PSoC4/Timer_Synth.c **** 
 205:Generated_Source\PSoC4/Timer_Synth.c **** 
 206:Generated_Source\PSoC4/Timer_Synth.c **** /*******************************************************************************
 207:Generated_Source\PSoC4/Timer_Synth.c **** * Function Name: Timer_Synth_Start
 208:Generated_Source\PSoC4/Timer_Synth.c **** ********************************************************************************
 209:Generated_Source\PSoC4/Timer_Synth.c **** *
 210:Generated_Source\PSoC4/Timer_Synth.c **** * Summary:
 211:Generated_Source\PSoC4/Timer_Synth.c **** *  Initializes the Timer_Synth with default customizer
 212:Generated_Source\PSoC4/Timer_Synth.c **** *  values when called the first time and enables the Timer_Synth.
 213:Generated_Source\PSoC4/Timer_Synth.c **** *  For subsequent calls the configuration is left unchanged and the component is
 214:Generated_Source\PSoC4/Timer_Synth.c **** *  just enabled.
 215:Generated_Source\PSoC4/Timer_Synth.c **** *
 216:Generated_Source\PSoC4/Timer_Synth.c **** * Parameters:
 217:Generated_Source\PSoC4/Timer_Synth.c **** *  None
 218:Generated_Source\PSoC4/Timer_Synth.c **** *
 219:Generated_Source\PSoC4/Timer_Synth.c **** * Return:
 220:Generated_Source\PSoC4/Timer_Synth.c **** *  None
 221:Generated_Source\PSoC4/Timer_Synth.c **** *
 222:Generated_Source\PSoC4/Timer_Synth.c **** * Global variables:
 223:Generated_Source\PSoC4/Timer_Synth.c **** *  Timer_Synth_initVar: global variable is used to indicate initial
 224:Generated_Source\PSoC4/Timer_Synth.c **** *  configuration of this component.  The variable is initialized to zero and set
 225:Generated_Source\PSoC4/Timer_Synth.c **** *  to 1 the first time Timer_Synth_Start() is called. This allows
 226:Generated_Source\PSoC4/Timer_Synth.c **** *  enabling/disabling a component without re-initialization in all subsequent
 227:Generated_Source\PSoC4/Timer_Synth.c **** *  calls to the Timer_Synth_Start() routine.
 228:Generated_Source\PSoC4/Timer_Synth.c **** *
 229:Generated_Source\PSoC4/Timer_Synth.c **** *******************************************************************************/
 230:Generated_Source\PSoC4/Timer_Synth.c **** void Timer_Synth_Start(void)
 231:Generated_Source\PSoC4/Timer_Synth.c **** {
 232:Generated_Source\PSoC4/Timer_Synth.c ****     if (0u == Timer_Synth_initVar)
 233:Generated_Source\PSoC4/Timer_Synth.c ****     {
 234:Generated_Source\PSoC4/Timer_Synth.c ****         Timer_Synth_Init();
 235:Generated_Source\PSoC4/Timer_Synth.c ****         Timer_Synth_initVar = 1u;
 236:Generated_Source\PSoC4/Timer_Synth.c ****     }
 237:Generated_Source\PSoC4/Timer_Synth.c **** 
 238:Generated_Source\PSoC4/Timer_Synth.c ****     Timer_Synth_Enable();
 239:Generated_Source\PSoC4/Timer_Synth.c **** }
 240:Generated_Source\PSoC4/Timer_Synth.c **** 
 241:Generated_Source\PSoC4/Timer_Synth.c **** 
 242:Generated_Source\PSoC4/Timer_Synth.c **** /*******************************************************************************
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccrnaKHI.s 			page 6


 243:Generated_Source\PSoC4/Timer_Synth.c **** * Function Name: Timer_Synth_Stop
 244:Generated_Source\PSoC4/Timer_Synth.c **** ********************************************************************************
 245:Generated_Source\PSoC4/Timer_Synth.c **** *
 246:Generated_Source\PSoC4/Timer_Synth.c **** * Summary:
 247:Generated_Source\PSoC4/Timer_Synth.c **** *  Disables the Timer_Synth.
 248:Generated_Source\PSoC4/Timer_Synth.c **** *
 249:Generated_Source\PSoC4/Timer_Synth.c **** * Parameters:
 250:Generated_Source\PSoC4/Timer_Synth.c **** *  None
 251:Generated_Source\PSoC4/Timer_Synth.c **** *
 252:Generated_Source\PSoC4/Timer_Synth.c **** * Return:
 253:Generated_Source\PSoC4/Timer_Synth.c **** *  None
 254:Generated_Source\PSoC4/Timer_Synth.c **** *
 255:Generated_Source\PSoC4/Timer_Synth.c **** *******************************************************************************/
 256:Generated_Source\PSoC4/Timer_Synth.c **** void Timer_Synth_Stop(void)
 257:Generated_Source\PSoC4/Timer_Synth.c **** {
 258:Generated_Source\PSoC4/Timer_Synth.c ****     uint8 enableInterrupts;
 259:Generated_Source\PSoC4/Timer_Synth.c **** 
 260:Generated_Source\PSoC4/Timer_Synth.c ****     enableInterrupts = CyEnterCriticalSection();
 261:Generated_Source\PSoC4/Timer_Synth.c **** 
 262:Generated_Source\PSoC4/Timer_Synth.c ****     Timer_Synth_BLOCK_CONTROL_REG &= (uint32)~Timer_Synth_MASK;
 263:Generated_Source\PSoC4/Timer_Synth.c **** 
 264:Generated_Source\PSoC4/Timer_Synth.c ****     CyExitCriticalSection(enableInterrupts);
 265:Generated_Source\PSoC4/Timer_Synth.c **** }
 266:Generated_Source\PSoC4/Timer_Synth.c **** 
 267:Generated_Source\PSoC4/Timer_Synth.c **** 
 268:Generated_Source\PSoC4/Timer_Synth.c **** /*******************************************************************************
 269:Generated_Source\PSoC4/Timer_Synth.c **** * Function Name: Timer_Synth_SetMode
 270:Generated_Source\PSoC4/Timer_Synth.c **** ********************************************************************************
 271:Generated_Source\PSoC4/Timer_Synth.c **** *
 272:Generated_Source\PSoC4/Timer_Synth.c **** * Summary:
 273:Generated_Source\PSoC4/Timer_Synth.c **** *  Sets the operation mode of the Timer_Synth. This function is used when
 274:Generated_Source\PSoC4/Timer_Synth.c **** *  configured as a generic Timer_Synth and the actual mode of operation is
 275:Generated_Source\PSoC4/Timer_Synth.c **** *  set at runtime. The mode must be set while the component is disabled.
 276:Generated_Source\PSoC4/Timer_Synth.c **** *
 277:Generated_Source\PSoC4/Timer_Synth.c **** * Parameters:
 278:Generated_Source\PSoC4/Timer_Synth.c **** *  mode: Mode for the Timer_Synth to operate in
 279:Generated_Source\PSoC4/Timer_Synth.c **** *   Values:
 280:Generated_Source\PSoC4/Timer_Synth.c **** *   - Timer_Synth_MODE_TIMER_COMPARE - Timer / Counter with
 281:Generated_Source\PSoC4/Timer_Synth.c **** *                                                 compare capability
 282:Generated_Source\PSoC4/Timer_Synth.c **** *         - Timer_Synth_MODE_TIMER_CAPTURE - Timer / Counter with
 283:Generated_Source\PSoC4/Timer_Synth.c **** *                                                 capture capability
 284:Generated_Source\PSoC4/Timer_Synth.c **** *         - Timer_Synth_MODE_QUAD - Quadrature decoder
 285:Generated_Source\PSoC4/Timer_Synth.c **** *         - Timer_Synth_MODE_PWM - PWM
 286:Generated_Source\PSoC4/Timer_Synth.c **** *         - Timer_Synth_MODE_PWM_DT - PWM with dead time
 287:Generated_Source\PSoC4/Timer_Synth.c **** *         - Timer_Synth_MODE_PWM_PR - PWM with pseudo random capability
 288:Generated_Source\PSoC4/Timer_Synth.c **** *
 289:Generated_Source\PSoC4/Timer_Synth.c **** * Return:
 290:Generated_Source\PSoC4/Timer_Synth.c **** *  None
 291:Generated_Source\PSoC4/Timer_Synth.c **** *
 292:Generated_Source\PSoC4/Timer_Synth.c **** *******************************************************************************/
 293:Generated_Source\PSoC4/Timer_Synth.c **** void Timer_Synth_SetMode(uint32 mode)
 294:Generated_Source\PSoC4/Timer_Synth.c **** {
 295:Generated_Source\PSoC4/Timer_Synth.c ****     uint8 enableInterrupts;
 296:Generated_Source\PSoC4/Timer_Synth.c **** 
 297:Generated_Source\PSoC4/Timer_Synth.c ****     enableInterrupts = CyEnterCriticalSection();
 298:Generated_Source\PSoC4/Timer_Synth.c **** 
 299:Generated_Source\PSoC4/Timer_Synth.c ****     Timer_Synth_CONTROL_REG &= (uint32)~Timer_Synth_MODE_MASK;
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccrnaKHI.s 			page 7


 300:Generated_Source\PSoC4/Timer_Synth.c ****     Timer_Synth_CONTROL_REG |= mode;
 301:Generated_Source\PSoC4/Timer_Synth.c **** 
 302:Generated_Source\PSoC4/Timer_Synth.c ****     CyExitCriticalSection(enableInterrupts);
 303:Generated_Source\PSoC4/Timer_Synth.c **** }
 304:Generated_Source\PSoC4/Timer_Synth.c **** 
 305:Generated_Source\PSoC4/Timer_Synth.c **** 
 306:Generated_Source\PSoC4/Timer_Synth.c **** /*******************************************************************************
 307:Generated_Source\PSoC4/Timer_Synth.c **** * Function Name: Timer_Synth_SetQDMode
 308:Generated_Source\PSoC4/Timer_Synth.c **** ********************************************************************************
 309:Generated_Source\PSoC4/Timer_Synth.c **** *
 310:Generated_Source\PSoC4/Timer_Synth.c **** * Summary:
 311:Generated_Source\PSoC4/Timer_Synth.c **** *  Sets the the Quadrature Decoder to one of the 3 supported modes.
 312:Generated_Source\PSoC4/Timer_Synth.c **** *  Its functionality is only applicable to Quadrature Decoder operation.
 313:Generated_Source\PSoC4/Timer_Synth.c **** *
 314:Generated_Source\PSoC4/Timer_Synth.c **** * Parameters:
 315:Generated_Source\PSoC4/Timer_Synth.c **** *  qdMode: Quadrature Decoder mode
 316:Generated_Source\PSoC4/Timer_Synth.c **** *   Values:
 317:Generated_Source\PSoC4/Timer_Synth.c **** *         - Timer_Synth_MODE_X1 - Counts on phi 1 rising
 318:Generated_Source\PSoC4/Timer_Synth.c **** *         - Timer_Synth_MODE_X2 - Counts on both edges of phi1 (2x faster)
 319:Generated_Source\PSoC4/Timer_Synth.c **** *         - Timer_Synth_MODE_X4 - Counts on both edges of phi1 and phi2
 320:Generated_Source\PSoC4/Timer_Synth.c **** *                                        (4x faster)
 321:Generated_Source\PSoC4/Timer_Synth.c **** *
 322:Generated_Source\PSoC4/Timer_Synth.c **** * Return:
 323:Generated_Source\PSoC4/Timer_Synth.c **** *  None
 324:Generated_Source\PSoC4/Timer_Synth.c **** *
 325:Generated_Source\PSoC4/Timer_Synth.c **** *******************************************************************************/
 326:Generated_Source\PSoC4/Timer_Synth.c **** void Timer_Synth_SetQDMode(uint32 qdMode)
 327:Generated_Source\PSoC4/Timer_Synth.c **** {
 328:Generated_Source\PSoC4/Timer_Synth.c ****     uint8 enableInterrupts;
 329:Generated_Source\PSoC4/Timer_Synth.c **** 
 330:Generated_Source\PSoC4/Timer_Synth.c ****     enableInterrupts = CyEnterCriticalSection();
 331:Generated_Source\PSoC4/Timer_Synth.c **** 
 332:Generated_Source\PSoC4/Timer_Synth.c ****     Timer_Synth_CONTROL_REG &= (uint32)~Timer_Synth_QUAD_MODE_MASK;
 333:Generated_Source\PSoC4/Timer_Synth.c ****     Timer_Synth_CONTROL_REG |= qdMode;
 334:Generated_Source\PSoC4/Timer_Synth.c **** 
 335:Generated_Source\PSoC4/Timer_Synth.c ****     CyExitCriticalSection(enableInterrupts);
 336:Generated_Source\PSoC4/Timer_Synth.c **** }
 337:Generated_Source\PSoC4/Timer_Synth.c **** 
 338:Generated_Source\PSoC4/Timer_Synth.c **** 
 339:Generated_Source\PSoC4/Timer_Synth.c **** /*******************************************************************************
 340:Generated_Source\PSoC4/Timer_Synth.c **** * Function Name: Timer_Synth_SetPrescaler
 341:Generated_Source\PSoC4/Timer_Synth.c **** ********************************************************************************
 342:Generated_Source\PSoC4/Timer_Synth.c **** *
 343:Generated_Source\PSoC4/Timer_Synth.c **** * Summary:
 344:Generated_Source\PSoC4/Timer_Synth.c **** *  Sets the prescaler value that is applied to the clock input.  Not applicable
 345:Generated_Source\PSoC4/Timer_Synth.c **** *  to a PWM with the dead time mode or Quadrature Decoder mode.
 346:Generated_Source\PSoC4/Timer_Synth.c **** *
 347:Generated_Source\PSoC4/Timer_Synth.c **** * Parameters:
 348:Generated_Source\PSoC4/Timer_Synth.c **** *  prescaler: Prescaler divider value
 349:Generated_Source\PSoC4/Timer_Synth.c **** *   Values:
 350:Generated_Source\PSoC4/Timer_Synth.c **** *         - Timer_Synth_PRESCALE_DIVBY1    - Divide by 1 (no prescaling)
 351:Generated_Source\PSoC4/Timer_Synth.c **** *         - Timer_Synth_PRESCALE_DIVBY2    - Divide by 2
 352:Generated_Source\PSoC4/Timer_Synth.c **** *         - Timer_Synth_PRESCALE_DIVBY4    - Divide by 4
 353:Generated_Source\PSoC4/Timer_Synth.c **** *         - Timer_Synth_PRESCALE_DIVBY8    - Divide by 8
 354:Generated_Source\PSoC4/Timer_Synth.c **** *         - Timer_Synth_PRESCALE_DIVBY16   - Divide by 16
 355:Generated_Source\PSoC4/Timer_Synth.c **** *         - Timer_Synth_PRESCALE_DIVBY32   - Divide by 32
 356:Generated_Source\PSoC4/Timer_Synth.c **** *         - Timer_Synth_PRESCALE_DIVBY64   - Divide by 64
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccrnaKHI.s 			page 8


 357:Generated_Source\PSoC4/Timer_Synth.c **** *         - Timer_Synth_PRESCALE_DIVBY128  - Divide by 128
 358:Generated_Source\PSoC4/Timer_Synth.c **** *
 359:Generated_Source\PSoC4/Timer_Synth.c **** * Return:
 360:Generated_Source\PSoC4/Timer_Synth.c **** *  None
 361:Generated_Source\PSoC4/Timer_Synth.c **** *
 362:Generated_Source\PSoC4/Timer_Synth.c **** *******************************************************************************/
 363:Generated_Source\PSoC4/Timer_Synth.c **** void Timer_Synth_SetPrescaler(uint32 prescaler)
 364:Generated_Source\PSoC4/Timer_Synth.c **** {
 365:Generated_Source\PSoC4/Timer_Synth.c ****     uint8 enableInterrupts;
 366:Generated_Source\PSoC4/Timer_Synth.c **** 
 367:Generated_Source\PSoC4/Timer_Synth.c ****     enableInterrupts = CyEnterCriticalSection();
 368:Generated_Source\PSoC4/Timer_Synth.c **** 
 369:Generated_Source\PSoC4/Timer_Synth.c ****     Timer_Synth_CONTROL_REG &= (uint32)~Timer_Synth_PRESCALER_MASK;
 370:Generated_Source\PSoC4/Timer_Synth.c ****     Timer_Synth_CONTROL_REG |= prescaler;
 371:Generated_Source\PSoC4/Timer_Synth.c **** 
 372:Generated_Source\PSoC4/Timer_Synth.c ****     CyExitCriticalSection(enableInterrupts);
 373:Generated_Source\PSoC4/Timer_Synth.c **** }
 374:Generated_Source\PSoC4/Timer_Synth.c **** 
 375:Generated_Source\PSoC4/Timer_Synth.c **** 
 376:Generated_Source\PSoC4/Timer_Synth.c **** /*******************************************************************************
 377:Generated_Source\PSoC4/Timer_Synth.c **** * Function Name: Timer_Synth_SetOneShot
 378:Generated_Source\PSoC4/Timer_Synth.c **** ********************************************************************************
 379:Generated_Source\PSoC4/Timer_Synth.c **** *
 380:Generated_Source\PSoC4/Timer_Synth.c **** * Summary:
 381:Generated_Source\PSoC4/Timer_Synth.c **** *  Writes the register that controls whether the Timer_Synth runs
 382:Generated_Source\PSoC4/Timer_Synth.c **** *  continuously or stops when terminal count is reached.  By default the
 383:Generated_Source\PSoC4/Timer_Synth.c **** *  Timer_Synth operates in the continuous mode.
 384:Generated_Source\PSoC4/Timer_Synth.c **** *
 385:Generated_Source\PSoC4/Timer_Synth.c **** * Parameters:
 386:Generated_Source\PSoC4/Timer_Synth.c **** *  oneShotEnable
 387:Generated_Source\PSoC4/Timer_Synth.c **** *   Values:
 388:Generated_Source\PSoC4/Timer_Synth.c **** *     - 0 - Continuous
 389:Generated_Source\PSoC4/Timer_Synth.c **** *     - 1 - Enable One Shot
 390:Generated_Source\PSoC4/Timer_Synth.c **** *
 391:Generated_Source\PSoC4/Timer_Synth.c **** * Return:
 392:Generated_Source\PSoC4/Timer_Synth.c **** *  None
 393:Generated_Source\PSoC4/Timer_Synth.c **** *
 394:Generated_Source\PSoC4/Timer_Synth.c **** *******************************************************************************/
 395:Generated_Source\PSoC4/Timer_Synth.c **** void Timer_Synth_SetOneShot(uint32 oneShotEnable)
 396:Generated_Source\PSoC4/Timer_Synth.c **** {
 397:Generated_Source\PSoC4/Timer_Synth.c ****     uint8 enableInterrupts;
 398:Generated_Source\PSoC4/Timer_Synth.c **** 
 399:Generated_Source\PSoC4/Timer_Synth.c ****     enableInterrupts = CyEnterCriticalSection();
 400:Generated_Source\PSoC4/Timer_Synth.c **** 
 401:Generated_Source\PSoC4/Timer_Synth.c ****     Timer_Synth_CONTROL_REG &= (uint32)~Timer_Synth_ONESHOT_MASK;
 402:Generated_Source\PSoC4/Timer_Synth.c ****     Timer_Synth_CONTROL_REG |= ((uint32)((oneShotEnable & Timer_Synth_1BIT_MASK) <<
 403:Generated_Source\PSoC4/Timer_Synth.c ****                                                                Timer_Synth_ONESHOT_SHIFT));
 404:Generated_Source\PSoC4/Timer_Synth.c **** 
 405:Generated_Source\PSoC4/Timer_Synth.c ****     CyExitCriticalSection(enableInterrupts);
 406:Generated_Source\PSoC4/Timer_Synth.c **** }
 407:Generated_Source\PSoC4/Timer_Synth.c **** 
 408:Generated_Source\PSoC4/Timer_Synth.c **** 
 409:Generated_Source\PSoC4/Timer_Synth.c **** /*******************************************************************************
 410:Generated_Source\PSoC4/Timer_Synth.c **** * Function Name: Timer_Synth_SetPWMMode
 411:Generated_Source\PSoC4/Timer_Synth.c **** ********************************************************************************
 412:Generated_Source\PSoC4/Timer_Synth.c **** *
 413:Generated_Source\PSoC4/Timer_Synth.c **** * Summary:
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccrnaKHI.s 			page 9


 414:Generated_Source\PSoC4/Timer_Synth.c **** *  Writes the control register that determines what mode of operation the PWM
 415:Generated_Source\PSoC4/Timer_Synth.c **** *  output lines are driven in.  There is a setting for what to do on a
 416:Generated_Source\PSoC4/Timer_Synth.c **** *  comparison match (CC_MATCH), on an overflow (OVERFLOW) and on an underflow
 417:Generated_Source\PSoC4/Timer_Synth.c **** *  (UNDERFLOW).  The value for each of the three must be ORed together to form
 418:Generated_Source\PSoC4/Timer_Synth.c **** *  the mode.
 419:Generated_Source\PSoC4/Timer_Synth.c **** *
 420:Generated_Source\PSoC4/Timer_Synth.c **** * Parameters:
 421:Generated_Source\PSoC4/Timer_Synth.c **** *  modeMask: A combination of three mode settings.  Mask must include a value
 422:Generated_Source\PSoC4/Timer_Synth.c **** *  for each of the three or use one of the preconfigured PWM settings.
 423:Generated_Source\PSoC4/Timer_Synth.c **** *   Values:
 424:Generated_Source\PSoC4/Timer_Synth.c **** *     - CC_MATCH_SET        - Set on comparison match
 425:Generated_Source\PSoC4/Timer_Synth.c **** *     - CC_MATCH_CLEAR      - Clear on comparison match
 426:Generated_Source\PSoC4/Timer_Synth.c **** *     - CC_MATCH_INVERT     - Invert on comparison match
 427:Generated_Source\PSoC4/Timer_Synth.c **** *     - CC_MATCH_NO_CHANGE  - No change on comparison match
 428:Generated_Source\PSoC4/Timer_Synth.c **** *     - OVERLOW_SET         - Set on overflow
 429:Generated_Source\PSoC4/Timer_Synth.c **** *     - OVERLOW_CLEAR       - Clear on  overflow
 430:Generated_Source\PSoC4/Timer_Synth.c **** *     - OVERLOW_INVERT      - Invert on overflow
 431:Generated_Source\PSoC4/Timer_Synth.c **** *     - OVERLOW_NO_CHANGE   - No change on overflow
 432:Generated_Source\PSoC4/Timer_Synth.c **** *     - UNDERFLOW_SET       - Set on underflow
 433:Generated_Source\PSoC4/Timer_Synth.c **** *     - UNDERFLOW_CLEAR     - Clear on underflow
 434:Generated_Source\PSoC4/Timer_Synth.c **** *     - UNDERFLOW_INVERT    - Invert on underflow
 435:Generated_Source\PSoC4/Timer_Synth.c **** *     - UNDERFLOW_NO_CHANGE - No change on underflow
 436:Generated_Source\PSoC4/Timer_Synth.c **** *     - PWM_MODE_LEFT       - Setting for left aligned PWM.  Should be combined
 437:Generated_Source\PSoC4/Timer_Synth.c **** *                             with up counting mode
 438:Generated_Source\PSoC4/Timer_Synth.c **** *     - PWM_MODE_RIGHT      - Setting for right aligned PWM.  Should be combined
 439:Generated_Source\PSoC4/Timer_Synth.c **** *                             with down counting mode
 440:Generated_Source\PSoC4/Timer_Synth.c **** *     - PWM_MODE_CENTER     - Setting for center aligned PWM.  Should be
 441:Generated_Source\PSoC4/Timer_Synth.c **** *                             combined with up/down 0 mode
 442:Generated_Source\PSoC4/Timer_Synth.c **** *     - PWM_MODE_ASYM       - Setting for asymmetric PWM.  Should be combined
 443:Generated_Source\PSoC4/Timer_Synth.c **** *                             with up/down 1 mode
 444:Generated_Source\PSoC4/Timer_Synth.c **** *
 445:Generated_Source\PSoC4/Timer_Synth.c **** * Return:
 446:Generated_Source\PSoC4/Timer_Synth.c **** *  None
 447:Generated_Source\PSoC4/Timer_Synth.c **** *
 448:Generated_Source\PSoC4/Timer_Synth.c **** *******************************************************************************/
 449:Generated_Source\PSoC4/Timer_Synth.c **** void Timer_Synth_SetPWMMode(uint32 modeMask)
 450:Generated_Source\PSoC4/Timer_Synth.c **** {
 451:Generated_Source\PSoC4/Timer_Synth.c ****     Timer_Synth_TRIG_CONTROL2_REG = (modeMask & Timer_Synth_6BIT_MASK);
 452:Generated_Source\PSoC4/Timer_Synth.c **** }
 453:Generated_Source\PSoC4/Timer_Synth.c **** 
 454:Generated_Source\PSoC4/Timer_Synth.c **** 
 455:Generated_Source\PSoC4/Timer_Synth.c **** 
 456:Generated_Source\PSoC4/Timer_Synth.c **** /*******************************************************************************
 457:Generated_Source\PSoC4/Timer_Synth.c **** * Function Name: Timer_Synth_SetPWMSyncKill
 458:Generated_Source\PSoC4/Timer_Synth.c **** ********************************************************************************
 459:Generated_Source\PSoC4/Timer_Synth.c **** *
 460:Generated_Source\PSoC4/Timer_Synth.c **** * Summary:
 461:Generated_Source\PSoC4/Timer_Synth.c **** *  Writes the register that controls whether the PWM kill signal (stop input)
 462:Generated_Source\PSoC4/Timer_Synth.c **** *  causes asynchronous or synchronous kill operation.  By default the kill
 463:Generated_Source\PSoC4/Timer_Synth.c **** *  operation is asynchronous.  This functionality is only applicable to the PWM
 464:Generated_Source\PSoC4/Timer_Synth.c **** *  and PWM with dead time modes.
 465:Generated_Source\PSoC4/Timer_Synth.c **** *
 466:Generated_Source\PSoC4/Timer_Synth.c **** *  For Synchronous mode the kill signal disables both the line and line_n
 467:Generated_Source\PSoC4/Timer_Synth.c **** *  signals until the next terminal count.
 468:Generated_Source\PSoC4/Timer_Synth.c **** *
 469:Generated_Source\PSoC4/Timer_Synth.c **** *  For Asynchronous mode the kill signal disables both the line and line_n
 470:Generated_Source\PSoC4/Timer_Synth.c **** *  signals when the kill signal is present.  This mode should only be used
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccrnaKHI.s 			page 10


 471:Generated_Source\PSoC4/Timer_Synth.c **** *  when the kill signal (stop input) is configured in the pass through mode
 472:Generated_Source\PSoC4/Timer_Synth.c **** *  (Level sensitive signal).
 473:Generated_Source\PSoC4/Timer_Synth.c **** 
 474:Generated_Source\PSoC4/Timer_Synth.c **** *
 475:Generated_Source\PSoC4/Timer_Synth.c **** * Parameters:
 476:Generated_Source\PSoC4/Timer_Synth.c **** *  syncKillEnable
 477:Generated_Source\PSoC4/Timer_Synth.c **** *   Values:
 478:Generated_Source\PSoC4/Timer_Synth.c **** *     - 0 - Asynchronous
 479:Generated_Source\PSoC4/Timer_Synth.c **** *     - 1 - Synchronous
 480:Generated_Source\PSoC4/Timer_Synth.c **** *
 481:Generated_Source\PSoC4/Timer_Synth.c **** * Return:
 482:Generated_Source\PSoC4/Timer_Synth.c **** *  None
 483:Generated_Source\PSoC4/Timer_Synth.c **** *
 484:Generated_Source\PSoC4/Timer_Synth.c **** *******************************************************************************/
 485:Generated_Source\PSoC4/Timer_Synth.c **** void Timer_Synth_SetPWMSyncKill(uint32 syncKillEnable)
 486:Generated_Source\PSoC4/Timer_Synth.c **** {
 487:Generated_Source\PSoC4/Timer_Synth.c ****     uint8 enableInterrupts;
 488:Generated_Source\PSoC4/Timer_Synth.c **** 
 489:Generated_Source\PSoC4/Timer_Synth.c ****     enableInterrupts = CyEnterCriticalSection();
 490:Generated_Source\PSoC4/Timer_Synth.c **** 
 491:Generated_Source\PSoC4/Timer_Synth.c ****     Timer_Synth_CONTROL_REG &= (uint32)~Timer_Synth_PWM_SYNC_KILL_MASK;
 492:Generated_Source\PSoC4/Timer_Synth.c ****     Timer_Synth_CONTROL_REG |= ((uint32)((syncKillEnable & Timer_Synth_1BIT_MASK)  <<
 493:Generated_Source\PSoC4/Timer_Synth.c ****                                                Timer_Synth_PWM_SYNC_KILL_SHIFT));
 494:Generated_Source\PSoC4/Timer_Synth.c **** 
 495:Generated_Source\PSoC4/Timer_Synth.c ****     CyExitCriticalSection(enableInterrupts);
 496:Generated_Source\PSoC4/Timer_Synth.c **** }
 497:Generated_Source\PSoC4/Timer_Synth.c **** 
 498:Generated_Source\PSoC4/Timer_Synth.c **** 
 499:Generated_Source\PSoC4/Timer_Synth.c **** /*******************************************************************************
 500:Generated_Source\PSoC4/Timer_Synth.c **** * Function Name: Timer_Synth_SetPWMStopOnKill
 501:Generated_Source\PSoC4/Timer_Synth.c **** ********************************************************************************
 502:Generated_Source\PSoC4/Timer_Synth.c **** *
 503:Generated_Source\PSoC4/Timer_Synth.c **** * Summary:
 504:Generated_Source\PSoC4/Timer_Synth.c **** *  Writes the register that controls whether the PWM kill signal (stop input)
 505:Generated_Source\PSoC4/Timer_Synth.c **** *  causes the PWM counter to stop.  By default the kill operation does not stop
 506:Generated_Source\PSoC4/Timer_Synth.c **** *  the counter.  This functionality is only applicable to the three PWM modes.
 507:Generated_Source\PSoC4/Timer_Synth.c **** *
 508:Generated_Source\PSoC4/Timer_Synth.c **** *
 509:Generated_Source\PSoC4/Timer_Synth.c **** * Parameters:
 510:Generated_Source\PSoC4/Timer_Synth.c **** *  stopOnKillEnable
 511:Generated_Source\PSoC4/Timer_Synth.c **** *   Values:
 512:Generated_Source\PSoC4/Timer_Synth.c **** *     - 0 - Don't stop
 513:Generated_Source\PSoC4/Timer_Synth.c **** *     - 1 - Stop
 514:Generated_Source\PSoC4/Timer_Synth.c **** *
 515:Generated_Source\PSoC4/Timer_Synth.c **** * Return:
 516:Generated_Source\PSoC4/Timer_Synth.c **** *  None
 517:Generated_Source\PSoC4/Timer_Synth.c **** *
 518:Generated_Source\PSoC4/Timer_Synth.c **** *******************************************************************************/
 519:Generated_Source\PSoC4/Timer_Synth.c **** void Timer_Synth_SetPWMStopOnKill(uint32 stopOnKillEnable)
 520:Generated_Source\PSoC4/Timer_Synth.c **** {
 521:Generated_Source\PSoC4/Timer_Synth.c ****     uint8 enableInterrupts;
 522:Generated_Source\PSoC4/Timer_Synth.c **** 
 523:Generated_Source\PSoC4/Timer_Synth.c ****     enableInterrupts = CyEnterCriticalSection();
 524:Generated_Source\PSoC4/Timer_Synth.c **** 
 525:Generated_Source\PSoC4/Timer_Synth.c ****     Timer_Synth_CONTROL_REG &= (uint32)~Timer_Synth_PWM_STOP_KILL_MASK;
 526:Generated_Source\PSoC4/Timer_Synth.c ****     Timer_Synth_CONTROL_REG |= ((uint32)((stopOnKillEnable & Timer_Synth_1BIT_MASK)  <<
 527:Generated_Source\PSoC4/Timer_Synth.c ****                                                          Timer_Synth_PWM_STOP_KILL_SHIFT));
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccrnaKHI.s 			page 11


 528:Generated_Source\PSoC4/Timer_Synth.c **** 
 529:Generated_Source\PSoC4/Timer_Synth.c ****     CyExitCriticalSection(enableInterrupts);
 530:Generated_Source\PSoC4/Timer_Synth.c **** }
 531:Generated_Source\PSoC4/Timer_Synth.c **** 
 532:Generated_Source\PSoC4/Timer_Synth.c **** 
 533:Generated_Source\PSoC4/Timer_Synth.c **** /*******************************************************************************
 534:Generated_Source\PSoC4/Timer_Synth.c **** * Function Name: Timer_Synth_SetPWMDeadTime
 535:Generated_Source\PSoC4/Timer_Synth.c **** ********************************************************************************
 536:Generated_Source\PSoC4/Timer_Synth.c **** *
 537:Generated_Source\PSoC4/Timer_Synth.c **** * Summary:
 538:Generated_Source\PSoC4/Timer_Synth.c **** *  Writes the dead time control value.  This value delays the rising edge of
 539:Generated_Source\PSoC4/Timer_Synth.c **** *  both the line and line_n signals the designated number of cycles resulting
 540:Generated_Source\PSoC4/Timer_Synth.c **** *  in both signals being inactive for that many cycles.  This functionality is
 541:Generated_Source\PSoC4/Timer_Synth.c **** *  only applicable to the PWM in the dead time mode.
 542:Generated_Source\PSoC4/Timer_Synth.c **** 
 543:Generated_Source\PSoC4/Timer_Synth.c **** *
 544:Generated_Source\PSoC4/Timer_Synth.c **** * Parameters:
 545:Generated_Source\PSoC4/Timer_Synth.c **** *  Dead time to insert
 546:Generated_Source\PSoC4/Timer_Synth.c **** *   Values: 0 to 255
 547:Generated_Source\PSoC4/Timer_Synth.c **** *
 548:Generated_Source\PSoC4/Timer_Synth.c **** * Return:
 549:Generated_Source\PSoC4/Timer_Synth.c **** *  None
 550:Generated_Source\PSoC4/Timer_Synth.c **** *
 551:Generated_Source\PSoC4/Timer_Synth.c **** *******************************************************************************/
 552:Generated_Source\PSoC4/Timer_Synth.c **** void Timer_Synth_SetPWMDeadTime(uint32 deadTime)
 553:Generated_Source\PSoC4/Timer_Synth.c **** {
 554:Generated_Source\PSoC4/Timer_Synth.c ****     uint8 enableInterrupts;
 555:Generated_Source\PSoC4/Timer_Synth.c **** 
 556:Generated_Source\PSoC4/Timer_Synth.c ****     enableInterrupts = CyEnterCriticalSection();
 557:Generated_Source\PSoC4/Timer_Synth.c **** 
 558:Generated_Source\PSoC4/Timer_Synth.c ****     Timer_Synth_CONTROL_REG &= (uint32)~Timer_Synth_PRESCALER_MASK;
 559:Generated_Source\PSoC4/Timer_Synth.c ****     Timer_Synth_CONTROL_REG |= ((uint32)((deadTime & Timer_Synth_8BIT_MASK) <<
 560:Generated_Source\PSoC4/Timer_Synth.c ****                                                           Timer_Synth_PRESCALER_SHIFT));
 561:Generated_Source\PSoC4/Timer_Synth.c **** 
 562:Generated_Source\PSoC4/Timer_Synth.c ****     CyExitCriticalSection(enableInterrupts);
 563:Generated_Source\PSoC4/Timer_Synth.c **** }
 564:Generated_Source\PSoC4/Timer_Synth.c **** 
 565:Generated_Source\PSoC4/Timer_Synth.c **** 
 566:Generated_Source\PSoC4/Timer_Synth.c **** /*******************************************************************************
 567:Generated_Source\PSoC4/Timer_Synth.c **** * Function Name: Timer_Synth_SetPWMInvert
 568:Generated_Source\PSoC4/Timer_Synth.c **** ********************************************************************************
 569:Generated_Source\PSoC4/Timer_Synth.c **** *
 570:Generated_Source\PSoC4/Timer_Synth.c **** * Summary:
 571:Generated_Source\PSoC4/Timer_Synth.c **** *  Writes the bits that control whether the line and line_n outputs are
 572:Generated_Source\PSoC4/Timer_Synth.c **** *  inverted from their normal output values.  This functionality is only
 573:Generated_Source\PSoC4/Timer_Synth.c **** *  applicable to the three PWM modes.
 574:Generated_Source\PSoC4/Timer_Synth.c **** *
 575:Generated_Source\PSoC4/Timer_Synth.c **** * Parameters:
 576:Generated_Source\PSoC4/Timer_Synth.c **** *  mask: Mask of outputs to invert.
 577:Generated_Source\PSoC4/Timer_Synth.c **** *   Values:
 578:Generated_Source\PSoC4/Timer_Synth.c **** *         - Timer_Synth_INVERT_LINE   - Inverts the line output
 579:Generated_Source\PSoC4/Timer_Synth.c **** *         - Timer_Synth_INVERT_LINE_N - Inverts the line_n output
 580:Generated_Source\PSoC4/Timer_Synth.c **** *
 581:Generated_Source\PSoC4/Timer_Synth.c **** * Return:
 582:Generated_Source\PSoC4/Timer_Synth.c **** *  None
 583:Generated_Source\PSoC4/Timer_Synth.c **** *
 584:Generated_Source\PSoC4/Timer_Synth.c **** *******************************************************************************/
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccrnaKHI.s 			page 12


 585:Generated_Source\PSoC4/Timer_Synth.c **** void Timer_Synth_SetPWMInvert(uint32 mask)
 586:Generated_Source\PSoC4/Timer_Synth.c **** {
 587:Generated_Source\PSoC4/Timer_Synth.c ****     uint8 enableInterrupts;
 588:Generated_Source\PSoC4/Timer_Synth.c **** 
 589:Generated_Source\PSoC4/Timer_Synth.c ****     enableInterrupts = CyEnterCriticalSection();
 590:Generated_Source\PSoC4/Timer_Synth.c **** 
 591:Generated_Source\PSoC4/Timer_Synth.c ****     Timer_Synth_CONTROL_REG &= (uint32)~Timer_Synth_INV_OUT_MASK;
 592:Generated_Source\PSoC4/Timer_Synth.c ****     Timer_Synth_CONTROL_REG |= mask;
 593:Generated_Source\PSoC4/Timer_Synth.c **** 
 594:Generated_Source\PSoC4/Timer_Synth.c ****     CyExitCriticalSection(enableInterrupts);
 595:Generated_Source\PSoC4/Timer_Synth.c **** }
 596:Generated_Source\PSoC4/Timer_Synth.c **** 
 597:Generated_Source\PSoC4/Timer_Synth.c **** 
 598:Generated_Source\PSoC4/Timer_Synth.c **** 
 599:Generated_Source\PSoC4/Timer_Synth.c **** /*******************************************************************************
 600:Generated_Source\PSoC4/Timer_Synth.c **** * Function Name: Timer_Synth_WriteCounter
 601:Generated_Source\PSoC4/Timer_Synth.c **** ********************************************************************************
 602:Generated_Source\PSoC4/Timer_Synth.c **** *
 603:Generated_Source\PSoC4/Timer_Synth.c **** * Summary:
 604:Generated_Source\PSoC4/Timer_Synth.c **** *  Writes a new 16bit counter value directly into the counter register, thus
 605:Generated_Source\PSoC4/Timer_Synth.c **** *  setting the counter (not the period) to the value written. It is not
 606:Generated_Source\PSoC4/Timer_Synth.c **** *  advised to write to this field when the counter is running.
 607:Generated_Source\PSoC4/Timer_Synth.c **** *
 608:Generated_Source\PSoC4/Timer_Synth.c **** * Parameters:
 609:Generated_Source\PSoC4/Timer_Synth.c **** *  count: value to write
 610:Generated_Source\PSoC4/Timer_Synth.c **** *
 611:Generated_Source\PSoC4/Timer_Synth.c **** * Return:
 612:Generated_Source\PSoC4/Timer_Synth.c **** *  None
 613:Generated_Source\PSoC4/Timer_Synth.c **** *
 614:Generated_Source\PSoC4/Timer_Synth.c **** *******************************************************************************/
 615:Generated_Source\PSoC4/Timer_Synth.c **** void Timer_Synth_WriteCounter(uint32 count)
 616:Generated_Source\PSoC4/Timer_Synth.c **** {
 617:Generated_Source\PSoC4/Timer_Synth.c ****     Timer_Synth_COUNTER_REG = (count & Timer_Synth_16BIT_MASK);
 618:Generated_Source\PSoC4/Timer_Synth.c **** }
 619:Generated_Source\PSoC4/Timer_Synth.c **** 
 620:Generated_Source\PSoC4/Timer_Synth.c **** 
 621:Generated_Source\PSoC4/Timer_Synth.c **** /*******************************************************************************
 622:Generated_Source\PSoC4/Timer_Synth.c **** * Function Name: Timer_Synth_ReadCounter
 623:Generated_Source\PSoC4/Timer_Synth.c **** ********************************************************************************
 624:Generated_Source\PSoC4/Timer_Synth.c **** *
 625:Generated_Source\PSoC4/Timer_Synth.c **** * Summary:
 626:Generated_Source\PSoC4/Timer_Synth.c **** *  Reads the current counter value.
 627:Generated_Source\PSoC4/Timer_Synth.c **** *
 628:Generated_Source\PSoC4/Timer_Synth.c **** * Parameters:
 629:Generated_Source\PSoC4/Timer_Synth.c **** *  None
 630:Generated_Source\PSoC4/Timer_Synth.c **** *
 631:Generated_Source\PSoC4/Timer_Synth.c **** * Return:
 632:Generated_Source\PSoC4/Timer_Synth.c **** *  Current counter value
 633:Generated_Source\PSoC4/Timer_Synth.c **** *
 634:Generated_Source\PSoC4/Timer_Synth.c **** *******************************************************************************/
 635:Generated_Source\PSoC4/Timer_Synth.c **** uint32 Timer_Synth_ReadCounter(void)
 636:Generated_Source\PSoC4/Timer_Synth.c **** {
 637:Generated_Source\PSoC4/Timer_Synth.c ****     return (Timer_Synth_COUNTER_REG & Timer_Synth_16BIT_MASK);
 638:Generated_Source\PSoC4/Timer_Synth.c **** }
 639:Generated_Source\PSoC4/Timer_Synth.c **** 
 640:Generated_Source\PSoC4/Timer_Synth.c **** 
 641:Generated_Source\PSoC4/Timer_Synth.c **** /*******************************************************************************
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccrnaKHI.s 			page 13


 642:Generated_Source\PSoC4/Timer_Synth.c **** * Function Name: Timer_Synth_SetCounterMode
 643:Generated_Source\PSoC4/Timer_Synth.c **** ********************************************************************************
 644:Generated_Source\PSoC4/Timer_Synth.c **** *
 645:Generated_Source\PSoC4/Timer_Synth.c **** * Summary:
 646:Generated_Source\PSoC4/Timer_Synth.c **** *  Sets the counter mode.  Applicable to all modes except Quadrature Decoder
 647:Generated_Source\PSoC4/Timer_Synth.c **** *  and the PWM with a pseudo random output.
 648:Generated_Source\PSoC4/Timer_Synth.c **** *
 649:Generated_Source\PSoC4/Timer_Synth.c **** * Parameters:
 650:Generated_Source\PSoC4/Timer_Synth.c **** *  counterMode: Enumerated counter type values
 651:Generated_Source\PSoC4/Timer_Synth.c **** *   Values:
 652:Generated_Source\PSoC4/Timer_Synth.c **** *     - Timer_Synth_COUNT_UP       - Counts up
 653:Generated_Source\PSoC4/Timer_Synth.c **** *     - Timer_Synth_COUNT_DOWN     - Counts down
 654:Generated_Source\PSoC4/Timer_Synth.c **** *     - Timer_Synth_COUNT_UPDOWN0  - Counts up and down. Terminal count
 655:Generated_Source\PSoC4/Timer_Synth.c **** *                                         generated when counter reaches 0
 656:Generated_Source\PSoC4/Timer_Synth.c **** *     - Timer_Synth_COUNT_UPDOWN1  - Counts up and down. Terminal count
 657:Generated_Source\PSoC4/Timer_Synth.c **** *                                         generated both when counter reaches 0
 658:Generated_Source\PSoC4/Timer_Synth.c **** *                                         and period
 659:Generated_Source\PSoC4/Timer_Synth.c **** *
 660:Generated_Source\PSoC4/Timer_Synth.c **** * Return:
 661:Generated_Source\PSoC4/Timer_Synth.c **** *  None
 662:Generated_Source\PSoC4/Timer_Synth.c **** *
 663:Generated_Source\PSoC4/Timer_Synth.c **** *******************************************************************************/
 664:Generated_Source\PSoC4/Timer_Synth.c **** void Timer_Synth_SetCounterMode(uint32 counterMode)
 665:Generated_Source\PSoC4/Timer_Synth.c **** {
 666:Generated_Source\PSoC4/Timer_Synth.c ****     uint8 enableInterrupts;
 667:Generated_Source\PSoC4/Timer_Synth.c **** 
 668:Generated_Source\PSoC4/Timer_Synth.c ****     enableInterrupts = CyEnterCriticalSection();
 669:Generated_Source\PSoC4/Timer_Synth.c **** 
 670:Generated_Source\PSoC4/Timer_Synth.c ****     Timer_Synth_CONTROL_REG &= (uint32)~Timer_Synth_UPDOWN_MASK;
 671:Generated_Source\PSoC4/Timer_Synth.c ****     Timer_Synth_CONTROL_REG |= counterMode;
 672:Generated_Source\PSoC4/Timer_Synth.c **** 
 673:Generated_Source\PSoC4/Timer_Synth.c ****     CyExitCriticalSection(enableInterrupts);
 674:Generated_Source\PSoC4/Timer_Synth.c **** }
 675:Generated_Source\PSoC4/Timer_Synth.c **** 
 676:Generated_Source\PSoC4/Timer_Synth.c **** 
 677:Generated_Source\PSoC4/Timer_Synth.c **** /*******************************************************************************
 678:Generated_Source\PSoC4/Timer_Synth.c **** * Function Name: Timer_Synth_WritePeriod
 679:Generated_Source\PSoC4/Timer_Synth.c **** ********************************************************************************
 680:Generated_Source\PSoC4/Timer_Synth.c **** *
 681:Generated_Source\PSoC4/Timer_Synth.c **** * Summary:
 682:Generated_Source\PSoC4/Timer_Synth.c **** *  Writes the 16 bit period register with the new period value.
 683:Generated_Source\PSoC4/Timer_Synth.c **** *  To cause the counter to count for N cycles this register should be written
 684:Generated_Source\PSoC4/Timer_Synth.c **** *  with N-1 (counts from 0 to period inclusive).
 685:Generated_Source\PSoC4/Timer_Synth.c **** *
 686:Generated_Source\PSoC4/Timer_Synth.c **** * Parameters:
 687:Generated_Source\PSoC4/Timer_Synth.c **** *  period: Period value
 688:Generated_Source\PSoC4/Timer_Synth.c **** *
 689:Generated_Source\PSoC4/Timer_Synth.c **** * Return:
 690:Generated_Source\PSoC4/Timer_Synth.c **** *  None
 691:Generated_Source\PSoC4/Timer_Synth.c **** *
 692:Generated_Source\PSoC4/Timer_Synth.c **** *******************************************************************************/
 693:Generated_Source\PSoC4/Timer_Synth.c **** void Timer_Synth_WritePeriod(uint32 period)
 694:Generated_Source\PSoC4/Timer_Synth.c **** {
 695:Generated_Source\PSoC4/Timer_Synth.c ****     Timer_Synth_PERIOD_REG = (period & Timer_Synth_16BIT_MASK);
 696:Generated_Source\PSoC4/Timer_Synth.c **** }
 697:Generated_Source\PSoC4/Timer_Synth.c **** 
 698:Generated_Source\PSoC4/Timer_Synth.c **** 
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccrnaKHI.s 			page 14


 699:Generated_Source\PSoC4/Timer_Synth.c **** /*******************************************************************************
 700:Generated_Source\PSoC4/Timer_Synth.c **** * Function Name: Timer_Synth_ReadPeriod
 701:Generated_Source\PSoC4/Timer_Synth.c **** ********************************************************************************
 702:Generated_Source\PSoC4/Timer_Synth.c **** *
 703:Generated_Source\PSoC4/Timer_Synth.c **** * Summary:
 704:Generated_Source\PSoC4/Timer_Synth.c **** *  Reads the 16 bit period register.
 705:Generated_Source\PSoC4/Timer_Synth.c **** *
 706:Generated_Source\PSoC4/Timer_Synth.c **** * Parameters:
 707:Generated_Source\PSoC4/Timer_Synth.c **** *  None
 708:Generated_Source\PSoC4/Timer_Synth.c **** *
 709:Generated_Source\PSoC4/Timer_Synth.c **** * Return:
 710:Generated_Source\PSoC4/Timer_Synth.c **** *  Period value
 711:Generated_Source\PSoC4/Timer_Synth.c **** *
 712:Generated_Source\PSoC4/Timer_Synth.c **** *******************************************************************************/
 713:Generated_Source\PSoC4/Timer_Synth.c **** uint32 Timer_Synth_ReadPeriod(void)
 714:Generated_Source\PSoC4/Timer_Synth.c **** {
 715:Generated_Source\PSoC4/Timer_Synth.c ****     return (Timer_Synth_PERIOD_REG & Timer_Synth_16BIT_MASK);
 716:Generated_Source\PSoC4/Timer_Synth.c **** }
 717:Generated_Source\PSoC4/Timer_Synth.c **** 
 718:Generated_Source\PSoC4/Timer_Synth.c **** 
 719:Generated_Source\PSoC4/Timer_Synth.c **** /*******************************************************************************
 720:Generated_Source\PSoC4/Timer_Synth.c **** * Function Name: Timer_Synth_SetCompareSwap
 721:Generated_Source\PSoC4/Timer_Synth.c **** ********************************************************************************
 722:Generated_Source\PSoC4/Timer_Synth.c **** *
 723:Generated_Source\PSoC4/Timer_Synth.c **** * Summary:
 724:Generated_Source\PSoC4/Timer_Synth.c **** *  Writes the register that controls whether the compare registers are
 725:Generated_Source\PSoC4/Timer_Synth.c **** *  swapped. When enabled in the Timer/Counter mode(without capture) the swap
 726:Generated_Source\PSoC4/Timer_Synth.c **** *  occurs at a TC event. In the PWM mode the swap occurs at the next TC event
 727:Generated_Source\PSoC4/Timer_Synth.c **** *  following a hardware switch event.
 728:Generated_Source\PSoC4/Timer_Synth.c **** *
 729:Generated_Source\PSoC4/Timer_Synth.c **** * Parameters:
 730:Generated_Source\PSoC4/Timer_Synth.c **** *  swapEnable
 731:Generated_Source\PSoC4/Timer_Synth.c **** *   Values:
 732:Generated_Source\PSoC4/Timer_Synth.c **** *     - 0 - Disable swap
 733:Generated_Source\PSoC4/Timer_Synth.c **** *     - 1 - Enable swap
 734:Generated_Source\PSoC4/Timer_Synth.c **** *
 735:Generated_Source\PSoC4/Timer_Synth.c **** * Return:
 736:Generated_Source\PSoC4/Timer_Synth.c **** *  None
 737:Generated_Source\PSoC4/Timer_Synth.c **** *
 738:Generated_Source\PSoC4/Timer_Synth.c **** *******************************************************************************/
 739:Generated_Source\PSoC4/Timer_Synth.c **** void Timer_Synth_SetCompareSwap(uint32 swapEnable)
 740:Generated_Source\PSoC4/Timer_Synth.c **** {
 741:Generated_Source\PSoC4/Timer_Synth.c ****     uint8 enableInterrupts;
 742:Generated_Source\PSoC4/Timer_Synth.c **** 
 743:Generated_Source\PSoC4/Timer_Synth.c ****     enableInterrupts = CyEnterCriticalSection();
 744:Generated_Source\PSoC4/Timer_Synth.c **** 
 745:Generated_Source\PSoC4/Timer_Synth.c ****     Timer_Synth_CONTROL_REG &= (uint32)~Timer_Synth_RELOAD_CC_MASK;
 746:Generated_Source\PSoC4/Timer_Synth.c ****     Timer_Synth_CONTROL_REG |= (swapEnable & Timer_Synth_1BIT_MASK);
 747:Generated_Source\PSoC4/Timer_Synth.c **** 
 748:Generated_Source\PSoC4/Timer_Synth.c ****     CyExitCriticalSection(enableInterrupts);
 749:Generated_Source\PSoC4/Timer_Synth.c **** }
 750:Generated_Source\PSoC4/Timer_Synth.c **** 
 751:Generated_Source\PSoC4/Timer_Synth.c **** 
 752:Generated_Source\PSoC4/Timer_Synth.c **** /*******************************************************************************
 753:Generated_Source\PSoC4/Timer_Synth.c **** * Function Name: Timer_Synth_WritePeriodBuf
 754:Generated_Source\PSoC4/Timer_Synth.c **** ********************************************************************************
 755:Generated_Source\PSoC4/Timer_Synth.c **** *
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccrnaKHI.s 			page 15


 756:Generated_Source\PSoC4/Timer_Synth.c **** * Summary:
 757:Generated_Source\PSoC4/Timer_Synth.c **** *  Writes the 16 bit period buf register with the new period value.
 758:Generated_Source\PSoC4/Timer_Synth.c **** *
 759:Generated_Source\PSoC4/Timer_Synth.c **** * Parameters:
 760:Generated_Source\PSoC4/Timer_Synth.c **** *  periodBuf: Period value
 761:Generated_Source\PSoC4/Timer_Synth.c **** *
 762:Generated_Source\PSoC4/Timer_Synth.c **** * Return:
 763:Generated_Source\PSoC4/Timer_Synth.c **** *  None
 764:Generated_Source\PSoC4/Timer_Synth.c **** *
 765:Generated_Source\PSoC4/Timer_Synth.c **** *******************************************************************************/
 766:Generated_Source\PSoC4/Timer_Synth.c **** void Timer_Synth_WritePeriodBuf(uint32 periodBuf)
 767:Generated_Source\PSoC4/Timer_Synth.c **** {
 768:Generated_Source\PSoC4/Timer_Synth.c ****     Timer_Synth_PERIOD_BUF_REG = (periodBuf & Timer_Synth_16BIT_MASK);
 769:Generated_Source\PSoC4/Timer_Synth.c **** }
 770:Generated_Source\PSoC4/Timer_Synth.c **** 
 771:Generated_Source\PSoC4/Timer_Synth.c **** 
 772:Generated_Source\PSoC4/Timer_Synth.c **** /*******************************************************************************
 773:Generated_Source\PSoC4/Timer_Synth.c **** * Function Name: Timer_Synth_ReadPeriodBuf
 774:Generated_Source\PSoC4/Timer_Synth.c **** ********************************************************************************
 775:Generated_Source\PSoC4/Timer_Synth.c **** *
 776:Generated_Source\PSoC4/Timer_Synth.c **** * Summary:
 777:Generated_Source\PSoC4/Timer_Synth.c **** *  Reads the 16 bit period buf register.
 778:Generated_Source\PSoC4/Timer_Synth.c **** *
 779:Generated_Source\PSoC4/Timer_Synth.c **** * Parameters:
 780:Generated_Source\PSoC4/Timer_Synth.c **** *  None
 781:Generated_Source\PSoC4/Timer_Synth.c **** *
 782:Generated_Source\PSoC4/Timer_Synth.c **** * Return:
 783:Generated_Source\PSoC4/Timer_Synth.c **** *  Period value
 784:Generated_Source\PSoC4/Timer_Synth.c **** *
 785:Generated_Source\PSoC4/Timer_Synth.c **** *******************************************************************************/
 786:Generated_Source\PSoC4/Timer_Synth.c **** uint32 Timer_Synth_ReadPeriodBuf(void)
 787:Generated_Source\PSoC4/Timer_Synth.c **** {
 788:Generated_Source\PSoC4/Timer_Synth.c ****     return (Timer_Synth_PERIOD_BUF_REG & Timer_Synth_16BIT_MASK);
 789:Generated_Source\PSoC4/Timer_Synth.c **** }
 790:Generated_Source\PSoC4/Timer_Synth.c **** 
 791:Generated_Source\PSoC4/Timer_Synth.c **** 
 792:Generated_Source\PSoC4/Timer_Synth.c **** /*******************************************************************************
 793:Generated_Source\PSoC4/Timer_Synth.c **** * Function Name: Timer_Synth_SetPeriodSwap
 794:Generated_Source\PSoC4/Timer_Synth.c **** ********************************************************************************
 795:Generated_Source\PSoC4/Timer_Synth.c **** *
 796:Generated_Source\PSoC4/Timer_Synth.c **** * Summary:
 797:Generated_Source\PSoC4/Timer_Synth.c **** *  Writes the register that controls whether the period registers are
 798:Generated_Source\PSoC4/Timer_Synth.c **** *  swapped. When enabled in Timer/Counter mode the swap occurs at a TC event.
 799:Generated_Source\PSoC4/Timer_Synth.c **** *  In the PWM mode the swap occurs at the next TC event following a hardware
 800:Generated_Source\PSoC4/Timer_Synth.c **** *  switch event.
 801:Generated_Source\PSoC4/Timer_Synth.c **** *
 802:Generated_Source\PSoC4/Timer_Synth.c **** * Parameters:
 803:Generated_Source\PSoC4/Timer_Synth.c **** *  swapEnable
 804:Generated_Source\PSoC4/Timer_Synth.c **** *   Values:
 805:Generated_Source\PSoC4/Timer_Synth.c **** *     - 0 - Disable swap
 806:Generated_Source\PSoC4/Timer_Synth.c **** *     - 1 - Enable swap
 807:Generated_Source\PSoC4/Timer_Synth.c **** *
 808:Generated_Source\PSoC4/Timer_Synth.c **** * Return:
 809:Generated_Source\PSoC4/Timer_Synth.c **** *  None
 810:Generated_Source\PSoC4/Timer_Synth.c **** *
 811:Generated_Source\PSoC4/Timer_Synth.c **** *******************************************************************************/
 812:Generated_Source\PSoC4/Timer_Synth.c **** void Timer_Synth_SetPeriodSwap(uint32 swapEnable)
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccrnaKHI.s 			page 16


 813:Generated_Source\PSoC4/Timer_Synth.c **** {
 814:Generated_Source\PSoC4/Timer_Synth.c ****     uint8 enableInterrupts;
 815:Generated_Source\PSoC4/Timer_Synth.c **** 
 816:Generated_Source\PSoC4/Timer_Synth.c ****     enableInterrupts = CyEnterCriticalSection();
 817:Generated_Source\PSoC4/Timer_Synth.c **** 
 818:Generated_Source\PSoC4/Timer_Synth.c ****     Timer_Synth_CONTROL_REG &= (uint32)~Timer_Synth_RELOAD_PERIOD_MASK;
 819:Generated_Source\PSoC4/Timer_Synth.c ****     Timer_Synth_CONTROL_REG |= ((uint32)((swapEnable & Timer_Synth_1BIT_MASK) <<
 820:Generated_Source\PSoC4/Timer_Synth.c ****                                                             Timer_Synth_RELOAD_PERIOD_SHIFT));
 821:Generated_Source\PSoC4/Timer_Synth.c **** 
 822:Generated_Source\PSoC4/Timer_Synth.c ****     CyExitCriticalSection(enableInterrupts);
 823:Generated_Source\PSoC4/Timer_Synth.c **** }
 824:Generated_Source\PSoC4/Timer_Synth.c **** 
 825:Generated_Source\PSoC4/Timer_Synth.c **** 
 826:Generated_Source\PSoC4/Timer_Synth.c **** /*******************************************************************************
 827:Generated_Source\PSoC4/Timer_Synth.c **** * Function Name: Timer_Synth_WriteCompare
 828:Generated_Source\PSoC4/Timer_Synth.c **** ********************************************************************************
 829:Generated_Source\PSoC4/Timer_Synth.c **** *
 830:Generated_Source\PSoC4/Timer_Synth.c **** * Summary:
 831:Generated_Source\PSoC4/Timer_Synth.c **** *  Writes the 16 bit compare register with the new compare value. Not
 832:Generated_Source\PSoC4/Timer_Synth.c **** *  applicable for Timer/Counter with Capture or in Quadrature Decoder modes.
 833:Generated_Source\PSoC4/Timer_Synth.c **** *
 834:Generated_Source\PSoC4/Timer_Synth.c **** * Parameters:
 835:Generated_Source\PSoC4/Timer_Synth.c **** *  compare: Compare value
 836:Generated_Source\PSoC4/Timer_Synth.c **** *
 837:Generated_Source\PSoC4/Timer_Synth.c **** * Return:
 838:Generated_Source\PSoC4/Timer_Synth.c **** *  None
 839:Generated_Source\PSoC4/Timer_Synth.c **** *
 840:Generated_Source\PSoC4/Timer_Synth.c **** * Note:
 841:Generated_Source\PSoC4/Timer_Synth.c **** *  It is not recommended to use the value equal to "0" or equal to 
 842:Generated_Source\PSoC4/Timer_Synth.c **** *  "period value" in Center or Asymmetric align PWM modes on the 
 843:Generated_Source\PSoC4/Timer_Synth.c **** *  PSoC 4100/PSoC 4200 devices.
 844:Generated_Source\PSoC4/Timer_Synth.c **** *  PSoC 4000 devices write the 16 bit compare register with the decremented 
 845:Generated_Source\PSoC4/Timer_Synth.c **** *  compare value in the Up counting mode (except 0x0u), and the incremented 
 846:Generated_Source\PSoC4/Timer_Synth.c **** *  compare value in the Down counting mode (except 0xFFFFu).
 847:Generated_Source\PSoC4/Timer_Synth.c **** *
 848:Generated_Source\PSoC4/Timer_Synth.c **** *******************************************************************************/
 849:Generated_Source\PSoC4/Timer_Synth.c **** void Timer_Synth_WriteCompare(uint32 compare)
 850:Generated_Source\PSoC4/Timer_Synth.c **** {
 851:Generated_Source\PSoC4/Timer_Synth.c ****     #if (Timer_Synth_CY_TCPWM_4000)
 852:Generated_Source\PSoC4/Timer_Synth.c ****         uint32 currentMode;
 853:Generated_Source\PSoC4/Timer_Synth.c ****     #endif /* (Timer_Synth_CY_TCPWM_4000) */
 854:Generated_Source\PSoC4/Timer_Synth.c **** 
 855:Generated_Source\PSoC4/Timer_Synth.c ****     #if (Timer_Synth_CY_TCPWM_4000)
 856:Generated_Source\PSoC4/Timer_Synth.c ****         currentMode = ((Timer_Synth_CONTROL_REG & Timer_Synth_UPDOWN_MASK) >> Timer_Synth_UPDOWN_SH
 857:Generated_Source\PSoC4/Timer_Synth.c **** 
 858:Generated_Source\PSoC4/Timer_Synth.c ****         if (((uint32)Timer_Synth__COUNT_DOWN == currentMode) && (0xFFFFu != compare))
 859:Generated_Source\PSoC4/Timer_Synth.c ****         {
 860:Generated_Source\PSoC4/Timer_Synth.c ****             compare++;
 861:Generated_Source\PSoC4/Timer_Synth.c ****         }
 862:Generated_Source\PSoC4/Timer_Synth.c ****         else if (((uint32)Timer_Synth__COUNT_UP == currentMode) && (0u != compare))
 863:Generated_Source\PSoC4/Timer_Synth.c ****         {
 864:Generated_Source\PSoC4/Timer_Synth.c ****             compare--;
 865:Generated_Source\PSoC4/Timer_Synth.c ****         }
 866:Generated_Source\PSoC4/Timer_Synth.c ****         else
 867:Generated_Source\PSoC4/Timer_Synth.c ****         {
 868:Generated_Source\PSoC4/Timer_Synth.c ****         }
 869:Generated_Source\PSoC4/Timer_Synth.c ****         
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccrnaKHI.s 			page 17


 870:Generated_Source\PSoC4/Timer_Synth.c ****     
 871:Generated_Source\PSoC4/Timer_Synth.c ****     #endif /* (Timer_Synth_CY_TCPWM_4000) */
 872:Generated_Source\PSoC4/Timer_Synth.c ****     
 873:Generated_Source\PSoC4/Timer_Synth.c ****     Timer_Synth_COMP_CAP_REG = (compare & Timer_Synth_16BIT_MASK);
 874:Generated_Source\PSoC4/Timer_Synth.c **** }
 875:Generated_Source\PSoC4/Timer_Synth.c **** 
 876:Generated_Source\PSoC4/Timer_Synth.c **** 
 877:Generated_Source\PSoC4/Timer_Synth.c **** /*******************************************************************************
 878:Generated_Source\PSoC4/Timer_Synth.c **** * Function Name: Timer_Synth_ReadCompare
 879:Generated_Source\PSoC4/Timer_Synth.c **** ********************************************************************************
 880:Generated_Source\PSoC4/Timer_Synth.c **** *
 881:Generated_Source\PSoC4/Timer_Synth.c **** * Summary:
 882:Generated_Source\PSoC4/Timer_Synth.c **** *  Reads the compare register. Not applicable for Timer/Counter with Capture
 883:Generated_Source\PSoC4/Timer_Synth.c **** *  or in Quadrature Decoder modes.
 884:Generated_Source\PSoC4/Timer_Synth.c **** *  PSoC 4000 devices read the incremented compare register value in the 
 885:Generated_Source\PSoC4/Timer_Synth.c **** *  Up counting mode (except 0xFFFFu), and the decremented value in the 
 886:Generated_Source\PSoC4/Timer_Synth.c **** *  Down counting mode (except 0x0u).
 887:Generated_Source\PSoC4/Timer_Synth.c **** *
 888:Generated_Source\PSoC4/Timer_Synth.c **** * Parameters:
 889:Generated_Source\PSoC4/Timer_Synth.c **** *  None
 890:Generated_Source\PSoC4/Timer_Synth.c **** *
 891:Generated_Source\PSoC4/Timer_Synth.c **** * Return:
 892:Generated_Source\PSoC4/Timer_Synth.c **** *  Compare value
 893:Generated_Source\PSoC4/Timer_Synth.c **** *
 894:Generated_Source\PSoC4/Timer_Synth.c **** * Note:
 895:Generated_Source\PSoC4/Timer_Synth.c **** *  PSoC 4000 devices read the incremented compare register value in the 
 896:Generated_Source\PSoC4/Timer_Synth.c **** *  Up counting mode (except 0xFFFFu), and the decremented value in the 
 897:Generated_Source\PSoC4/Timer_Synth.c **** *  Down counting mode (except 0x0u).
 898:Generated_Source\PSoC4/Timer_Synth.c **** *
 899:Generated_Source\PSoC4/Timer_Synth.c **** *******************************************************************************/
 900:Generated_Source\PSoC4/Timer_Synth.c **** uint32 Timer_Synth_ReadCompare(void)
 901:Generated_Source\PSoC4/Timer_Synth.c **** {
 902:Generated_Source\PSoC4/Timer_Synth.c ****     #if (Timer_Synth_CY_TCPWM_4000)
 903:Generated_Source\PSoC4/Timer_Synth.c ****         uint32 currentMode;
 904:Generated_Source\PSoC4/Timer_Synth.c ****         uint32 regVal;
 905:Generated_Source\PSoC4/Timer_Synth.c ****     #endif /* (Timer_Synth_CY_TCPWM_4000) */
 906:Generated_Source\PSoC4/Timer_Synth.c **** 
 907:Generated_Source\PSoC4/Timer_Synth.c ****     #if (Timer_Synth_CY_TCPWM_4000)
 908:Generated_Source\PSoC4/Timer_Synth.c ****         currentMode = ((Timer_Synth_CONTROL_REG & Timer_Synth_UPDOWN_MASK) >> Timer_Synth_UPDOWN_SH
 909:Generated_Source\PSoC4/Timer_Synth.c ****         
 910:Generated_Source\PSoC4/Timer_Synth.c ****         regVal = Timer_Synth_COMP_CAP_REG;
 911:Generated_Source\PSoC4/Timer_Synth.c ****         
 912:Generated_Source\PSoC4/Timer_Synth.c ****         if (((uint32)Timer_Synth__COUNT_DOWN == currentMode) && (0u != regVal))
 913:Generated_Source\PSoC4/Timer_Synth.c ****         {
 914:Generated_Source\PSoC4/Timer_Synth.c ****             regVal--;
 915:Generated_Source\PSoC4/Timer_Synth.c ****         }
 916:Generated_Source\PSoC4/Timer_Synth.c ****         else if (((uint32)Timer_Synth__COUNT_UP == currentMode) && (0xFFFFu != regVal))
 917:Generated_Source\PSoC4/Timer_Synth.c ****         {
 918:Generated_Source\PSoC4/Timer_Synth.c ****             regVal++;
 919:Generated_Source\PSoC4/Timer_Synth.c ****         }
 920:Generated_Source\PSoC4/Timer_Synth.c ****         else
 921:Generated_Source\PSoC4/Timer_Synth.c ****         {
 922:Generated_Source\PSoC4/Timer_Synth.c ****         }
 923:Generated_Source\PSoC4/Timer_Synth.c **** 
 924:Generated_Source\PSoC4/Timer_Synth.c ****         return (regVal & Timer_Synth_16BIT_MASK);
 925:Generated_Source\PSoC4/Timer_Synth.c ****     #else
 926:Generated_Source\PSoC4/Timer_Synth.c ****         return (Timer_Synth_COMP_CAP_REG & Timer_Synth_16BIT_MASK);
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccrnaKHI.s 			page 18


 927:Generated_Source\PSoC4/Timer_Synth.c ****     #endif /* (Timer_Synth_CY_TCPWM_4000) */
 928:Generated_Source\PSoC4/Timer_Synth.c **** }
 929:Generated_Source\PSoC4/Timer_Synth.c **** 
 930:Generated_Source\PSoC4/Timer_Synth.c **** 
 931:Generated_Source\PSoC4/Timer_Synth.c **** /*******************************************************************************
 932:Generated_Source\PSoC4/Timer_Synth.c **** * Function Name: Timer_Synth_WriteCompareBuf
 933:Generated_Source\PSoC4/Timer_Synth.c **** ********************************************************************************
 934:Generated_Source\PSoC4/Timer_Synth.c **** *
 935:Generated_Source\PSoC4/Timer_Synth.c **** * Summary:
 936:Generated_Source\PSoC4/Timer_Synth.c **** *  Writes the 16 bit compare buffer register with the new compare value. Not
 937:Generated_Source\PSoC4/Timer_Synth.c **** *  applicable for Timer/Counter with Capture or in Quadrature Decoder modes.
 938:Generated_Source\PSoC4/Timer_Synth.c **** *
 939:Generated_Source\PSoC4/Timer_Synth.c **** * Parameters:
 940:Generated_Source\PSoC4/Timer_Synth.c **** *  compareBuf: Compare value
 941:Generated_Source\PSoC4/Timer_Synth.c **** *
 942:Generated_Source\PSoC4/Timer_Synth.c **** * Return:
 943:Generated_Source\PSoC4/Timer_Synth.c **** *  None
 944:Generated_Source\PSoC4/Timer_Synth.c **** *
 945:Generated_Source\PSoC4/Timer_Synth.c **** * Note:
 946:Generated_Source\PSoC4/Timer_Synth.c **** *  It is not recommended to use the value equal to "0" or equal to 
 947:Generated_Source\PSoC4/Timer_Synth.c **** *  "period value" in Center or Asymmetric align PWM modes on the 
 948:Generated_Source\PSoC4/Timer_Synth.c **** *  PSoC 4100/PSoC 4200 devices.
 949:Generated_Source\PSoC4/Timer_Synth.c **** *  PSoC 4000 devices write the 16 bit compare register with the decremented 
 950:Generated_Source\PSoC4/Timer_Synth.c **** *  compare value in the Up counting mode (except 0x0u), and the incremented 
 951:Generated_Source\PSoC4/Timer_Synth.c **** *  compare value in the Down counting mode (except 0xFFFFu).
 952:Generated_Source\PSoC4/Timer_Synth.c **** *
 953:Generated_Source\PSoC4/Timer_Synth.c **** *******************************************************************************/
 954:Generated_Source\PSoC4/Timer_Synth.c **** void Timer_Synth_WriteCompareBuf(uint32 compareBuf)
 955:Generated_Source\PSoC4/Timer_Synth.c **** {
 956:Generated_Source\PSoC4/Timer_Synth.c ****     #if (Timer_Synth_CY_TCPWM_4000)
 957:Generated_Source\PSoC4/Timer_Synth.c ****         uint32 currentMode;
 958:Generated_Source\PSoC4/Timer_Synth.c ****     #endif /* (Timer_Synth_CY_TCPWM_4000) */
 959:Generated_Source\PSoC4/Timer_Synth.c **** 
 960:Generated_Source\PSoC4/Timer_Synth.c ****     #if (Timer_Synth_CY_TCPWM_4000)
 961:Generated_Source\PSoC4/Timer_Synth.c ****         currentMode = ((Timer_Synth_CONTROL_REG & Timer_Synth_UPDOWN_MASK) >> Timer_Synth_UPDOWN_SH
 962:Generated_Source\PSoC4/Timer_Synth.c **** 
 963:Generated_Source\PSoC4/Timer_Synth.c ****         if (((uint32)Timer_Synth__COUNT_DOWN == currentMode) && (0xFFFFu != compareBuf))
 964:Generated_Source\PSoC4/Timer_Synth.c ****         {
 965:Generated_Source\PSoC4/Timer_Synth.c ****             compareBuf++;
 966:Generated_Source\PSoC4/Timer_Synth.c ****         }
 967:Generated_Source\PSoC4/Timer_Synth.c ****         else if (((uint32)Timer_Synth__COUNT_UP == currentMode) && (0u != compareBuf))
 968:Generated_Source\PSoC4/Timer_Synth.c ****         {
 969:Generated_Source\PSoC4/Timer_Synth.c ****             compareBuf --;
 970:Generated_Source\PSoC4/Timer_Synth.c ****         }
 971:Generated_Source\PSoC4/Timer_Synth.c ****         else
 972:Generated_Source\PSoC4/Timer_Synth.c ****         {
 973:Generated_Source\PSoC4/Timer_Synth.c ****         }
 974:Generated_Source\PSoC4/Timer_Synth.c ****     #endif /* (Timer_Synth_CY_TCPWM_4000) */
 975:Generated_Source\PSoC4/Timer_Synth.c ****     
 976:Generated_Source\PSoC4/Timer_Synth.c ****     Timer_Synth_COMP_CAP_BUF_REG = (compareBuf & Timer_Synth_16BIT_MASK);
 977:Generated_Source\PSoC4/Timer_Synth.c **** }
 978:Generated_Source\PSoC4/Timer_Synth.c **** 
 979:Generated_Source\PSoC4/Timer_Synth.c **** 
 980:Generated_Source\PSoC4/Timer_Synth.c **** /*******************************************************************************
 981:Generated_Source\PSoC4/Timer_Synth.c **** * Function Name: Timer_Synth_ReadCompareBuf
 982:Generated_Source\PSoC4/Timer_Synth.c **** ********************************************************************************
 983:Generated_Source\PSoC4/Timer_Synth.c **** *
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccrnaKHI.s 			page 19


 984:Generated_Source\PSoC4/Timer_Synth.c **** * Summary:
 985:Generated_Source\PSoC4/Timer_Synth.c **** *  Reads the compare buffer register. Not applicable for Timer/Counter with
 986:Generated_Source\PSoC4/Timer_Synth.c **** *  Capture or in Quadrature Decoder modes.
 987:Generated_Source\PSoC4/Timer_Synth.c **** *
 988:Generated_Source\PSoC4/Timer_Synth.c **** * Parameters:
 989:Generated_Source\PSoC4/Timer_Synth.c **** *  None
 990:Generated_Source\PSoC4/Timer_Synth.c **** *
 991:Generated_Source\PSoC4/Timer_Synth.c **** * Return:
 992:Generated_Source\PSoC4/Timer_Synth.c **** *  Compare buffer value
 993:Generated_Source\PSoC4/Timer_Synth.c **** *
 994:Generated_Source\PSoC4/Timer_Synth.c **** * Note:
 995:Generated_Source\PSoC4/Timer_Synth.c **** *  PSoC 4000 devices read the incremented compare register value in the 
 996:Generated_Source\PSoC4/Timer_Synth.c **** *  Up counting mode (except 0xFFFFu), and the decremented value in the 
 997:Generated_Source\PSoC4/Timer_Synth.c **** *  Down counting mode (except 0x0u).
 998:Generated_Source\PSoC4/Timer_Synth.c **** *
 999:Generated_Source\PSoC4/Timer_Synth.c **** *******************************************************************************/
1000:Generated_Source\PSoC4/Timer_Synth.c **** uint32 Timer_Synth_ReadCompareBuf(void)
1001:Generated_Source\PSoC4/Timer_Synth.c **** {
1002:Generated_Source\PSoC4/Timer_Synth.c ****     #if (Timer_Synth_CY_TCPWM_4000)
1003:Generated_Source\PSoC4/Timer_Synth.c ****         uint32 currentMode;
1004:Generated_Source\PSoC4/Timer_Synth.c ****         uint32 regVal;
1005:Generated_Source\PSoC4/Timer_Synth.c ****     #endif /* (Timer_Synth_CY_TCPWM_4000) */
1006:Generated_Source\PSoC4/Timer_Synth.c **** 
1007:Generated_Source\PSoC4/Timer_Synth.c ****     #if (Timer_Synth_CY_TCPWM_4000)
1008:Generated_Source\PSoC4/Timer_Synth.c ****         currentMode = ((Timer_Synth_CONTROL_REG & Timer_Synth_UPDOWN_MASK) >> Timer_Synth_UPDOWN_SH
1009:Generated_Source\PSoC4/Timer_Synth.c **** 
1010:Generated_Source\PSoC4/Timer_Synth.c ****         regVal = Timer_Synth_COMP_CAP_BUF_REG;
1011:Generated_Source\PSoC4/Timer_Synth.c ****         
1012:Generated_Source\PSoC4/Timer_Synth.c ****         if (((uint32)Timer_Synth__COUNT_DOWN == currentMode) && (0u != regVal))
1013:Generated_Source\PSoC4/Timer_Synth.c ****         {
1014:Generated_Source\PSoC4/Timer_Synth.c ****             regVal--;
1015:Generated_Source\PSoC4/Timer_Synth.c ****         }
1016:Generated_Source\PSoC4/Timer_Synth.c ****         else if (((uint32)Timer_Synth__COUNT_UP == currentMode) && (0xFFFFu != regVal))
1017:Generated_Source\PSoC4/Timer_Synth.c ****         {
1018:Generated_Source\PSoC4/Timer_Synth.c ****             regVal++;
1019:Generated_Source\PSoC4/Timer_Synth.c ****         }
1020:Generated_Source\PSoC4/Timer_Synth.c ****         else
1021:Generated_Source\PSoC4/Timer_Synth.c ****         {
1022:Generated_Source\PSoC4/Timer_Synth.c ****         }
1023:Generated_Source\PSoC4/Timer_Synth.c **** 
1024:Generated_Source\PSoC4/Timer_Synth.c ****         return (regVal & Timer_Synth_16BIT_MASK);
1025:Generated_Source\PSoC4/Timer_Synth.c ****     #else
1026:Generated_Source\PSoC4/Timer_Synth.c ****         return (Timer_Synth_COMP_CAP_BUF_REG & Timer_Synth_16BIT_MASK);
1027:Generated_Source\PSoC4/Timer_Synth.c ****     #endif /* (Timer_Synth_CY_TCPWM_4000) */
1028:Generated_Source\PSoC4/Timer_Synth.c **** }
1029:Generated_Source\PSoC4/Timer_Synth.c **** 
1030:Generated_Source\PSoC4/Timer_Synth.c **** 
1031:Generated_Source\PSoC4/Timer_Synth.c **** /*******************************************************************************
1032:Generated_Source\PSoC4/Timer_Synth.c **** * Function Name: Timer_Synth_ReadCapture
1033:Generated_Source\PSoC4/Timer_Synth.c **** ********************************************************************************
1034:Generated_Source\PSoC4/Timer_Synth.c **** *
1035:Generated_Source\PSoC4/Timer_Synth.c **** * Summary:
1036:Generated_Source\PSoC4/Timer_Synth.c **** *  Reads the captured counter value. This API is applicable only for
1037:Generated_Source\PSoC4/Timer_Synth.c **** *  Timer/Counter with the capture mode and Quadrature Decoder modes.
1038:Generated_Source\PSoC4/Timer_Synth.c **** *
1039:Generated_Source\PSoC4/Timer_Synth.c **** * Parameters:
1040:Generated_Source\PSoC4/Timer_Synth.c **** *  None
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccrnaKHI.s 			page 20


1041:Generated_Source\PSoC4/Timer_Synth.c **** *
1042:Generated_Source\PSoC4/Timer_Synth.c **** * Return:
1043:Generated_Source\PSoC4/Timer_Synth.c **** *  Capture value
1044:Generated_Source\PSoC4/Timer_Synth.c **** *
1045:Generated_Source\PSoC4/Timer_Synth.c **** *******************************************************************************/
1046:Generated_Source\PSoC4/Timer_Synth.c **** uint32 Timer_Synth_ReadCapture(void)
1047:Generated_Source\PSoC4/Timer_Synth.c **** {
1048:Generated_Source\PSoC4/Timer_Synth.c ****     return (Timer_Synth_COMP_CAP_REG & Timer_Synth_16BIT_MASK);
1049:Generated_Source\PSoC4/Timer_Synth.c **** }
1050:Generated_Source\PSoC4/Timer_Synth.c **** 
1051:Generated_Source\PSoC4/Timer_Synth.c **** 
1052:Generated_Source\PSoC4/Timer_Synth.c **** /*******************************************************************************
1053:Generated_Source\PSoC4/Timer_Synth.c **** * Function Name: Timer_Synth_ReadCaptureBuf
1054:Generated_Source\PSoC4/Timer_Synth.c **** ********************************************************************************
1055:Generated_Source\PSoC4/Timer_Synth.c **** *
1056:Generated_Source\PSoC4/Timer_Synth.c **** * Summary:
1057:Generated_Source\PSoC4/Timer_Synth.c **** *  Reads the capture buffer register. This API is applicable only for
1058:Generated_Source\PSoC4/Timer_Synth.c **** *  Timer/Counter with the capture mode and Quadrature Decoder modes.
1059:Generated_Source\PSoC4/Timer_Synth.c **** *
1060:Generated_Source\PSoC4/Timer_Synth.c **** * Parameters:
1061:Generated_Source\PSoC4/Timer_Synth.c **** *  None
1062:Generated_Source\PSoC4/Timer_Synth.c **** *
1063:Generated_Source\PSoC4/Timer_Synth.c **** * Return:
1064:Generated_Source\PSoC4/Timer_Synth.c **** *  Capture buffer value
1065:Generated_Source\PSoC4/Timer_Synth.c **** *
1066:Generated_Source\PSoC4/Timer_Synth.c **** *******************************************************************************/
1067:Generated_Source\PSoC4/Timer_Synth.c **** uint32 Timer_Synth_ReadCaptureBuf(void)
1068:Generated_Source\PSoC4/Timer_Synth.c **** {
1069:Generated_Source\PSoC4/Timer_Synth.c ****     return (Timer_Synth_COMP_CAP_BUF_REG & Timer_Synth_16BIT_MASK);
1070:Generated_Source\PSoC4/Timer_Synth.c **** }
1071:Generated_Source\PSoC4/Timer_Synth.c **** 
1072:Generated_Source\PSoC4/Timer_Synth.c **** 
1073:Generated_Source\PSoC4/Timer_Synth.c **** /*******************************************************************************
1074:Generated_Source\PSoC4/Timer_Synth.c **** * Function Name: Timer_Synth_SetCaptureMode
1075:Generated_Source\PSoC4/Timer_Synth.c **** ********************************************************************************
1076:Generated_Source\PSoC4/Timer_Synth.c **** *
1077:Generated_Source\PSoC4/Timer_Synth.c **** * Summary:
1078:Generated_Source\PSoC4/Timer_Synth.c **** *  Sets the capture trigger mode. For PWM mode this is the switch input.
1079:Generated_Source\PSoC4/Timer_Synth.c **** *  This input is not applicable to the Timer/Counter without Capture and
1080:Generated_Source\PSoC4/Timer_Synth.c **** *  Quadrature Decoder modes.
1081:Generated_Source\PSoC4/Timer_Synth.c **** *
1082:Generated_Source\PSoC4/Timer_Synth.c **** * Parameters:
1083:Generated_Source\PSoC4/Timer_Synth.c **** *  triggerMode: Enumerated trigger mode value
1084:Generated_Source\PSoC4/Timer_Synth.c **** *   Values:
1085:Generated_Source\PSoC4/Timer_Synth.c **** *     - Timer_Synth_TRIG_LEVEL     - Level
1086:Generated_Source\PSoC4/Timer_Synth.c **** *     - Timer_Synth_TRIG_RISING    - Rising edge
1087:Generated_Source\PSoC4/Timer_Synth.c **** *     - Timer_Synth_TRIG_FALLING   - Falling edge
1088:Generated_Source\PSoC4/Timer_Synth.c **** *     - Timer_Synth_TRIG_BOTH      - Both rising and falling edge
1089:Generated_Source\PSoC4/Timer_Synth.c **** *
1090:Generated_Source\PSoC4/Timer_Synth.c **** * Return:
1091:Generated_Source\PSoC4/Timer_Synth.c **** *  None
1092:Generated_Source\PSoC4/Timer_Synth.c **** *
1093:Generated_Source\PSoC4/Timer_Synth.c **** *******************************************************************************/
1094:Generated_Source\PSoC4/Timer_Synth.c **** void Timer_Synth_SetCaptureMode(uint32 triggerMode)
1095:Generated_Source\PSoC4/Timer_Synth.c **** {
1096:Generated_Source\PSoC4/Timer_Synth.c ****     uint8 enableInterrupts;
1097:Generated_Source\PSoC4/Timer_Synth.c **** 
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccrnaKHI.s 			page 21


1098:Generated_Source\PSoC4/Timer_Synth.c ****     enableInterrupts = CyEnterCriticalSection();
1099:Generated_Source\PSoC4/Timer_Synth.c **** 
1100:Generated_Source\PSoC4/Timer_Synth.c ****     Timer_Synth_TRIG_CONTROL1_REG &= (uint32)~Timer_Synth_CAPTURE_MASK;
1101:Generated_Source\PSoC4/Timer_Synth.c ****     Timer_Synth_TRIG_CONTROL1_REG |= triggerMode;
1102:Generated_Source\PSoC4/Timer_Synth.c **** 
1103:Generated_Source\PSoC4/Timer_Synth.c ****     CyExitCriticalSection(enableInterrupts);
1104:Generated_Source\PSoC4/Timer_Synth.c **** }
1105:Generated_Source\PSoC4/Timer_Synth.c **** 
1106:Generated_Source\PSoC4/Timer_Synth.c **** 
1107:Generated_Source\PSoC4/Timer_Synth.c **** /*******************************************************************************
1108:Generated_Source\PSoC4/Timer_Synth.c **** * Function Name: Timer_Synth_SetReloadMode
1109:Generated_Source\PSoC4/Timer_Synth.c **** ********************************************************************************
1110:Generated_Source\PSoC4/Timer_Synth.c **** *
1111:Generated_Source\PSoC4/Timer_Synth.c **** * Summary:
1112:Generated_Source\PSoC4/Timer_Synth.c **** *  Sets the reload trigger mode. For Quadrature Decoder mode this is the index
1113:Generated_Source\PSoC4/Timer_Synth.c **** *  input.
1114:Generated_Source\PSoC4/Timer_Synth.c **** *
1115:Generated_Source\PSoC4/Timer_Synth.c **** * Parameters:
1116:Generated_Source\PSoC4/Timer_Synth.c **** *  triggerMode: Enumerated trigger mode value
1117:Generated_Source\PSoC4/Timer_Synth.c **** *   Values:
1118:Generated_Source\PSoC4/Timer_Synth.c **** *     - Timer_Synth_TRIG_LEVEL     - Level
1119:Generated_Source\PSoC4/Timer_Synth.c **** *     - Timer_Synth_TRIG_RISING    - Rising edge
1120:Generated_Source\PSoC4/Timer_Synth.c **** *     - Timer_Synth_TRIG_FALLING   - Falling edge
1121:Generated_Source\PSoC4/Timer_Synth.c **** *     - Timer_Synth_TRIG_BOTH      - Both rising and falling edge
1122:Generated_Source\PSoC4/Timer_Synth.c **** *
1123:Generated_Source\PSoC4/Timer_Synth.c **** * Return:
1124:Generated_Source\PSoC4/Timer_Synth.c **** *  None
1125:Generated_Source\PSoC4/Timer_Synth.c **** *
1126:Generated_Source\PSoC4/Timer_Synth.c **** *******************************************************************************/
1127:Generated_Source\PSoC4/Timer_Synth.c **** void Timer_Synth_SetReloadMode(uint32 triggerMode)
1128:Generated_Source\PSoC4/Timer_Synth.c **** {
1129:Generated_Source\PSoC4/Timer_Synth.c ****     uint8 enableInterrupts;
1130:Generated_Source\PSoC4/Timer_Synth.c **** 
1131:Generated_Source\PSoC4/Timer_Synth.c ****     enableInterrupts = CyEnterCriticalSection();
1132:Generated_Source\PSoC4/Timer_Synth.c **** 
1133:Generated_Source\PSoC4/Timer_Synth.c ****     Timer_Synth_TRIG_CONTROL1_REG &= (uint32)~Timer_Synth_RELOAD_MASK;
1134:Generated_Source\PSoC4/Timer_Synth.c ****     Timer_Synth_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << Timer_Synth_RELOAD_SHIFT));
1135:Generated_Source\PSoC4/Timer_Synth.c **** 
1136:Generated_Source\PSoC4/Timer_Synth.c ****     CyExitCriticalSection(enableInterrupts);
1137:Generated_Source\PSoC4/Timer_Synth.c **** }
1138:Generated_Source\PSoC4/Timer_Synth.c **** 
1139:Generated_Source\PSoC4/Timer_Synth.c **** 
1140:Generated_Source\PSoC4/Timer_Synth.c **** /*******************************************************************************
1141:Generated_Source\PSoC4/Timer_Synth.c **** * Function Name: Timer_Synth_SetStartMode
1142:Generated_Source\PSoC4/Timer_Synth.c **** ********************************************************************************
1143:Generated_Source\PSoC4/Timer_Synth.c **** *
1144:Generated_Source\PSoC4/Timer_Synth.c **** * Summary:
1145:Generated_Source\PSoC4/Timer_Synth.c **** *  Sets the start trigger mode. For Quadrature Decoder mode this is the
1146:Generated_Source\PSoC4/Timer_Synth.c **** *  phiB input.
1147:Generated_Source\PSoC4/Timer_Synth.c **** *
1148:Generated_Source\PSoC4/Timer_Synth.c **** * Parameters:
1149:Generated_Source\PSoC4/Timer_Synth.c **** *  triggerMode: Enumerated trigger mode value
1150:Generated_Source\PSoC4/Timer_Synth.c **** *   Values:
1151:Generated_Source\PSoC4/Timer_Synth.c **** *     - Timer_Synth_TRIG_LEVEL     - Level
1152:Generated_Source\PSoC4/Timer_Synth.c **** *     - Timer_Synth_TRIG_RISING    - Rising edge
1153:Generated_Source\PSoC4/Timer_Synth.c **** *     - Timer_Synth_TRIG_FALLING   - Falling edge
1154:Generated_Source\PSoC4/Timer_Synth.c **** *     - Timer_Synth_TRIG_BOTH      - Both rising and falling edge
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccrnaKHI.s 			page 22


1155:Generated_Source\PSoC4/Timer_Synth.c **** *
1156:Generated_Source\PSoC4/Timer_Synth.c **** * Return:
1157:Generated_Source\PSoC4/Timer_Synth.c **** *  None
1158:Generated_Source\PSoC4/Timer_Synth.c **** *
1159:Generated_Source\PSoC4/Timer_Synth.c **** *******************************************************************************/
1160:Generated_Source\PSoC4/Timer_Synth.c **** void Timer_Synth_SetStartMode(uint32 triggerMode)
1161:Generated_Source\PSoC4/Timer_Synth.c **** {
1162:Generated_Source\PSoC4/Timer_Synth.c ****     uint8 enableInterrupts;
1163:Generated_Source\PSoC4/Timer_Synth.c **** 
1164:Generated_Source\PSoC4/Timer_Synth.c ****     enableInterrupts = CyEnterCriticalSection();
1165:Generated_Source\PSoC4/Timer_Synth.c **** 
1166:Generated_Source\PSoC4/Timer_Synth.c ****     Timer_Synth_TRIG_CONTROL1_REG &= (uint32)~Timer_Synth_START_MASK;
1167:Generated_Source\PSoC4/Timer_Synth.c ****     Timer_Synth_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << Timer_Synth_START_SHIFT));
1168:Generated_Source\PSoC4/Timer_Synth.c **** 
1169:Generated_Source\PSoC4/Timer_Synth.c ****     CyExitCriticalSection(enableInterrupts);
1170:Generated_Source\PSoC4/Timer_Synth.c **** }
1171:Generated_Source\PSoC4/Timer_Synth.c **** 
1172:Generated_Source\PSoC4/Timer_Synth.c **** 
1173:Generated_Source\PSoC4/Timer_Synth.c **** /*******************************************************************************
1174:Generated_Source\PSoC4/Timer_Synth.c **** * Function Name: Timer_Synth_SetStopMode
1175:Generated_Source\PSoC4/Timer_Synth.c **** ********************************************************************************
1176:Generated_Source\PSoC4/Timer_Synth.c **** *
1177:Generated_Source\PSoC4/Timer_Synth.c **** * Summary:
1178:Generated_Source\PSoC4/Timer_Synth.c **** *  Sets the stop trigger mode. For PWM mode this is the kill input.
1179:Generated_Source\PSoC4/Timer_Synth.c **** *
1180:Generated_Source\PSoC4/Timer_Synth.c **** * Parameters:
1181:Generated_Source\PSoC4/Timer_Synth.c **** *  triggerMode: Enumerated trigger mode value
1182:Generated_Source\PSoC4/Timer_Synth.c **** *   Values:
1183:Generated_Source\PSoC4/Timer_Synth.c **** *     - Timer_Synth_TRIG_LEVEL     - Level
1184:Generated_Source\PSoC4/Timer_Synth.c **** *     - Timer_Synth_TRIG_RISING    - Rising edge
1185:Generated_Source\PSoC4/Timer_Synth.c **** *     - Timer_Synth_TRIG_FALLING   - Falling edge
1186:Generated_Source\PSoC4/Timer_Synth.c **** *     - Timer_Synth_TRIG_BOTH      - Both rising and falling edge
1187:Generated_Source\PSoC4/Timer_Synth.c **** *
1188:Generated_Source\PSoC4/Timer_Synth.c **** * Return:
1189:Generated_Source\PSoC4/Timer_Synth.c **** *  None
1190:Generated_Source\PSoC4/Timer_Synth.c **** *
1191:Generated_Source\PSoC4/Timer_Synth.c **** *******************************************************************************/
1192:Generated_Source\PSoC4/Timer_Synth.c **** void Timer_Synth_SetStopMode(uint32 triggerMode)
1193:Generated_Source\PSoC4/Timer_Synth.c **** {
1194:Generated_Source\PSoC4/Timer_Synth.c ****     uint8 enableInterrupts;
1195:Generated_Source\PSoC4/Timer_Synth.c **** 
1196:Generated_Source\PSoC4/Timer_Synth.c ****     enableInterrupts = CyEnterCriticalSection();
1197:Generated_Source\PSoC4/Timer_Synth.c **** 
1198:Generated_Source\PSoC4/Timer_Synth.c ****     Timer_Synth_TRIG_CONTROL1_REG &= (uint32)~Timer_Synth_STOP_MASK;
1199:Generated_Source\PSoC4/Timer_Synth.c ****     Timer_Synth_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << Timer_Synth_STOP_SHIFT));
1200:Generated_Source\PSoC4/Timer_Synth.c **** 
1201:Generated_Source\PSoC4/Timer_Synth.c ****     CyExitCriticalSection(enableInterrupts);
1202:Generated_Source\PSoC4/Timer_Synth.c **** }
1203:Generated_Source\PSoC4/Timer_Synth.c **** 
1204:Generated_Source\PSoC4/Timer_Synth.c **** 
1205:Generated_Source\PSoC4/Timer_Synth.c **** /*******************************************************************************
1206:Generated_Source\PSoC4/Timer_Synth.c **** * Function Name: Timer_Synth_SetCountMode
1207:Generated_Source\PSoC4/Timer_Synth.c **** ********************************************************************************
1208:Generated_Source\PSoC4/Timer_Synth.c **** *
1209:Generated_Source\PSoC4/Timer_Synth.c **** * Summary:
1210:Generated_Source\PSoC4/Timer_Synth.c **** *  Sets the count trigger mode. For Quadrature Decoder mode this is the phiA
1211:Generated_Source\PSoC4/Timer_Synth.c **** *  input.
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccrnaKHI.s 			page 23


1212:Generated_Source\PSoC4/Timer_Synth.c **** *
1213:Generated_Source\PSoC4/Timer_Synth.c **** * Parameters:
1214:Generated_Source\PSoC4/Timer_Synth.c **** *  triggerMode: Enumerated trigger mode value
1215:Generated_Source\PSoC4/Timer_Synth.c **** *   Values:
1216:Generated_Source\PSoC4/Timer_Synth.c **** *     - Timer_Synth_TRIG_LEVEL     - Level
1217:Generated_Source\PSoC4/Timer_Synth.c **** *     - Timer_Synth_TRIG_RISING    - Rising edge
1218:Generated_Source\PSoC4/Timer_Synth.c **** *     - Timer_Synth_TRIG_FALLING   - Falling edge
1219:Generated_Source\PSoC4/Timer_Synth.c **** *     - Timer_Synth_TRIG_BOTH      - Both rising and falling edge
1220:Generated_Source\PSoC4/Timer_Synth.c **** *
1221:Generated_Source\PSoC4/Timer_Synth.c **** * Return:
1222:Generated_Source\PSoC4/Timer_Synth.c **** *  None
1223:Generated_Source\PSoC4/Timer_Synth.c **** *
1224:Generated_Source\PSoC4/Timer_Synth.c **** *******************************************************************************/
1225:Generated_Source\PSoC4/Timer_Synth.c **** void Timer_Synth_SetCountMode(uint32 triggerMode)
1226:Generated_Source\PSoC4/Timer_Synth.c **** {
1227:Generated_Source\PSoC4/Timer_Synth.c ****     uint8 enableInterrupts;
1228:Generated_Source\PSoC4/Timer_Synth.c **** 
1229:Generated_Source\PSoC4/Timer_Synth.c ****     enableInterrupts = CyEnterCriticalSection();
1230:Generated_Source\PSoC4/Timer_Synth.c **** 
1231:Generated_Source\PSoC4/Timer_Synth.c ****     Timer_Synth_TRIG_CONTROL1_REG &= (uint32)~Timer_Synth_COUNT_MASK;
1232:Generated_Source\PSoC4/Timer_Synth.c ****     Timer_Synth_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << Timer_Synth_COUNT_SHIFT));
1233:Generated_Source\PSoC4/Timer_Synth.c **** 
1234:Generated_Source\PSoC4/Timer_Synth.c ****     CyExitCriticalSection(enableInterrupts);
1235:Generated_Source\PSoC4/Timer_Synth.c **** }
1236:Generated_Source\PSoC4/Timer_Synth.c **** 
1237:Generated_Source\PSoC4/Timer_Synth.c **** 
1238:Generated_Source\PSoC4/Timer_Synth.c **** /*******************************************************************************
1239:Generated_Source\PSoC4/Timer_Synth.c **** * Function Name: Timer_Synth_TriggerCommand
1240:Generated_Source\PSoC4/Timer_Synth.c **** ********************************************************************************
1241:Generated_Source\PSoC4/Timer_Synth.c **** *
1242:Generated_Source\PSoC4/Timer_Synth.c **** * Summary:
1243:Generated_Source\PSoC4/Timer_Synth.c **** *  Triggers the designated command to occur on the designated TCPWM instances.
1244:Generated_Source\PSoC4/Timer_Synth.c **** *  The mask can be used to apply this command simultaneously to more than one
1245:Generated_Source\PSoC4/Timer_Synth.c **** *  instance.  This allows multiple TCPWM instances to be synchronized.
1246:Generated_Source\PSoC4/Timer_Synth.c **** *
1247:Generated_Source\PSoC4/Timer_Synth.c **** * Parameters:
1248:Generated_Source\PSoC4/Timer_Synth.c **** *  mask: A combination of mask bits for each instance of the TCPWM that the
1249:Generated_Source\PSoC4/Timer_Synth.c **** *        command should apply to.  This function from one instance can be used
1250:Generated_Source\PSoC4/Timer_Synth.c **** *        to apply the command to any of the instances in the design.
1251:Generated_Source\PSoC4/Timer_Synth.c **** *        The mask value for a specific instance is available with the MASK
1252:Generated_Source\PSoC4/Timer_Synth.c **** *        define.
1253:Generated_Source\PSoC4/Timer_Synth.c **** *  command: Enumerated command values. Capture command only applicable for
1254:Generated_Source\PSoC4/Timer_Synth.c **** *           Timer/Counter with Capture and PWM modes.
1255:Generated_Source\PSoC4/Timer_Synth.c **** *   Values:
1256:Generated_Source\PSoC4/Timer_Synth.c **** *     - Timer_Synth_CMD_CAPTURE    - Trigger Capture/Switch command
1257:Generated_Source\PSoC4/Timer_Synth.c **** *     - Timer_Synth_CMD_RELOAD     - Trigger Reload/Index command
1258:Generated_Source\PSoC4/Timer_Synth.c **** *     - Timer_Synth_CMD_STOP       - Trigger Stop/Kill command
1259:Generated_Source\PSoC4/Timer_Synth.c **** *     - Timer_Synth_CMD_START      - Trigger Start/phiB command
1260:Generated_Source\PSoC4/Timer_Synth.c **** *
1261:Generated_Source\PSoC4/Timer_Synth.c **** * Return:
1262:Generated_Source\PSoC4/Timer_Synth.c **** *  None
1263:Generated_Source\PSoC4/Timer_Synth.c **** *
1264:Generated_Source\PSoC4/Timer_Synth.c **** *******************************************************************************/
1265:Generated_Source\PSoC4/Timer_Synth.c **** void Timer_Synth_TriggerCommand(uint32 mask, uint32 command)
1266:Generated_Source\PSoC4/Timer_Synth.c **** {
1267:Generated_Source\PSoC4/Timer_Synth.c ****     uint8 enableInterrupts;
1268:Generated_Source\PSoC4/Timer_Synth.c **** 
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccrnaKHI.s 			page 24


1269:Generated_Source\PSoC4/Timer_Synth.c ****     enableInterrupts = CyEnterCriticalSection();
1270:Generated_Source\PSoC4/Timer_Synth.c **** 
1271:Generated_Source\PSoC4/Timer_Synth.c ****     Timer_Synth_COMMAND_REG = ((uint32)(mask << command));
1272:Generated_Source\PSoC4/Timer_Synth.c **** 
1273:Generated_Source\PSoC4/Timer_Synth.c ****     CyExitCriticalSection(enableInterrupts);
1274:Generated_Source\PSoC4/Timer_Synth.c **** }
1275:Generated_Source\PSoC4/Timer_Synth.c **** 
1276:Generated_Source\PSoC4/Timer_Synth.c **** 
1277:Generated_Source\PSoC4/Timer_Synth.c **** /*******************************************************************************
1278:Generated_Source\PSoC4/Timer_Synth.c **** * Function Name: Timer_Synth_ReadStatus
1279:Generated_Source\PSoC4/Timer_Synth.c **** ********************************************************************************
1280:Generated_Source\PSoC4/Timer_Synth.c **** *
1281:Generated_Source\PSoC4/Timer_Synth.c **** * Summary:
1282:Generated_Source\PSoC4/Timer_Synth.c **** *  Reads the status of the Timer_Synth.
1283:Generated_Source\PSoC4/Timer_Synth.c **** *
1284:Generated_Source\PSoC4/Timer_Synth.c **** * Parameters:
1285:Generated_Source\PSoC4/Timer_Synth.c **** *  None
1286:Generated_Source\PSoC4/Timer_Synth.c **** *
1287:Generated_Source\PSoC4/Timer_Synth.c **** * Return:
1288:Generated_Source\PSoC4/Timer_Synth.c **** *  Status
1289:Generated_Source\PSoC4/Timer_Synth.c **** *   Values:
1290:Generated_Source\PSoC4/Timer_Synth.c **** *     - Timer_Synth_STATUS_DOWN    - Set if counting down
1291:Generated_Source\PSoC4/Timer_Synth.c **** *     - Timer_Synth_STATUS_RUNNING - Set if counter is running
1292:Generated_Source\PSoC4/Timer_Synth.c **** *
1293:Generated_Source\PSoC4/Timer_Synth.c **** *******************************************************************************/
1294:Generated_Source\PSoC4/Timer_Synth.c **** uint32 Timer_Synth_ReadStatus(void)
1295:Generated_Source\PSoC4/Timer_Synth.c **** {
1296:Generated_Source\PSoC4/Timer_Synth.c ****     return ((Timer_Synth_STATUS_REG >> Timer_Synth_RUNNING_STATUS_SHIFT) |
1297:Generated_Source\PSoC4/Timer_Synth.c ****             (Timer_Synth_STATUS_REG & Timer_Synth_STATUS_DOWN));
1298:Generated_Source\PSoC4/Timer_Synth.c **** }
1299:Generated_Source\PSoC4/Timer_Synth.c **** 
1300:Generated_Source\PSoC4/Timer_Synth.c **** 
1301:Generated_Source\PSoC4/Timer_Synth.c **** /*******************************************************************************
1302:Generated_Source\PSoC4/Timer_Synth.c **** * Function Name: Timer_Synth_SetInterruptMode
1303:Generated_Source\PSoC4/Timer_Synth.c **** ********************************************************************************
1304:Generated_Source\PSoC4/Timer_Synth.c **** *
1305:Generated_Source\PSoC4/Timer_Synth.c **** * Summary:
1306:Generated_Source\PSoC4/Timer_Synth.c **** *  Sets the interrupt mask to control which interrupt
1307:Generated_Source\PSoC4/Timer_Synth.c **** *  requests generate the interrupt signal.
1308:Generated_Source\PSoC4/Timer_Synth.c **** *
1309:Generated_Source\PSoC4/Timer_Synth.c **** * Parameters:
1310:Generated_Source\PSoC4/Timer_Synth.c **** *   interruptMask: Mask of bits to be enabled
1311:Generated_Source\PSoC4/Timer_Synth.c **** *   Values:
1312:Generated_Source\PSoC4/Timer_Synth.c **** *     - Timer_Synth_INTR_MASK_TC       - Terminal count mask
1313:Generated_Source\PSoC4/Timer_Synth.c **** *     - Timer_Synth_INTR_MASK_CC_MATCH - Compare count / capture mask
1314:Generated_Source\PSoC4/Timer_Synth.c **** *
1315:Generated_Source\PSoC4/Timer_Synth.c **** * Return:
1316:Generated_Source\PSoC4/Timer_Synth.c **** *  None
1317:Generated_Source\PSoC4/Timer_Synth.c **** *
1318:Generated_Source\PSoC4/Timer_Synth.c **** *******************************************************************************/
1319:Generated_Source\PSoC4/Timer_Synth.c **** void Timer_Synth_SetInterruptMode(uint32 interruptMask)
1320:Generated_Source\PSoC4/Timer_Synth.c **** {
1321:Generated_Source\PSoC4/Timer_Synth.c ****     Timer_Synth_INTERRUPT_MASK_REG =  interruptMask;
  43              		.loc 1 1321 0
  44 000e 074B     		ldr	r3, .L2+8
  45 0010 0B3A     		sub	r2, r2, #11
  46 0012 1A60     		str	r2, [r3]
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccrnaKHI.s 			page 25


  47              	.LVL1:
  48              	.LBE9:
  49              	.LBE8:
  50              	.LBB10:
  51              	.LBB11:
 695:Generated_Source\PSoC4/Timer_Synth.c **** }
  52              		.loc 1 695 0
  53 0014 064B     		ldr	r3, .L2+12
  54 0016 7C32     		add	r2, r2, #124
  55 0018 1A60     		str	r2, [r3]
  56              	.LVL2:
  57              	.LBE11:
  58              	.LBE10:
  59              	.LBB12:
  60              	.LBB13:
 617:Generated_Source\PSoC4/Timer_Synth.c **** }
  61              		.loc 1 617 0
  62 001a 0022     		mov	r2, #0
  63 001c 054B     		ldr	r3, .L2+16
  64 001e 1A60     		str	r2, [r3]
  65              	.LBE13:
  66              	.LBE12:
 160:Generated_Source\PSoC4/Timer_Synth.c **** 
  67              		.loc 1 160 0
  68 0020 7047     		bx	lr
  69              	.L3:
  70 0022 C046     		.align	2
  71              	.L2:
  72 0024 00010140 		.word	1073807616
  73 0028 24010140 		.word	1073807652
  74 002c 38010140 		.word	1073807672
  75 0030 14010140 		.word	1073807636
  76 0034 08010140 		.word	1073807624
  77              		.cfi_endproc
  78              	.LFE1:
  79              		.size	Timer_Synth_Init, .-Timer_Synth_Init
  80              		.section	.text.Timer_Synth_Stop,"ax",%progbits
  81              		.align	1
  82              		.global	Timer_Synth_Stop
  83              		.code	16
  84              		.thumb_func
  85              		.type	Timer_Synth_Stop, %function
  86              	Timer_Synth_Stop:
  87              	.LFB4:
 257:Generated_Source\PSoC4/Timer_Synth.c ****     uint8 enableInterrupts;
  88              		.loc 1 257 0
  89              		.cfi_startproc
  90 0000 08B5     		push	{r3, lr}
  91              		.cfi_def_cfa_offset 8
  92              		.cfi_offset 3, -8
  93              		.cfi_offset 14, -4
 260:Generated_Source\PSoC4/Timer_Synth.c **** 
  94              		.loc 1 260 0
  95 0002 FFF7FEFF 		bl	CyEnterCriticalSection
  96              	.LVL3:
 262:Generated_Source\PSoC4/Timer_Synth.c **** 
  97              		.loc 1 262 0
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccrnaKHI.s 			page 26


  98 0006 0121     		mov	r1, #1
  99 0008 034A     		ldr	r2, .L5
 265:Generated_Source\PSoC4/Timer_Synth.c **** 
 100              		.loc 1 265 0
 101              		@ sp needed
 262:Generated_Source\PSoC4/Timer_Synth.c **** 
 102              		.loc 1 262 0
 103 000a 1368     		ldr	r3, [r2]
 104 000c 8B43     		bic	r3, r1
 105 000e 1360     		str	r3, [r2]
 264:Generated_Source\PSoC4/Timer_Synth.c **** }
 106              		.loc 1 264 0
 107 0010 FFF7FEFF 		bl	CyExitCriticalSection
 108              	.LVL4:
 265:Generated_Source\PSoC4/Timer_Synth.c **** 
 109              		.loc 1 265 0
 110 0014 08BD     		pop	{r3, pc}
 111              	.L6:
 112 0016 C046     		.align	2
 113              	.L5:
 114 0018 00000140 		.word	1073807360
 115              		.cfi_endproc
 116              	.LFE4:
 117              		.size	Timer_Synth_Stop, .-Timer_Synth_Stop
 118              		.section	.text.Timer_Synth_SetMode,"ax",%progbits
 119              		.align	1
 120              		.global	Timer_Synth_SetMode
 121              		.code	16
 122              		.thumb_func
 123              		.type	Timer_Synth_SetMode, %function
 124              	Timer_Synth_SetMode:
 125              	.LFB5:
 294:Generated_Source\PSoC4/Timer_Synth.c ****     uint8 enableInterrupts;
 126              		.loc 1 294 0
 127              		.cfi_startproc
 128              	.LVL5:
 129 0000 10B5     		push	{r4, lr}
 130              		.cfi_def_cfa_offset 8
 131              		.cfi_offset 4, -8
 132              		.cfi_offset 14, -4
 294:Generated_Source\PSoC4/Timer_Synth.c ****     uint8 enableInterrupts;
 133              		.loc 1 294 0
 134 0002 041C     		mov	r4, r0
 297:Generated_Source\PSoC4/Timer_Synth.c **** 
 135              		.loc 1 297 0
 136 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 137              	.LVL6:
 299:Generated_Source\PSoC4/Timer_Synth.c ****     Timer_Synth_CONTROL_REG |= mode;
 138              		.loc 1 299 0
 139 0008 054B     		ldr	r3, .L8
 140 000a 064A     		ldr	r2, .L8+4
 141 000c 1968     		ldr	r1, [r3]
 303:Generated_Source\PSoC4/Timer_Synth.c **** 
 142              		.loc 1 303 0
 143              		@ sp needed
 299:Generated_Source\PSoC4/Timer_Synth.c ****     Timer_Synth_CONTROL_REG |= mode;
 144              		.loc 1 299 0
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccrnaKHI.s 			page 27


 145 000e 0A40     		and	r2, r1
 146 0010 1A60     		str	r2, [r3]
 300:Generated_Source\PSoC4/Timer_Synth.c **** 
 147              		.loc 1 300 0
 148 0012 1A68     		ldr	r2, [r3]
 149 0014 2243     		orr	r2, r4
 150 0016 1A60     		str	r2, [r3]
 302:Generated_Source\PSoC4/Timer_Synth.c **** }
 151              		.loc 1 302 0
 152 0018 FFF7FEFF 		bl	CyExitCriticalSection
 153              	.LVL7:
 154              	.LVL8:
 303:Generated_Source\PSoC4/Timer_Synth.c **** 
 155              		.loc 1 303 0
 156 001c 10BD     		pop	{r4, pc}
 157              	.L9:
 158 001e C046     		.align	2
 159              	.L8:
 160 0020 00010140 		.word	1073807616
 161 0024 FFFFFFF8 		.word	-117440513
 162              		.cfi_endproc
 163              	.LFE5:
 164              		.size	Timer_Synth_SetMode, .-Timer_Synth_SetMode
 165              		.section	.text.Timer_Synth_SetQDMode,"ax",%progbits
 166              		.align	1
 167              		.global	Timer_Synth_SetQDMode
 168              		.code	16
 169              		.thumb_func
 170              		.type	Timer_Synth_SetQDMode, %function
 171              	Timer_Synth_SetQDMode:
 172              	.LFB6:
 327:Generated_Source\PSoC4/Timer_Synth.c ****     uint8 enableInterrupts;
 173              		.loc 1 327 0
 174              		.cfi_startproc
 175              	.LVL9:
 176 0000 10B5     		push	{r4, lr}
 177              		.cfi_def_cfa_offset 8
 178              		.cfi_offset 4, -8
 179              		.cfi_offset 14, -4
 327:Generated_Source\PSoC4/Timer_Synth.c ****     uint8 enableInterrupts;
 180              		.loc 1 327 0
 181 0002 041C     		mov	r4, r0
 330:Generated_Source\PSoC4/Timer_Synth.c **** 
 182              		.loc 1 330 0
 183 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 184              	.LVL10:
 332:Generated_Source\PSoC4/Timer_Synth.c ****     Timer_Synth_CONTROL_REG |= qdMode;
 185              		.loc 1 332 0
 186 0008 054B     		ldr	r3, .L11
 187 000a 064A     		ldr	r2, .L11+4
 188 000c 1968     		ldr	r1, [r3]
 336:Generated_Source\PSoC4/Timer_Synth.c **** 
 189              		.loc 1 336 0
 190              		@ sp needed
 332:Generated_Source\PSoC4/Timer_Synth.c ****     Timer_Synth_CONTROL_REG |= qdMode;
 191              		.loc 1 332 0
 192 000e 0A40     		and	r2, r1
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccrnaKHI.s 			page 28


 193 0010 1A60     		str	r2, [r3]
 333:Generated_Source\PSoC4/Timer_Synth.c **** 
 194              		.loc 1 333 0
 195 0012 1A68     		ldr	r2, [r3]
 196 0014 2243     		orr	r2, r4
 197 0016 1A60     		str	r2, [r3]
 335:Generated_Source\PSoC4/Timer_Synth.c **** }
 198              		.loc 1 335 0
 199 0018 FFF7FEFF 		bl	CyExitCriticalSection
 200              	.LVL11:
 201              	.LVL12:
 336:Generated_Source\PSoC4/Timer_Synth.c **** 
 202              		.loc 1 336 0
 203 001c 10BD     		pop	{r4, pc}
 204              	.L12:
 205 001e C046     		.align	2
 206              	.L11:
 207 0020 00010140 		.word	1073807616
 208 0024 FFFF8FFF 		.word	-7340033
 209              		.cfi_endproc
 210              	.LFE6:
 211              		.size	Timer_Synth_SetQDMode, .-Timer_Synth_SetQDMode
 212              		.section	.text.Timer_Synth_SetPrescaler,"ax",%progbits
 213              		.align	1
 214              		.global	Timer_Synth_SetPrescaler
 215              		.code	16
 216              		.thumb_func
 217              		.type	Timer_Synth_SetPrescaler, %function
 218              	Timer_Synth_SetPrescaler:
 219              	.LFB7:
 364:Generated_Source\PSoC4/Timer_Synth.c ****     uint8 enableInterrupts;
 220              		.loc 1 364 0
 221              		.cfi_startproc
 222              	.LVL13:
 223 0000 10B5     		push	{r4, lr}
 224              		.cfi_def_cfa_offset 8
 225              		.cfi_offset 4, -8
 226              		.cfi_offset 14, -4
 364:Generated_Source\PSoC4/Timer_Synth.c ****     uint8 enableInterrupts;
 227              		.loc 1 364 0
 228 0002 041C     		mov	r4, r0
 367:Generated_Source\PSoC4/Timer_Synth.c **** 
 229              		.loc 1 367 0
 230 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 231              	.LVL14:
 369:Generated_Source\PSoC4/Timer_Synth.c ****     Timer_Synth_CONTROL_REG |= prescaler;
 232              		.loc 1 369 0
 233 0008 054B     		ldr	r3, .L14
 234 000a 064A     		ldr	r2, .L14+4
 235 000c 1968     		ldr	r1, [r3]
 373:Generated_Source\PSoC4/Timer_Synth.c **** 
 236              		.loc 1 373 0
 237              		@ sp needed
 369:Generated_Source\PSoC4/Timer_Synth.c ****     Timer_Synth_CONTROL_REG |= prescaler;
 238              		.loc 1 369 0
 239 000e 0A40     		and	r2, r1
 240 0010 1A60     		str	r2, [r3]
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccrnaKHI.s 			page 29


 370:Generated_Source\PSoC4/Timer_Synth.c **** 
 241              		.loc 1 370 0
 242 0012 1A68     		ldr	r2, [r3]
 243 0014 2243     		orr	r2, r4
 244 0016 1A60     		str	r2, [r3]
 372:Generated_Source\PSoC4/Timer_Synth.c **** }
 245              		.loc 1 372 0
 246 0018 FFF7FEFF 		bl	CyExitCriticalSection
 247              	.LVL15:
 248              	.LVL16:
 373:Generated_Source\PSoC4/Timer_Synth.c **** 
 249              		.loc 1 373 0
 250 001c 10BD     		pop	{r4, pc}
 251              	.L15:
 252 001e C046     		.align	2
 253              	.L14:
 254 0020 00010140 		.word	1073807616
 255 0024 FF00FFFF 		.word	-65281
 256              		.cfi_endproc
 257              	.LFE7:
 258              		.size	Timer_Synth_SetPrescaler, .-Timer_Synth_SetPrescaler
 259              		.section	.text.Timer_Synth_SetOneShot,"ax",%progbits
 260              		.align	1
 261              		.global	Timer_Synth_SetOneShot
 262              		.code	16
 263              		.thumb_func
 264              		.type	Timer_Synth_SetOneShot, %function
 265              	Timer_Synth_SetOneShot:
 266              	.LFB8:
 396:Generated_Source\PSoC4/Timer_Synth.c ****     uint8 enableInterrupts;
 267              		.loc 1 396 0
 268              		.cfi_startproc
 269              	.LVL17:
 270 0000 10B5     		push	{r4, lr}
 271              		.cfi_def_cfa_offset 8
 272              		.cfi_offset 4, -8
 273              		.cfi_offset 14, -4
 396:Generated_Source\PSoC4/Timer_Synth.c ****     uint8 enableInterrupts;
 274              		.loc 1 396 0
 275 0002 041C     		mov	r4, r0
 399:Generated_Source\PSoC4/Timer_Synth.c **** 
 276              		.loc 1 399 0
 277 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 278              	.LVL18:
 401:Generated_Source\PSoC4/Timer_Synth.c ****     Timer_Synth_CONTROL_REG |= ((uint32)((oneShotEnable & Timer_Synth_1BIT_MASK) <<
 279              		.loc 1 401 0
 280 0008 064A     		ldr	r2, .L17
 281 000a 074B     		ldr	r3, .L17+4
 282 000c 1168     		ldr	r1, [r2]
 406:Generated_Source\PSoC4/Timer_Synth.c **** 
 283              		.loc 1 406 0
 284              		@ sp needed
 401:Generated_Source\PSoC4/Timer_Synth.c ****     Timer_Synth_CONTROL_REG |= ((uint32)((oneShotEnable & Timer_Synth_1BIT_MASK) <<
 285              		.loc 1 401 0
 286 000e 0B40     		and	r3, r1
 287 0010 1360     		str	r3, [r2]
 402:Generated_Source\PSoC4/Timer_Synth.c ****                                                                Timer_Synth_ONESHOT_SHIFT));
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccrnaKHI.s 			page 30


 288              		.loc 1 402 0
 289 0012 0123     		mov	r3, #1
 290 0014 1168     		ldr	r1, [r2]
 291 0016 2340     		and	r3, r4
 292 0018 9B04     		lsl	r3, r3, #18
 293 001a 0B43     		orr	r3, r1
 294 001c 1360     		str	r3, [r2]
 405:Generated_Source\PSoC4/Timer_Synth.c **** }
 295              		.loc 1 405 0
 296 001e FFF7FEFF 		bl	CyExitCriticalSection
 297              	.LVL19:
 298              	.LVL20:
 406:Generated_Source\PSoC4/Timer_Synth.c **** 
 299              		.loc 1 406 0
 300 0022 10BD     		pop	{r4, pc}
 301              	.L18:
 302              		.align	2
 303              	.L17:
 304 0024 00010140 		.word	1073807616
 305 0028 FFFFFBFF 		.word	-262145
 306              		.cfi_endproc
 307              	.LFE8:
 308              		.size	Timer_Synth_SetOneShot, .-Timer_Synth_SetOneShot
 309              		.section	.text.Timer_Synth_SetPWMMode,"ax",%progbits
 310              		.align	1
 311              		.global	Timer_Synth_SetPWMMode
 312              		.code	16
 313              		.thumb_func
 314              		.type	Timer_Synth_SetPWMMode, %function
 315              	Timer_Synth_SetPWMMode:
 316              	.LFB9:
 450:Generated_Source\PSoC4/Timer_Synth.c ****     Timer_Synth_TRIG_CONTROL2_REG = (modeMask & Timer_Synth_6BIT_MASK);
 317              		.loc 1 450 0
 318              		.cfi_startproc
 319              	.LVL21:
 451:Generated_Source\PSoC4/Timer_Synth.c **** }
 320              		.loc 1 451 0
 321 0000 3F23     		mov	r3, #63
 322 0002 1840     		and	r0, r3
 323              	.LVL22:
 324 0004 014B     		ldr	r3, .L20
 452:Generated_Source\PSoC4/Timer_Synth.c **** 
 325              		.loc 1 452 0
 326              		@ sp needed
 451:Generated_Source\PSoC4/Timer_Synth.c **** }
 327              		.loc 1 451 0
 328 0006 1860     		str	r0, [r3]
 452:Generated_Source\PSoC4/Timer_Synth.c **** 
 329              		.loc 1 452 0
 330 0008 7047     		bx	lr
 331              	.L21:
 332 000a C046     		.align	2
 333              	.L20:
 334 000c 28010140 		.word	1073807656
 335              		.cfi_endproc
 336              	.LFE9:
 337              		.size	Timer_Synth_SetPWMMode, .-Timer_Synth_SetPWMMode
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccrnaKHI.s 			page 31


 338              		.section	.text.Timer_Synth_SetPWMSyncKill,"ax",%progbits
 339              		.align	1
 340              		.global	Timer_Synth_SetPWMSyncKill
 341              		.code	16
 342              		.thumb_func
 343              		.type	Timer_Synth_SetPWMSyncKill, %function
 344              	Timer_Synth_SetPWMSyncKill:
 345              	.LFB10:
 486:Generated_Source\PSoC4/Timer_Synth.c ****     uint8 enableInterrupts;
 346              		.loc 1 486 0
 347              		.cfi_startproc
 348              	.LVL23:
 349 0000 10B5     		push	{r4, lr}
 350              		.cfi_def_cfa_offset 8
 351              		.cfi_offset 4, -8
 352              		.cfi_offset 14, -4
 486:Generated_Source\PSoC4/Timer_Synth.c ****     uint8 enableInterrupts;
 353              		.loc 1 486 0
 354 0002 041C     		mov	r4, r0
 489:Generated_Source\PSoC4/Timer_Synth.c **** 
 355              		.loc 1 489 0
 356 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 357              	.LVL24:
 491:Generated_Source\PSoC4/Timer_Synth.c ****     Timer_Synth_CONTROL_REG |= ((uint32)((syncKillEnable & Timer_Synth_1BIT_MASK)  <<
 358              		.loc 1 491 0
 359 0008 0421     		mov	r1, #4
 360 000a 064A     		ldr	r2, .L23
 496:Generated_Source\PSoC4/Timer_Synth.c **** 
 361              		.loc 1 496 0
 362              		@ sp needed
 491:Generated_Source\PSoC4/Timer_Synth.c ****     Timer_Synth_CONTROL_REG |= ((uint32)((syncKillEnable & Timer_Synth_1BIT_MASK)  <<
 363              		.loc 1 491 0
 364 000c 1368     		ldr	r3, [r2]
 365 000e 8B43     		bic	r3, r1
 366 0010 1360     		str	r3, [r2]
 492:Generated_Source\PSoC4/Timer_Synth.c ****                                                Timer_Synth_PWM_SYNC_KILL_SHIFT));
 367              		.loc 1 492 0
 368 0012 0123     		mov	r3, #1
 369 0014 1168     		ldr	r1, [r2]
 370 0016 2340     		and	r3, r4
 371 0018 9B00     		lsl	r3, r3, #2
 372 001a 0B43     		orr	r3, r1
 373 001c 1360     		str	r3, [r2]
 495:Generated_Source\PSoC4/Timer_Synth.c **** }
 374              		.loc 1 495 0
 375 001e FFF7FEFF 		bl	CyExitCriticalSection
 376              	.LVL25:
 377              	.LVL26:
 496:Generated_Source\PSoC4/Timer_Synth.c **** 
 378              		.loc 1 496 0
 379 0022 10BD     		pop	{r4, pc}
 380              	.L24:
 381              		.align	2
 382              	.L23:
 383 0024 00010140 		.word	1073807616
 384              		.cfi_endproc
 385              	.LFE10:
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccrnaKHI.s 			page 32


 386              		.size	Timer_Synth_SetPWMSyncKill, .-Timer_Synth_SetPWMSyncKill
 387              		.section	.text.Timer_Synth_SetPWMStopOnKill,"ax",%progbits
 388              		.align	1
 389              		.global	Timer_Synth_SetPWMStopOnKill
 390              		.code	16
 391              		.thumb_func
 392              		.type	Timer_Synth_SetPWMStopOnKill, %function
 393              	Timer_Synth_SetPWMStopOnKill:
 394              	.LFB11:
 520:Generated_Source\PSoC4/Timer_Synth.c ****     uint8 enableInterrupts;
 395              		.loc 1 520 0
 396              		.cfi_startproc
 397              	.LVL27:
 398 0000 10B5     		push	{r4, lr}
 399              		.cfi_def_cfa_offset 8
 400              		.cfi_offset 4, -8
 401              		.cfi_offset 14, -4
 520:Generated_Source\PSoC4/Timer_Synth.c ****     uint8 enableInterrupts;
 402              		.loc 1 520 0
 403 0002 041C     		mov	r4, r0
 523:Generated_Source\PSoC4/Timer_Synth.c **** 
 404              		.loc 1 523 0
 405 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 406              	.LVL28:
 525:Generated_Source\PSoC4/Timer_Synth.c ****     Timer_Synth_CONTROL_REG |= ((uint32)((stopOnKillEnable & Timer_Synth_1BIT_MASK)  <<
 407              		.loc 1 525 0
 408 0008 0821     		mov	r1, #8
 409 000a 064A     		ldr	r2, .L26
 530:Generated_Source\PSoC4/Timer_Synth.c **** 
 410              		.loc 1 530 0
 411              		@ sp needed
 525:Generated_Source\PSoC4/Timer_Synth.c ****     Timer_Synth_CONTROL_REG |= ((uint32)((stopOnKillEnable & Timer_Synth_1BIT_MASK)  <<
 412              		.loc 1 525 0
 413 000c 1368     		ldr	r3, [r2]
 414 000e 8B43     		bic	r3, r1
 415 0010 1360     		str	r3, [r2]
 526:Generated_Source\PSoC4/Timer_Synth.c ****                                                          Timer_Synth_PWM_STOP_KILL_SHIFT));
 416              		.loc 1 526 0
 417 0012 0123     		mov	r3, #1
 418 0014 1168     		ldr	r1, [r2]
 419 0016 2340     		and	r3, r4
 420 0018 DB00     		lsl	r3, r3, #3
 421 001a 0B43     		orr	r3, r1
 422 001c 1360     		str	r3, [r2]
 529:Generated_Source\PSoC4/Timer_Synth.c **** }
 423              		.loc 1 529 0
 424 001e FFF7FEFF 		bl	CyExitCriticalSection
 425              	.LVL29:
 426              	.LVL30:
 530:Generated_Source\PSoC4/Timer_Synth.c **** 
 427              		.loc 1 530 0
 428 0022 10BD     		pop	{r4, pc}
 429              	.L27:
 430              		.align	2
 431              	.L26:
 432 0024 00010140 		.word	1073807616
 433              		.cfi_endproc
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccrnaKHI.s 			page 33


 434              	.LFE11:
 435              		.size	Timer_Synth_SetPWMStopOnKill, .-Timer_Synth_SetPWMStopOnKill
 436              		.section	.text.Timer_Synth_SetPWMDeadTime,"ax",%progbits
 437              		.align	1
 438              		.global	Timer_Synth_SetPWMDeadTime
 439              		.code	16
 440              		.thumb_func
 441              		.type	Timer_Synth_SetPWMDeadTime, %function
 442              	Timer_Synth_SetPWMDeadTime:
 443              	.LFB12:
 553:Generated_Source\PSoC4/Timer_Synth.c ****     uint8 enableInterrupts;
 444              		.loc 1 553 0
 445              		.cfi_startproc
 446              	.LVL31:
 447 0000 10B5     		push	{r4, lr}
 448              		.cfi_def_cfa_offset 8
 449              		.cfi_offset 4, -8
 450              		.cfi_offset 14, -4
 553:Generated_Source\PSoC4/Timer_Synth.c ****     uint8 enableInterrupts;
 451              		.loc 1 553 0
 452 0002 041C     		mov	r4, r0
 556:Generated_Source\PSoC4/Timer_Synth.c **** 
 453              		.loc 1 556 0
 454 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 455              	.LVL32:
 558:Generated_Source\PSoC4/Timer_Synth.c ****     Timer_Synth_CONTROL_REG |= ((uint32)((deadTime & Timer_Synth_8BIT_MASK) <<
 456              		.loc 1 558 0
 457 0008 064B     		ldr	r3, .L29
 458 000a 074A     		ldr	r2, .L29+4
 459 000c 1968     		ldr	r1, [r3]
 559:Generated_Source\PSoC4/Timer_Synth.c ****                                                           Timer_Synth_PRESCALER_SHIFT));
 460              		.loc 1 559 0
 461 000e 2406     		lsl	r4, r4, #24
 462              	.LVL33:
 558:Generated_Source\PSoC4/Timer_Synth.c ****     Timer_Synth_CONTROL_REG |= ((uint32)((deadTime & Timer_Synth_8BIT_MASK) <<
 463              		.loc 1 558 0
 464 0010 0A40     		and	r2, r1
 465 0012 1A60     		str	r2, [r3]
 559:Generated_Source\PSoC4/Timer_Synth.c ****                                                           Timer_Synth_PRESCALER_SHIFT));
 466              		.loc 1 559 0
 467 0014 1A68     		ldr	r2, [r3]
 468 0016 240C     		lsr	r4, r4, #16
 469 0018 1443     		orr	r4, r2
 470 001a 1C60     		str	r4, [r3]
 562:Generated_Source\PSoC4/Timer_Synth.c **** }
 471              		.loc 1 562 0
 472 001c FFF7FEFF 		bl	CyExitCriticalSection
 473              	.LVL34:
 563:Generated_Source\PSoC4/Timer_Synth.c **** 
 474              		.loc 1 563 0
 475              		@ sp needed
 476 0020 10BD     		pop	{r4, pc}
 477              	.L30:
 478 0022 C046     		.align	2
 479              	.L29:
 480 0024 00010140 		.word	1073807616
 481 0028 FF00FFFF 		.word	-65281
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccrnaKHI.s 			page 34


 482              		.cfi_endproc
 483              	.LFE12:
 484              		.size	Timer_Synth_SetPWMDeadTime, .-Timer_Synth_SetPWMDeadTime
 485              		.section	.text.Timer_Synth_SetPWMInvert,"ax",%progbits
 486              		.align	1
 487              		.global	Timer_Synth_SetPWMInvert
 488              		.code	16
 489              		.thumb_func
 490              		.type	Timer_Synth_SetPWMInvert, %function
 491              	Timer_Synth_SetPWMInvert:
 492              	.LFB13:
 586:Generated_Source\PSoC4/Timer_Synth.c ****     uint8 enableInterrupts;
 493              		.loc 1 586 0
 494              		.cfi_startproc
 495              	.LVL35:
 496 0000 10B5     		push	{r4, lr}
 497              		.cfi_def_cfa_offset 8
 498              		.cfi_offset 4, -8
 499              		.cfi_offset 14, -4
 586:Generated_Source\PSoC4/Timer_Synth.c ****     uint8 enableInterrupts;
 500              		.loc 1 586 0
 501 0002 041C     		mov	r4, r0
 589:Generated_Source\PSoC4/Timer_Synth.c **** 
 502              		.loc 1 589 0
 503 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 504              	.LVL36:
 591:Generated_Source\PSoC4/Timer_Synth.c ****     Timer_Synth_CONTROL_REG |= mask;
 505              		.loc 1 591 0
 506 0008 054B     		ldr	r3, .L32
 507 000a 064A     		ldr	r2, .L32+4
 508 000c 1968     		ldr	r1, [r3]
 595:Generated_Source\PSoC4/Timer_Synth.c **** 
 509              		.loc 1 595 0
 510              		@ sp needed
 591:Generated_Source\PSoC4/Timer_Synth.c ****     Timer_Synth_CONTROL_REG |= mask;
 511              		.loc 1 591 0
 512 000e 0A40     		and	r2, r1
 513 0010 1A60     		str	r2, [r3]
 592:Generated_Source\PSoC4/Timer_Synth.c **** 
 514              		.loc 1 592 0
 515 0012 1A68     		ldr	r2, [r3]
 516 0014 2243     		orr	r2, r4
 517 0016 1A60     		str	r2, [r3]
 594:Generated_Source\PSoC4/Timer_Synth.c **** }
 518              		.loc 1 594 0
 519 0018 FFF7FEFF 		bl	CyExitCriticalSection
 520              	.LVL37:
 521              	.LVL38:
 595:Generated_Source\PSoC4/Timer_Synth.c **** 
 522              		.loc 1 595 0
 523 001c 10BD     		pop	{r4, pc}
 524              	.L33:
 525 001e C046     		.align	2
 526              	.L32:
 527 0020 00010140 		.word	1073807616
 528 0024 FFFFCFFF 		.word	-3145729
 529              		.cfi_endproc
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccrnaKHI.s 			page 35


 530              	.LFE13:
 531              		.size	Timer_Synth_SetPWMInvert, .-Timer_Synth_SetPWMInvert
 532              		.section	.text.Timer_Synth_WriteCounter,"ax",%progbits
 533              		.align	1
 534              		.global	Timer_Synth_WriteCounter
 535              		.code	16
 536              		.thumb_func
 537              		.type	Timer_Synth_WriteCounter, %function
 538              	Timer_Synth_WriteCounter:
 539              	.LFB14:
 616:Generated_Source\PSoC4/Timer_Synth.c ****     Timer_Synth_COUNTER_REG = (count & Timer_Synth_16BIT_MASK);
 540              		.loc 1 616 0
 541              		.cfi_startproc
 542              	.LVL39:
 617:Generated_Source\PSoC4/Timer_Synth.c **** }
 543              		.loc 1 617 0
 544 0000 014B     		ldr	r3, .L35
 545 0002 80B2     		uxth	r0, r0
 546              	.LVL40:
 547 0004 1860     		str	r0, [r3]
 618:Generated_Source\PSoC4/Timer_Synth.c **** 
 548              		.loc 1 618 0
 549              		@ sp needed
 550 0006 7047     		bx	lr
 551              	.L36:
 552              		.align	2
 553              	.L35:
 554 0008 08010140 		.word	1073807624
 555              		.cfi_endproc
 556              	.LFE14:
 557              		.size	Timer_Synth_WriteCounter, .-Timer_Synth_WriteCounter
 558              		.section	.text.Timer_Synth_ReadCounter,"ax",%progbits
 559              		.align	1
 560              		.global	Timer_Synth_ReadCounter
 561              		.code	16
 562              		.thumb_func
 563              		.type	Timer_Synth_ReadCounter, %function
 564              	Timer_Synth_ReadCounter:
 565              	.LFB15:
 636:Generated_Source\PSoC4/Timer_Synth.c ****     return (Timer_Synth_COUNTER_REG & Timer_Synth_16BIT_MASK);
 566              		.loc 1 636 0
 567              		.cfi_startproc
 637:Generated_Source\PSoC4/Timer_Synth.c **** }
 568              		.loc 1 637 0
 569 0000 014B     		ldr	r3, .L38
 638:Generated_Source\PSoC4/Timer_Synth.c **** 
 570              		.loc 1 638 0
 571              		@ sp needed
 637:Generated_Source\PSoC4/Timer_Synth.c **** }
 572              		.loc 1 637 0
 573 0002 1868     		ldr	r0, [r3]
 574 0004 80B2     		uxth	r0, r0
 638:Generated_Source\PSoC4/Timer_Synth.c **** 
 575              		.loc 1 638 0
 576 0006 7047     		bx	lr
 577              	.L39:
 578              		.align	2
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccrnaKHI.s 			page 36


 579              	.L38:
 580 0008 08010140 		.word	1073807624
 581              		.cfi_endproc
 582              	.LFE15:
 583              		.size	Timer_Synth_ReadCounter, .-Timer_Synth_ReadCounter
 584              		.section	.text.Timer_Synth_SetCounterMode,"ax",%progbits
 585              		.align	1
 586              		.global	Timer_Synth_SetCounterMode
 587              		.code	16
 588              		.thumb_func
 589              		.type	Timer_Synth_SetCounterMode, %function
 590              	Timer_Synth_SetCounterMode:
 591              	.LFB16:
 665:Generated_Source\PSoC4/Timer_Synth.c ****     uint8 enableInterrupts;
 592              		.loc 1 665 0
 593              		.cfi_startproc
 594              	.LVL41:
 595 0000 10B5     		push	{r4, lr}
 596              		.cfi_def_cfa_offset 8
 597              		.cfi_offset 4, -8
 598              		.cfi_offset 14, -4
 665:Generated_Source\PSoC4/Timer_Synth.c ****     uint8 enableInterrupts;
 599              		.loc 1 665 0
 600 0002 041C     		mov	r4, r0
 668:Generated_Source\PSoC4/Timer_Synth.c **** 
 601              		.loc 1 668 0
 602 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 603              	.LVL42:
 670:Generated_Source\PSoC4/Timer_Synth.c ****     Timer_Synth_CONTROL_REG |= counterMode;
 604              		.loc 1 670 0
 605 0008 054B     		ldr	r3, .L41
 606 000a 064A     		ldr	r2, .L41+4
 607 000c 1968     		ldr	r1, [r3]
 674:Generated_Source\PSoC4/Timer_Synth.c **** 
 608              		.loc 1 674 0
 609              		@ sp needed
 670:Generated_Source\PSoC4/Timer_Synth.c ****     Timer_Synth_CONTROL_REG |= counterMode;
 610              		.loc 1 670 0
 611 000e 0A40     		and	r2, r1
 612 0010 1A60     		str	r2, [r3]
 671:Generated_Source\PSoC4/Timer_Synth.c **** 
 613              		.loc 1 671 0
 614 0012 1A68     		ldr	r2, [r3]
 615 0014 2243     		orr	r2, r4
 616 0016 1A60     		str	r2, [r3]
 673:Generated_Source\PSoC4/Timer_Synth.c **** }
 617              		.loc 1 673 0
 618 0018 FFF7FEFF 		bl	CyExitCriticalSection
 619              	.LVL43:
 620              	.LVL44:
 674:Generated_Source\PSoC4/Timer_Synth.c **** 
 621              		.loc 1 674 0
 622 001c 10BD     		pop	{r4, pc}
 623              	.L42:
 624 001e C046     		.align	2
 625              	.L41:
 626 0020 00010140 		.word	1073807616
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccrnaKHI.s 			page 37


 627 0024 FFFFFCFF 		.word	-196609
 628              		.cfi_endproc
 629              	.LFE16:
 630              		.size	Timer_Synth_SetCounterMode, .-Timer_Synth_SetCounterMode
 631              		.section	.text.Timer_Synth_WritePeriod,"ax",%progbits
 632              		.align	1
 633              		.global	Timer_Synth_WritePeriod
 634              		.code	16
 635              		.thumb_func
 636              		.type	Timer_Synth_WritePeriod, %function
 637              	Timer_Synth_WritePeriod:
 638              	.LFB17:
 694:Generated_Source\PSoC4/Timer_Synth.c ****     Timer_Synth_PERIOD_REG = (period & Timer_Synth_16BIT_MASK);
 639              		.loc 1 694 0
 640              		.cfi_startproc
 641              	.LVL45:
 695:Generated_Source\PSoC4/Timer_Synth.c **** }
 642              		.loc 1 695 0
 643 0000 014B     		ldr	r3, .L44
 644 0002 80B2     		uxth	r0, r0
 645              	.LVL46:
 646 0004 1860     		str	r0, [r3]
 696:Generated_Source\PSoC4/Timer_Synth.c **** 
 647              		.loc 1 696 0
 648              		@ sp needed
 649 0006 7047     		bx	lr
 650              	.L45:
 651              		.align	2
 652              	.L44:
 653 0008 14010140 		.word	1073807636
 654              		.cfi_endproc
 655              	.LFE17:
 656              		.size	Timer_Synth_WritePeriod, .-Timer_Synth_WritePeriod
 657              		.section	.text.Timer_Synth_ReadPeriod,"ax",%progbits
 658              		.align	1
 659              		.global	Timer_Synth_ReadPeriod
 660              		.code	16
 661              		.thumb_func
 662              		.type	Timer_Synth_ReadPeriod, %function
 663              	Timer_Synth_ReadPeriod:
 664              	.LFB18:
 714:Generated_Source\PSoC4/Timer_Synth.c ****     return (Timer_Synth_PERIOD_REG & Timer_Synth_16BIT_MASK);
 665              		.loc 1 714 0
 666              		.cfi_startproc
 715:Generated_Source\PSoC4/Timer_Synth.c **** }
 667              		.loc 1 715 0
 668 0000 014B     		ldr	r3, .L47
 716:Generated_Source\PSoC4/Timer_Synth.c **** 
 669              		.loc 1 716 0
 670              		@ sp needed
 715:Generated_Source\PSoC4/Timer_Synth.c **** }
 671              		.loc 1 715 0
 672 0002 1868     		ldr	r0, [r3]
 673 0004 80B2     		uxth	r0, r0
 716:Generated_Source\PSoC4/Timer_Synth.c **** 
 674              		.loc 1 716 0
 675 0006 7047     		bx	lr
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccrnaKHI.s 			page 38


 676              	.L48:
 677              		.align	2
 678              	.L47:
 679 0008 14010140 		.word	1073807636
 680              		.cfi_endproc
 681              	.LFE18:
 682              		.size	Timer_Synth_ReadPeriod, .-Timer_Synth_ReadPeriod
 683              		.section	.text.Timer_Synth_SetCompareSwap,"ax",%progbits
 684              		.align	1
 685              		.global	Timer_Synth_SetCompareSwap
 686              		.code	16
 687              		.thumb_func
 688              		.type	Timer_Synth_SetCompareSwap, %function
 689              	Timer_Synth_SetCompareSwap:
 690              	.LFB19:
 740:Generated_Source\PSoC4/Timer_Synth.c ****     uint8 enableInterrupts;
 691              		.loc 1 740 0
 692              		.cfi_startproc
 693              	.LVL47:
 694 0000 10B5     		push	{r4, lr}
 695              		.cfi_def_cfa_offset 8
 696              		.cfi_offset 4, -8
 697              		.cfi_offset 14, -4
 740:Generated_Source\PSoC4/Timer_Synth.c ****     uint8 enableInterrupts;
 698              		.loc 1 740 0
 699 0002 041C     		mov	r4, r0
 743:Generated_Source\PSoC4/Timer_Synth.c **** 
 700              		.loc 1 743 0
 701 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 702              	.LVL48:
 745:Generated_Source\PSoC4/Timer_Synth.c ****     Timer_Synth_CONTROL_REG |= (swapEnable & Timer_Synth_1BIT_MASK);
 703              		.loc 1 745 0
 704 0008 0122     		mov	r2, #1
 705 000a 054B     		ldr	r3, .L50
 749:Generated_Source\PSoC4/Timer_Synth.c **** 
 706              		.loc 1 749 0
 707              		@ sp needed
 745:Generated_Source\PSoC4/Timer_Synth.c ****     Timer_Synth_CONTROL_REG |= (swapEnable & Timer_Synth_1BIT_MASK);
 708              		.loc 1 745 0
 709 000c 1968     		ldr	r1, [r3]
 710 000e 9143     		bic	r1, r2
 711 0010 1960     		str	r1, [r3]
 746:Generated_Source\PSoC4/Timer_Synth.c **** 
 712              		.loc 1 746 0
 713 0012 1968     		ldr	r1, [r3]
 714 0014 2240     		and	r2, r4
 715 0016 0A43     		orr	r2, r1
 716 0018 1A60     		str	r2, [r3]
 748:Generated_Source\PSoC4/Timer_Synth.c **** }
 717              		.loc 1 748 0
 718 001a FFF7FEFF 		bl	CyExitCriticalSection
 719              	.LVL49:
 720              	.LVL50:
 749:Generated_Source\PSoC4/Timer_Synth.c **** 
 721              		.loc 1 749 0
 722 001e 10BD     		pop	{r4, pc}
 723              	.L51:
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccrnaKHI.s 			page 39


 724              		.align	2
 725              	.L50:
 726 0020 00010140 		.word	1073807616
 727              		.cfi_endproc
 728              	.LFE19:
 729              		.size	Timer_Synth_SetCompareSwap, .-Timer_Synth_SetCompareSwap
 730              		.section	.text.Timer_Synth_WritePeriodBuf,"ax",%progbits
 731              		.align	1
 732              		.global	Timer_Synth_WritePeriodBuf
 733              		.code	16
 734              		.thumb_func
 735              		.type	Timer_Synth_WritePeriodBuf, %function
 736              	Timer_Synth_WritePeriodBuf:
 737              	.LFB20:
 767:Generated_Source\PSoC4/Timer_Synth.c ****     Timer_Synth_PERIOD_BUF_REG = (periodBuf & Timer_Synth_16BIT_MASK);
 738              		.loc 1 767 0
 739              		.cfi_startproc
 740              	.LVL51:
 768:Generated_Source\PSoC4/Timer_Synth.c **** }
 741              		.loc 1 768 0
 742 0000 014B     		ldr	r3, .L53
 743 0002 80B2     		uxth	r0, r0
 744              	.LVL52:
 745 0004 1860     		str	r0, [r3]
 769:Generated_Source\PSoC4/Timer_Synth.c **** 
 746              		.loc 1 769 0
 747              		@ sp needed
 748 0006 7047     		bx	lr
 749              	.L54:
 750              		.align	2
 751              	.L53:
 752 0008 18010140 		.word	1073807640
 753              		.cfi_endproc
 754              	.LFE20:
 755              		.size	Timer_Synth_WritePeriodBuf, .-Timer_Synth_WritePeriodBuf
 756              		.section	.text.Timer_Synth_ReadPeriodBuf,"ax",%progbits
 757              		.align	1
 758              		.global	Timer_Synth_ReadPeriodBuf
 759              		.code	16
 760              		.thumb_func
 761              		.type	Timer_Synth_ReadPeriodBuf, %function
 762              	Timer_Synth_ReadPeriodBuf:
 763              	.LFB21:
 787:Generated_Source\PSoC4/Timer_Synth.c ****     return (Timer_Synth_PERIOD_BUF_REG & Timer_Synth_16BIT_MASK);
 764              		.loc 1 787 0
 765              		.cfi_startproc
 788:Generated_Source\PSoC4/Timer_Synth.c **** }
 766              		.loc 1 788 0
 767 0000 014B     		ldr	r3, .L56
 789:Generated_Source\PSoC4/Timer_Synth.c **** 
 768              		.loc 1 789 0
 769              		@ sp needed
 788:Generated_Source\PSoC4/Timer_Synth.c **** }
 770              		.loc 1 788 0
 771 0002 1868     		ldr	r0, [r3]
 772 0004 80B2     		uxth	r0, r0
 789:Generated_Source\PSoC4/Timer_Synth.c **** 
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccrnaKHI.s 			page 40


 773              		.loc 1 789 0
 774 0006 7047     		bx	lr
 775              	.L57:
 776              		.align	2
 777              	.L56:
 778 0008 18010140 		.word	1073807640
 779              		.cfi_endproc
 780              	.LFE21:
 781              		.size	Timer_Synth_ReadPeriodBuf, .-Timer_Synth_ReadPeriodBuf
 782              		.section	.text.Timer_Synth_SetPeriodSwap,"ax",%progbits
 783              		.align	1
 784              		.global	Timer_Synth_SetPeriodSwap
 785              		.code	16
 786              		.thumb_func
 787              		.type	Timer_Synth_SetPeriodSwap, %function
 788              	Timer_Synth_SetPeriodSwap:
 789              	.LFB22:
 813:Generated_Source\PSoC4/Timer_Synth.c ****     uint8 enableInterrupts;
 790              		.loc 1 813 0
 791              		.cfi_startproc
 792              	.LVL53:
 793 0000 10B5     		push	{r4, lr}
 794              		.cfi_def_cfa_offset 8
 795              		.cfi_offset 4, -8
 796              		.cfi_offset 14, -4
 813:Generated_Source\PSoC4/Timer_Synth.c ****     uint8 enableInterrupts;
 797              		.loc 1 813 0
 798 0002 041C     		mov	r4, r0
 816:Generated_Source\PSoC4/Timer_Synth.c **** 
 799              		.loc 1 816 0
 800 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 801              	.LVL54:
 818:Generated_Source\PSoC4/Timer_Synth.c ****     Timer_Synth_CONTROL_REG |= ((uint32)((swapEnable & Timer_Synth_1BIT_MASK) <<
 802              		.loc 1 818 0
 803 0008 0221     		mov	r1, #2
 804 000a 064A     		ldr	r2, .L59
 823:Generated_Source\PSoC4/Timer_Synth.c **** 
 805              		.loc 1 823 0
 806              		@ sp needed
 818:Generated_Source\PSoC4/Timer_Synth.c ****     Timer_Synth_CONTROL_REG |= ((uint32)((swapEnable & Timer_Synth_1BIT_MASK) <<
 807              		.loc 1 818 0
 808 000c 1368     		ldr	r3, [r2]
 809 000e 8B43     		bic	r3, r1
 810 0010 1360     		str	r3, [r2]
 819:Generated_Source\PSoC4/Timer_Synth.c ****                                                             Timer_Synth_RELOAD_PERIOD_SHIFT));
 811              		.loc 1 819 0
 812 0012 0123     		mov	r3, #1
 813 0014 1168     		ldr	r1, [r2]
 814 0016 2340     		and	r3, r4
 815 0018 5B00     		lsl	r3, r3, #1
 816 001a 0B43     		orr	r3, r1
 817 001c 1360     		str	r3, [r2]
 822:Generated_Source\PSoC4/Timer_Synth.c **** }
 818              		.loc 1 822 0
 819 001e FFF7FEFF 		bl	CyExitCriticalSection
 820              	.LVL55:
 821              	.LVL56:
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccrnaKHI.s 			page 41


 823:Generated_Source\PSoC4/Timer_Synth.c **** 
 822              		.loc 1 823 0
 823 0022 10BD     		pop	{r4, pc}
 824              	.L60:
 825              		.align	2
 826              	.L59:
 827 0024 00010140 		.word	1073807616
 828              		.cfi_endproc
 829              	.LFE22:
 830              		.size	Timer_Synth_SetPeriodSwap, .-Timer_Synth_SetPeriodSwap
 831              		.section	.text.Timer_Synth_WriteCompare,"ax",%progbits
 832              		.align	1
 833              		.global	Timer_Synth_WriteCompare
 834              		.code	16
 835              		.thumb_func
 836              		.type	Timer_Synth_WriteCompare, %function
 837              	Timer_Synth_WriteCompare:
 838              	.LFB23:
 850:Generated_Source\PSoC4/Timer_Synth.c ****     #if (Timer_Synth_CY_TCPWM_4000)
 839              		.loc 1 850 0
 840              		.cfi_startproc
 841              	.LVL57:
 873:Generated_Source\PSoC4/Timer_Synth.c **** }
 842              		.loc 1 873 0
 843 0000 014B     		ldr	r3, .L62
 844 0002 80B2     		uxth	r0, r0
 845              	.LVL58:
 846 0004 1860     		str	r0, [r3]
 874:Generated_Source\PSoC4/Timer_Synth.c **** 
 847              		.loc 1 874 0
 848              		@ sp needed
 849 0006 7047     		bx	lr
 850              	.L63:
 851              		.align	2
 852              	.L62:
 853 0008 0C010140 		.word	1073807628
 854              		.cfi_endproc
 855              	.LFE23:
 856              		.size	Timer_Synth_WriteCompare, .-Timer_Synth_WriteCompare
 857              		.section	.text.Timer_Synth_ReadCompare,"ax",%progbits
 858              		.align	1
 859              		.global	Timer_Synth_ReadCompare
 860              		.code	16
 861              		.thumb_func
 862              		.type	Timer_Synth_ReadCompare, %function
 863              	Timer_Synth_ReadCompare:
 864              	.LFB24:
 901:Generated_Source\PSoC4/Timer_Synth.c ****     #if (Timer_Synth_CY_TCPWM_4000)
 865              		.loc 1 901 0
 866              		.cfi_startproc
 926:Generated_Source\PSoC4/Timer_Synth.c ****     #endif /* (Timer_Synth_CY_TCPWM_4000) */
 867              		.loc 1 926 0
 868 0000 014B     		ldr	r3, .L65
 928:Generated_Source\PSoC4/Timer_Synth.c **** 
 869              		.loc 1 928 0
 870              		@ sp needed
 926:Generated_Source\PSoC4/Timer_Synth.c ****     #endif /* (Timer_Synth_CY_TCPWM_4000) */
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccrnaKHI.s 			page 42


 871              		.loc 1 926 0
 872 0002 1868     		ldr	r0, [r3]
 873 0004 80B2     		uxth	r0, r0
 928:Generated_Source\PSoC4/Timer_Synth.c **** 
 874              		.loc 1 928 0
 875 0006 7047     		bx	lr
 876              	.L66:
 877              		.align	2
 878              	.L65:
 879 0008 0C010140 		.word	1073807628
 880              		.cfi_endproc
 881              	.LFE24:
 882              		.size	Timer_Synth_ReadCompare, .-Timer_Synth_ReadCompare
 883              		.section	.text.Timer_Synth_WriteCompareBuf,"ax",%progbits
 884              		.align	1
 885              		.global	Timer_Synth_WriteCompareBuf
 886              		.code	16
 887              		.thumb_func
 888              		.type	Timer_Synth_WriteCompareBuf, %function
 889              	Timer_Synth_WriteCompareBuf:
 890              	.LFB25:
 955:Generated_Source\PSoC4/Timer_Synth.c ****     #if (Timer_Synth_CY_TCPWM_4000)
 891              		.loc 1 955 0
 892              		.cfi_startproc
 893              	.LVL59:
 976:Generated_Source\PSoC4/Timer_Synth.c **** }
 894              		.loc 1 976 0
 895 0000 014B     		ldr	r3, .L68
 896 0002 80B2     		uxth	r0, r0
 897              	.LVL60:
 898 0004 1860     		str	r0, [r3]
 977:Generated_Source\PSoC4/Timer_Synth.c **** 
 899              		.loc 1 977 0
 900              		@ sp needed
 901 0006 7047     		bx	lr
 902              	.L69:
 903              		.align	2
 904              	.L68:
 905 0008 10010140 		.word	1073807632
 906              		.cfi_endproc
 907              	.LFE25:
 908              		.size	Timer_Synth_WriteCompareBuf, .-Timer_Synth_WriteCompareBuf
 909              		.section	.text.Timer_Synth_ReadCompareBuf,"ax",%progbits
 910              		.align	1
 911              		.global	Timer_Synth_ReadCompareBuf
 912              		.code	16
 913              		.thumb_func
 914              		.type	Timer_Synth_ReadCompareBuf, %function
 915              	Timer_Synth_ReadCompareBuf:
 916              	.LFB26:
1001:Generated_Source\PSoC4/Timer_Synth.c ****     #if (Timer_Synth_CY_TCPWM_4000)
 917              		.loc 1 1001 0
 918              		.cfi_startproc
1026:Generated_Source\PSoC4/Timer_Synth.c ****     #endif /* (Timer_Synth_CY_TCPWM_4000) */
 919              		.loc 1 1026 0
 920 0000 014B     		ldr	r3, .L71
1028:Generated_Source\PSoC4/Timer_Synth.c **** 
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccrnaKHI.s 			page 43


 921              		.loc 1 1028 0
 922              		@ sp needed
1026:Generated_Source\PSoC4/Timer_Synth.c ****     #endif /* (Timer_Synth_CY_TCPWM_4000) */
 923              		.loc 1 1026 0
 924 0002 1868     		ldr	r0, [r3]
 925 0004 80B2     		uxth	r0, r0
1028:Generated_Source\PSoC4/Timer_Synth.c **** 
 926              		.loc 1 1028 0
 927 0006 7047     		bx	lr
 928              	.L72:
 929              		.align	2
 930              	.L71:
 931 0008 10010140 		.word	1073807632
 932              		.cfi_endproc
 933              	.LFE26:
 934              		.size	Timer_Synth_ReadCompareBuf, .-Timer_Synth_ReadCompareBuf
 935              		.section	.text.Timer_Synth_ReadCapture,"ax",%progbits
 936              		.align	1
 937              		.global	Timer_Synth_ReadCapture
 938              		.code	16
 939              		.thumb_func
 940              		.type	Timer_Synth_ReadCapture, %function
 941              	Timer_Synth_ReadCapture:
 942              	.LFB27:
1047:Generated_Source\PSoC4/Timer_Synth.c ****     return (Timer_Synth_COMP_CAP_REG & Timer_Synth_16BIT_MASK);
 943              		.loc 1 1047 0
 944              		.cfi_startproc
1048:Generated_Source\PSoC4/Timer_Synth.c **** }
 945              		.loc 1 1048 0
 946 0000 014B     		ldr	r3, .L74
1049:Generated_Source\PSoC4/Timer_Synth.c **** 
 947              		.loc 1 1049 0
 948              		@ sp needed
1048:Generated_Source\PSoC4/Timer_Synth.c **** }
 949              		.loc 1 1048 0
 950 0002 1868     		ldr	r0, [r3]
 951 0004 80B2     		uxth	r0, r0
1049:Generated_Source\PSoC4/Timer_Synth.c **** 
 952              		.loc 1 1049 0
 953 0006 7047     		bx	lr
 954              	.L75:
 955              		.align	2
 956              	.L74:
 957 0008 0C010140 		.word	1073807628
 958              		.cfi_endproc
 959              	.LFE27:
 960              		.size	Timer_Synth_ReadCapture, .-Timer_Synth_ReadCapture
 961              		.section	.text.Timer_Synth_ReadCaptureBuf,"ax",%progbits
 962              		.align	1
 963              		.global	Timer_Synth_ReadCaptureBuf
 964              		.code	16
 965              		.thumb_func
 966              		.type	Timer_Synth_ReadCaptureBuf, %function
 967              	Timer_Synth_ReadCaptureBuf:
 968              	.LFB28:
1068:Generated_Source\PSoC4/Timer_Synth.c ****     return (Timer_Synth_COMP_CAP_BUF_REG & Timer_Synth_16BIT_MASK);
 969              		.loc 1 1068 0
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccrnaKHI.s 			page 44


 970              		.cfi_startproc
1069:Generated_Source\PSoC4/Timer_Synth.c **** }
 971              		.loc 1 1069 0
 972 0000 014B     		ldr	r3, .L77
1070:Generated_Source\PSoC4/Timer_Synth.c **** 
 973              		.loc 1 1070 0
 974              		@ sp needed
1069:Generated_Source\PSoC4/Timer_Synth.c **** }
 975              		.loc 1 1069 0
 976 0002 1868     		ldr	r0, [r3]
 977 0004 80B2     		uxth	r0, r0
1070:Generated_Source\PSoC4/Timer_Synth.c **** 
 978              		.loc 1 1070 0
 979 0006 7047     		bx	lr
 980              	.L78:
 981              		.align	2
 982              	.L77:
 983 0008 10010140 		.word	1073807632
 984              		.cfi_endproc
 985              	.LFE28:
 986              		.size	Timer_Synth_ReadCaptureBuf, .-Timer_Synth_ReadCaptureBuf
 987              		.section	.text.Timer_Synth_SetCaptureMode,"ax",%progbits
 988              		.align	1
 989              		.global	Timer_Synth_SetCaptureMode
 990              		.code	16
 991              		.thumb_func
 992              		.type	Timer_Synth_SetCaptureMode, %function
 993              	Timer_Synth_SetCaptureMode:
 994              	.LFB29:
1095:Generated_Source\PSoC4/Timer_Synth.c ****     uint8 enableInterrupts;
 995              		.loc 1 1095 0
 996              		.cfi_startproc
 997              	.LVL61:
 998 0000 10B5     		push	{r4, lr}
 999              		.cfi_def_cfa_offset 8
 1000              		.cfi_offset 4, -8
 1001              		.cfi_offset 14, -4
1095:Generated_Source\PSoC4/Timer_Synth.c ****     uint8 enableInterrupts;
 1002              		.loc 1 1095 0
 1003 0002 041C     		mov	r4, r0
1098:Generated_Source\PSoC4/Timer_Synth.c **** 
 1004              		.loc 1 1098 0
 1005 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 1006              	.LVL62:
1100:Generated_Source\PSoC4/Timer_Synth.c ****     Timer_Synth_TRIG_CONTROL1_REG |= triggerMode;
 1007              		.loc 1 1100 0
 1008 0008 0321     		mov	r1, #3
 1009 000a 054B     		ldr	r3, .L80
1104:Generated_Source\PSoC4/Timer_Synth.c **** 
 1010              		.loc 1 1104 0
 1011              		@ sp needed
1100:Generated_Source\PSoC4/Timer_Synth.c ****     Timer_Synth_TRIG_CONTROL1_REG |= triggerMode;
 1012              		.loc 1 1100 0
 1013 000c 1A68     		ldr	r2, [r3]
 1014 000e 8A43     		bic	r2, r1
 1015 0010 1A60     		str	r2, [r3]
1101:Generated_Source\PSoC4/Timer_Synth.c **** 
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccrnaKHI.s 			page 45


 1016              		.loc 1 1101 0
 1017 0012 1A68     		ldr	r2, [r3]
 1018 0014 2243     		orr	r2, r4
 1019 0016 1A60     		str	r2, [r3]
1103:Generated_Source\PSoC4/Timer_Synth.c **** }
 1020              		.loc 1 1103 0
 1021 0018 FFF7FEFF 		bl	CyExitCriticalSection
 1022              	.LVL63:
 1023              	.LVL64:
1104:Generated_Source\PSoC4/Timer_Synth.c **** 
 1024              		.loc 1 1104 0
 1025 001c 10BD     		pop	{r4, pc}
 1026              	.L81:
 1027 001e C046     		.align	2
 1028              	.L80:
 1029 0020 24010140 		.word	1073807652
 1030              		.cfi_endproc
 1031              	.LFE29:
 1032              		.size	Timer_Synth_SetCaptureMode, .-Timer_Synth_SetCaptureMode
 1033              		.section	.text.Timer_Synth_SetReloadMode,"ax",%progbits
 1034              		.align	1
 1035              		.global	Timer_Synth_SetReloadMode
 1036              		.code	16
 1037              		.thumb_func
 1038              		.type	Timer_Synth_SetReloadMode, %function
 1039              	Timer_Synth_SetReloadMode:
 1040              	.LFB30:
1128:Generated_Source\PSoC4/Timer_Synth.c ****     uint8 enableInterrupts;
 1041              		.loc 1 1128 0
 1042              		.cfi_startproc
 1043              	.LVL65:
 1044 0000 10B5     		push	{r4, lr}
 1045              		.cfi_def_cfa_offset 8
 1046              		.cfi_offset 4, -8
 1047              		.cfi_offset 14, -4
1128:Generated_Source\PSoC4/Timer_Synth.c ****     uint8 enableInterrupts;
 1048              		.loc 1 1128 0
 1049 0002 041C     		mov	r4, r0
1131:Generated_Source\PSoC4/Timer_Synth.c **** 
 1050              		.loc 1 1131 0
 1051 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 1052              	.LVL66:
1133:Generated_Source\PSoC4/Timer_Synth.c ****     Timer_Synth_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << Timer_Synth_RELOAD_SHIFT));
 1053              		.loc 1 1133 0
 1054 0008 3021     		mov	r1, #48
 1055 000a 054B     		ldr	r3, .L83
1137:Generated_Source\PSoC4/Timer_Synth.c **** 
 1056              		.loc 1 1137 0
 1057              		@ sp needed
1133:Generated_Source\PSoC4/Timer_Synth.c ****     Timer_Synth_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << Timer_Synth_RELOAD_SHIFT));
 1058              		.loc 1 1133 0
 1059 000c 1A68     		ldr	r2, [r3]
 1060 000e 8A43     		bic	r2, r1
 1061 0010 1A60     		str	r2, [r3]
1134:Generated_Source\PSoC4/Timer_Synth.c **** 
 1062              		.loc 1 1134 0
 1063 0012 1968     		ldr	r1, [r3]
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccrnaKHI.s 			page 46


 1064 0014 2201     		lsl	r2, r4, #4
 1065 0016 0A43     		orr	r2, r1
 1066 0018 1A60     		str	r2, [r3]
1136:Generated_Source\PSoC4/Timer_Synth.c **** }
 1067              		.loc 1 1136 0
 1068 001a FFF7FEFF 		bl	CyExitCriticalSection
 1069              	.LVL67:
 1070              	.LVL68:
1137:Generated_Source\PSoC4/Timer_Synth.c **** 
 1071              		.loc 1 1137 0
 1072 001e 10BD     		pop	{r4, pc}
 1073              	.L84:
 1074              		.align	2
 1075              	.L83:
 1076 0020 24010140 		.word	1073807652
 1077              		.cfi_endproc
 1078              	.LFE30:
 1079              		.size	Timer_Synth_SetReloadMode, .-Timer_Synth_SetReloadMode
 1080              		.section	.text.Timer_Synth_SetStartMode,"ax",%progbits
 1081              		.align	1
 1082              		.global	Timer_Synth_SetStartMode
 1083              		.code	16
 1084              		.thumb_func
 1085              		.type	Timer_Synth_SetStartMode, %function
 1086              	Timer_Synth_SetStartMode:
 1087              	.LFB31:
1161:Generated_Source\PSoC4/Timer_Synth.c ****     uint8 enableInterrupts;
 1088              		.loc 1 1161 0
 1089              		.cfi_startproc
 1090              	.LVL69:
 1091 0000 10B5     		push	{r4, lr}
 1092              		.cfi_def_cfa_offset 8
 1093              		.cfi_offset 4, -8
 1094              		.cfi_offset 14, -4
1161:Generated_Source\PSoC4/Timer_Synth.c ****     uint8 enableInterrupts;
 1095              		.loc 1 1161 0
 1096 0002 041C     		mov	r4, r0
1164:Generated_Source\PSoC4/Timer_Synth.c **** 
 1097              		.loc 1 1164 0
 1098 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 1099              	.LVL70:
1166:Generated_Source\PSoC4/Timer_Synth.c ****     Timer_Synth_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << Timer_Synth_START_SHIFT));
 1100              		.loc 1 1166 0
 1101 0008 054B     		ldr	r3, .L86
 1102 000a 064A     		ldr	r2, .L86+4
 1103 000c 1968     		ldr	r1, [r3]
1170:Generated_Source\PSoC4/Timer_Synth.c **** 
 1104              		.loc 1 1170 0
 1105              		@ sp needed
1166:Generated_Source\PSoC4/Timer_Synth.c ****     Timer_Synth_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << Timer_Synth_START_SHIFT));
 1106              		.loc 1 1166 0
 1107 000e 0A40     		and	r2, r1
 1108 0010 1A60     		str	r2, [r3]
1167:Generated_Source\PSoC4/Timer_Synth.c **** 
 1109              		.loc 1 1167 0
 1110 0012 1968     		ldr	r1, [r3]
 1111 0014 2202     		lsl	r2, r4, #8
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccrnaKHI.s 			page 47


 1112 0016 0A43     		orr	r2, r1
 1113 0018 1A60     		str	r2, [r3]
1169:Generated_Source\PSoC4/Timer_Synth.c **** }
 1114              		.loc 1 1169 0
 1115 001a FFF7FEFF 		bl	CyExitCriticalSection
 1116              	.LVL71:
 1117              	.LVL72:
1170:Generated_Source\PSoC4/Timer_Synth.c **** 
 1118              		.loc 1 1170 0
 1119 001e 10BD     		pop	{r4, pc}
 1120              	.L87:
 1121              		.align	2
 1122              	.L86:
 1123 0020 24010140 		.word	1073807652
 1124 0024 FFFCFFFF 		.word	-769
 1125              		.cfi_endproc
 1126              	.LFE31:
 1127              		.size	Timer_Synth_SetStartMode, .-Timer_Synth_SetStartMode
 1128              		.section	.text.Timer_Synth_SetStopMode,"ax",%progbits
 1129              		.align	1
 1130              		.global	Timer_Synth_SetStopMode
 1131              		.code	16
 1132              		.thumb_func
 1133              		.type	Timer_Synth_SetStopMode, %function
 1134              	Timer_Synth_SetStopMode:
 1135              	.LFB32:
1193:Generated_Source\PSoC4/Timer_Synth.c ****     uint8 enableInterrupts;
 1136              		.loc 1 1193 0
 1137              		.cfi_startproc
 1138              	.LVL73:
 1139 0000 10B5     		push	{r4, lr}
 1140              		.cfi_def_cfa_offset 8
 1141              		.cfi_offset 4, -8
 1142              		.cfi_offset 14, -4
1193:Generated_Source\PSoC4/Timer_Synth.c ****     uint8 enableInterrupts;
 1143              		.loc 1 1193 0
 1144 0002 041C     		mov	r4, r0
1196:Generated_Source\PSoC4/Timer_Synth.c **** 
 1145              		.loc 1 1196 0
 1146 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 1147              	.LVL74:
1198:Generated_Source\PSoC4/Timer_Synth.c ****     Timer_Synth_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << Timer_Synth_STOP_SHIFT));
 1148              		.loc 1 1198 0
 1149 0008 C021     		mov	r1, #192
 1150 000a 054B     		ldr	r3, .L89
1202:Generated_Source\PSoC4/Timer_Synth.c **** 
 1151              		.loc 1 1202 0
 1152              		@ sp needed
1198:Generated_Source\PSoC4/Timer_Synth.c ****     Timer_Synth_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << Timer_Synth_STOP_SHIFT));
 1153              		.loc 1 1198 0
 1154 000c 1A68     		ldr	r2, [r3]
 1155 000e 8A43     		bic	r2, r1
 1156 0010 1A60     		str	r2, [r3]
1199:Generated_Source\PSoC4/Timer_Synth.c **** 
 1157              		.loc 1 1199 0
 1158 0012 1968     		ldr	r1, [r3]
 1159 0014 A201     		lsl	r2, r4, #6
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccrnaKHI.s 			page 48


 1160 0016 0A43     		orr	r2, r1
 1161 0018 1A60     		str	r2, [r3]
1201:Generated_Source\PSoC4/Timer_Synth.c **** }
 1162              		.loc 1 1201 0
 1163 001a FFF7FEFF 		bl	CyExitCriticalSection
 1164              	.LVL75:
 1165              	.LVL76:
1202:Generated_Source\PSoC4/Timer_Synth.c **** 
 1166              		.loc 1 1202 0
 1167 001e 10BD     		pop	{r4, pc}
 1168              	.L90:
 1169              		.align	2
 1170              	.L89:
 1171 0020 24010140 		.word	1073807652
 1172              		.cfi_endproc
 1173              	.LFE32:
 1174              		.size	Timer_Synth_SetStopMode, .-Timer_Synth_SetStopMode
 1175              		.section	.text.Timer_Synth_SetCountMode,"ax",%progbits
 1176              		.align	1
 1177              		.global	Timer_Synth_SetCountMode
 1178              		.code	16
 1179              		.thumb_func
 1180              		.type	Timer_Synth_SetCountMode, %function
 1181              	Timer_Synth_SetCountMode:
 1182              	.LFB33:
1226:Generated_Source\PSoC4/Timer_Synth.c ****     uint8 enableInterrupts;
 1183              		.loc 1 1226 0
 1184              		.cfi_startproc
 1185              	.LVL77:
 1186 0000 10B5     		push	{r4, lr}
 1187              		.cfi_def_cfa_offset 8
 1188              		.cfi_offset 4, -8
 1189              		.cfi_offset 14, -4
1226:Generated_Source\PSoC4/Timer_Synth.c ****     uint8 enableInterrupts;
 1190              		.loc 1 1226 0
 1191 0002 041C     		mov	r4, r0
1229:Generated_Source\PSoC4/Timer_Synth.c **** 
 1192              		.loc 1 1229 0
 1193 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 1194              	.LVL78:
1231:Generated_Source\PSoC4/Timer_Synth.c ****     Timer_Synth_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << Timer_Synth_COUNT_SHIFT));
 1195              		.loc 1 1231 0
 1196 0008 0C21     		mov	r1, #12
 1197 000a 054B     		ldr	r3, .L92
1235:Generated_Source\PSoC4/Timer_Synth.c **** 
 1198              		.loc 1 1235 0
 1199              		@ sp needed
1231:Generated_Source\PSoC4/Timer_Synth.c ****     Timer_Synth_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << Timer_Synth_COUNT_SHIFT));
 1200              		.loc 1 1231 0
 1201 000c 1A68     		ldr	r2, [r3]
 1202 000e 8A43     		bic	r2, r1
 1203 0010 1A60     		str	r2, [r3]
1232:Generated_Source\PSoC4/Timer_Synth.c **** 
 1204              		.loc 1 1232 0
 1205 0012 1968     		ldr	r1, [r3]
 1206 0014 A200     		lsl	r2, r4, #2
 1207 0016 0A43     		orr	r2, r1
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccrnaKHI.s 			page 49


 1208 0018 1A60     		str	r2, [r3]
1234:Generated_Source\PSoC4/Timer_Synth.c **** }
 1209              		.loc 1 1234 0
 1210 001a FFF7FEFF 		bl	CyExitCriticalSection
 1211              	.LVL79:
 1212              	.LVL80:
1235:Generated_Source\PSoC4/Timer_Synth.c **** 
 1213              		.loc 1 1235 0
 1214 001e 10BD     		pop	{r4, pc}
 1215              	.L93:
 1216              		.align	2
 1217              	.L92:
 1218 0020 24010140 		.word	1073807652
 1219              		.cfi_endproc
 1220              	.LFE33:
 1221              		.size	Timer_Synth_SetCountMode, .-Timer_Synth_SetCountMode
 1222              		.section	.text.Timer_Synth_TriggerCommand,"ax",%progbits
 1223              		.align	1
 1224              		.global	Timer_Synth_TriggerCommand
 1225              		.code	16
 1226              		.thumb_func
 1227              		.type	Timer_Synth_TriggerCommand, %function
 1228              	Timer_Synth_TriggerCommand:
 1229              	.LFB34:
1266:Generated_Source\PSoC4/Timer_Synth.c ****     uint8 enableInterrupts;
 1230              		.loc 1 1266 0
 1231              		.cfi_startproc
 1232              	.LVL81:
 1233 0000 38B5     		push	{r3, r4, r5, lr}
 1234              		.cfi_def_cfa_offset 16
 1235              		.cfi_offset 3, -16
 1236              		.cfi_offset 4, -12
 1237              		.cfi_offset 5, -8
 1238              		.cfi_offset 14, -4
1266:Generated_Source\PSoC4/Timer_Synth.c ****     uint8 enableInterrupts;
 1239              		.loc 1 1266 0
 1240 0002 0D1C     		mov	r5, r1
 1241 0004 041C     		mov	r4, r0
1271:Generated_Source\PSoC4/Timer_Synth.c **** 
 1242              		.loc 1 1271 0
 1243 0006 AC40     		lsl	r4, r4, r5
1269:Generated_Source\PSoC4/Timer_Synth.c **** 
 1244              		.loc 1 1269 0
 1245 0008 FFF7FEFF 		bl	CyEnterCriticalSection
 1246              	.LVL82:
1271:Generated_Source\PSoC4/Timer_Synth.c **** 
 1247              		.loc 1 1271 0
 1248 000c 024B     		ldr	r3, .L95
1274:Generated_Source\PSoC4/Timer_Synth.c **** 
 1249              		.loc 1 1274 0
 1250              		@ sp needed
1271:Generated_Source\PSoC4/Timer_Synth.c **** 
 1251              		.loc 1 1271 0
 1252 000e 1C60     		str	r4, [r3]
1273:Generated_Source\PSoC4/Timer_Synth.c **** }
 1253              		.loc 1 1273 0
 1254 0010 FFF7FEFF 		bl	CyExitCriticalSection
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccrnaKHI.s 			page 50


 1255              	.LVL83:
 1256              	.LVL84:
1274:Generated_Source\PSoC4/Timer_Synth.c **** 
 1257              		.loc 1 1274 0
 1258 0014 38BD     		pop	{r3, r4, r5, pc}
 1259              	.L96:
 1260 0016 C046     		.align	2
 1261              	.L95:
 1262 0018 08000140 		.word	1073807368
 1263              		.cfi_endproc
 1264              	.LFE34:
 1265              		.size	Timer_Synth_TriggerCommand, .-Timer_Synth_TriggerCommand
 1266              		.section	.text.Timer_Synth_Enable,"ax",%progbits
 1267              		.align	1
 1268              		.global	Timer_Synth_Enable
 1269              		.code	16
 1270              		.thumb_func
 1271              		.type	Timer_Synth_Enable, %function
 1272              	Timer_Synth_Enable:
 1273              	.LFB2:
 178:Generated_Source\PSoC4/Timer_Synth.c ****     uint8 enableInterrupts;
 1274              		.loc 1 178 0
 1275              		.cfi_startproc
 1276 0000 10B5     		push	{r4, lr}
 1277              		.cfi_def_cfa_offset 8
 1278              		.cfi_offset 4, -8
 1279              		.cfi_offset 14, -4
 182:Generated_Source\PSoC4/Timer_Synth.c ****     CyExitCriticalSection(enableInterrupts);
 1280              		.loc 1 182 0
 1281 0002 0124     		mov	r4, #1
 181:Generated_Source\PSoC4/Timer_Synth.c ****     Timer_Synth_BLOCK_CONTROL_REG |= Timer_Synth_MASK;
 1282              		.loc 1 181 0
 1283 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 1284              	.LVL85:
 182:Generated_Source\PSoC4/Timer_Synth.c ****     CyExitCriticalSection(enableInterrupts);
 1285              		.loc 1 182 0
 1286 0008 054A     		ldr	r2, .L98
 203:Generated_Source\PSoC4/Timer_Synth.c **** 
 1287              		.loc 1 203 0
 1288              		@ sp needed
 182:Generated_Source\PSoC4/Timer_Synth.c ****     CyExitCriticalSection(enableInterrupts);
 1289              		.loc 1 182 0
 1290 000a 1368     		ldr	r3, [r2]
 1291 000c 2343     		orr	r3, r4
 1292 000e 1360     		str	r3, [r2]
 183:Generated_Source\PSoC4/Timer_Synth.c **** 
 1293              		.loc 1 183 0
 1294 0010 FFF7FEFF 		bl	CyExitCriticalSection
 1295              	.LVL86:
 194:Generated_Source\PSoC4/Timer_Synth.c ****         #endif /* (0u == Timer_Synth_TC_START_SIGNAL_PRESENT) */
 1296              		.loc 1 194 0
 1297 0014 201C     		mov	r0, r4
 1298 0016 1821     		mov	r1, #24
 1299 0018 FFF7FEFF 		bl	Timer_Synth_TriggerCommand
 1300              	.LVL87:
 203:Generated_Source\PSoC4/Timer_Synth.c **** 
 1301              		.loc 1 203 0
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccrnaKHI.s 			page 51


 1302 001c 10BD     		pop	{r4, pc}
 1303              	.L99:
 1304 001e C046     		.align	2
 1305              	.L98:
 1306 0020 00000140 		.word	1073807360
 1307              		.cfi_endproc
 1308              	.LFE2:
 1309              		.size	Timer_Synth_Enable, .-Timer_Synth_Enable
 1310              		.section	.text.Timer_Synth_Start,"ax",%progbits
 1311              		.align	1
 1312              		.global	Timer_Synth_Start
 1313              		.code	16
 1314              		.thumb_func
 1315              		.type	Timer_Synth_Start, %function
 1316              	Timer_Synth_Start:
 1317              	.LFB3:
 231:Generated_Source\PSoC4/Timer_Synth.c ****     if (0u == Timer_Synth_initVar)
 1318              		.loc 1 231 0
 1319              		.cfi_startproc
 1320 0000 10B5     		push	{r4, lr}
 1321              		.cfi_def_cfa_offset 8
 1322              		.cfi_offset 4, -8
 1323              		.cfi_offset 14, -4
 232:Generated_Source\PSoC4/Timer_Synth.c ****     {
 1324              		.loc 1 232 0
 1325 0002 054C     		ldr	r4, .L103
 1326 0004 2378     		ldrb	r3, [r4]
 1327 0006 002B     		cmp	r3, #0
 1328 0008 03D1     		bne	.L101
 234:Generated_Source\PSoC4/Timer_Synth.c ****         Timer_Synth_initVar = 1u;
 1329              		.loc 1 234 0
 1330 000a FFF7FEFF 		bl	Timer_Synth_Init
 1331              	.LVL88:
 235:Generated_Source\PSoC4/Timer_Synth.c ****     }
 1332              		.loc 1 235 0
 1333 000e 0123     		mov	r3, #1
 1334 0010 2370     		strb	r3, [r4]
 1335              	.L101:
 238:Generated_Source\PSoC4/Timer_Synth.c **** }
 1336              		.loc 1 238 0
 1337 0012 FFF7FEFF 		bl	Timer_Synth_Enable
 1338              	.LVL89:
 239:Generated_Source\PSoC4/Timer_Synth.c **** 
 1339              		.loc 1 239 0
 1340              		@ sp needed
 1341 0016 10BD     		pop	{r4, pc}
 1342              	.L104:
 1343              		.align	2
 1344              	.L103:
 1345 0018 00000000 		.word	.LANCHOR0
 1346              		.cfi_endproc
 1347              	.LFE3:
 1348              		.size	Timer_Synth_Start, .-Timer_Synth_Start
 1349              		.section	.text.Timer_Synth_ReadStatus,"ax",%progbits
 1350              		.align	1
 1351              		.global	Timer_Synth_ReadStatus
 1352              		.code	16
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccrnaKHI.s 			page 52


 1353              		.thumb_func
 1354              		.type	Timer_Synth_ReadStatus, %function
 1355              	Timer_Synth_ReadStatus:
 1356              	.LFB35:
1295:Generated_Source\PSoC4/Timer_Synth.c ****     return ((Timer_Synth_STATUS_REG >> Timer_Synth_RUNNING_STATUS_SHIFT) |
 1357              		.loc 1 1295 0
 1358              		.cfi_startproc
1296:Generated_Source\PSoC4/Timer_Synth.c ****             (Timer_Synth_STATUS_REG & Timer_Synth_STATUS_DOWN));
 1359              		.loc 1 1296 0
 1360 0000 034A     		ldr	r2, .L106
1298:Generated_Source\PSoC4/Timer_Synth.c **** 
 1361              		.loc 1 1298 0
 1362              		@ sp needed
1296:Generated_Source\PSoC4/Timer_Synth.c ****             (Timer_Synth_STATUS_REG & Timer_Synth_STATUS_DOWN));
 1363              		.loc 1 1296 0
 1364 0002 1368     		ldr	r3, [r2]
1297:Generated_Source\PSoC4/Timer_Synth.c **** }
 1365              		.loc 1 1297 0
 1366 0004 1068     		ldr	r0, [r2]
 1367 0006 0122     		mov	r2, #1
1296:Generated_Source\PSoC4/Timer_Synth.c ****             (Timer_Synth_STATUS_REG & Timer_Synth_STATUS_DOWN));
 1368              		.loc 1 1296 0
 1369 0008 9B0F     		lsr	r3, r3, #30
1297:Generated_Source\PSoC4/Timer_Synth.c **** }
 1370              		.loc 1 1297 0
 1371 000a 1040     		and	r0, r2
1296:Generated_Source\PSoC4/Timer_Synth.c ****             (Timer_Synth_STATUS_REG & Timer_Synth_STATUS_DOWN));
 1372              		.loc 1 1296 0
 1373 000c 1843     		orr	r0, r3
1298:Generated_Source\PSoC4/Timer_Synth.c **** 
 1374              		.loc 1 1298 0
 1375 000e 7047     		bx	lr
 1376              	.L107:
 1377              		.align	2
 1378              	.L106:
 1379 0010 04010140 		.word	1073807620
 1380              		.cfi_endproc
 1381              	.LFE35:
 1382              		.size	Timer_Synth_ReadStatus, .-Timer_Synth_ReadStatus
 1383              		.section	.text.Timer_Synth_SetInterruptMode,"ax",%progbits
 1384              		.align	1
 1385              		.global	Timer_Synth_SetInterruptMode
 1386              		.code	16
 1387              		.thumb_func
 1388              		.type	Timer_Synth_SetInterruptMode, %function
 1389              	Timer_Synth_SetInterruptMode:
 1390              	.LFB36:
1320:Generated_Source\PSoC4/Timer_Synth.c ****     Timer_Synth_INTERRUPT_MASK_REG =  interruptMask;
 1391              		.loc 1 1320 0
 1392              		.cfi_startproc
 1393              	.LVL90:
 1394              		.loc 1 1321 0
 1395 0000 014B     		ldr	r3, .L109
1322:Generated_Source\PSoC4/Timer_Synth.c **** }
 1396              		.loc 1 1322 0
 1397              		@ sp needed
1321:Generated_Source\PSoC4/Timer_Synth.c **** }
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccrnaKHI.s 			page 53


 1398              		.loc 1 1321 0
 1399 0002 1860     		str	r0, [r3]
 1400              		.loc 1 1322 0
 1401 0004 7047     		bx	lr
 1402              	.L110:
 1403 0006 C046     		.align	2
 1404              	.L109:
 1405 0008 38010140 		.word	1073807672
 1406              		.cfi_endproc
 1407              	.LFE36:
 1408              		.size	Timer_Synth_SetInterruptMode, .-Timer_Synth_SetInterruptMode
 1409              		.section	.text.Timer_Synth_GetInterruptSourceMasked,"ax",%progbits
 1410              		.align	1
 1411              		.global	Timer_Synth_GetInterruptSourceMasked
 1412              		.code	16
 1413              		.thumb_func
 1414              		.type	Timer_Synth_GetInterruptSourceMasked, %function
 1415              	Timer_Synth_GetInterruptSourceMasked:
 1416              	.LFB37:
1323:Generated_Source\PSoC4/Timer_Synth.c **** 
1324:Generated_Source\PSoC4/Timer_Synth.c **** 
1325:Generated_Source\PSoC4/Timer_Synth.c **** /*******************************************************************************
1326:Generated_Source\PSoC4/Timer_Synth.c **** * Function Name: Timer_Synth_GetInterruptSourceMasked
1327:Generated_Source\PSoC4/Timer_Synth.c **** ********************************************************************************
1328:Generated_Source\PSoC4/Timer_Synth.c **** *
1329:Generated_Source\PSoC4/Timer_Synth.c **** * Summary:
1330:Generated_Source\PSoC4/Timer_Synth.c **** *  Gets the interrupt requests masked by the interrupt mask.
1331:Generated_Source\PSoC4/Timer_Synth.c **** *
1332:Generated_Source\PSoC4/Timer_Synth.c **** * Parameters:
1333:Generated_Source\PSoC4/Timer_Synth.c **** *   None
1334:Generated_Source\PSoC4/Timer_Synth.c **** *
1335:Generated_Source\PSoC4/Timer_Synth.c **** * Return:
1336:Generated_Source\PSoC4/Timer_Synth.c **** *  Masked interrupt source
1337:Generated_Source\PSoC4/Timer_Synth.c **** *   Values:
1338:Generated_Source\PSoC4/Timer_Synth.c **** *     - Timer_Synth_INTR_MASK_TC       - Terminal count mask
1339:Generated_Source\PSoC4/Timer_Synth.c **** *     - Timer_Synth_INTR_MASK_CC_MATCH - Compare count / capture mask
1340:Generated_Source\PSoC4/Timer_Synth.c **** *
1341:Generated_Source\PSoC4/Timer_Synth.c **** *******************************************************************************/
1342:Generated_Source\PSoC4/Timer_Synth.c **** uint32 Timer_Synth_GetInterruptSourceMasked(void)
1343:Generated_Source\PSoC4/Timer_Synth.c **** {
 1417              		.loc 1 1343 0
 1418              		.cfi_startproc
1344:Generated_Source\PSoC4/Timer_Synth.c ****     return (Timer_Synth_INTERRUPT_MASKED_REG);
 1419              		.loc 1 1344 0
 1420 0000 014B     		ldr	r3, .L112
1345:Generated_Source\PSoC4/Timer_Synth.c **** }
 1421              		.loc 1 1345 0
 1422              		@ sp needed
1344:Generated_Source\PSoC4/Timer_Synth.c ****     return (Timer_Synth_INTERRUPT_MASKED_REG);
 1423              		.loc 1 1344 0
 1424 0002 1868     		ldr	r0, [r3]
 1425              		.loc 1 1345 0
 1426 0004 7047     		bx	lr
 1427              	.L113:
 1428 0006 C046     		.align	2
 1429              	.L112:
 1430 0008 3C010140 		.word	1073807676
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccrnaKHI.s 			page 54


 1431              		.cfi_endproc
 1432              	.LFE37:
 1433              		.size	Timer_Synth_GetInterruptSourceMasked, .-Timer_Synth_GetInterruptSourceMasked
 1434              		.section	.text.Timer_Synth_GetInterruptSource,"ax",%progbits
 1435              		.align	1
 1436              		.global	Timer_Synth_GetInterruptSource
 1437              		.code	16
 1438              		.thumb_func
 1439              		.type	Timer_Synth_GetInterruptSource, %function
 1440              	Timer_Synth_GetInterruptSource:
 1441              	.LFB38:
1346:Generated_Source\PSoC4/Timer_Synth.c **** 
1347:Generated_Source\PSoC4/Timer_Synth.c **** 
1348:Generated_Source\PSoC4/Timer_Synth.c **** /*******************************************************************************
1349:Generated_Source\PSoC4/Timer_Synth.c **** * Function Name: Timer_Synth_GetInterruptSource
1350:Generated_Source\PSoC4/Timer_Synth.c **** ********************************************************************************
1351:Generated_Source\PSoC4/Timer_Synth.c **** *
1352:Generated_Source\PSoC4/Timer_Synth.c **** * Summary:
1353:Generated_Source\PSoC4/Timer_Synth.c **** *  Gets the interrupt requests (without masking).
1354:Generated_Source\PSoC4/Timer_Synth.c **** *
1355:Generated_Source\PSoC4/Timer_Synth.c **** * Parameters:
1356:Generated_Source\PSoC4/Timer_Synth.c **** *  None
1357:Generated_Source\PSoC4/Timer_Synth.c **** *
1358:Generated_Source\PSoC4/Timer_Synth.c **** * Return:
1359:Generated_Source\PSoC4/Timer_Synth.c **** *  Interrupt request value
1360:Generated_Source\PSoC4/Timer_Synth.c **** *   Values:
1361:Generated_Source\PSoC4/Timer_Synth.c **** *     - Timer_Synth_INTR_MASK_TC       - Terminal count mask
1362:Generated_Source\PSoC4/Timer_Synth.c **** *     - Timer_Synth_INTR_MASK_CC_MATCH - Compare count / capture mask
1363:Generated_Source\PSoC4/Timer_Synth.c **** *
1364:Generated_Source\PSoC4/Timer_Synth.c **** *******************************************************************************/
1365:Generated_Source\PSoC4/Timer_Synth.c **** uint32 Timer_Synth_GetInterruptSource(void)
1366:Generated_Source\PSoC4/Timer_Synth.c **** {
 1442              		.loc 1 1366 0
 1443              		.cfi_startproc
1367:Generated_Source\PSoC4/Timer_Synth.c ****     return (Timer_Synth_INTERRUPT_REQ_REG);
 1444              		.loc 1 1367 0
 1445 0000 014B     		ldr	r3, .L115
1368:Generated_Source\PSoC4/Timer_Synth.c **** }
 1446              		.loc 1 1368 0
 1447              		@ sp needed
1367:Generated_Source\PSoC4/Timer_Synth.c ****     return (Timer_Synth_INTERRUPT_REQ_REG);
 1448              		.loc 1 1367 0
 1449 0002 1868     		ldr	r0, [r3]
 1450              		.loc 1 1368 0
 1451 0004 7047     		bx	lr
 1452              	.L116:
 1453 0006 C046     		.align	2
 1454              	.L115:
 1455 0008 30010140 		.word	1073807664
 1456              		.cfi_endproc
 1457              	.LFE38:
 1458              		.size	Timer_Synth_GetInterruptSource, .-Timer_Synth_GetInterruptSource
 1459              		.section	.text.Timer_Synth_ClearInterrupt,"ax",%progbits
 1460              		.align	1
 1461              		.global	Timer_Synth_ClearInterrupt
 1462              		.code	16
 1463              		.thumb_func
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccrnaKHI.s 			page 55


 1464              		.type	Timer_Synth_ClearInterrupt, %function
 1465              	Timer_Synth_ClearInterrupt:
 1466              	.LFB39:
1369:Generated_Source\PSoC4/Timer_Synth.c **** 
1370:Generated_Source\PSoC4/Timer_Synth.c **** 
1371:Generated_Source\PSoC4/Timer_Synth.c **** /*******************************************************************************
1372:Generated_Source\PSoC4/Timer_Synth.c **** * Function Name: Timer_Synth_ClearInterrupt
1373:Generated_Source\PSoC4/Timer_Synth.c **** ********************************************************************************
1374:Generated_Source\PSoC4/Timer_Synth.c **** *
1375:Generated_Source\PSoC4/Timer_Synth.c **** * Summary:
1376:Generated_Source\PSoC4/Timer_Synth.c **** *  Clears the interrupt request.
1377:Generated_Source\PSoC4/Timer_Synth.c **** *
1378:Generated_Source\PSoC4/Timer_Synth.c **** * Parameters:
1379:Generated_Source\PSoC4/Timer_Synth.c **** *   interruptMask: Mask of interrupts to clear
1380:Generated_Source\PSoC4/Timer_Synth.c **** *   Values:
1381:Generated_Source\PSoC4/Timer_Synth.c **** *     - Timer_Synth_INTR_MASK_TC       - Terminal count mask
1382:Generated_Source\PSoC4/Timer_Synth.c **** *     - Timer_Synth_INTR_MASK_CC_MATCH - Compare count / capture mask
1383:Generated_Source\PSoC4/Timer_Synth.c **** *
1384:Generated_Source\PSoC4/Timer_Synth.c **** * Return:
1385:Generated_Source\PSoC4/Timer_Synth.c **** *  None
1386:Generated_Source\PSoC4/Timer_Synth.c **** *
1387:Generated_Source\PSoC4/Timer_Synth.c **** *******************************************************************************/
1388:Generated_Source\PSoC4/Timer_Synth.c **** void Timer_Synth_ClearInterrupt(uint32 interruptMask)
1389:Generated_Source\PSoC4/Timer_Synth.c **** {
 1467              		.loc 1 1389 0
 1468              		.cfi_startproc
 1469              	.LVL91:
1390:Generated_Source\PSoC4/Timer_Synth.c ****     Timer_Synth_INTERRUPT_REQ_REG = interruptMask;
 1470              		.loc 1 1390 0
 1471 0000 014B     		ldr	r3, .L118
1391:Generated_Source\PSoC4/Timer_Synth.c **** }
 1472              		.loc 1 1391 0
 1473              		@ sp needed
1390:Generated_Source\PSoC4/Timer_Synth.c ****     Timer_Synth_INTERRUPT_REQ_REG = interruptMask;
 1474              		.loc 1 1390 0
 1475 0002 1860     		str	r0, [r3]
 1476              		.loc 1 1391 0
 1477 0004 7047     		bx	lr
 1478              	.L119:
 1479 0006 C046     		.align	2
 1480              	.L118:
 1481 0008 30010140 		.word	1073807664
 1482              		.cfi_endproc
 1483              	.LFE39:
 1484              		.size	Timer_Synth_ClearInterrupt, .-Timer_Synth_ClearInterrupt
 1485              		.section	.text.Timer_Synth_SetInterrupt,"ax",%progbits
 1486              		.align	1
 1487              		.global	Timer_Synth_SetInterrupt
 1488              		.code	16
 1489              		.thumb_func
 1490              		.type	Timer_Synth_SetInterrupt, %function
 1491              	Timer_Synth_SetInterrupt:
 1492              	.LFB40:
1392:Generated_Source\PSoC4/Timer_Synth.c **** 
1393:Generated_Source\PSoC4/Timer_Synth.c **** 
1394:Generated_Source\PSoC4/Timer_Synth.c **** /*******************************************************************************
1395:Generated_Source\PSoC4/Timer_Synth.c **** * Function Name: Timer_Synth_SetInterrupt
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccrnaKHI.s 			page 56


1396:Generated_Source\PSoC4/Timer_Synth.c **** ********************************************************************************
1397:Generated_Source\PSoC4/Timer_Synth.c **** *
1398:Generated_Source\PSoC4/Timer_Synth.c **** * Summary:
1399:Generated_Source\PSoC4/Timer_Synth.c **** *  Sets a software interrupt request.
1400:Generated_Source\PSoC4/Timer_Synth.c **** *
1401:Generated_Source\PSoC4/Timer_Synth.c **** * Parameters:
1402:Generated_Source\PSoC4/Timer_Synth.c **** *   interruptMask: Mask of interrupts to set
1403:Generated_Source\PSoC4/Timer_Synth.c **** *   Values:
1404:Generated_Source\PSoC4/Timer_Synth.c **** *     - Timer_Synth_INTR_MASK_TC       - Terminal count mask
1405:Generated_Source\PSoC4/Timer_Synth.c **** *     - Timer_Synth_INTR_MASK_CC_MATCH - Compare count / capture mask
1406:Generated_Source\PSoC4/Timer_Synth.c **** *
1407:Generated_Source\PSoC4/Timer_Synth.c **** * Return:
1408:Generated_Source\PSoC4/Timer_Synth.c **** *  None
1409:Generated_Source\PSoC4/Timer_Synth.c **** *
1410:Generated_Source\PSoC4/Timer_Synth.c **** *******************************************************************************/
1411:Generated_Source\PSoC4/Timer_Synth.c **** void Timer_Synth_SetInterrupt(uint32 interruptMask)
1412:Generated_Source\PSoC4/Timer_Synth.c **** {
 1493              		.loc 1 1412 0
 1494              		.cfi_startproc
 1495              	.LVL92:
1413:Generated_Source\PSoC4/Timer_Synth.c ****     Timer_Synth_INTERRUPT_SET_REG = interruptMask;
 1496              		.loc 1 1413 0
 1497 0000 014B     		ldr	r3, .L121
1414:Generated_Source\PSoC4/Timer_Synth.c **** }
 1498              		.loc 1 1414 0
 1499              		@ sp needed
1413:Generated_Source\PSoC4/Timer_Synth.c ****     Timer_Synth_INTERRUPT_SET_REG = interruptMask;
 1500              		.loc 1 1413 0
 1501 0002 1860     		str	r0, [r3]
 1502              		.loc 1 1414 0
 1503 0004 7047     		bx	lr
 1504              	.L122:
 1505 0006 C046     		.align	2
 1506              	.L121:
 1507 0008 34010140 		.word	1073807668
 1508              		.cfi_endproc
 1509              	.LFE40:
 1510              		.size	Timer_Synth_SetInterrupt, .-Timer_Synth_SetInterrupt
 1511              		.global	Timer_Synth_initVar
 1512              		.bss
 1513              		.set	.LANCHOR0,. + 0
 1514              		.type	Timer_Synth_initVar, %object
 1515              		.size	Timer_Synth_initVar, 1
 1516              	Timer_Synth_initVar:
 1517 0000 00       		.space	1
 1518              		.text
 1519              	.Letext0:
 1520              		.file 2 "Generated_Source\\PSoC4\\cytypes.h"
 1521              		.file 3 "Generated_Source\\PSoC4\\CyLib.h"
 1522              		.section	.debug_info,"",%progbits
 1523              	.Ldebug_info0:
 1524 0000 31090000 		.4byte	0x931
 1525 0004 0400     		.2byte	0x4
 1526 0006 00000000 		.4byte	.Ldebug_abbrev0
 1527 000a 04       		.byte	0x4
 1528 000b 01       		.uleb128 0x1
 1529 000c AA020000 		.4byte	.LASF76
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccrnaKHI.s 			page 57


 1530 0010 01       		.byte	0x1
 1531 0011 F2030000 		.4byte	.LASF77
 1532 0015 63040000 		.4byte	.LASF78
 1533 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1534 001d 00000000 		.4byte	0
 1535 0021 00000000 		.4byte	.Ldebug_line0
 1536 0025 02       		.uleb128 0x2
 1537 0026 01       		.byte	0x1
 1538 0027 06       		.byte	0x6
 1539 0028 1F010000 		.4byte	.LASF0
 1540 002c 02       		.uleb128 0x2
 1541 002d 01       		.byte	0x1
 1542 002e 08       		.byte	0x8
 1543 002f 8F040000 		.4byte	.LASF1
 1544 0033 02       		.uleb128 0x2
 1545 0034 02       		.byte	0x2
 1546 0035 05       		.byte	0x5
 1547 0036 AE040000 		.4byte	.LASF2
 1548 003a 02       		.uleb128 0x2
 1549 003b 02       		.byte	0x2
 1550 003c 07       		.byte	0x7
 1551 003d 89020000 		.4byte	.LASF3
 1552 0041 02       		.uleb128 0x2
 1553 0042 04       		.byte	0x4
 1554 0043 05       		.byte	0x5
 1555 0044 46010000 		.4byte	.LASF4
 1556 0048 02       		.uleb128 0x2
 1557 0049 04       		.byte	0x4
 1558 004a 07       		.byte	0x7
 1559 004b 3C020000 		.4byte	.LASF5
 1560 004f 02       		.uleb128 0x2
 1561 0050 08       		.byte	0x8
 1562 0051 05       		.byte	0x5
 1563 0052 11010000 		.4byte	.LASF6
 1564 0056 02       		.uleb128 0x2
 1565 0057 08       		.byte	0x8
 1566 0058 07       		.byte	0x7
 1567 0059 A4000000 		.4byte	.LASF7
 1568 005d 03       		.uleb128 0x3
 1569 005e 04       		.byte	0x4
 1570 005f 05       		.byte	0x5
 1571 0060 696E7400 		.ascii	"int\000"
 1572 0064 02       		.uleb128 0x2
 1573 0065 04       		.byte	0x4
 1574 0066 07       		.byte	0x7
 1575 0067 27020000 		.4byte	.LASF8
 1576 006b 04       		.uleb128 0x4
 1577 006c 6E010000 		.4byte	.LASF9
 1578 0070 02       		.byte	0x2
 1579 0071 B901     		.2byte	0x1b9
 1580 0073 2C000000 		.4byte	0x2c
 1581 0077 04       		.uleb128 0x4
 1582 0078 A4010000 		.4byte	.LASF10
 1583 007c 02       		.byte	0x2
 1584 007d BB01     		.2byte	0x1bb
 1585 007f 48000000 		.4byte	0x48
 1586 0083 02       		.uleb128 0x2
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccrnaKHI.s 			page 58


 1587 0084 04       		.byte	0x4
 1588 0085 04       		.byte	0x4
 1589 0086 3A040000 		.4byte	.LASF11
 1590 008a 02       		.uleb128 0x2
 1591 008b 08       		.byte	0x8
 1592 008c 04       		.byte	0x4
 1593 008d 74010000 		.4byte	.LASF12
 1594 0091 02       		.uleb128 0x2
 1595 0092 01       		.byte	0x1
 1596 0093 08       		.byte	0x8
 1597 0094 04050000 		.4byte	.LASF13
 1598 0098 04       		.uleb128 0x4
 1599 0099 73030000 		.4byte	.LASF14
 1600 009d 02       		.byte	0x2
 1601 009e 6502     		.2byte	0x265
 1602 00a0 A4000000 		.4byte	0xa4
 1603 00a4 05       		.uleb128 0x5
 1604 00a5 77000000 		.4byte	0x77
 1605 00a9 02       		.uleb128 0x2
 1606 00aa 04       		.byte	0x4
 1607 00ab 07       		.byte	0x7
 1608 00ac AA030000 		.4byte	.LASF15
 1609 00b0 06       		.uleb128 0x6
 1610 00b1 34000000 		.4byte	.LASF16
 1611 00b5 01       		.byte	0x1
 1612 00b6 2705     		.2byte	0x527
 1613 00b8 01       		.byte	0x1
 1614 00b9 CA000000 		.4byte	0xca
 1615 00bd 07       		.uleb128 0x7
 1616 00be B8040000 		.4byte	.LASF18
 1617 00c2 01       		.byte	0x1
 1618 00c3 2705     		.2byte	0x527
 1619 00c5 77000000 		.4byte	0x77
 1620 00c9 00       		.byte	0
 1621 00ca 06       		.uleb128 0x6
 1622 00cb 92030000 		.4byte	.LASF17
 1623 00cf 01       		.byte	0x1
 1624 00d0 B502     		.2byte	0x2b5
 1625 00d2 01       		.byte	0x1
 1626 00d3 E4000000 		.4byte	0xe4
 1627 00d7 07       		.uleb128 0x7
 1628 00d8 68000000 		.4byte	.LASF19
 1629 00dc 01       		.byte	0x1
 1630 00dd B502     		.2byte	0x2b5
 1631 00df 77000000 		.4byte	0x77
 1632 00e3 00       		.byte	0
 1633 00e4 06       		.uleb128 0x6
 1634 00e5 4C050000 		.4byte	.LASF20
 1635 00e9 01       		.byte	0x1
 1636 00ea 6702     		.2byte	0x267
 1637 00ec 01       		.byte	0x1
 1638 00ed FE000000 		.4byte	0xfe
 1639 00f1 07       		.uleb128 0x7
 1640 00f2 00000000 		.4byte	.LASF21
 1641 00f6 01       		.byte	0x1
 1642 00f7 6702     		.2byte	0x267
 1643 00f9 77000000 		.4byte	0x77
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccrnaKHI.s 			page 59


 1644 00fd 00       		.byte	0
 1645 00fe 08       		.uleb128 0x8
 1646 00ff 00010000 		.4byte	.LASF22
 1647 0103 01       		.byte	0x1
 1648 0104 26       		.byte	0x26
 1649 0105 00000000 		.4byte	.LFB1
 1650 0109 38000000 		.4byte	.LFE1-.LFB1
 1651 010d 01       		.uleb128 0x1
 1652 010e 9C       		.byte	0x9c
 1653 010f 5E010000 		.4byte	0x15e
 1654 0113 09       		.uleb128 0x9
 1655 0114 B0000000 		.4byte	0xb0
 1656 0118 0E000000 		.4byte	.LBB8
 1657 011c 06000000 		.4byte	.LBE8-.LBB8
 1658 0120 01       		.byte	0x1
 1659 0121 40       		.byte	0x40
 1660 0122 2D010000 		.4byte	0x12d
 1661 0126 0A       		.uleb128 0xa
 1662 0127 BD000000 		.4byte	0xbd
 1663 012b 01       		.byte	0x1
 1664 012c 00       		.byte	0
 1665 012d 09       		.uleb128 0x9
 1666 012e CA000000 		.4byte	0xca
 1667 0132 14000000 		.4byte	.LBB10
 1668 0136 06000000 		.4byte	.LBE10-.LBB10
 1669 013a 01       		.byte	0x1
 1670 013b 43       		.byte	0x43
 1671 013c 47010000 		.4byte	0x147
 1672 0140 0A       		.uleb128 0xa
 1673 0141 D7000000 		.4byte	0xd7
 1674 0145 7D       		.byte	0x7d
 1675 0146 00       		.byte	0
 1676 0147 0B       		.uleb128 0xb
 1677 0148 E4000000 		.4byte	0xe4
 1678 014c 1A000000 		.4byte	.LBB12
 1679 0150 06000000 		.4byte	.LBE12-.LBB12
 1680 0154 01       		.byte	0x1
 1681 0155 54       		.byte	0x54
 1682 0156 0A       		.uleb128 0xa
 1683 0157 F1000000 		.4byte	0xf1
 1684 015b 00       		.byte	0
 1685 015c 00       		.byte	0
 1686 015d 00       		.byte	0
 1687 015e 0C       		.uleb128 0xc
 1688 015f F3040000 		.4byte	.LASF23
 1689 0163 01       		.byte	0x1
 1690 0164 0001     		.2byte	0x100
 1691 0166 00000000 		.4byte	.LFB4
 1692 016a 1C000000 		.4byte	.LFE4-.LFB4
 1693 016e 01       		.uleb128 0x1
 1694 016f 9C       		.byte	0x9c
 1695 0170 97010000 		.4byte	0x197
 1696 0174 0D       		.uleb128 0xd
 1697 0175 A2050000 		.4byte	.LASF25
 1698 0179 01       		.byte	0x1
 1699 017a 0201     		.2byte	0x102
 1700 017c 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccrnaKHI.s 			page 60


 1701 0180 00000000 		.4byte	.LLST0
 1702 0184 0E       		.uleb128 0xe
 1703 0185 06000000 		.4byte	.LVL3
 1704 0189 1C090000 		.4byte	0x91c
 1705 018d 0E       		.uleb128 0xe
 1706 018e 14000000 		.4byte	.LVL4
 1707 0192 27090000 		.4byte	0x927
 1708 0196 00       		.byte	0
 1709 0197 0C       		.uleb128 0xc
 1710 0198 DF040000 		.4byte	.LASF24
 1711 019c 01       		.byte	0x1
 1712 019d 2501     		.2byte	0x125
 1713 019f 00000000 		.4byte	.LFB5
 1714 01a3 28000000 		.4byte	.LFE5-.LFB5
 1715 01a7 01       		.uleb128 0x1
 1716 01a8 9C       		.byte	0x9c
 1717 01a9 E0010000 		.4byte	0x1e0
 1718 01ad 0F       		.uleb128 0xf
 1719 01ae 09050000 		.4byte	.LASF27
 1720 01b2 01       		.byte	0x1
 1721 01b3 2501     		.2byte	0x125
 1722 01b5 77000000 		.4byte	0x77
 1723 01b9 13000000 		.4byte	.LLST1
 1724 01bd 0D       		.uleb128 0xd
 1725 01be A2050000 		.4byte	.LASF25
 1726 01c2 01       		.byte	0x1
 1727 01c3 2701     		.2byte	0x127
 1728 01c5 6B000000 		.4byte	0x6b
 1729 01c9 3F000000 		.4byte	.LLST2
 1730 01cd 0E       		.uleb128 0xe
 1731 01ce 08000000 		.4byte	.LVL6
 1732 01d2 1C090000 		.4byte	0x91c
 1733 01d6 0E       		.uleb128 0xe
 1734 01d7 1C000000 		.4byte	.LVL7
 1735 01db 27090000 		.4byte	0x927
 1736 01df 00       		.byte	0
 1737 01e0 0C       		.uleb128 0xc
 1738 01e1 CA050000 		.4byte	.LASF26
 1739 01e5 01       		.byte	0x1
 1740 01e6 4601     		.2byte	0x146
 1741 01e8 00000000 		.4byte	.LFB6
 1742 01ec 28000000 		.4byte	.LFE6-.LFB6
 1743 01f0 01       		.uleb128 0x1
 1744 01f1 9C       		.byte	0x9c
 1745 01f2 29020000 		.4byte	0x229
 1746 01f6 0F       		.uleb128 0xf
 1747 01f7 BB000000 		.4byte	.LASF28
 1748 01fb 01       		.byte	0x1
 1749 01fc 4601     		.2byte	0x146
 1750 01fe 77000000 		.4byte	0x77
 1751 0202 52000000 		.4byte	.LLST3
 1752 0206 0D       		.uleb128 0xd
 1753 0207 A2050000 		.4byte	.LASF25
 1754 020b 01       		.byte	0x1
 1755 020c 4801     		.2byte	0x148
 1756 020e 6B000000 		.4byte	0x6b
 1757 0212 7E000000 		.4byte	.LLST4
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccrnaKHI.s 			page 61


 1758 0216 0E       		.uleb128 0xe
 1759 0217 08000000 		.4byte	.LVL10
 1760 021b 1C090000 		.4byte	0x91c
 1761 021f 0E       		.uleb128 0xe
 1762 0220 1C000000 		.4byte	.LVL11
 1763 0224 27090000 		.4byte	0x927
 1764 0228 00       		.byte	0
 1765 0229 0C       		.uleb128 0xc
 1766 022a E7000000 		.4byte	.LASF29
 1767 022e 01       		.byte	0x1
 1768 022f 6B01     		.2byte	0x16b
 1769 0231 00000000 		.4byte	.LFB7
 1770 0235 28000000 		.4byte	.LFE7-.LFB7
 1771 0239 01       		.uleb128 0x1
 1772 023a 9C       		.byte	0x9c
 1773 023b 72020000 		.4byte	0x272
 1774 023f 0F       		.uleb128 0xf
 1775 0240 40040000 		.4byte	.LASF30
 1776 0244 01       		.byte	0x1
 1777 0245 6B01     		.2byte	0x16b
 1778 0247 77000000 		.4byte	0x77
 1779 024b 91000000 		.4byte	.LLST5
 1780 024f 0D       		.uleb128 0xd
 1781 0250 A2050000 		.4byte	.LASF25
 1782 0254 01       		.byte	0x1
 1783 0255 6D01     		.2byte	0x16d
 1784 0257 6B000000 		.4byte	0x6b
 1785 025b BD000000 		.4byte	.LLST6
 1786 025f 0E       		.uleb128 0xe
 1787 0260 08000000 		.4byte	.LVL14
 1788 0264 1C090000 		.4byte	0x91c
 1789 0268 0E       		.uleb128 0xe
 1790 0269 1C000000 		.4byte	.LVL15
 1791 026d 27090000 		.4byte	0x927
 1792 0271 00       		.byte	0
 1793 0272 0C       		.uleb128 0xc
 1794 0273 35050000 		.4byte	.LASF31
 1795 0277 01       		.byte	0x1
 1796 0278 8B01     		.2byte	0x18b
 1797 027a 00000000 		.4byte	.LFB8
 1798 027e 2C000000 		.4byte	.LFE8-.LFB8
 1799 0282 01       		.uleb128 0x1
 1800 0283 9C       		.byte	0x9c
 1801 0284 BB020000 		.4byte	0x2bb
 1802 0288 0F       		.uleb128 0xf
 1803 0289 9C020000 		.4byte	.LASF32
 1804 028d 01       		.byte	0x1
 1805 028e 8B01     		.2byte	0x18b
 1806 0290 77000000 		.4byte	0x77
 1807 0294 D0000000 		.4byte	.LLST7
 1808 0298 0D       		.uleb128 0xd
 1809 0299 A2050000 		.4byte	.LASF25
 1810 029d 01       		.byte	0x1
 1811 029e 8D01     		.2byte	0x18d
 1812 02a0 6B000000 		.4byte	0x6b
 1813 02a4 FC000000 		.4byte	.LLST8
 1814 02a8 0E       		.uleb128 0xe
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccrnaKHI.s 			page 62


 1815 02a9 08000000 		.4byte	.LVL18
 1816 02ad 1C090000 		.4byte	0x91c
 1817 02b1 0E       		.uleb128 0xe
 1818 02b2 22000000 		.4byte	.LVL19
 1819 02b6 27090000 		.4byte	0x927
 1820 02ba 00       		.byte	0
 1821 02bb 0C       		.uleb128 0xc
 1822 02bc 7B010000 		.4byte	.LASF33
 1823 02c0 01       		.byte	0x1
 1824 02c1 C101     		.2byte	0x1c1
 1825 02c3 00000000 		.4byte	.LFB9
 1826 02c7 10000000 		.4byte	.LFE9-.LFB9
 1827 02cb 01       		.uleb128 0x1
 1828 02cc 9C       		.byte	0x9c
 1829 02cd E2020000 		.4byte	0x2e2
 1830 02d1 0F       		.uleb128 0xf
 1831 02d2 4E020000 		.4byte	.LASF34
 1832 02d6 01       		.byte	0x1
 1833 02d7 C101     		.2byte	0x1c1
 1834 02d9 77000000 		.4byte	0x77
 1835 02dd 0F010000 		.4byte	.LLST9
 1836 02e1 00       		.byte	0
 1837 02e2 0C       		.uleb128 0xc
 1838 02e3 2B010000 		.4byte	.LASF35
 1839 02e7 01       		.byte	0x1
 1840 02e8 E501     		.2byte	0x1e5
 1841 02ea 00000000 		.4byte	.LFB10
 1842 02ee 28000000 		.4byte	.LFE10-.LFB10
 1843 02f2 01       		.uleb128 0x1
 1844 02f3 9C       		.byte	0x9c
 1845 02f4 2B030000 		.4byte	0x32b
 1846 02f8 0F       		.uleb128 0xf
 1847 02f9 C6030000 		.4byte	.LASF36
 1848 02fd 01       		.byte	0x1
 1849 02fe E501     		.2byte	0x1e5
 1850 0300 77000000 		.4byte	0x77
 1851 0304 30010000 		.4byte	.LLST10
 1852 0308 0D       		.uleb128 0xd
 1853 0309 A2050000 		.4byte	.LASF25
 1854 030d 01       		.byte	0x1
 1855 030e E701     		.2byte	0x1e7
 1856 0310 6B000000 		.4byte	0x6b
 1857 0314 5C010000 		.4byte	.LLST11
 1858 0318 0E       		.uleb128 0xe
 1859 0319 08000000 		.4byte	.LVL24
 1860 031d 1C090000 		.4byte	0x91c
 1861 0321 0E       		.uleb128 0xe
 1862 0322 22000000 		.4byte	.LVL25
 1863 0326 27090000 		.4byte	0x927
 1864 032a 00       		.byte	0
 1865 032b 0C       		.uleb128 0xc
 1866 032c D5030000 		.4byte	.LASF37
 1867 0330 01       		.byte	0x1
 1868 0331 0702     		.2byte	0x207
 1869 0333 00000000 		.4byte	.LFB11
 1870 0337 28000000 		.4byte	.LFE11-.LFB11
 1871 033b 01       		.uleb128 0x1
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccrnaKHI.s 			page 63


 1872 033c 9C       		.byte	0x9c
 1873 033d 74030000 		.4byte	0x374
 1874 0341 0F       		.uleb128 0xf
 1875 0342 9D040000 		.4byte	.LASF38
 1876 0346 01       		.byte	0x1
 1877 0347 0702     		.2byte	0x207
 1878 0349 77000000 		.4byte	0x77
 1879 034d 6F010000 		.4byte	.LLST12
 1880 0351 0D       		.uleb128 0xd
 1881 0352 A2050000 		.4byte	.LASF25
 1882 0356 01       		.byte	0x1
 1883 0357 0902     		.2byte	0x209
 1884 0359 6B000000 		.4byte	0x6b
 1885 035d 9B010000 		.4byte	.LLST13
 1886 0361 0E       		.uleb128 0xe
 1887 0362 08000000 		.4byte	.LVL28
 1888 0366 1C090000 		.4byte	0x91c
 1889 036a 0E       		.uleb128 0xe
 1890 036b 22000000 		.4byte	.LVL29
 1891 036f 27090000 		.4byte	0x927
 1892 0373 00       		.byte	0
 1893 0374 0C       		.uleb128 0xc
 1894 0375 0E050000 		.4byte	.LASF39
 1895 0379 01       		.byte	0x1
 1896 037a 2802     		.2byte	0x228
 1897 037c 00000000 		.4byte	.LFB12
 1898 0380 2C000000 		.4byte	.LFE12-.LFB12
 1899 0384 01       		.uleb128 0x1
 1900 0385 9C       		.byte	0x9c
 1901 0386 BD030000 		.4byte	0x3bd
 1902 038a 0F       		.uleb128 0xf
 1903 038b 03020000 		.4byte	.LASF40
 1904 038f 01       		.byte	0x1
 1905 0390 2802     		.2byte	0x228
 1906 0392 77000000 		.4byte	0x77
 1907 0396 AE010000 		.4byte	.LLST14
 1908 039a 0D       		.uleb128 0xd
 1909 039b A2050000 		.4byte	.LASF25
 1910 039f 01       		.byte	0x1
 1911 03a0 2A02     		.2byte	0x22a
 1912 03a2 6B000000 		.4byte	0x6b
 1913 03a6 DA010000 		.4byte	.LLST15
 1914 03aa 0E       		.uleb128 0xe
 1915 03ab 08000000 		.4byte	.LVL32
 1916 03af 1C090000 		.4byte	0x91c
 1917 03b3 0E       		.uleb128 0xe
 1918 03b4 20000000 		.4byte	.LVL34
 1919 03b8 27090000 		.4byte	0x927
 1920 03bc 00       		.byte	0
 1921 03bd 0C       		.uleb128 0xc
 1922 03be 20060000 		.4byte	.LASF41
 1923 03c2 01       		.byte	0x1
 1924 03c3 4902     		.2byte	0x249
 1925 03c5 00000000 		.4byte	.LFB13
 1926 03c9 28000000 		.4byte	.LFE13-.LFB13
 1927 03cd 01       		.uleb128 0x1
 1928 03ce 9C       		.byte	0x9c
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccrnaKHI.s 			page 64


 1929 03cf 06040000 		.4byte	0x406
 1930 03d3 0F       		.uleb128 0xf
 1931 03d4 B7010000 		.4byte	.LASF42
 1932 03d8 01       		.byte	0x1
 1933 03d9 4902     		.2byte	0x249
 1934 03db 77000000 		.4byte	0x77
 1935 03df ED010000 		.4byte	.LLST16
 1936 03e3 0D       		.uleb128 0xd
 1937 03e4 A2050000 		.4byte	.LASF25
 1938 03e8 01       		.byte	0x1
 1939 03e9 4B02     		.2byte	0x24b
 1940 03eb 6B000000 		.4byte	0x6b
 1941 03ef 19020000 		.4byte	.LLST17
 1942 03f3 0E       		.uleb128 0xe
 1943 03f4 08000000 		.4byte	.LVL36
 1944 03f8 1C090000 		.4byte	0x91c
 1945 03fc 0E       		.uleb128 0xe
 1946 03fd 1C000000 		.4byte	.LVL37
 1947 0401 27090000 		.4byte	0x927
 1948 0405 00       		.byte	0
 1949 0406 10       		.uleb128 0x10
 1950 0407 E4000000 		.4byte	0xe4
 1951 040b 00000000 		.4byte	.LFB14
 1952 040f 0C000000 		.4byte	.LFE14-.LFB14
 1953 0413 01       		.uleb128 0x1
 1954 0414 9C       		.byte	0x9c
 1955 0415 23040000 		.4byte	0x423
 1956 0419 11       		.uleb128 0x11
 1957 041a F1000000 		.4byte	0xf1
 1958 041e 2C020000 		.4byte	.LLST18
 1959 0422 00       		.byte	0
 1960 0423 12       		.uleb128 0x12
 1961 0424 8A050000 		.4byte	.LASF45
 1962 0428 01       		.byte	0x1
 1963 0429 7B02     		.2byte	0x27b
 1964 042b 77000000 		.4byte	0x77
 1965 042f 00000000 		.4byte	.LFB15
 1966 0433 0C000000 		.4byte	.LFE15-.LFB15
 1967 0437 01       		.uleb128 0x1
 1968 0438 9C       		.byte	0x9c
 1969 0439 0C       		.uleb128 0xc
 1970 043a 58030000 		.4byte	.LASF43
 1971 043e 01       		.byte	0x1
 1972 043f 9802     		.2byte	0x298
 1973 0441 00000000 		.4byte	.LFB16
 1974 0445 28000000 		.4byte	.LFE16-.LFB16
 1975 0449 01       		.uleb128 0x1
 1976 044a 9C       		.byte	0x9c
 1977 044b 82040000 		.4byte	0x482
 1978 044f 0F       		.uleb128 0xf
 1979 0450 29050000 		.4byte	.LASF44
 1980 0454 01       		.byte	0x1
 1981 0455 9802     		.2byte	0x298
 1982 0457 77000000 		.4byte	0x77
 1983 045b 4D020000 		.4byte	.LLST19
 1984 045f 0D       		.uleb128 0xd
 1985 0460 A2050000 		.4byte	.LASF25
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccrnaKHI.s 			page 65


 1986 0464 01       		.byte	0x1
 1987 0465 9A02     		.2byte	0x29a
 1988 0467 6B000000 		.4byte	0x6b
 1989 046b 79020000 		.4byte	.LLST20
 1990 046f 0E       		.uleb128 0xe
 1991 0470 08000000 		.4byte	.LVL42
 1992 0474 1C090000 		.4byte	0x91c
 1993 0478 0E       		.uleb128 0xe
 1994 0479 1C000000 		.4byte	.LVL43
 1995 047d 27090000 		.4byte	0x927
 1996 0481 00       		.byte	0
 1997 0482 10       		.uleb128 0x10
 1998 0483 CA000000 		.4byte	0xca
 1999 0487 00000000 		.4byte	.LFB17
 2000 048b 0C000000 		.4byte	.LFE17-.LFB17
 2001 048f 01       		.uleb128 0x1
 2002 0490 9C       		.byte	0x9c
 2003 0491 9F040000 		.4byte	0x49f
 2004 0495 11       		.uleb128 0x11
 2005 0496 D7000000 		.4byte	0xd7
 2006 049a 8C020000 		.4byte	.LLST21
 2007 049e 00       		.byte	0
 2008 049f 12       		.uleb128 0x12
 2009 04a0 51000000 		.4byte	.LASF46
 2010 04a4 01       		.byte	0x1
 2011 04a5 C902     		.2byte	0x2c9
 2012 04a7 77000000 		.4byte	0x77
 2013 04ab 00000000 		.4byte	.LFB18
 2014 04af 0C000000 		.4byte	.LFE18-.LFB18
 2015 04b3 01       		.uleb128 0x1
 2016 04b4 9C       		.byte	0x9c
 2017 04b5 0C       		.uleb128 0xc
 2018 04b6 6F000000 		.4byte	.LASF47
 2019 04ba 01       		.byte	0x1
 2020 04bb E302     		.2byte	0x2e3
 2021 04bd 00000000 		.4byte	.LFB19
 2022 04c1 24000000 		.4byte	.LFE19-.LFB19
 2023 04c5 01       		.uleb128 0x1
 2024 04c6 9C       		.byte	0x9c
 2025 04c7 FE040000 		.4byte	0x4fe
 2026 04cb 0F       		.uleb128 0xf
 2027 04cc FA050000 		.4byte	.LASF48
 2028 04d0 01       		.byte	0x1
 2029 04d1 E302     		.2byte	0x2e3
 2030 04d3 77000000 		.4byte	0x77
 2031 04d7 AD020000 		.4byte	.LLST22
 2032 04db 0D       		.uleb128 0xd
 2033 04dc A2050000 		.4byte	.LASF25
 2034 04e0 01       		.byte	0x1
 2035 04e1 E502     		.2byte	0x2e5
 2036 04e3 6B000000 		.4byte	0x6b
 2037 04e7 D9020000 		.4byte	.LLST23
 2038 04eb 0E       		.uleb128 0xe
 2039 04ec 08000000 		.4byte	.LVL48
 2040 04f0 1C090000 		.4byte	0x91c
 2041 04f4 0E       		.uleb128 0xe
 2042 04f5 1E000000 		.4byte	.LVL49
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccrnaKHI.s 			page 66


 2043 04f9 27090000 		.4byte	0x927
 2044 04fd 00       		.byte	0
 2045 04fe 0C       		.uleb128 0xc
 2046 04ff 1F040000 		.4byte	.LASF49
 2047 0503 01       		.byte	0x1
 2048 0504 FE02     		.2byte	0x2fe
 2049 0506 00000000 		.4byte	.LFB20
 2050 050a 0C000000 		.4byte	.LFE20-.LFB20
 2051 050e 01       		.uleb128 0x1
 2052 050f 9C       		.byte	0x9c
 2053 0510 25050000 		.4byte	0x525
 2054 0514 0F       		.uleb128 0xf
 2055 0515 52060000 		.4byte	.LASF50
 2056 0519 01       		.byte	0x1
 2057 051a FE02     		.2byte	0x2fe
 2058 051c 77000000 		.4byte	0x77
 2059 0520 EC020000 		.4byte	.LLST24
 2060 0524 00       		.byte	0
 2061 0525 12       		.uleb128 0x12
 2062 0526 70050000 		.4byte	.LASF51
 2063 052a 01       		.byte	0x1
 2064 052b 1203     		.2byte	0x312
 2065 052d 77000000 		.4byte	0x77
 2066 0531 00000000 		.4byte	.LFB21
 2067 0535 0C000000 		.4byte	.LFE21-.LFB21
 2068 0539 01       		.uleb128 0x1
 2069 053a 9C       		.byte	0x9c
 2070 053b 0C       		.uleb128 0xc
 2071 053c E0050000 		.4byte	.LASF52
 2072 0540 01       		.byte	0x1
 2073 0541 2C03     		.2byte	0x32c
 2074 0543 00000000 		.4byte	.LFB22
 2075 0547 28000000 		.4byte	.LFE22-.LFB22
 2076 054b 01       		.uleb128 0x1
 2077 054c 9C       		.byte	0x9c
 2078 054d 84050000 		.4byte	0x584
 2079 0551 0F       		.uleb128 0xf
 2080 0552 FA050000 		.4byte	.LASF48
 2081 0556 01       		.byte	0x1
 2082 0557 2C03     		.2byte	0x32c
 2083 0559 77000000 		.4byte	0x77
 2084 055d 0D030000 		.4byte	.LLST25
 2085 0561 0D       		.uleb128 0xd
 2086 0562 A2050000 		.4byte	.LASF25
 2087 0566 01       		.byte	0x1
 2088 0567 2E03     		.2byte	0x32e
 2089 0569 6B000000 		.4byte	0x6b
 2090 056d 39030000 		.4byte	.LLST26
 2091 0571 0E       		.uleb128 0xe
 2092 0572 08000000 		.4byte	.LVL54
 2093 0576 1C090000 		.4byte	0x91c
 2094 057a 0E       		.uleb128 0xe
 2095 057b 22000000 		.4byte	.LVL55
 2096 057f 27090000 		.4byte	0x927
 2097 0583 00       		.byte	0
 2098 0584 0C       		.uleb128 0xc
 2099 0585 C6040000 		.4byte	.LASF53
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccrnaKHI.s 			page 67


 2100 0589 01       		.byte	0x1
 2101 058a 5103     		.2byte	0x351
 2102 058c 00000000 		.4byte	.LFB23
 2103 0590 0C000000 		.4byte	.LFE23-.LFB23
 2104 0594 01       		.uleb128 0x1
 2105 0595 9C       		.byte	0x9c
 2106 0596 AB050000 		.4byte	0x5ab
 2107 059a 0F       		.uleb128 0xf
 2108 059b 17040000 		.4byte	.LASF54
 2109 059f 01       		.byte	0x1
 2110 05a0 5103     		.2byte	0x351
 2111 05a2 77000000 		.4byte	0x77
 2112 05a6 4C030000 		.4byte	.LLST27
 2113 05aa 00       		.byte	0
 2114 05ab 12       		.uleb128 0x12
 2115 05ac D7010000 		.4byte	.LASF55
 2116 05b0 01       		.byte	0x1
 2117 05b1 8403     		.2byte	0x384
 2118 05b3 77000000 		.4byte	0x77
 2119 05b7 00000000 		.4byte	.LFB24
 2120 05bb 0C000000 		.4byte	.LFE24-.LFB24
 2121 05bf 01       		.uleb128 0x1
 2122 05c0 9C       		.byte	0x9c
 2123 05c1 0C       		.uleb128 0xc
 2124 05c2 3C030000 		.4byte	.LASF56
 2125 05c6 01       		.byte	0x1
 2126 05c7 BA03     		.2byte	0x3ba
 2127 05c9 00000000 		.4byte	.LFB25
 2128 05cd 0C000000 		.4byte	.LFE25-.LFB25
 2129 05d1 01       		.uleb128 0x1
 2130 05d2 9C       		.byte	0x9c
 2131 05d3 E8050000 		.4byte	0x5e8
 2132 05d7 0F       		.uleb128 0xf
 2133 05d8 65050000 		.4byte	.LASF57
 2134 05dc 01       		.byte	0x1
 2135 05dd BA03     		.2byte	0x3ba
 2136 05df 77000000 		.4byte	0x77
 2137 05e3 6D030000 		.4byte	.LLST28
 2138 05e7 00       		.byte	0
 2139 05e8 12       		.uleb128 0x12
 2140 05e9 6E020000 		.4byte	.LASF58
 2141 05ed 01       		.byte	0x1
 2142 05ee E803     		.2byte	0x3e8
 2143 05f0 77000000 		.4byte	0x77
 2144 05f4 00000000 		.4byte	.LFB26
 2145 05f8 0C000000 		.4byte	.LFE26-.LFB26
 2146 05fc 01       		.uleb128 0x1
 2147 05fd 9C       		.byte	0x9c
 2148 05fe 12       		.uleb128 0x12
 2149 05ff 5C060000 		.4byte	.LASF59
 2150 0603 01       		.byte	0x1
 2151 0604 1604     		.2byte	0x416
 2152 0606 77000000 		.4byte	0x77
 2153 060a 00000000 		.4byte	.LFB27
 2154 060e 0C000000 		.4byte	.LFE27-.LFB27
 2155 0612 01       		.uleb128 0x1
 2156 0613 9C       		.byte	0x9c
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccrnaKHI.s 			page 68


 2157 0614 12       		.uleb128 0x12
 2158 0615 74060000 		.4byte	.LASF60
 2159 0619 01       		.byte	0x1
 2160 061a 2B04     		.2byte	0x42b
 2161 061c 77000000 		.4byte	0x77
 2162 0620 00000000 		.4byte	.LFB28
 2163 0624 0C000000 		.4byte	.LFE28-.LFB28
 2164 0628 01       		.uleb128 0x1
 2165 0629 9C       		.byte	0x9c
 2166 062a 0C       		.uleb128 0xc
 2167 062b 05060000 		.4byte	.LASF61
 2168 062f 01       		.byte	0x1
 2169 0630 4604     		.2byte	0x446
 2170 0632 00000000 		.4byte	.LFB29
 2171 0636 24000000 		.4byte	.LFE29-.LFB29
 2172 063a 01       		.uleb128 0x1
 2173 063b 9C       		.byte	0x9c
 2174 063c 73060000 		.4byte	0x673
 2175 0640 0F       		.uleb128 0xf
 2176 0641 AB010000 		.4byte	.LASF62
 2177 0645 01       		.byte	0x1
 2178 0646 4604     		.2byte	0x446
 2179 0648 77000000 		.4byte	0x77
 2180 064c 8E030000 		.4byte	.LLST29
 2181 0650 0D       		.uleb128 0xd
 2182 0651 A2050000 		.4byte	.LASF25
 2183 0655 01       		.byte	0x1
 2184 0656 4804     		.2byte	0x448
 2185 0658 6B000000 		.4byte	0x6b
 2186 065c BA030000 		.4byte	.LLST30
 2187 0660 0E       		.uleb128 0xe
 2188 0661 08000000 		.4byte	.LVL62
 2189 0665 1C090000 		.4byte	0x91c
 2190 0669 0E       		.uleb128 0xe
 2191 066a 1C000000 		.4byte	.LVL63
 2192 066e 27090000 		.4byte	0x927
 2193 0672 00       		.byte	0
 2194 0673 0C       		.uleb128 0xc
 2195 0674 8A000000 		.4byte	.LASF63
 2196 0678 01       		.byte	0x1
 2197 0679 6704     		.2byte	0x467
 2198 067b 00000000 		.4byte	.LFB30
 2199 067f 24000000 		.4byte	.LFE30-.LFB30
 2200 0683 01       		.uleb128 0x1
 2201 0684 9C       		.byte	0x9c
 2202 0685 BC060000 		.4byte	0x6bc
 2203 0689 0F       		.uleb128 0xf
 2204 068a AB010000 		.4byte	.LASF62
 2205 068e 01       		.byte	0x1
 2206 068f 6704     		.2byte	0x467
 2207 0691 77000000 		.4byte	0x77
 2208 0695 CD030000 		.4byte	.LLST31
 2209 0699 0D       		.uleb128 0xd
 2210 069a A2050000 		.4byte	.LASF25
 2211 069e 01       		.byte	0x1
 2212 069f 6904     		.2byte	0x469
 2213 06a1 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccrnaKHI.s 			page 69


 2214 06a5 F9030000 		.4byte	.LLST32
 2215 06a9 0E       		.uleb128 0xe
 2216 06aa 08000000 		.4byte	.LVL66
 2217 06ae 1C090000 		.4byte	0x91c
 2218 06b2 0E       		.uleb128 0xe
 2219 06b3 1E000000 		.4byte	.LVL67
 2220 06b7 27090000 		.4byte	0x927
 2221 06bb 00       		.byte	0
 2222 06bc 0C       		.uleb128 0xc
 2223 06bd 39060000 		.4byte	.LASF64
 2224 06c1 01       		.byte	0x1
 2225 06c2 8804     		.2byte	0x488
 2226 06c4 00000000 		.4byte	.LFB31
 2227 06c8 28000000 		.4byte	.LFE31-.LFB31
 2228 06cc 01       		.uleb128 0x1
 2229 06cd 9C       		.byte	0x9c
 2230 06ce 05070000 		.4byte	0x705
 2231 06d2 0F       		.uleb128 0xf
 2232 06d3 AB010000 		.4byte	.LASF62
 2233 06d7 01       		.byte	0x1
 2234 06d8 8804     		.2byte	0x488
 2235 06da 77000000 		.4byte	0x77
 2236 06de 0C040000 		.4byte	.LLST33
 2237 06e2 0D       		.uleb128 0xd
 2238 06e3 A2050000 		.4byte	.LASF25
 2239 06e7 01       		.byte	0x1
 2240 06e8 8A04     		.2byte	0x48a
 2241 06ea 6B000000 		.4byte	0x6b
 2242 06ee 38040000 		.4byte	.LLST34
 2243 06f2 0E       		.uleb128 0xe
 2244 06f3 08000000 		.4byte	.LVL70
 2245 06f7 1C090000 		.4byte	0x91c
 2246 06fb 0E       		.uleb128 0xe
 2247 06fc 1E000000 		.4byte	.LVL71
 2248 0700 27090000 		.4byte	0x927
 2249 0704 00       		.byte	0
 2250 0705 0C       		.uleb128 0xc
 2251 0706 1C000000 		.4byte	.LASF65
 2252 070a 01       		.byte	0x1
 2253 070b A804     		.2byte	0x4a8
 2254 070d 00000000 		.4byte	.LFB32
 2255 0711 24000000 		.4byte	.LFE32-.LFB32
 2256 0715 01       		.uleb128 0x1
 2257 0716 9C       		.byte	0x9c
 2258 0717 4E070000 		.4byte	0x74e
 2259 071b 0F       		.uleb128 0xf
 2260 071c AB010000 		.4byte	.LASF62
 2261 0720 01       		.byte	0x1
 2262 0721 A804     		.2byte	0x4a8
 2263 0723 77000000 		.4byte	0x77
 2264 0727 4B040000 		.4byte	.LLST35
 2265 072b 0D       		.uleb128 0xd
 2266 072c A2050000 		.4byte	.LASF25
 2267 0730 01       		.byte	0x1
 2268 0731 AA04     		.2byte	0x4aa
 2269 0733 6B000000 		.4byte	0x6b
 2270 0737 77040000 		.4byte	.LLST36
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccrnaKHI.s 			page 70


 2271 073b 0E       		.uleb128 0xe
 2272 073c 08000000 		.4byte	.LVL74
 2273 0740 1C090000 		.4byte	0x91c
 2274 0744 0E       		.uleb128 0xe
 2275 0745 1E000000 		.4byte	.LVL75
 2276 0749 27090000 		.4byte	0x927
 2277 074d 00       		.byte	0
 2278 074e 0C       		.uleb128 0xc
 2279 074f 4A040000 		.4byte	.LASF66
 2280 0753 01       		.byte	0x1
 2281 0754 C904     		.2byte	0x4c9
 2282 0756 00000000 		.4byte	.LFB33
 2283 075a 24000000 		.4byte	.LFE33-.LFB33
 2284 075e 01       		.uleb128 0x1
 2285 075f 9C       		.byte	0x9c
 2286 0760 97070000 		.4byte	0x797
 2287 0764 0F       		.uleb128 0xf
 2288 0765 AB010000 		.4byte	.LASF62
 2289 0769 01       		.byte	0x1
 2290 076a C904     		.2byte	0x4c9
 2291 076c 77000000 		.4byte	0x77
 2292 0770 8A040000 		.4byte	.LLST37
 2293 0774 0D       		.uleb128 0xd
 2294 0775 A2050000 		.4byte	.LASF25
 2295 0779 01       		.byte	0x1
 2296 077a CB04     		.2byte	0x4cb
 2297 077c 6B000000 		.4byte	0x6b
 2298 0780 B6040000 		.4byte	.LLST38
 2299 0784 0E       		.uleb128 0xe
 2300 0785 08000000 		.4byte	.LVL78
 2301 0789 1C090000 		.4byte	0x91c
 2302 078d 0E       		.uleb128 0xe
 2303 078e 1E000000 		.4byte	.LVL79
 2304 0792 27090000 		.4byte	0x927
 2305 0796 00       		.byte	0
 2306 0797 0C       		.uleb128 0xc
 2307 0798 BC010000 		.4byte	.LASF67
 2308 079c 01       		.byte	0x1
 2309 079d F104     		.2byte	0x4f1
 2310 079f 00000000 		.4byte	.LFB34
 2311 07a3 1C000000 		.4byte	.LFE34-.LFB34
 2312 07a7 01       		.uleb128 0x1
 2313 07a8 9C       		.byte	0x9c
 2314 07a9 F0070000 		.4byte	0x7f0
 2315 07ad 0F       		.uleb128 0xf
 2316 07ae B7010000 		.4byte	.LASF42
 2317 07b2 01       		.byte	0x1
 2318 07b3 F104     		.2byte	0x4f1
 2319 07b5 77000000 		.4byte	0x77
 2320 07b9 C9040000 		.4byte	.LLST39
 2321 07bd 0F       		.uleb128 0xf
 2322 07be 34020000 		.4byte	.LASF68
 2323 07c2 01       		.byte	0x1
 2324 07c3 F104     		.2byte	0x4f1
 2325 07c5 77000000 		.4byte	0x77
 2326 07c9 EA040000 		.4byte	.LLST40
 2327 07cd 0D       		.uleb128 0xd
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccrnaKHI.s 			page 71


 2328 07ce A2050000 		.4byte	.LASF25
 2329 07d2 01       		.byte	0x1
 2330 07d3 F304     		.2byte	0x4f3
 2331 07d5 6B000000 		.4byte	0x6b
 2332 07d9 16050000 		.4byte	.LLST41
 2333 07dd 0E       		.uleb128 0xe
 2334 07de 0C000000 		.4byte	.LVL82
 2335 07e2 1C090000 		.4byte	0x91c
 2336 07e6 0E       		.uleb128 0xe
 2337 07e7 14000000 		.4byte	.LVL83
 2338 07eb 27090000 		.4byte	0x927
 2339 07ef 00       		.byte	0
 2340 07f0 08       		.uleb128 0x8
 2341 07f1 B3030000 		.4byte	.LASF69
 2342 07f5 01       		.byte	0x1
 2343 07f6 B1       		.byte	0xb1
 2344 07f7 00000000 		.4byte	.LFB2
 2345 07fb 24000000 		.4byte	.LFE2-.LFB2
 2346 07ff 01       		.uleb128 0x1
 2347 0800 9C       		.byte	0x9c
 2348 0801 3C080000 		.4byte	0x83c
 2349 0805 13       		.uleb128 0x13
 2350 0806 A2050000 		.4byte	.LASF25
 2351 080a 01       		.byte	0x1
 2352 080b B3       		.byte	0xb3
 2353 080c 6B000000 		.4byte	0x6b
 2354 0810 29050000 		.4byte	.LLST42
 2355 0814 0E       		.uleb128 0xe
 2356 0815 08000000 		.4byte	.LVL85
 2357 0819 1C090000 		.4byte	0x91c
 2358 081d 0E       		.uleb128 0xe
 2359 081e 14000000 		.4byte	.LVL86
 2360 0822 27090000 		.4byte	0x927
 2361 0826 14       		.uleb128 0x14
 2362 0827 1C000000 		.4byte	.LVL87
 2363 082b 97070000 		.4byte	0x797
 2364 082f 15       		.uleb128 0x15
 2365 0830 01       		.uleb128 0x1
 2366 0831 51       		.byte	0x51
 2367 0832 01       		.uleb128 0x1
 2368 0833 48       		.byte	0x48
 2369 0834 15       		.uleb128 0x15
 2370 0835 01       		.uleb128 0x1
 2371 0836 50       		.byte	0x50
 2372 0837 02       		.uleb128 0x2
 2373 0838 74       		.byte	0x74
 2374 0839 00       		.sleb128 0
 2375 083a 00       		.byte	0
 2376 083b 00       		.byte	0
 2377 083c 08       		.uleb128 0x8
 2378 083d 92010000 		.4byte	.LASF70
 2379 0841 01       		.byte	0x1
 2380 0842 E6       		.byte	0xe6
 2381 0843 00000000 		.4byte	.LFB3
 2382 0847 1C000000 		.4byte	.LFE3-.LFB3
 2383 084b 01       		.uleb128 0x1
 2384 084c 9C       		.byte	0x9c
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccrnaKHI.s 			page 72


 2385 084d 64080000 		.4byte	0x864
 2386 0851 0E       		.uleb128 0xe
 2387 0852 0E000000 		.4byte	.LVL88
 2388 0856 FE000000 		.4byte	0xfe
 2389 085a 0E       		.uleb128 0xe
 2390 085b 16000000 		.4byte	.LVL89
 2391 085f F0070000 		.4byte	0x7f0
 2392 0863 00       		.byte	0
 2393 0864 12       		.uleb128 0x12
 2394 0865 B3050000 		.4byte	.LASF71
 2395 0869 01       		.byte	0x1
 2396 086a 0E05     		.2byte	0x50e
 2397 086c 77000000 		.4byte	0x77
 2398 0870 00000000 		.4byte	.LFB35
 2399 0874 14000000 		.4byte	.LFE35-.LFB35
 2400 0878 01       		.uleb128 0x1
 2401 0879 9C       		.byte	0x9c
 2402 087a 10       		.uleb128 0x10
 2403 087b B0000000 		.4byte	0xb0
 2404 087f 00000000 		.4byte	.LFB36
 2405 0883 0C000000 		.4byte	.LFE36-.LFB36
 2406 0887 01       		.uleb128 0x1
 2407 0888 9C       		.byte	0x9c
 2408 0889 95080000 		.4byte	0x895
 2409 088d 16       		.uleb128 0x16
 2410 088e BD000000 		.4byte	0xbd
 2411 0892 01       		.uleb128 0x1
 2412 0893 50       		.byte	0x50
 2413 0894 00       		.byte	0
 2414 0895 12       		.uleb128 0x12
 2415 0896 C2000000 		.4byte	.LASF72
 2416 089a 01       		.byte	0x1
 2417 089b 3E05     		.2byte	0x53e
 2418 089d 77000000 		.4byte	0x77
 2419 08a1 00000000 		.4byte	.LFB37
 2420 08a5 0C000000 		.4byte	.LFE37-.LFB37
 2421 08a9 01       		.uleb128 0x1
 2422 08aa 9C       		.byte	0x9c
 2423 08ab 12       		.uleb128 0x12
 2424 08ac 4F010000 		.4byte	.LASF73
 2425 08b0 01       		.byte	0x1
 2426 08b1 5505     		.2byte	0x555
 2427 08b3 77000000 		.4byte	0x77
 2428 08b7 00000000 		.4byte	.LFB38
 2429 08bb 0C000000 		.4byte	.LFE38-.LFB38
 2430 08bf 01       		.uleb128 0x1
 2431 08c0 9C       		.byte	0x9c
 2432 08c1 0C       		.uleb128 0xc
 2433 08c2 0C020000 		.4byte	.LASF74
 2434 08c6 01       		.byte	0x1
 2435 08c7 6C05     		.2byte	0x56c
 2436 08c9 00000000 		.4byte	.LFB39
 2437 08cd 0C000000 		.4byte	.LFE39-.LFB39
 2438 08d1 01       		.uleb128 0x1
 2439 08d2 9C       		.byte	0x9c
 2440 08d3 E6080000 		.4byte	0x8e6
 2441 08d7 17       		.uleb128 0x17
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccrnaKHI.s 			page 73


 2442 08d8 B8040000 		.4byte	.LASF18
 2443 08dc 01       		.byte	0x1
 2444 08dd 6C05     		.2byte	0x56c
 2445 08df 77000000 		.4byte	0x77
 2446 08e3 01       		.uleb128 0x1
 2447 08e4 50       		.byte	0x50
 2448 08e5 00       		.byte	0
 2449 08e6 0C       		.uleb128 0xc
 2450 08e7 79030000 		.4byte	.LASF75
 2451 08eb 01       		.byte	0x1
 2452 08ec 8305     		.2byte	0x583
 2453 08ee 00000000 		.4byte	.LFB40
 2454 08f2 0C000000 		.4byte	.LFE40-.LFB40
 2455 08f6 01       		.uleb128 0x1
 2456 08f7 9C       		.byte	0x9c
 2457 08f8 0B090000 		.4byte	0x90b
 2458 08fc 17       		.uleb128 0x17
 2459 08fd B8040000 		.4byte	.LASF18
 2460 0901 01       		.byte	0x1
 2461 0902 8305     		.2byte	0x583
 2462 0904 77000000 		.4byte	0x77
 2463 0908 01       		.uleb128 0x1
 2464 0909 50       		.byte	0x50
 2465 090a 00       		.byte	0
 2466 090b 18       		.uleb128 0x18
 2467 090c EF010000 		.4byte	.LASF79
 2468 0910 01       		.byte	0x1
 2469 0911 15       		.byte	0x15
 2470 0912 6B000000 		.4byte	0x6b
 2471 0916 05       		.uleb128 0x5
 2472 0917 03       		.byte	0x3
 2473 0918 00000000 		.4byte	Timer_Synth_initVar
 2474 091c 19       		.uleb128 0x19
 2475 091d 57020000 		.4byte	.LASF80
 2476 0921 03       		.byte	0x3
 2477 0922 E5       		.byte	0xe5
 2478 0923 6B000000 		.4byte	0x6b
 2479 0927 1A       		.uleb128 0x1a
 2480 0928 06000000 		.4byte	.LASF81
 2481 092c 03       		.byte	0x3
 2482 092d E6       		.byte	0xe6
 2483 092e 1B       		.uleb128 0x1b
 2484 092f 6B000000 		.4byte	0x6b
 2485 0933 00       		.byte	0
 2486 0934 00       		.byte	0
 2487              		.section	.debug_abbrev,"",%progbits
 2488              	.Ldebug_abbrev0:
 2489 0000 01       		.uleb128 0x1
 2490 0001 11       		.uleb128 0x11
 2491 0002 01       		.byte	0x1
 2492 0003 25       		.uleb128 0x25
 2493 0004 0E       		.uleb128 0xe
 2494 0005 13       		.uleb128 0x13
 2495 0006 0B       		.uleb128 0xb
 2496 0007 03       		.uleb128 0x3
 2497 0008 0E       		.uleb128 0xe
 2498 0009 1B       		.uleb128 0x1b
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccrnaKHI.s 			page 74


 2499 000a 0E       		.uleb128 0xe
 2500 000b 55       		.uleb128 0x55
 2501 000c 17       		.uleb128 0x17
 2502 000d 11       		.uleb128 0x11
 2503 000e 01       		.uleb128 0x1
 2504 000f 10       		.uleb128 0x10
 2505 0010 17       		.uleb128 0x17
 2506 0011 00       		.byte	0
 2507 0012 00       		.byte	0
 2508 0013 02       		.uleb128 0x2
 2509 0014 24       		.uleb128 0x24
 2510 0015 00       		.byte	0
 2511 0016 0B       		.uleb128 0xb
 2512 0017 0B       		.uleb128 0xb
 2513 0018 3E       		.uleb128 0x3e
 2514 0019 0B       		.uleb128 0xb
 2515 001a 03       		.uleb128 0x3
 2516 001b 0E       		.uleb128 0xe
 2517 001c 00       		.byte	0
 2518 001d 00       		.byte	0
 2519 001e 03       		.uleb128 0x3
 2520 001f 24       		.uleb128 0x24
 2521 0020 00       		.byte	0
 2522 0021 0B       		.uleb128 0xb
 2523 0022 0B       		.uleb128 0xb
 2524 0023 3E       		.uleb128 0x3e
 2525 0024 0B       		.uleb128 0xb
 2526 0025 03       		.uleb128 0x3
 2527 0026 08       		.uleb128 0x8
 2528 0027 00       		.byte	0
 2529 0028 00       		.byte	0
 2530 0029 04       		.uleb128 0x4
 2531 002a 16       		.uleb128 0x16
 2532 002b 00       		.byte	0
 2533 002c 03       		.uleb128 0x3
 2534 002d 0E       		.uleb128 0xe
 2535 002e 3A       		.uleb128 0x3a
 2536 002f 0B       		.uleb128 0xb
 2537 0030 3B       		.uleb128 0x3b
 2538 0031 05       		.uleb128 0x5
 2539 0032 49       		.uleb128 0x49
 2540 0033 13       		.uleb128 0x13
 2541 0034 00       		.byte	0
 2542 0035 00       		.byte	0
 2543 0036 05       		.uleb128 0x5
 2544 0037 35       		.uleb128 0x35
 2545 0038 00       		.byte	0
 2546 0039 49       		.uleb128 0x49
 2547 003a 13       		.uleb128 0x13
 2548 003b 00       		.byte	0
 2549 003c 00       		.byte	0
 2550 003d 06       		.uleb128 0x6
 2551 003e 2E       		.uleb128 0x2e
 2552 003f 01       		.byte	0x1
 2553 0040 3F       		.uleb128 0x3f
 2554 0041 19       		.uleb128 0x19
 2555 0042 03       		.uleb128 0x3
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccrnaKHI.s 			page 75


 2556 0043 0E       		.uleb128 0xe
 2557 0044 3A       		.uleb128 0x3a
 2558 0045 0B       		.uleb128 0xb
 2559 0046 3B       		.uleb128 0x3b
 2560 0047 05       		.uleb128 0x5
 2561 0048 27       		.uleb128 0x27
 2562 0049 19       		.uleb128 0x19
 2563 004a 20       		.uleb128 0x20
 2564 004b 0B       		.uleb128 0xb
 2565 004c 01       		.uleb128 0x1
 2566 004d 13       		.uleb128 0x13
 2567 004e 00       		.byte	0
 2568 004f 00       		.byte	0
 2569 0050 07       		.uleb128 0x7
 2570 0051 05       		.uleb128 0x5
 2571 0052 00       		.byte	0
 2572 0053 03       		.uleb128 0x3
 2573 0054 0E       		.uleb128 0xe
 2574 0055 3A       		.uleb128 0x3a
 2575 0056 0B       		.uleb128 0xb
 2576 0057 3B       		.uleb128 0x3b
 2577 0058 05       		.uleb128 0x5
 2578 0059 49       		.uleb128 0x49
 2579 005a 13       		.uleb128 0x13
 2580 005b 00       		.byte	0
 2581 005c 00       		.byte	0
 2582 005d 08       		.uleb128 0x8
 2583 005e 2E       		.uleb128 0x2e
 2584 005f 01       		.byte	0x1
 2585 0060 3F       		.uleb128 0x3f
 2586 0061 19       		.uleb128 0x19
 2587 0062 03       		.uleb128 0x3
 2588 0063 0E       		.uleb128 0xe
 2589 0064 3A       		.uleb128 0x3a
 2590 0065 0B       		.uleb128 0xb
 2591 0066 3B       		.uleb128 0x3b
 2592 0067 0B       		.uleb128 0xb
 2593 0068 27       		.uleb128 0x27
 2594 0069 19       		.uleb128 0x19
 2595 006a 11       		.uleb128 0x11
 2596 006b 01       		.uleb128 0x1
 2597 006c 12       		.uleb128 0x12
 2598 006d 06       		.uleb128 0x6
 2599 006e 40       		.uleb128 0x40
 2600 006f 18       		.uleb128 0x18
 2601 0070 9742     		.uleb128 0x2117
 2602 0072 19       		.uleb128 0x19
 2603 0073 01       		.uleb128 0x1
 2604 0074 13       		.uleb128 0x13
 2605 0075 00       		.byte	0
 2606 0076 00       		.byte	0
 2607 0077 09       		.uleb128 0x9
 2608 0078 1D       		.uleb128 0x1d
 2609 0079 01       		.byte	0x1
 2610 007a 31       		.uleb128 0x31
 2611 007b 13       		.uleb128 0x13
 2612 007c 11       		.uleb128 0x11
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccrnaKHI.s 			page 76


 2613 007d 01       		.uleb128 0x1
 2614 007e 12       		.uleb128 0x12
 2615 007f 06       		.uleb128 0x6
 2616 0080 58       		.uleb128 0x58
 2617 0081 0B       		.uleb128 0xb
 2618 0082 59       		.uleb128 0x59
 2619 0083 0B       		.uleb128 0xb
 2620 0084 01       		.uleb128 0x1
 2621 0085 13       		.uleb128 0x13
 2622 0086 00       		.byte	0
 2623 0087 00       		.byte	0
 2624 0088 0A       		.uleb128 0xa
 2625 0089 05       		.uleb128 0x5
 2626 008a 00       		.byte	0
 2627 008b 31       		.uleb128 0x31
 2628 008c 13       		.uleb128 0x13
 2629 008d 1C       		.uleb128 0x1c
 2630 008e 0B       		.uleb128 0xb
 2631 008f 00       		.byte	0
 2632 0090 00       		.byte	0
 2633 0091 0B       		.uleb128 0xb
 2634 0092 1D       		.uleb128 0x1d
 2635 0093 01       		.byte	0x1
 2636 0094 31       		.uleb128 0x31
 2637 0095 13       		.uleb128 0x13
 2638 0096 11       		.uleb128 0x11
 2639 0097 01       		.uleb128 0x1
 2640 0098 12       		.uleb128 0x12
 2641 0099 06       		.uleb128 0x6
 2642 009a 58       		.uleb128 0x58
 2643 009b 0B       		.uleb128 0xb
 2644 009c 59       		.uleb128 0x59
 2645 009d 0B       		.uleb128 0xb
 2646 009e 00       		.byte	0
 2647 009f 00       		.byte	0
 2648 00a0 0C       		.uleb128 0xc
 2649 00a1 2E       		.uleb128 0x2e
 2650 00a2 01       		.byte	0x1
 2651 00a3 3F       		.uleb128 0x3f
 2652 00a4 19       		.uleb128 0x19
 2653 00a5 03       		.uleb128 0x3
 2654 00a6 0E       		.uleb128 0xe
 2655 00a7 3A       		.uleb128 0x3a
 2656 00a8 0B       		.uleb128 0xb
 2657 00a9 3B       		.uleb128 0x3b
 2658 00aa 05       		.uleb128 0x5
 2659 00ab 27       		.uleb128 0x27
 2660 00ac 19       		.uleb128 0x19
 2661 00ad 11       		.uleb128 0x11
 2662 00ae 01       		.uleb128 0x1
 2663 00af 12       		.uleb128 0x12
 2664 00b0 06       		.uleb128 0x6
 2665 00b1 40       		.uleb128 0x40
 2666 00b2 18       		.uleb128 0x18
 2667 00b3 9742     		.uleb128 0x2117
 2668 00b5 19       		.uleb128 0x19
 2669 00b6 01       		.uleb128 0x1
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccrnaKHI.s 			page 77


 2670 00b7 13       		.uleb128 0x13
 2671 00b8 00       		.byte	0
 2672 00b9 00       		.byte	0
 2673 00ba 0D       		.uleb128 0xd
 2674 00bb 34       		.uleb128 0x34
 2675 00bc 00       		.byte	0
 2676 00bd 03       		.uleb128 0x3
 2677 00be 0E       		.uleb128 0xe
 2678 00bf 3A       		.uleb128 0x3a
 2679 00c0 0B       		.uleb128 0xb
 2680 00c1 3B       		.uleb128 0x3b
 2681 00c2 05       		.uleb128 0x5
 2682 00c3 49       		.uleb128 0x49
 2683 00c4 13       		.uleb128 0x13
 2684 00c5 02       		.uleb128 0x2
 2685 00c6 17       		.uleb128 0x17
 2686 00c7 00       		.byte	0
 2687 00c8 00       		.byte	0
 2688 00c9 0E       		.uleb128 0xe
 2689 00ca 898201   		.uleb128 0x4109
 2690 00cd 00       		.byte	0
 2691 00ce 11       		.uleb128 0x11
 2692 00cf 01       		.uleb128 0x1
 2693 00d0 31       		.uleb128 0x31
 2694 00d1 13       		.uleb128 0x13
 2695 00d2 00       		.byte	0
 2696 00d3 00       		.byte	0
 2697 00d4 0F       		.uleb128 0xf
 2698 00d5 05       		.uleb128 0x5
 2699 00d6 00       		.byte	0
 2700 00d7 03       		.uleb128 0x3
 2701 00d8 0E       		.uleb128 0xe
 2702 00d9 3A       		.uleb128 0x3a
 2703 00da 0B       		.uleb128 0xb
 2704 00db 3B       		.uleb128 0x3b
 2705 00dc 05       		.uleb128 0x5
 2706 00dd 49       		.uleb128 0x49
 2707 00de 13       		.uleb128 0x13
 2708 00df 02       		.uleb128 0x2
 2709 00e0 17       		.uleb128 0x17
 2710 00e1 00       		.byte	0
 2711 00e2 00       		.byte	0
 2712 00e3 10       		.uleb128 0x10
 2713 00e4 2E       		.uleb128 0x2e
 2714 00e5 01       		.byte	0x1
 2715 00e6 31       		.uleb128 0x31
 2716 00e7 13       		.uleb128 0x13
 2717 00e8 11       		.uleb128 0x11
 2718 00e9 01       		.uleb128 0x1
 2719 00ea 12       		.uleb128 0x12
 2720 00eb 06       		.uleb128 0x6
 2721 00ec 40       		.uleb128 0x40
 2722 00ed 18       		.uleb128 0x18
 2723 00ee 9742     		.uleb128 0x2117
 2724 00f0 19       		.uleb128 0x19
 2725 00f1 01       		.uleb128 0x1
 2726 00f2 13       		.uleb128 0x13
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccrnaKHI.s 			page 78


 2727 00f3 00       		.byte	0
 2728 00f4 00       		.byte	0
 2729 00f5 11       		.uleb128 0x11
 2730 00f6 05       		.uleb128 0x5
 2731 00f7 00       		.byte	0
 2732 00f8 31       		.uleb128 0x31
 2733 00f9 13       		.uleb128 0x13
 2734 00fa 02       		.uleb128 0x2
 2735 00fb 17       		.uleb128 0x17
 2736 00fc 00       		.byte	0
 2737 00fd 00       		.byte	0
 2738 00fe 12       		.uleb128 0x12
 2739 00ff 2E       		.uleb128 0x2e
 2740 0100 00       		.byte	0
 2741 0101 3F       		.uleb128 0x3f
 2742 0102 19       		.uleb128 0x19
 2743 0103 03       		.uleb128 0x3
 2744 0104 0E       		.uleb128 0xe
 2745 0105 3A       		.uleb128 0x3a
 2746 0106 0B       		.uleb128 0xb
 2747 0107 3B       		.uleb128 0x3b
 2748 0108 05       		.uleb128 0x5
 2749 0109 27       		.uleb128 0x27
 2750 010a 19       		.uleb128 0x19
 2751 010b 49       		.uleb128 0x49
 2752 010c 13       		.uleb128 0x13
 2753 010d 11       		.uleb128 0x11
 2754 010e 01       		.uleb128 0x1
 2755 010f 12       		.uleb128 0x12
 2756 0110 06       		.uleb128 0x6
 2757 0111 40       		.uleb128 0x40
 2758 0112 18       		.uleb128 0x18
 2759 0113 9742     		.uleb128 0x2117
 2760 0115 19       		.uleb128 0x19
 2761 0116 00       		.byte	0
 2762 0117 00       		.byte	0
 2763 0118 13       		.uleb128 0x13
 2764 0119 34       		.uleb128 0x34
 2765 011a 00       		.byte	0
 2766 011b 03       		.uleb128 0x3
 2767 011c 0E       		.uleb128 0xe
 2768 011d 3A       		.uleb128 0x3a
 2769 011e 0B       		.uleb128 0xb
 2770 011f 3B       		.uleb128 0x3b
 2771 0120 0B       		.uleb128 0xb
 2772 0121 49       		.uleb128 0x49
 2773 0122 13       		.uleb128 0x13
 2774 0123 02       		.uleb128 0x2
 2775 0124 17       		.uleb128 0x17
 2776 0125 00       		.byte	0
 2777 0126 00       		.byte	0
 2778 0127 14       		.uleb128 0x14
 2779 0128 898201   		.uleb128 0x4109
 2780 012b 01       		.byte	0x1
 2781 012c 11       		.uleb128 0x11
 2782 012d 01       		.uleb128 0x1
 2783 012e 31       		.uleb128 0x31
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccrnaKHI.s 			page 79


 2784 012f 13       		.uleb128 0x13
 2785 0130 00       		.byte	0
 2786 0131 00       		.byte	0
 2787 0132 15       		.uleb128 0x15
 2788 0133 8A8201   		.uleb128 0x410a
 2789 0136 00       		.byte	0
 2790 0137 02       		.uleb128 0x2
 2791 0138 18       		.uleb128 0x18
 2792 0139 9142     		.uleb128 0x2111
 2793 013b 18       		.uleb128 0x18
 2794 013c 00       		.byte	0
 2795 013d 00       		.byte	0
 2796 013e 16       		.uleb128 0x16
 2797 013f 05       		.uleb128 0x5
 2798 0140 00       		.byte	0
 2799 0141 31       		.uleb128 0x31
 2800 0142 13       		.uleb128 0x13
 2801 0143 02       		.uleb128 0x2
 2802 0144 18       		.uleb128 0x18
 2803 0145 00       		.byte	0
 2804 0146 00       		.byte	0
 2805 0147 17       		.uleb128 0x17
 2806 0148 05       		.uleb128 0x5
 2807 0149 00       		.byte	0
 2808 014a 03       		.uleb128 0x3
 2809 014b 0E       		.uleb128 0xe
 2810 014c 3A       		.uleb128 0x3a
 2811 014d 0B       		.uleb128 0xb
 2812 014e 3B       		.uleb128 0x3b
 2813 014f 05       		.uleb128 0x5
 2814 0150 49       		.uleb128 0x49
 2815 0151 13       		.uleb128 0x13
 2816 0152 02       		.uleb128 0x2
 2817 0153 18       		.uleb128 0x18
 2818 0154 00       		.byte	0
 2819 0155 00       		.byte	0
 2820 0156 18       		.uleb128 0x18
 2821 0157 34       		.uleb128 0x34
 2822 0158 00       		.byte	0
 2823 0159 03       		.uleb128 0x3
 2824 015a 0E       		.uleb128 0xe
 2825 015b 3A       		.uleb128 0x3a
 2826 015c 0B       		.uleb128 0xb
 2827 015d 3B       		.uleb128 0x3b
 2828 015e 0B       		.uleb128 0xb
 2829 015f 49       		.uleb128 0x49
 2830 0160 13       		.uleb128 0x13
 2831 0161 3F       		.uleb128 0x3f
 2832 0162 19       		.uleb128 0x19
 2833 0163 02       		.uleb128 0x2
 2834 0164 18       		.uleb128 0x18
 2835 0165 00       		.byte	0
 2836 0166 00       		.byte	0
 2837 0167 19       		.uleb128 0x19
 2838 0168 2E       		.uleb128 0x2e
 2839 0169 00       		.byte	0
 2840 016a 3F       		.uleb128 0x3f
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccrnaKHI.s 			page 80


 2841 016b 19       		.uleb128 0x19
 2842 016c 03       		.uleb128 0x3
 2843 016d 0E       		.uleb128 0xe
 2844 016e 3A       		.uleb128 0x3a
 2845 016f 0B       		.uleb128 0xb
 2846 0170 3B       		.uleb128 0x3b
 2847 0171 0B       		.uleb128 0xb
 2848 0172 27       		.uleb128 0x27
 2849 0173 19       		.uleb128 0x19
 2850 0174 49       		.uleb128 0x49
 2851 0175 13       		.uleb128 0x13
 2852 0176 3C       		.uleb128 0x3c
 2853 0177 19       		.uleb128 0x19
 2854 0178 00       		.byte	0
 2855 0179 00       		.byte	0
 2856 017a 1A       		.uleb128 0x1a
 2857 017b 2E       		.uleb128 0x2e
 2858 017c 01       		.byte	0x1
 2859 017d 3F       		.uleb128 0x3f
 2860 017e 19       		.uleb128 0x19
 2861 017f 03       		.uleb128 0x3
 2862 0180 0E       		.uleb128 0xe
 2863 0181 3A       		.uleb128 0x3a
 2864 0182 0B       		.uleb128 0xb
 2865 0183 3B       		.uleb128 0x3b
 2866 0184 0B       		.uleb128 0xb
 2867 0185 27       		.uleb128 0x27
 2868 0186 19       		.uleb128 0x19
 2869 0187 3C       		.uleb128 0x3c
 2870 0188 19       		.uleb128 0x19
 2871 0189 00       		.byte	0
 2872 018a 00       		.byte	0
 2873 018b 1B       		.uleb128 0x1b
 2874 018c 05       		.uleb128 0x5
 2875 018d 00       		.byte	0
 2876 018e 49       		.uleb128 0x49
 2877 018f 13       		.uleb128 0x13
 2878 0190 00       		.byte	0
 2879 0191 00       		.byte	0
 2880 0192 00       		.byte	0
 2881              		.section	.debug_loc,"",%progbits
 2882              	.Ldebug_loc0:
 2883              	.LLST0:
 2884 0000 06000000 		.4byte	.LVL3
 2885 0004 13000000 		.4byte	.LVL4-1
 2886 0008 0100     		.2byte	0x1
 2887 000a 50       		.byte	0x50
 2888 000b 00000000 		.4byte	0
 2889 000f 00000000 		.4byte	0
 2890              	.LLST1:
 2891 0013 00000000 		.4byte	.LVL5
 2892 0017 07000000 		.4byte	.LVL6-1
 2893 001b 0100     		.2byte	0x1
 2894 001d 50       		.byte	0x50
 2895 001e 07000000 		.4byte	.LVL6-1
 2896 0022 1C000000 		.4byte	.LVL8
 2897 0026 0100     		.2byte	0x1
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccrnaKHI.s 			page 81


 2898 0028 54       		.byte	0x54
 2899 0029 1C000000 		.4byte	.LVL8
 2900 002d 28000000 		.4byte	.LFE5
 2901 0031 0400     		.2byte	0x4
 2902 0033 F3       		.byte	0xf3
 2903 0034 01       		.uleb128 0x1
 2904 0035 50       		.byte	0x50
 2905 0036 9F       		.byte	0x9f
 2906 0037 00000000 		.4byte	0
 2907 003b 00000000 		.4byte	0
 2908              	.LLST2:
 2909 003f 08000000 		.4byte	.LVL6
 2910 0043 1B000000 		.4byte	.LVL7-1
 2911 0047 0100     		.2byte	0x1
 2912 0049 50       		.byte	0x50
 2913 004a 00000000 		.4byte	0
 2914 004e 00000000 		.4byte	0
 2915              	.LLST3:
 2916 0052 00000000 		.4byte	.LVL9
 2917 0056 07000000 		.4byte	.LVL10-1
 2918 005a 0100     		.2byte	0x1
 2919 005c 50       		.byte	0x50
 2920 005d 07000000 		.4byte	.LVL10-1
 2921 0061 1C000000 		.4byte	.LVL12
 2922 0065 0100     		.2byte	0x1
 2923 0067 54       		.byte	0x54
 2924 0068 1C000000 		.4byte	.LVL12
 2925 006c 28000000 		.4byte	.LFE6
 2926 0070 0400     		.2byte	0x4
 2927 0072 F3       		.byte	0xf3
 2928 0073 01       		.uleb128 0x1
 2929 0074 50       		.byte	0x50
 2930 0075 9F       		.byte	0x9f
 2931 0076 00000000 		.4byte	0
 2932 007a 00000000 		.4byte	0
 2933              	.LLST4:
 2934 007e 08000000 		.4byte	.LVL10
 2935 0082 1B000000 		.4byte	.LVL11-1
 2936 0086 0100     		.2byte	0x1
 2937 0088 50       		.byte	0x50
 2938 0089 00000000 		.4byte	0
 2939 008d 00000000 		.4byte	0
 2940              	.LLST5:
 2941 0091 00000000 		.4byte	.LVL13
 2942 0095 07000000 		.4byte	.LVL14-1
 2943 0099 0100     		.2byte	0x1
 2944 009b 50       		.byte	0x50
 2945 009c 07000000 		.4byte	.LVL14-1
 2946 00a0 1C000000 		.4byte	.LVL16
 2947 00a4 0100     		.2byte	0x1
 2948 00a6 54       		.byte	0x54
 2949 00a7 1C000000 		.4byte	.LVL16
 2950 00ab 28000000 		.4byte	.LFE7
 2951 00af 0400     		.2byte	0x4
 2952 00b1 F3       		.byte	0xf3
 2953 00b2 01       		.uleb128 0x1
 2954 00b3 50       		.byte	0x50
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccrnaKHI.s 			page 82


 2955 00b4 9F       		.byte	0x9f
 2956 00b5 00000000 		.4byte	0
 2957 00b9 00000000 		.4byte	0
 2958              	.LLST6:
 2959 00bd 08000000 		.4byte	.LVL14
 2960 00c1 1B000000 		.4byte	.LVL15-1
 2961 00c5 0100     		.2byte	0x1
 2962 00c7 50       		.byte	0x50
 2963 00c8 00000000 		.4byte	0
 2964 00cc 00000000 		.4byte	0
 2965              	.LLST7:
 2966 00d0 00000000 		.4byte	.LVL17
 2967 00d4 07000000 		.4byte	.LVL18-1
 2968 00d8 0100     		.2byte	0x1
 2969 00da 50       		.byte	0x50
 2970 00db 07000000 		.4byte	.LVL18-1
 2971 00df 22000000 		.4byte	.LVL20
 2972 00e3 0100     		.2byte	0x1
 2973 00e5 54       		.byte	0x54
 2974 00e6 22000000 		.4byte	.LVL20
 2975 00ea 2C000000 		.4byte	.LFE8
 2976 00ee 0400     		.2byte	0x4
 2977 00f0 F3       		.byte	0xf3
 2978 00f1 01       		.uleb128 0x1
 2979 00f2 50       		.byte	0x50
 2980 00f3 9F       		.byte	0x9f
 2981 00f4 00000000 		.4byte	0
 2982 00f8 00000000 		.4byte	0
 2983              	.LLST8:
 2984 00fc 08000000 		.4byte	.LVL18
 2985 0100 21000000 		.4byte	.LVL19-1
 2986 0104 0100     		.2byte	0x1
 2987 0106 50       		.byte	0x50
 2988 0107 00000000 		.4byte	0
 2989 010b 00000000 		.4byte	0
 2990              	.LLST9:
 2991 010f 00000000 		.4byte	.LVL21
 2992 0113 04000000 		.4byte	.LVL22
 2993 0117 0100     		.2byte	0x1
 2994 0119 50       		.byte	0x50
 2995 011a 04000000 		.4byte	.LVL22
 2996 011e 10000000 		.4byte	.LFE9
 2997 0122 0400     		.2byte	0x4
 2998 0124 F3       		.byte	0xf3
 2999 0125 01       		.uleb128 0x1
 3000 0126 50       		.byte	0x50
 3001 0127 9F       		.byte	0x9f
 3002 0128 00000000 		.4byte	0
 3003 012c 00000000 		.4byte	0
 3004              	.LLST10:
 3005 0130 00000000 		.4byte	.LVL23
 3006 0134 07000000 		.4byte	.LVL24-1
 3007 0138 0100     		.2byte	0x1
 3008 013a 50       		.byte	0x50
 3009 013b 07000000 		.4byte	.LVL24-1
 3010 013f 22000000 		.4byte	.LVL26
 3011 0143 0100     		.2byte	0x1
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccrnaKHI.s 			page 83


 3012 0145 54       		.byte	0x54
 3013 0146 22000000 		.4byte	.LVL26
 3014 014a 28000000 		.4byte	.LFE10
 3015 014e 0400     		.2byte	0x4
 3016 0150 F3       		.byte	0xf3
 3017 0151 01       		.uleb128 0x1
 3018 0152 50       		.byte	0x50
 3019 0153 9F       		.byte	0x9f
 3020 0154 00000000 		.4byte	0
 3021 0158 00000000 		.4byte	0
 3022              	.LLST11:
 3023 015c 08000000 		.4byte	.LVL24
 3024 0160 21000000 		.4byte	.LVL25-1
 3025 0164 0100     		.2byte	0x1
 3026 0166 50       		.byte	0x50
 3027 0167 00000000 		.4byte	0
 3028 016b 00000000 		.4byte	0
 3029              	.LLST12:
 3030 016f 00000000 		.4byte	.LVL27
 3031 0173 07000000 		.4byte	.LVL28-1
 3032 0177 0100     		.2byte	0x1
 3033 0179 50       		.byte	0x50
 3034 017a 07000000 		.4byte	.LVL28-1
 3035 017e 22000000 		.4byte	.LVL30
 3036 0182 0100     		.2byte	0x1
 3037 0184 54       		.byte	0x54
 3038 0185 22000000 		.4byte	.LVL30
 3039 0189 28000000 		.4byte	.LFE11
 3040 018d 0400     		.2byte	0x4
 3041 018f F3       		.byte	0xf3
 3042 0190 01       		.uleb128 0x1
 3043 0191 50       		.byte	0x50
 3044 0192 9F       		.byte	0x9f
 3045 0193 00000000 		.4byte	0
 3046 0197 00000000 		.4byte	0
 3047              	.LLST13:
 3048 019b 08000000 		.4byte	.LVL28
 3049 019f 21000000 		.4byte	.LVL29-1
 3050 01a3 0100     		.2byte	0x1
 3051 01a5 50       		.byte	0x50
 3052 01a6 00000000 		.4byte	0
 3053 01aa 00000000 		.4byte	0
 3054              	.LLST14:
 3055 01ae 00000000 		.4byte	.LVL31
 3056 01b2 07000000 		.4byte	.LVL32-1
 3057 01b6 0100     		.2byte	0x1
 3058 01b8 50       		.byte	0x50
 3059 01b9 07000000 		.4byte	.LVL32-1
 3060 01bd 10000000 		.4byte	.LVL33
 3061 01c1 0100     		.2byte	0x1
 3062 01c3 54       		.byte	0x54
 3063 01c4 10000000 		.4byte	.LVL33
 3064 01c8 2C000000 		.4byte	.LFE12
 3065 01cc 0400     		.2byte	0x4
 3066 01ce F3       		.byte	0xf3
 3067 01cf 01       		.uleb128 0x1
 3068 01d0 50       		.byte	0x50
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccrnaKHI.s 			page 84


 3069 01d1 9F       		.byte	0x9f
 3070 01d2 00000000 		.4byte	0
 3071 01d6 00000000 		.4byte	0
 3072              	.LLST15:
 3073 01da 08000000 		.4byte	.LVL32
 3074 01de 1F000000 		.4byte	.LVL34-1
 3075 01e2 0100     		.2byte	0x1
 3076 01e4 50       		.byte	0x50
 3077 01e5 00000000 		.4byte	0
 3078 01e9 00000000 		.4byte	0
 3079              	.LLST16:
 3080 01ed 00000000 		.4byte	.LVL35
 3081 01f1 07000000 		.4byte	.LVL36-1
 3082 01f5 0100     		.2byte	0x1
 3083 01f7 50       		.byte	0x50
 3084 01f8 07000000 		.4byte	.LVL36-1
 3085 01fc 1C000000 		.4byte	.LVL38
 3086 0200 0100     		.2byte	0x1
 3087 0202 54       		.byte	0x54
 3088 0203 1C000000 		.4byte	.LVL38
 3089 0207 28000000 		.4byte	.LFE13
 3090 020b 0400     		.2byte	0x4
 3091 020d F3       		.byte	0xf3
 3092 020e 01       		.uleb128 0x1
 3093 020f 50       		.byte	0x50
 3094 0210 9F       		.byte	0x9f
 3095 0211 00000000 		.4byte	0
 3096 0215 00000000 		.4byte	0
 3097              	.LLST17:
 3098 0219 08000000 		.4byte	.LVL36
 3099 021d 1B000000 		.4byte	.LVL37-1
 3100 0221 0100     		.2byte	0x1
 3101 0223 50       		.byte	0x50
 3102 0224 00000000 		.4byte	0
 3103 0228 00000000 		.4byte	0
 3104              	.LLST18:
 3105 022c 00000000 		.4byte	.LVL39
 3106 0230 04000000 		.4byte	.LVL40
 3107 0234 0100     		.2byte	0x1
 3108 0236 50       		.byte	0x50
 3109 0237 04000000 		.4byte	.LVL40
 3110 023b 0C000000 		.4byte	.LFE14
 3111 023f 0400     		.2byte	0x4
 3112 0241 F3       		.byte	0xf3
 3113 0242 01       		.uleb128 0x1
 3114 0243 50       		.byte	0x50
 3115 0244 9F       		.byte	0x9f
 3116 0245 00000000 		.4byte	0
 3117 0249 00000000 		.4byte	0
 3118              	.LLST19:
 3119 024d 00000000 		.4byte	.LVL41
 3120 0251 07000000 		.4byte	.LVL42-1
 3121 0255 0100     		.2byte	0x1
 3122 0257 50       		.byte	0x50
 3123 0258 07000000 		.4byte	.LVL42-1
 3124 025c 1C000000 		.4byte	.LVL44
 3125 0260 0100     		.2byte	0x1
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccrnaKHI.s 			page 85


 3126 0262 54       		.byte	0x54
 3127 0263 1C000000 		.4byte	.LVL44
 3128 0267 28000000 		.4byte	.LFE16
 3129 026b 0400     		.2byte	0x4
 3130 026d F3       		.byte	0xf3
 3131 026e 01       		.uleb128 0x1
 3132 026f 50       		.byte	0x50
 3133 0270 9F       		.byte	0x9f
 3134 0271 00000000 		.4byte	0
 3135 0275 00000000 		.4byte	0
 3136              	.LLST20:
 3137 0279 08000000 		.4byte	.LVL42
 3138 027d 1B000000 		.4byte	.LVL43-1
 3139 0281 0100     		.2byte	0x1
 3140 0283 50       		.byte	0x50
 3141 0284 00000000 		.4byte	0
 3142 0288 00000000 		.4byte	0
 3143              	.LLST21:
 3144 028c 00000000 		.4byte	.LVL45
 3145 0290 04000000 		.4byte	.LVL46
 3146 0294 0100     		.2byte	0x1
 3147 0296 50       		.byte	0x50
 3148 0297 04000000 		.4byte	.LVL46
 3149 029b 0C000000 		.4byte	.LFE17
 3150 029f 0400     		.2byte	0x4
 3151 02a1 F3       		.byte	0xf3
 3152 02a2 01       		.uleb128 0x1
 3153 02a3 50       		.byte	0x50
 3154 02a4 9F       		.byte	0x9f
 3155 02a5 00000000 		.4byte	0
 3156 02a9 00000000 		.4byte	0
 3157              	.LLST22:
 3158 02ad 00000000 		.4byte	.LVL47
 3159 02b1 07000000 		.4byte	.LVL48-1
 3160 02b5 0100     		.2byte	0x1
 3161 02b7 50       		.byte	0x50
 3162 02b8 07000000 		.4byte	.LVL48-1
 3163 02bc 1E000000 		.4byte	.LVL50
 3164 02c0 0100     		.2byte	0x1
 3165 02c2 54       		.byte	0x54
 3166 02c3 1E000000 		.4byte	.LVL50
 3167 02c7 24000000 		.4byte	.LFE19
 3168 02cb 0400     		.2byte	0x4
 3169 02cd F3       		.byte	0xf3
 3170 02ce 01       		.uleb128 0x1
 3171 02cf 50       		.byte	0x50
 3172 02d0 9F       		.byte	0x9f
 3173 02d1 00000000 		.4byte	0
 3174 02d5 00000000 		.4byte	0
 3175              	.LLST23:
 3176 02d9 08000000 		.4byte	.LVL48
 3177 02dd 1D000000 		.4byte	.LVL49-1
 3178 02e1 0100     		.2byte	0x1
 3179 02e3 50       		.byte	0x50
 3180 02e4 00000000 		.4byte	0
 3181 02e8 00000000 		.4byte	0
 3182              	.LLST24:
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccrnaKHI.s 			page 86


 3183 02ec 00000000 		.4byte	.LVL51
 3184 02f0 04000000 		.4byte	.LVL52
 3185 02f4 0100     		.2byte	0x1
 3186 02f6 50       		.byte	0x50
 3187 02f7 04000000 		.4byte	.LVL52
 3188 02fb 0C000000 		.4byte	.LFE20
 3189 02ff 0400     		.2byte	0x4
 3190 0301 F3       		.byte	0xf3
 3191 0302 01       		.uleb128 0x1
 3192 0303 50       		.byte	0x50
 3193 0304 9F       		.byte	0x9f
 3194 0305 00000000 		.4byte	0
 3195 0309 00000000 		.4byte	0
 3196              	.LLST25:
 3197 030d 00000000 		.4byte	.LVL53
 3198 0311 07000000 		.4byte	.LVL54-1
 3199 0315 0100     		.2byte	0x1
 3200 0317 50       		.byte	0x50
 3201 0318 07000000 		.4byte	.LVL54-1
 3202 031c 22000000 		.4byte	.LVL56
 3203 0320 0100     		.2byte	0x1
 3204 0322 54       		.byte	0x54
 3205 0323 22000000 		.4byte	.LVL56
 3206 0327 28000000 		.4byte	.LFE22
 3207 032b 0400     		.2byte	0x4
 3208 032d F3       		.byte	0xf3
 3209 032e 01       		.uleb128 0x1
 3210 032f 50       		.byte	0x50
 3211 0330 9F       		.byte	0x9f
 3212 0331 00000000 		.4byte	0
 3213 0335 00000000 		.4byte	0
 3214              	.LLST26:
 3215 0339 08000000 		.4byte	.LVL54
 3216 033d 21000000 		.4byte	.LVL55-1
 3217 0341 0100     		.2byte	0x1
 3218 0343 50       		.byte	0x50
 3219 0344 00000000 		.4byte	0
 3220 0348 00000000 		.4byte	0
 3221              	.LLST27:
 3222 034c 00000000 		.4byte	.LVL57
 3223 0350 04000000 		.4byte	.LVL58
 3224 0354 0100     		.2byte	0x1
 3225 0356 50       		.byte	0x50
 3226 0357 04000000 		.4byte	.LVL58
 3227 035b 0C000000 		.4byte	.LFE23
 3228 035f 0400     		.2byte	0x4
 3229 0361 F3       		.byte	0xf3
 3230 0362 01       		.uleb128 0x1
 3231 0363 50       		.byte	0x50
 3232 0364 9F       		.byte	0x9f
 3233 0365 00000000 		.4byte	0
 3234 0369 00000000 		.4byte	0
 3235              	.LLST28:
 3236 036d 00000000 		.4byte	.LVL59
 3237 0371 04000000 		.4byte	.LVL60
 3238 0375 0100     		.2byte	0x1
 3239 0377 50       		.byte	0x50
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccrnaKHI.s 			page 87


 3240 0378 04000000 		.4byte	.LVL60
 3241 037c 0C000000 		.4byte	.LFE25
 3242 0380 0400     		.2byte	0x4
 3243 0382 F3       		.byte	0xf3
 3244 0383 01       		.uleb128 0x1
 3245 0384 50       		.byte	0x50
 3246 0385 9F       		.byte	0x9f
 3247 0386 00000000 		.4byte	0
 3248 038a 00000000 		.4byte	0
 3249              	.LLST29:
 3250 038e 00000000 		.4byte	.LVL61
 3251 0392 07000000 		.4byte	.LVL62-1
 3252 0396 0100     		.2byte	0x1
 3253 0398 50       		.byte	0x50
 3254 0399 07000000 		.4byte	.LVL62-1
 3255 039d 1C000000 		.4byte	.LVL64
 3256 03a1 0100     		.2byte	0x1
 3257 03a3 54       		.byte	0x54
 3258 03a4 1C000000 		.4byte	.LVL64
 3259 03a8 24000000 		.4byte	.LFE29
 3260 03ac 0400     		.2byte	0x4
 3261 03ae F3       		.byte	0xf3
 3262 03af 01       		.uleb128 0x1
 3263 03b0 50       		.byte	0x50
 3264 03b1 9F       		.byte	0x9f
 3265 03b2 00000000 		.4byte	0
 3266 03b6 00000000 		.4byte	0
 3267              	.LLST30:
 3268 03ba 08000000 		.4byte	.LVL62
 3269 03be 1B000000 		.4byte	.LVL63-1
 3270 03c2 0100     		.2byte	0x1
 3271 03c4 50       		.byte	0x50
 3272 03c5 00000000 		.4byte	0
 3273 03c9 00000000 		.4byte	0
 3274              	.LLST31:
 3275 03cd 00000000 		.4byte	.LVL65
 3276 03d1 07000000 		.4byte	.LVL66-1
 3277 03d5 0100     		.2byte	0x1
 3278 03d7 50       		.byte	0x50
 3279 03d8 07000000 		.4byte	.LVL66-1
 3280 03dc 1E000000 		.4byte	.LVL68
 3281 03e0 0100     		.2byte	0x1
 3282 03e2 54       		.byte	0x54
 3283 03e3 1E000000 		.4byte	.LVL68
 3284 03e7 24000000 		.4byte	.LFE30
 3285 03eb 0400     		.2byte	0x4
 3286 03ed F3       		.byte	0xf3
 3287 03ee 01       		.uleb128 0x1
 3288 03ef 50       		.byte	0x50
 3289 03f0 9F       		.byte	0x9f
 3290 03f1 00000000 		.4byte	0
 3291 03f5 00000000 		.4byte	0
 3292              	.LLST32:
 3293 03f9 08000000 		.4byte	.LVL66
 3294 03fd 1D000000 		.4byte	.LVL67-1
 3295 0401 0100     		.2byte	0x1
 3296 0403 50       		.byte	0x50
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccrnaKHI.s 			page 88


 3297 0404 00000000 		.4byte	0
 3298 0408 00000000 		.4byte	0
 3299              	.LLST33:
 3300 040c 00000000 		.4byte	.LVL69
 3301 0410 07000000 		.4byte	.LVL70-1
 3302 0414 0100     		.2byte	0x1
 3303 0416 50       		.byte	0x50
 3304 0417 07000000 		.4byte	.LVL70-1
 3305 041b 1E000000 		.4byte	.LVL72
 3306 041f 0100     		.2byte	0x1
 3307 0421 54       		.byte	0x54
 3308 0422 1E000000 		.4byte	.LVL72
 3309 0426 28000000 		.4byte	.LFE31
 3310 042a 0400     		.2byte	0x4
 3311 042c F3       		.byte	0xf3
 3312 042d 01       		.uleb128 0x1
 3313 042e 50       		.byte	0x50
 3314 042f 9F       		.byte	0x9f
 3315 0430 00000000 		.4byte	0
 3316 0434 00000000 		.4byte	0
 3317              	.LLST34:
 3318 0438 08000000 		.4byte	.LVL70
 3319 043c 1D000000 		.4byte	.LVL71-1
 3320 0440 0100     		.2byte	0x1
 3321 0442 50       		.byte	0x50
 3322 0443 00000000 		.4byte	0
 3323 0447 00000000 		.4byte	0
 3324              	.LLST35:
 3325 044b 00000000 		.4byte	.LVL73
 3326 044f 07000000 		.4byte	.LVL74-1
 3327 0453 0100     		.2byte	0x1
 3328 0455 50       		.byte	0x50
 3329 0456 07000000 		.4byte	.LVL74-1
 3330 045a 1E000000 		.4byte	.LVL76
 3331 045e 0100     		.2byte	0x1
 3332 0460 54       		.byte	0x54
 3333 0461 1E000000 		.4byte	.LVL76
 3334 0465 24000000 		.4byte	.LFE32
 3335 0469 0400     		.2byte	0x4
 3336 046b F3       		.byte	0xf3
 3337 046c 01       		.uleb128 0x1
 3338 046d 50       		.byte	0x50
 3339 046e 9F       		.byte	0x9f
 3340 046f 00000000 		.4byte	0
 3341 0473 00000000 		.4byte	0
 3342              	.LLST36:
 3343 0477 08000000 		.4byte	.LVL74
 3344 047b 1D000000 		.4byte	.LVL75-1
 3345 047f 0100     		.2byte	0x1
 3346 0481 50       		.byte	0x50
 3347 0482 00000000 		.4byte	0
 3348 0486 00000000 		.4byte	0
 3349              	.LLST37:
 3350 048a 00000000 		.4byte	.LVL77
 3351 048e 07000000 		.4byte	.LVL78-1
 3352 0492 0100     		.2byte	0x1
 3353 0494 50       		.byte	0x50
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccrnaKHI.s 			page 89


 3354 0495 07000000 		.4byte	.LVL78-1
 3355 0499 1E000000 		.4byte	.LVL80
 3356 049d 0100     		.2byte	0x1
 3357 049f 54       		.byte	0x54
 3358 04a0 1E000000 		.4byte	.LVL80
 3359 04a4 24000000 		.4byte	.LFE33
 3360 04a8 0400     		.2byte	0x4
 3361 04aa F3       		.byte	0xf3
 3362 04ab 01       		.uleb128 0x1
 3363 04ac 50       		.byte	0x50
 3364 04ad 9F       		.byte	0x9f
 3365 04ae 00000000 		.4byte	0
 3366 04b2 00000000 		.4byte	0
 3367              	.LLST38:
 3368 04b6 08000000 		.4byte	.LVL78
 3369 04ba 1D000000 		.4byte	.LVL79-1
 3370 04be 0100     		.2byte	0x1
 3371 04c0 50       		.byte	0x50
 3372 04c1 00000000 		.4byte	0
 3373 04c5 00000000 		.4byte	0
 3374              	.LLST39:
 3375 04c9 00000000 		.4byte	.LVL81
 3376 04cd 0B000000 		.4byte	.LVL82-1
 3377 04d1 0100     		.2byte	0x1
 3378 04d3 50       		.byte	0x50
 3379 04d4 0B000000 		.4byte	.LVL82-1
 3380 04d8 1C000000 		.4byte	.LFE34
 3381 04dc 0400     		.2byte	0x4
 3382 04de F3       		.byte	0xf3
 3383 04df 01       		.uleb128 0x1
 3384 04e0 50       		.byte	0x50
 3385 04e1 9F       		.byte	0x9f
 3386 04e2 00000000 		.4byte	0
 3387 04e6 00000000 		.4byte	0
 3388              	.LLST40:
 3389 04ea 00000000 		.4byte	.LVL81
 3390 04ee 0B000000 		.4byte	.LVL82-1
 3391 04f2 0100     		.2byte	0x1
 3392 04f4 51       		.byte	0x51
 3393 04f5 0B000000 		.4byte	.LVL82-1
 3394 04f9 14000000 		.4byte	.LVL84
 3395 04fd 0100     		.2byte	0x1
 3396 04ff 55       		.byte	0x55
 3397 0500 14000000 		.4byte	.LVL84
 3398 0504 1C000000 		.4byte	.LFE34
 3399 0508 0400     		.2byte	0x4
 3400 050a F3       		.byte	0xf3
 3401 050b 01       		.uleb128 0x1
 3402 050c 51       		.byte	0x51
 3403 050d 9F       		.byte	0x9f
 3404 050e 00000000 		.4byte	0
 3405 0512 00000000 		.4byte	0
 3406              	.LLST41:
 3407 0516 0C000000 		.4byte	.LVL82
 3408 051a 13000000 		.4byte	.LVL83-1
 3409 051e 0100     		.2byte	0x1
 3410 0520 50       		.byte	0x50
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccrnaKHI.s 			page 90


 3411 0521 00000000 		.4byte	0
 3412 0525 00000000 		.4byte	0
 3413              	.LLST42:
 3414 0529 08000000 		.4byte	.LVL85
 3415 052d 13000000 		.4byte	.LVL86-1
 3416 0531 0100     		.2byte	0x1
 3417 0533 50       		.byte	0x50
 3418 0534 00000000 		.4byte	0
 3419 0538 00000000 		.4byte	0
 3420              		.section	.debug_aranges,"",%progbits
 3421 0000 54010000 		.4byte	0x154
 3422 0004 0200     		.2byte	0x2
 3423 0006 00000000 		.4byte	.Ldebug_info0
 3424 000a 04       		.byte	0x4
 3425 000b 00       		.byte	0
 3426 000c 0000     		.2byte	0
 3427 000e 0000     		.2byte	0
 3428 0010 00000000 		.4byte	.LFB1
 3429 0014 38000000 		.4byte	.LFE1-.LFB1
 3430 0018 00000000 		.4byte	.LFB4
 3431 001c 1C000000 		.4byte	.LFE4-.LFB4
 3432 0020 00000000 		.4byte	.LFB5
 3433 0024 28000000 		.4byte	.LFE5-.LFB5
 3434 0028 00000000 		.4byte	.LFB6
 3435 002c 28000000 		.4byte	.LFE6-.LFB6
 3436 0030 00000000 		.4byte	.LFB7
 3437 0034 28000000 		.4byte	.LFE7-.LFB7
 3438 0038 00000000 		.4byte	.LFB8
 3439 003c 2C000000 		.4byte	.LFE8-.LFB8
 3440 0040 00000000 		.4byte	.LFB9
 3441 0044 10000000 		.4byte	.LFE9-.LFB9
 3442 0048 00000000 		.4byte	.LFB10
 3443 004c 28000000 		.4byte	.LFE10-.LFB10
 3444 0050 00000000 		.4byte	.LFB11
 3445 0054 28000000 		.4byte	.LFE11-.LFB11
 3446 0058 00000000 		.4byte	.LFB12
 3447 005c 2C000000 		.4byte	.LFE12-.LFB12
 3448 0060 00000000 		.4byte	.LFB13
 3449 0064 28000000 		.4byte	.LFE13-.LFB13
 3450 0068 00000000 		.4byte	.LFB14
 3451 006c 0C000000 		.4byte	.LFE14-.LFB14
 3452 0070 00000000 		.4byte	.LFB15
 3453 0074 0C000000 		.4byte	.LFE15-.LFB15
 3454 0078 00000000 		.4byte	.LFB16
 3455 007c 28000000 		.4byte	.LFE16-.LFB16
 3456 0080 00000000 		.4byte	.LFB17
 3457 0084 0C000000 		.4byte	.LFE17-.LFB17
 3458 0088 00000000 		.4byte	.LFB18
 3459 008c 0C000000 		.4byte	.LFE18-.LFB18
 3460 0090 00000000 		.4byte	.LFB19
 3461 0094 24000000 		.4byte	.LFE19-.LFB19
 3462 0098 00000000 		.4byte	.LFB20
 3463 009c 0C000000 		.4byte	.LFE20-.LFB20
 3464 00a0 00000000 		.4byte	.LFB21
 3465 00a4 0C000000 		.4byte	.LFE21-.LFB21
 3466 00a8 00000000 		.4byte	.LFB22
 3467 00ac 28000000 		.4byte	.LFE22-.LFB22
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccrnaKHI.s 			page 91


 3468 00b0 00000000 		.4byte	.LFB23
 3469 00b4 0C000000 		.4byte	.LFE23-.LFB23
 3470 00b8 00000000 		.4byte	.LFB24
 3471 00bc 0C000000 		.4byte	.LFE24-.LFB24
 3472 00c0 00000000 		.4byte	.LFB25
 3473 00c4 0C000000 		.4byte	.LFE25-.LFB25
 3474 00c8 00000000 		.4byte	.LFB26
 3475 00cc 0C000000 		.4byte	.LFE26-.LFB26
 3476 00d0 00000000 		.4byte	.LFB27
 3477 00d4 0C000000 		.4byte	.LFE27-.LFB27
 3478 00d8 00000000 		.4byte	.LFB28
 3479 00dc 0C000000 		.4byte	.LFE28-.LFB28
 3480 00e0 00000000 		.4byte	.LFB29
 3481 00e4 24000000 		.4byte	.LFE29-.LFB29
 3482 00e8 00000000 		.4byte	.LFB30
 3483 00ec 24000000 		.4byte	.LFE30-.LFB30
 3484 00f0 00000000 		.4byte	.LFB31
 3485 00f4 28000000 		.4byte	.LFE31-.LFB31
 3486 00f8 00000000 		.4byte	.LFB32
 3487 00fc 24000000 		.4byte	.LFE32-.LFB32
 3488 0100 00000000 		.4byte	.LFB33
 3489 0104 24000000 		.4byte	.LFE33-.LFB33
 3490 0108 00000000 		.4byte	.LFB34
 3491 010c 1C000000 		.4byte	.LFE34-.LFB34
 3492 0110 00000000 		.4byte	.LFB2
 3493 0114 24000000 		.4byte	.LFE2-.LFB2
 3494 0118 00000000 		.4byte	.LFB3
 3495 011c 1C000000 		.4byte	.LFE3-.LFB3
 3496 0120 00000000 		.4byte	.LFB35
 3497 0124 14000000 		.4byte	.LFE35-.LFB35
 3498 0128 00000000 		.4byte	.LFB36
 3499 012c 0C000000 		.4byte	.LFE36-.LFB36
 3500 0130 00000000 		.4byte	.LFB37
 3501 0134 0C000000 		.4byte	.LFE37-.LFB37
 3502 0138 00000000 		.4byte	.LFB38
 3503 013c 0C000000 		.4byte	.LFE38-.LFB38
 3504 0140 00000000 		.4byte	.LFB39
 3505 0144 0C000000 		.4byte	.LFE39-.LFB39
 3506 0148 00000000 		.4byte	.LFB40
 3507 014c 0C000000 		.4byte	.LFE40-.LFB40
 3508 0150 00000000 		.4byte	0
 3509 0154 00000000 		.4byte	0
 3510              		.section	.debug_ranges,"",%progbits
 3511              	.Ldebug_ranges0:
 3512 0000 00000000 		.4byte	.LFB1
 3513 0004 38000000 		.4byte	.LFE1
 3514 0008 00000000 		.4byte	.LFB4
 3515 000c 1C000000 		.4byte	.LFE4
 3516 0010 00000000 		.4byte	.LFB5
 3517 0014 28000000 		.4byte	.LFE5
 3518 0018 00000000 		.4byte	.LFB6
 3519 001c 28000000 		.4byte	.LFE6
 3520 0020 00000000 		.4byte	.LFB7
 3521 0024 28000000 		.4byte	.LFE7
 3522 0028 00000000 		.4byte	.LFB8
 3523 002c 2C000000 		.4byte	.LFE8
 3524 0030 00000000 		.4byte	.LFB9
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccrnaKHI.s 			page 92


 3525 0034 10000000 		.4byte	.LFE9
 3526 0038 00000000 		.4byte	.LFB10
 3527 003c 28000000 		.4byte	.LFE10
 3528 0040 00000000 		.4byte	.LFB11
 3529 0044 28000000 		.4byte	.LFE11
 3530 0048 00000000 		.4byte	.LFB12
 3531 004c 2C000000 		.4byte	.LFE12
 3532 0050 00000000 		.4byte	.LFB13
 3533 0054 28000000 		.4byte	.LFE13
 3534 0058 00000000 		.4byte	.LFB14
 3535 005c 0C000000 		.4byte	.LFE14
 3536 0060 00000000 		.4byte	.LFB15
 3537 0064 0C000000 		.4byte	.LFE15
 3538 0068 00000000 		.4byte	.LFB16
 3539 006c 28000000 		.4byte	.LFE16
 3540 0070 00000000 		.4byte	.LFB17
 3541 0074 0C000000 		.4byte	.LFE17
 3542 0078 00000000 		.4byte	.LFB18
 3543 007c 0C000000 		.4byte	.LFE18
 3544 0080 00000000 		.4byte	.LFB19
 3545 0084 24000000 		.4byte	.LFE19
 3546 0088 00000000 		.4byte	.LFB20
 3547 008c 0C000000 		.4byte	.LFE20
 3548 0090 00000000 		.4byte	.LFB21
 3549 0094 0C000000 		.4byte	.LFE21
 3550 0098 00000000 		.4byte	.LFB22
 3551 009c 28000000 		.4byte	.LFE22
 3552 00a0 00000000 		.4byte	.LFB23
 3553 00a4 0C000000 		.4byte	.LFE23
 3554 00a8 00000000 		.4byte	.LFB24
 3555 00ac 0C000000 		.4byte	.LFE24
 3556 00b0 00000000 		.4byte	.LFB25
 3557 00b4 0C000000 		.4byte	.LFE25
 3558 00b8 00000000 		.4byte	.LFB26
 3559 00bc 0C000000 		.4byte	.LFE26
 3560 00c0 00000000 		.4byte	.LFB27
 3561 00c4 0C000000 		.4byte	.LFE27
 3562 00c8 00000000 		.4byte	.LFB28
 3563 00cc 0C000000 		.4byte	.LFE28
 3564 00d0 00000000 		.4byte	.LFB29
 3565 00d4 24000000 		.4byte	.LFE29
 3566 00d8 00000000 		.4byte	.LFB30
 3567 00dc 24000000 		.4byte	.LFE30
 3568 00e0 00000000 		.4byte	.LFB31
 3569 00e4 28000000 		.4byte	.LFE31
 3570 00e8 00000000 		.4byte	.LFB32
 3571 00ec 24000000 		.4byte	.LFE32
 3572 00f0 00000000 		.4byte	.LFB33
 3573 00f4 24000000 		.4byte	.LFE33
 3574 00f8 00000000 		.4byte	.LFB34
 3575 00fc 1C000000 		.4byte	.LFE34
 3576 0100 00000000 		.4byte	.LFB2
 3577 0104 24000000 		.4byte	.LFE2
 3578 0108 00000000 		.4byte	.LFB3
 3579 010c 1C000000 		.4byte	.LFE3
 3580 0110 00000000 		.4byte	.LFB35
 3581 0114 14000000 		.4byte	.LFE35
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccrnaKHI.s 			page 93


 3582 0118 00000000 		.4byte	.LFB36
 3583 011c 0C000000 		.4byte	.LFE36
 3584 0120 00000000 		.4byte	.LFB37
 3585 0124 0C000000 		.4byte	.LFE37
 3586 0128 00000000 		.4byte	.LFB38
 3587 012c 0C000000 		.4byte	.LFE38
 3588 0130 00000000 		.4byte	.LFB39
 3589 0134 0C000000 		.4byte	.LFE39
 3590 0138 00000000 		.4byte	.LFB40
 3591 013c 0C000000 		.4byte	.LFE40
 3592 0140 00000000 		.4byte	0
 3593 0144 00000000 		.4byte	0
 3594              		.section	.debug_line,"",%progbits
 3595              	.Ldebug_line0:
 3596 0000 E5030000 		.section	.debug_str,"MS",%progbits,1
 3596      02005300 
 3596      00000201 
 3596      FB0E0D00 
 3596      01010101 
 3597              	.LASF21:
 3598 0000 636F756E 		.ascii	"count\000"
 3598      7400
 3599              	.LASF81:
 3600 0006 43794578 		.ascii	"CyExitCriticalSection\000"
 3600      69744372 
 3600      69746963 
 3600      616C5365 
 3600      6374696F 
 3601              	.LASF65:
 3602 001c 54696D65 		.ascii	"Timer_Synth_SetStopMode\000"
 3602      725F5379 
 3602      6E74685F 
 3602      53657453 
 3602      746F704D 
 3603              	.LASF16:
 3604 0034 54696D65 		.ascii	"Timer_Synth_SetInterruptMode\000"
 3604      725F5379 
 3604      6E74685F 
 3604      53657449 
 3604      6E746572 
 3605              	.LASF46:
 3606 0051 54696D65 		.ascii	"Timer_Synth_ReadPeriod\000"
 3606      725F5379 
 3606      6E74685F 
 3606      52656164 
 3606      50657269 
 3607              	.LASF19:
 3608 0068 70657269 		.ascii	"period\000"
 3608      6F6400
 3609              	.LASF47:
 3610 006f 54696D65 		.ascii	"Timer_Synth_SetCompareSwap\000"
 3610      725F5379 
 3610      6E74685F 
 3610      53657443 
 3610      6F6D7061 
 3611              	.LASF63:
 3612 008a 54696D65 		.ascii	"Timer_Synth_SetReloadMode\000"
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccrnaKHI.s 			page 94


 3612      725F5379 
 3612      6E74685F 
 3612      53657452 
 3612      656C6F61 
 3613              	.LASF7:
 3614 00a4 6C6F6E67 		.ascii	"long long unsigned int\000"
 3614      206C6F6E 
 3614      6720756E 
 3614      7369676E 
 3614      65642069 
 3615              	.LASF28:
 3616 00bb 71644D6F 		.ascii	"qdMode\000"
 3616      646500
 3617              	.LASF72:
 3618 00c2 54696D65 		.ascii	"Timer_Synth_GetInterruptSourceMasked\000"
 3618      725F5379 
 3618      6E74685F 
 3618      47657449 
 3618      6E746572 
 3619              	.LASF29:
 3620 00e7 54696D65 		.ascii	"Timer_Synth_SetPrescaler\000"
 3620      725F5379 
 3620      6E74685F 
 3620      53657450 
 3620      72657363 
 3621              	.LASF22:
 3622 0100 54696D65 		.ascii	"Timer_Synth_Init\000"
 3622      725F5379 
 3622      6E74685F 
 3622      496E6974 
 3622      00
 3623              	.LASF6:
 3624 0111 6C6F6E67 		.ascii	"long long int\000"
 3624      206C6F6E 
 3624      6720696E 
 3624      7400
 3625              	.LASF0:
 3626 011f 7369676E 		.ascii	"signed char\000"
 3626      65642063 
 3626      68617200 
 3627              	.LASF35:
 3628 012b 54696D65 		.ascii	"Timer_Synth_SetPWMSyncKill\000"
 3628      725F5379 
 3628      6E74685F 
 3628      53657450 
 3628      574D5379 
 3629              	.LASF4:
 3630 0146 6C6F6E67 		.ascii	"long int\000"
 3630      20696E74 
 3630      00
 3631              	.LASF73:
 3632 014f 54696D65 		.ascii	"Timer_Synth_GetInterruptSource\000"
 3632      725F5379 
 3632      6E74685F 
 3632      47657449 
 3632      6E746572 
 3633              	.LASF9:
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccrnaKHI.s 			page 95


 3634 016e 75696E74 		.ascii	"uint8\000"
 3634      3800
 3635              	.LASF12:
 3636 0174 646F7562 		.ascii	"double\000"
 3636      6C6500
 3637              	.LASF33:
 3638 017b 54696D65 		.ascii	"Timer_Synth_SetPWMMode\000"
 3638      725F5379 
 3638      6E74685F 
 3638      53657450 
 3638      574D4D6F 
 3639              	.LASF70:
 3640 0192 54696D65 		.ascii	"Timer_Synth_Start\000"
 3640      725F5379 
 3640      6E74685F 
 3640      53746172 
 3640      7400
 3641              	.LASF10:
 3642 01a4 75696E74 		.ascii	"uint32\000"
 3642      333200
 3643              	.LASF62:
 3644 01ab 74726967 		.ascii	"triggerMode\000"
 3644      6765724D 
 3644      6F646500 
 3645              	.LASF42:
 3646 01b7 6D61736B 		.ascii	"mask\000"
 3646      00
 3647              	.LASF67:
 3648 01bc 54696D65 		.ascii	"Timer_Synth_TriggerCommand\000"
 3648      725F5379 
 3648      6E74685F 
 3648      54726967 
 3648      67657243 
 3649              	.LASF55:
 3650 01d7 54696D65 		.ascii	"Timer_Synth_ReadCompare\000"
 3650      725F5379 
 3650      6E74685F 
 3650      52656164 
 3650      436F6D70 
 3651              	.LASF79:
 3652 01ef 54696D65 		.ascii	"Timer_Synth_initVar\000"
 3652      725F5379 
 3652      6E74685F 
 3652      696E6974 
 3652      56617200 
 3653              	.LASF40:
 3654 0203 64656164 		.ascii	"deadTime\000"
 3654      54696D65 
 3654      00
 3655              	.LASF74:
 3656 020c 54696D65 		.ascii	"Timer_Synth_ClearInterrupt\000"
 3656      725F5379 
 3656      6E74685F 
 3656      436C6561 
 3656      72496E74 
 3657              	.LASF8:
 3658 0227 756E7369 		.ascii	"unsigned int\000"
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccrnaKHI.s 			page 96


 3658      676E6564 
 3658      20696E74 
 3658      00
 3659              	.LASF68:
 3660 0234 636F6D6D 		.ascii	"command\000"
 3660      616E6400 
 3661              	.LASF5:
 3662 023c 6C6F6E67 		.ascii	"long unsigned int\000"
 3662      20756E73 
 3662      69676E65 
 3662      6420696E 
 3662      7400
 3663              	.LASF34:
 3664 024e 6D6F6465 		.ascii	"modeMask\000"
 3664      4D61736B 
 3664      00
 3665              	.LASF80:
 3666 0257 4379456E 		.ascii	"CyEnterCriticalSection\000"
 3666      74657243 
 3666      72697469 
 3666      63616C53 
 3666      65637469 
 3667              	.LASF58:
 3668 026e 54696D65 		.ascii	"Timer_Synth_ReadCompareBuf\000"
 3668      725F5379 
 3668      6E74685F 
 3668      52656164 
 3668      436F6D70 
 3669              	.LASF3:
 3670 0289 73686F72 		.ascii	"short unsigned int\000"
 3670      7420756E 
 3670      7369676E 
 3670      65642069 
 3670      6E7400
 3671              	.LASF32:
 3672 029c 6F6E6553 		.ascii	"oneShotEnable\000"
 3672      686F7445 
 3672      6E61626C 
 3672      6500
 3673              	.LASF76:
 3674 02aa 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 3674      4320342E 
 3674      392E3320 
 3674      32303135 
 3674      30333033 
 3675 02dd 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m0plus -mthumb -"
 3675      20726576 
 3675      6973696F 
 3675      6E203232 
 3675      31323230 
 3676 0310 67202D4F 		.ascii	"g -Os -ffunction-sections -ffat-lto-objects\000"
 3676      73202D66 
 3676      66756E63 
 3676      74696F6E 
 3676      2D736563 
 3677              	.LASF56:
 3678 033c 54696D65 		.ascii	"Timer_Synth_WriteCompareBuf\000"
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccrnaKHI.s 			page 97


 3678      725F5379 
 3678      6E74685F 
 3678      57726974 
 3678      65436F6D 
 3679              	.LASF43:
 3680 0358 54696D65 		.ascii	"Timer_Synth_SetCounterMode\000"
 3680      725F5379 
 3680      6E74685F 
 3680      53657443 
 3680      6F756E74 
 3681              	.LASF14:
 3682 0373 72656733 		.ascii	"reg32\000"
 3682      3200
 3683              	.LASF75:
 3684 0379 54696D65 		.ascii	"Timer_Synth_SetInterrupt\000"
 3684      725F5379 
 3684      6E74685F 
 3684      53657449 
 3684      6E746572 
 3685              	.LASF17:
 3686 0392 54696D65 		.ascii	"Timer_Synth_WritePeriod\000"
 3686      725F5379 
 3686      6E74685F 
 3686      57726974 
 3686      65506572 
 3687              	.LASF15:
 3688 03aa 73697A65 		.ascii	"sizetype\000"
 3688      74797065 
 3688      00
 3689              	.LASF69:
 3690 03b3 54696D65 		.ascii	"Timer_Synth_Enable\000"
 3690      725F5379 
 3690      6E74685F 
 3690      456E6162 
 3690      6C6500
 3691              	.LASF36:
 3692 03c6 73796E63 		.ascii	"syncKillEnable\000"
 3692      4B696C6C 
 3692      456E6162 
 3692      6C6500
 3693              	.LASF37:
 3694 03d5 54696D65 		.ascii	"Timer_Synth_SetPWMStopOnKill\000"
 3694      725F5379 
 3694      6E74685F 
 3694      53657450 
 3694      574D5374 
 3695              	.LASF77:
 3696 03f2 47656E65 		.ascii	"Generated_Source\\PSoC4\\Timer_Synth.c\000"
 3696      72617465 
 3696      645F536F 
 3696      75726365 
 3696      5C50536F 
 3697              	.LASF54:
 3698 0417 636F6D70 		.ascii	"compare\000"
 3698      61726500 
 3699              	.LASF49:
 3700 041f 54696D65 		.ascii	"Timer_Synth_WritePeriodBuf\000"
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccrnaKHI.s 			page 98


 3700      725F5379 
 3700      6E74685F 
 3700      57726974 
 3700      65506572 
 3701              	.LASF11:
 3702 043a 666C6F61 		.ascii	"float\000"
 3702      7400
 3703              	.LASF30:
 3704 0440 70726573 		.ascii	"prescaler\000"
 3704      63616C65 
 3704      7200
 3705              	.LASF66:
 3706 044a 54696D65 		.ascii	"Timer_Synth_SetCountMode\000"
 3706      725F5379 
 3706      6E74685F 
 3706      53657443 
 3706      6F756E74 
 3707              	.LASF78:
 3708 0463 433A5C63 		.ascii	"C:\\cypress\\TalkingClock\\Talking_Clock.cydsn\000"
 3708      79707265 
 3708      73735C54 
 3708      616C6B69 
 3708      6E67436C 
 3709              	.LASF1:
 3710 048f 756E7369 		.ascii	"unsigned char\000"
 3710      676E6564 
 3710      20636861 
 3710      7200
 3711              	.LASF38:
 3712 049d 73746F70 		.ascii	"stopOnKillEnable\000"
 3712      4F6E4B69 
 3712      6C6C456E 
 3712      61626C65 
 3712      00
 3713              	.LASF2:
 3714 04ae 73686F72 		.ascii	"short int\000"
 3714      7420696E 
 3714      7400
 3715              	.LASF18:
 3716 04b8 696E7465 		.ascii	"interruptMask\000"
 3716      72727570 
 3716      744D6173 
 3716      6B00
 3717              	.LASF53:
 3718 04c6 54696D65 		.ascii	"Timer_Synth_WriteCompare\000"
 3718      725F5379 
 3718      6E74685F 
 3718      57726974 
 3718      65436F6D 
 3719              	.LASF24:
 3720 04df 54696D65 		.ascii	"Timer_Synth_SetMode\000"
 3720      725F5379 
 3720      6E74685F 
 3720      5365744D 
 3720      6F646500 
 3721              	.LASF23:
 3722 04f3 54696D65 		.ascii	"Timer_Synth_Stop\000"
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccrnaKHI.s 			page 99


 3722      725F5379 
 3722      6E74685F 
 3722      53746F70 
 3722      00
 3723              	.LASF13:
 3724 0504 63686172 		.ascii	"char\000"
 3724      00
 3725              	.LASF27:
 3726 0509 6D6F6465 		.ascii	"mode\000"
 3726      00
 3727              	.LASF39:
 3728 050e 54696D65 		.ascii	"Timer_Synth_SetPWMDeadTime\000"
 3728      725F5379 
 3728      6E74685F 
 3728      53657450 
 3728      574D4465 
 3729              	.LASF44:
 3730 0529 636F756E 		.ascii	"counterMode\000"
 3730      7465724D 
 3730      6F646500 
 3731              	.LASF31:
 3732 0535 54696D65 		.ascii	"Timer_Synth_SetOneShot\000"
 3732      725F5379 
 3732      6E74685F 
 3732      5365744F 
 3732      6E655368 
 3733              	.LASF20:
 3734 054c 54696D65 		.ascii	"Timer_Synth_WriteCounter\000"
 3734      725F5379 
 3734      6E74685F 
 3734      57726974 
 3734      65436F75 
 3735              	.LASF57:
 3736 0565 636F6D70 		.ascii	"compareBuf\000"
 3736      61726542 
 3736      756600
 3737              	.LASF51:
 3738 0570 54696D65 		.ascii	"Timer_Synth_ReadPeriodBuf\000"
 3738      725F5379 
 3738      6E74685F 
 3738      52656164 
 3738      50657269 
 3739              	.LASF45:
 3740 058a 54696D65 		.ascii	"Timer_Synth_ReadCounter\000"
 3740      725F5379 
 3740      6E74685F 
 3740      52656164 
 3740      436F756E 
 3741              	.LASF25:
 3742 05a2 656E6162 		.ascii	"enableInterrupts\000"
 3742      6C65496E 
 3742      74657272 
 3742      75707473 
 3742      00
 3743              	.LASF71:
 3744 05b3 54696D65 		.ascii	"Timer_Synth_ReadStatus\000"
 3744      725F5379 
ARM GAS  C:\Users\Jerry\AppData\Local\Temp\ccrnaKHI.s 			page 100


 3744      6E74685F 
 3744      52656164 
 3744      53746174 
 3745              	.LASF26:
 3746 05ca 54696D65 		.ascii	"Timer_Synth_SetQDMode\000"
 3746      725F5379 
 3746      6E74685F 
 3746      53657451 
 3746      444D6F64 
 3747              	.LASF52:
 3748 05e0 54696D65 		.ascii	"Timer_Synth_SetPeriodSwap\000"
 3748      725F5379 
 3748      6E74685F 
 3748      53657450 
 3748      6572696F 
 3749              	.LASF48:
 3750 05fa 73776170 		.ascii	"swapEnable\000"
 3750      456E6162 
 3750      6C6500
 3751              	.LASF61:
 3752 0605 54696D65 		.ascii	"Timer_Synth_SetCaptureMode\000"
 3752      725F5379 
 3752      6E74685F 
 3752      53657443 
 3752      61707475 
 3753              	.LASF41:
 3754 0620 54696D65 		.ascii	"Timer_Synth_SetPWMInvert\000"
 3754      725F5379 
 3754      6E74685F 
 3754      53657450 
 3754      574D496E 
 3755              	.LASF64:
 3756 0639 54696D65 		.ascii	"Timer_Synth_SetStartMode\000"
 3756      725F5379 
 3756      6E74685F 
 3756      53657453 
 3756      74617274 
 3757              	.LASF50:
 3758 0652 70657269 		.ascii	"periodBuf\000"
 3758      6F644275 
 3758      6600
 3759              	.LASF59:
 3760 065c 54696D65 		.ascii	"Timer_Synth_ReadCapture\000"
 3760      725F5379 
 3760      6E74685F 
 3760      52656164 
 3760      43617074 
 3761              	.LASF60:
 3762 0674 54696D65 		.ascii	"Timer_Synth_ReadCaptureBuf\000"
 3762      725F5379 
 3762      6E74685F 
 3762      52656164 
 3762      43617074 
 3763              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
